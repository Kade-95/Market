!function(){var e=class{constructor(){this.capitals="ABCDEFGHIJKLMNOPQRSTUVWXYZ",this.smalls="abcdefghijklmnopqrstuvwxyz",this.digits="1234567890",this.symbols=",./?'!@#$%^&*()-_+=`~\\| ",this.months=["January","Febuary","March","April","May","June","July","August","September","October","November","December"],this.days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],this.genders=["Male","Female","Do not disclose"],this.maritals=["Married","Single","Divorced","Widowed"],this.religions=["Christainity","Islam","Judaism","Paganism","Budism"],this.userTypes=["student","staff","admin","ceo"],this.staffRequests=["leave","allowance"],this.studentsRequests=["absence","academic"],this.subjectList=["Mathematics","English","Physics","Chemistry","Biology","Agriculture","Literature","History"].sort(),this.subjectLevels=["General","Senior","Science","Arts","Junior"],this.fontStyles=["Arial","Times New Roman","Helvetica","Times","Courier New","Verdana","Courier","Arial Narrow","Candara","Geneva","Calibri","Optima","Cambria","Garamond","Perpetua","Monaco","Didot","Brush Script MT","Lucida Bright","Copperplate","Serif","San-Serif","Georgia","Segoe UI"],this.pixelSizes=["0px","1px","2px","3px","4px","5px","6px","7px","8px","9px","10px","20px","30px","40px","50px","60px","70px","80px","90px","100px","None","Unset","auto","-webkit-fill-available"],this.colors=["Red","Green","Blue","Yellow","Black","White","Purple","Violet","Indigo","Orange","Transparent","None","Unset"],this.boldness=[100,200,300,400,500,600,700,800,900,1e3,"lighter","bold","bolder","normal","unset"],this.borderTypes=["Solid","Dotted","Double","Groove","Dashed","Inset","None","Unset","Outset","Rigged","Inherit","Initial"],this.shadows=["2px 2px 5px 2px red","2px 2px 5px green","2px 2px yellow","2px black","None","Unset"],this.borders=["1px solid black","2px dotted green","3px dashed yellow","1px double red","None","Unset"],this.alignment=["Left","Justified","Right","Center"]}extractSource(e){let t=this.inBetween(e,"$#&{","}&#$");try{t=JSON.parse(t)}catch(i){t={}}return t}indexAt(e="",t="",i=0){if(i=i||0,-1==e.indexOf(t))return-1;if(i>=(e=e.split(t)).length)return-1;let s=0;for(let r=0;r<e.length;r++)r<=i&&(s+=e[r].length);return s+t.length*i}combine(e="",t="",i="",s=0){let r=s=s||0,n=t===i?s+1:s,a=this.indexAt(e,t,r),l=this.indexAt(e,i,n);return-1==a||a+t.length>=e.length||-1==l?-1:e.slice(a,l+i.length)}allCombine(e="",t="",i=""){let s,r=0,n=[];for(;-1!=s;)s=this.combine(e,t,i,r),r++,-1!=s&&n.push(s);return n}inBetween(e="",t="",i="",s=0){let r=s=s||0,n=t===i?s+1:s,a=this.indexAt(e,t,r),l=this.indexAt(e,i,n);return-1==a||a+t.length>=e.length||-1==l?-1:e.slice(a+t.length,l)}allInBetween(e="",t="",i=""){let s,r=0,n=[];for(;-1!=s;)s=this.inBetween(e,t,i,r),r++,-1!=s&&n.push(s);return n}extractCSS(e){let t,i,s=e.style.cssText,r={};if(""!=s){let e;s=s.split("; ");for(let n of s)e=this.trem(n),t=this.jsStyleName(e.split(":")[0]),i=this.stringReplace(e.split(":").pop(),";",""),""!=t&&(r[t]=this.trem(i))}return r}trimMonthArray(){let e=[];for(let t=0;t<this.months.length;t++)e.push(this.months[t].slice(0,3));return e}jsStyleName(e=""){let t="";for(let i=0;i<e.length;i++)"-"==e[i]?t+=e[++i].toUpperCase():t+=e[i].toLowerCase();return t}cssStyleName(e=""){let t="";for(let i=0;i<e.length;i++)this.isCapital(e[i])&&(t+="-"),t+=e[i].toLowerCase();return t}textToCamelCased(e=""){let t="";for(let i in e)" "!=e[i]&&(0==i?t+=e[i].toLowerCase():this.isset(e[i-1])&&" "==e[i-1]?t+=e[i].toUpperCase():t+=e[i]);return t}camelCasedToText(e=""){let t="";for(let i in e)0!=i&&this.isCapital(e[i])?t+=" "+e[i].toLowerCase():t+=e[i];return t}emptyObject(e){return JSON.stringify(e)==JSON.stringify({})}random(e={limit:1,range:1}){let t;return this.emptyObject(e)?t=2*Math.random()-1:this.isset(e.limit)?t=Math.random()*e.limit:this.isset(e.range),t}range(e=1,t=1){let i=[];for(let s=t||0;s<e;s++)i.push(s);return i}generateRandom(e=5){for(var t=this.capitals+this.smalls+this.digits,i="",s=0;s<e;s++)i+=t[Math.floor(Math.random()*t.length)];return i}generateRandomHex(e=5){for(var t=this.capitals.slice(0,3)+this.smalls.slice(0,3)+this.digits,i="",s=0;s<e;s++)i+=t[Math.floor(Math.random()*t.length)];return i}generateKey(e=5){return Date.now().toString(e)+Math.random().toString(e).slice(2)}edittedUrl(e){var t=this.urlSplitter(e.url);return t.vars[e.toAdd]=e.addValue.toLowerCase(),this.urlMerger(t,e.toAdd)}addCommaToMoney(e=""){for(var t="",i=e.length-1;i>=0;i--)t+=e[i];for(e="",i=0;i<t.length;i++){let s=(i+1)%3;e+=t[i],0==s&&i!=t.length-1&&(e+=",")}for(t="",i=e.length-1;i>=0;i--)t+=e[i];return t}isCapital(e=""){if(1==e.length)return this.capitals.includes(e)}capitalize(e=""){return this.isCapital(e[0])?e:((e=e.split(""))[0]=this.capitals[this.smalls.indexOf(e[0])],this.stringReplace(e.toString(),",",""))}flip(e=""){return e.split("").reverse().join("")}isSmall(e=""){if(1==e.length)return this.smalls.includes(e)}isSymbol(e=""){if(1==e.length)return this.symbols.includes(e)}isName(e=""){for(var t in e)if(this.isDigit(e[t]))return!1;return!0}isPasswordValid(e=""){if(e.length>7)for(var t in e)if(this.isCapital(e[t]))for(var i in e)if(this.isSmall(e[i]))for(var s in e)if(this.isDigit(e[s]))for(var r in e)if(this.isSymbol(e[r]))return!0;return!1}isSubString(e="",t=""){return-1!=e.indexOf(t)}isDigit(e=""){return 1==(e=new String(e)).length&&this.digits.includes(e)}isEmail(e=""){var t=e.split("@");if(2!=t.length)return!1;if(this.isSpaceString(t[0]))return!1;var i=t[1].split(".");return 2==i.length&&!this.isSpaceString(i[0])&&!this.isSpaceString(i[1])}isTruthy(e){let t;return"boolean"==typeof e?t=e:"string"==typeof e?t="true"==e.toLocaleLowerCase()||"1"==e.toLocaleLowerCase():"number"==typeof e&&(t=1==e),t}isFalsy(e){let t;return"boolean"==typeof e?t=e:"string"==typeof e?t="false"==e.toLocaleLowerCase()||"0"==e.toLocaleLowerCase():"number"==typeof e&&(t=0==e),t}objectLength(e={}){return Object.keys(e).length}isSpaceString(e=""){if(""==e)return!0;for(var t in e)if(" "!=e[t])return!1;return!0}hasString(e="",t=""){for(var i in e)if(t==e[i])return!0;return!1}trem(e=""){if(" "==e[0]){for(var t="",i=0;i<e.length;i++)0!=i&&(t+=e[i]);e=this.trem(t)}if(" "==e[e.length-1]){for(t="",i=0;i<e.length;i++)i!=e.length-1&&(t+=e[i]);e=this.trem(t)}return e}stringReplace(e="",t="",i=""){var s="";for(let r=0;r<e.length;r++)e[r]==t?s+=i:s+=e[r];return s}converToRealPath(e=""){return"/"!=e[e.length-1]&&(e+="/"),e}isSpacialCharacter(e=""){for(var t=0;t<"'\\/:?*<>|!.".length;t++)if("'\\/:?*<>|!."[t]==e)return!0;return!1}countChar(e="",t=""){for(var i=0,s=0;s<e.length;s++)e[s]==t&&i++;return i}occurancesOf(e="",t=""){let i=[];for(let s=0;s<e.length;s++)e[s]===t&&i.push(s);return i}isset(e){return void 0!==e}isnull(e){return null==e}notNull(e){return this.isset(e)&&!this.isnull(e)}isArray(e){let t=!1;return"object"==typeof e&&(t=e.constructor===Array),t}isObject(e){let t=!1;return"object"==typeof e&&(t=e.constructor===Object),t}isString(e){let t=!1;return"string"==typeof e&&(t=e.constructor===String),t}isNumber(e){let t=!1;return"number"==typeof e&&(t=e.constructor===Number),t}isBool(e){let t=!1;return"boolean"==typeof e&&(t=e.constructor===Boolean),t}isfunction(e){return"function"==typeof e}async runParallel(e=[],t=(()=>{})){var i={};for(var s in e)i[s]=await e[s];t(i)}isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}urlMerger(e="",t=""){var i=this.isset(e.hostType)?e.hostType:"http",s=this.isset(e.hostName)?e.hostName:"",r=this.isset(e.host)?e.port:"",n=this.isset(e.pathName)?e.pathName:"",a="?",l=!0;this.isset(e.vars)&&Object.keys(e.vars).map(i=>{l&&(a+=i+"="+e.vars[i]+"&"),i==t&&(l=!1)});var o=i+"::/"+s+":"+r+"/"+n+a;return(o=o.lastIndexOf("&")==o.length-1?o.slice(0,o.length-1):o).lastIndexOf("=")==o.length-1?o.slice(0,o.length-1):o}urlSplitter(e=""){if(this.isset(e)){var t=-1===(e=e.toString()).indexOf("://")?null:e.split("://")[0],i=e.split("://").pop(0),s=i.split("/")[0],r=s.split(":")[0],n=s.split(":").pop(0),a="/"+i.split("/").pop(0),l=a.split("?")[0],o=-1===a.indexOf("?")?null:a.split("?").pop(0),c={};if(null!=o){var d=o.split("&");for(var u in d){var h=d[u].split("=");h[1]?c[this.stringReplace(h[0],"-"," ")]=this.stringReplace(h[1],"-"," "):c[this.stringReplace(h[0],"-"," ")]=""}}return{location:e,httpType:t,fullPath:i,host:s,httphost:t+"://"+s,hostName:r,port:n,path:a,pathName:l,queries:o,vars:c}}}getUrlVars(e=""){var t=-1===(e=e.toString()).indexOf("?")?null:e.split("?").pop(0),i={};if(null!=t){var s=t.split("&");for(var r in s){var n=s[r].split("=");n[1]?i[this.stringReplace(n[0],"-"," ")]=this.stringReplace(n[1],"-"," "):i[this.stringReplace(n[0],"-"," ")]=""}}return i}};let t=new e;class i{constructor(e={rows:2,cols:2,contents:[]}){Object.keys(e).map(t=>{this[t]=e[t]}),this.rows=this.rows||2,this.cols=this.cols||2,this.contents=this.contents||[],this.setData(this.contents)}setData(e=[]){this.contents=e,this.data=[];for(let t=0;t<this.rows;t++){this.data[t]=[];for(let i=0;i<this.rows;i++)this.data[t][i]=e.shift()}}get structure(){let{rows:e,cols:t}=this;return{rows:e,cols:t}}add(e=0){if(e instanceof i)for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]+=e.data[t][i];else if(e instanceof Array)for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]+=e[t][i];else for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]+=e}subtract(e=0){if(e instanceof i)for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]-=e.data[t][i];else if(e instanceof Array)for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]-=e[t][i];else for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]-=e}multiply(e=1){if(e instanceof i)for(let t=0;t<this.rows;t++)for(let i=0;i<e.cols;i++)this.data[t][i]*=e.data[t][i];else if(e instanceof Array)for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]*=e[t][i];else for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.data[t][i]*=e}randomize(){this.map(e=>t.random())}transpose(){let e=new i({rows:this.cols,cols:this.rows});for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)e.data[i][t]=this.data[t][i];Object.keys(e).map(t=>{this[t]=e[t]})}map(e=((e,...t)=>{})){for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++){let s=this.data[t][i];this.data[t][i]=e(s,t,i)}}print(){console.table(this.data)}say(){console.log(this.toArray())}toArray(){return this.contents=[],i.map(this,e=>{this.contents.push(e)}),this.contents}reshape(e={rows:2,cols:2}){this.toArray(),this.rows=e.rows,this.cols=e.cols,this.setData(this.contents)}getColumns(...e){let t=[];for(let i in e)t.push(Array.each(this.data,t=>t[e[i]]));return t}getRows(...e){let t=[];for(let i=0;i<this.rows;i++)e.includes(i)&&t.push(this.data[i]);return t}static toArray(e){let t=[];return i.map(e,e=>{t.push(e)}),t}static subtract(e=new i,t){let s=[],r=e.rows,n=e.cols;if(t instanceof i)for(let i=0;i<r;i++)for(let r=0;r<n;r++)s.push(e.data[i][r]-t.data[i][r]);else if(t instanceof Array)for(let i=0;i<e.rows;i++)for(let r=0;r<e.cols;r++)s.push(e.data[i][r]-t[i][r]);else for(let i=0;i<this.rows;i++)for(let r=0;r<this.cols;r++)s.push(e.data[i][r]-t);return new i({rows:r,cols:n,contents:s})}static add(e=new i,t){let s=[],r=e.rows,n=e.cols;if(t instanceof i)for(let i=0;i<r;i++)for(let r=0;r<n;r++)s.push(e.data[i][r]+t.data[i][r]);else if(t instanceof Array)for(let i=0;i<e.rows;i++)for(let r=0;r<e.cols;r++)s.push(e.data[i][r]+t[i][r]);else for(let i=0;i<this.rows;i++)for(let r=0;r<this.cols;r++)s.push(e.data[i][r]+t);return new i({rows:r,cols:n,contents:s})}static multiply(e=new i,t){let s,r,n=[];if(t instanceof i){if(e.cols!==t.rows)return void console.log("Columns of A must equal rows of B");s=e.rows,r=t.cols;for(let i=0;i<s;i++)for(let s=0;s<r;s++){let r=0;for(let n=0;n<e.cols;n++)r+=e.data[i][n]*t.data[n][s];n.push(r)}}else if(t instanceof Array){s=e.rows,r=e.cols;for(let i=0;i<e.rows;i++)for(let s=0;s<e.cols;s++)n.push(e.data[i][s]*t[i][s])}else for(let i=0;i<this.rows;i++)for(let s=0;s<this.cols;s++)n.push(e.data[i][s]*t);return new i({rows:s,cols:r,contents:n})}static divide(e=new i,t){let s,r,n=[];if(t instanceof i){if(e.cols!==t.rows)return void console.log("Columns of A must equal rows of B");s=e.rows,r=t.cols;for(let i=0;i<s;i++)for(let s=0;s<r;s++){let r=0;for(let n=0;n<e.cols;n++)r+=e.data[i][n]/t.data[n][s]||0;n.push(r)}}else if(t instanceof Array){s=e.rows,r=e.cols;for(let i=0;i<e.rows;i++)for(let s=0;s<e.cols;s++)n.push(e.data[i][s]/t[i][s]||0)}else for(let i=0;i<this.rows;i++)for(let s=0;s<this.cols;s++)n.push(e.data[i][s]/t||0);return new i({rows:s,cols:r,contents:n})}static randomize(e=new i){return i.map(e,e=>t.random())}static transpose(e=new i){let t=new i({rows:e.cols,cols:e.rows});for(let i=0;i<e.rows;i++)for(let s=0;s<e.cols;s++)t.data[s][i]=e.data[i][s];return t}static map(e=new i,t=(()=>{})){let s=new i({rows:e.rows,cols:e.cols});for(let i=0;i<e.rows;i++)for(let r=0;r<e.cols;r++){let n=e.data[i][r];s.data[i][r]=t(n,i,r)}return s}static fromArray(e=[]){return new i({rows:e.length,cols:1,contents:e})}static reshape(e={rows:2,cols:2,matrix:new i}){return e.contents=i.toArray(e.matrix),delete e.matrix,new i(e)}static normalize(e=new i){let t=Math.normalize(i.toArray(e));return new i({rows:e.rows,cols:e.cols,contents:t})}static diagonal(e=[]){let t=i.square(e.length);for(let i in t.data)for(let s in t.data[i])i==s&&(t.data[i][s]=e[i]);return t.toArray(),t}static unit(e=2){let t=i.square(e);for(let i in t.data)for(let e in t.data[i])i==e&&(t.data[i][e]=1);return t.toArray(),t}static square(e=2){return new i({rows:e,cols:e})}static fromMatrixCols(e=new i,...t){let s=e.getColumns(...t),r=Array.flatten(s),n=new i({rows:s.length,cols:e.cols,contents:r});return n.transpose(),n}static deepMatrix(e=[],t=[]){let s=[];for(let i=0;i<e.length;i++)s.push({rows:e[i],cols:e[++i]||1});let r=e=>{let n=new i(s[e]);return e+1==s.length?n.map(e=>t.shift()||0):n.map(t=>r(e+1)),n};return r(0)}}var s=i,r=function(){let e={combine:(t,i,s,r)=>{let n=r=r||0,a=i===s?r+1:r,l=e.indexAt(t,i,n),o=e.indexAt(t,s,a)+1;return-1==l||0==o?null:t.slice(l,o)},inBetween:(t,i,s,r)=>{let n=r=r||0,a=i===s?r+1:r,l=e.indexAt(t,i,n)+1,o=e.indexAt(t,s,a);return 0==l||-1==o?null:t.slice(l,o)},contains:(e,t)=>{for(let i in e)if(e[i]==t)return!0;return!1},indexAt:(e,t,i)=>{i=i||0;let s=-1;for(let r=0;r<e.length;r++)if(e[r]==t&&++s==i)return r;return-1},find:(e,t)=>{for(let i in e)if(1==t(e[i]))return e[i]},findAll:(e,t)=>{let i=[];for(let s in e)1==t(e[s])&&i.push(e[s]);return i},getObject:(e,t,i)=>{let s;for(let r in e)e[r][t]==i&&(s=e[r]);return s},getAllObjects:(e,t,i)=>{let s=[];for(let r in e)e[r][t]==i&&s.push(e[r]);return s},getAll:(e,t)=>{let i=[];for(let s in e)e[s]==t&&i.push(s);return i},removeAll:(e,t)=>{let i=[];for(let s of e)s!=t&&i.push(s);return i},putAt:(e=[],t,i=0)=>{let s=[];for(let r in e)if(r==i){s[r]=t;let n=Math.floor(i);isNaN(n)?n=i+1:n++,s[n]=e[r]}else s[r]=e[r];return s},pushArray:(t=[],i,s)=>{let r=e.arrayIndex(t,i);return e.putAt(t,s,r)},arrayIndex:(e=[],t=[])=>{for(let i in e)if(JSON.stringify(e[i])==JSON.stringify(t))return i;return-1},hasArray:(e=[],t=[])=>(e=JSON.stringify(e),t=JSON.stringify(t),-1!=e.indexOf(t)),toObject:(e=[],t)=>{let i={};for(let s in e)i[e[s][t]]=e[s],delete i[e[s][t]][t];return i},reshape:e=>{},randomPick:e=>e[Math.floor(Math.random()*e.length)],removeEmpty:(t=[])=>{let i=[];for(let s in t)Array.isArray(t[s])&&t[s].length>0?i.push(e.removeEmpty(t[s])):null!=t[s]&&null!=t[s]&&0!=t[s]&&""!=t[s]&&i.push(t[s]);return i},each:(e=[],t=(()=>{}))=>{let i=[];for(let s in e)i.push(t(e[s],s));return i},hasArrayElement:(e=[],t=[])=>{for(let i in t)if(-1!=e.indexOf(t[i]))return!0;return!1},toSet:(e=[])=>{let t=[];for(let i in e)-1==t.indexOf(e[i])&&t.push(e[i]);return t},popIndex:(e=[],t)=>{let i=[];for(let s in e)s!=t&&i.push(e[s]);return i},dataType:(e=[])=>{let t=typeof e[0];for(let i in e)if(typeof e[i]!=t)return"mixed";return t}};return e};let n=new e,a=r();var l=class extends e{constructor(){super()}trimMonthArray(){let e=[];for(let t=0;t<this.months.length;t++)e.push(this.months[t].slice(0,3));return e}getYears(e=5){let t=(new Date).getYear()+1900,i=[];for(let s=0;s<e;s++)i.push(`${t-1}-${t}`),t++;return i}isTimeValid(e){if(2==(e=e.split(":")).length||3==e.length){var t=new Number(e[0]),i=new Number(e[1]),s=0;if(3==e.length){if(s=new Number(e[2]),t>23||t<0||i>59||i<0||s>59||s<0)return!1}else if(t>23||t<0||i>59||i<0)return!1;return 60*t*60+60*i+s}return!1}time(e){let t=this.isset(e)?new Date(Math.floor(e)):new Date,i=t.getHours().toString(),s=t.getMinutes().toString(),r=t.getSeconds().toString();return`${i=i.length>1?i:"0"+i}:${s=s.length>1?s:"0"+s}:${r=r.length>1?r:"0"+r}`}date(e){let t=this.isset(e)?new Date(Math.floor(e)):new Date,i=t.getDate().toString(),s=(t.getMonth()+1).toString(),r=t.getFullYear().toString();return i=i.length>1?i:"0"+i,`${r}-${s=s.length>1?s:"0"+s}-${i}`}time_date(e){return`${this.time(e)}, ${this.date(e)}`}timeToday(){let e=new Date,t=e.getHours(),i=e.getMinutes(),s=e.getSeconds();return this.isTimeValid(`${t}:${i}:${s}`)||-1}isDateValid(e){return!!(this.isDate(e)&&this.isYearValid(e)&&this.isMonthValid(e)&&this.isDayValid(e))}isDayValid(e){for(var t="",i=0;i<2;i++)t+=e[i+8];var s=0,r=this.isMonthValid(e);return"01"==r?s=31:"02"==r?s=this.isLeapYear(this.isYearValid(e))?29:28:"03"==r?s=31:"04"==r?s=30:"05"==r?s=31:"06"==r?s=30:"07"==r||"08"==r?s=31:"09"==r?s=30:"10"==r?s=31:"11"==r?s=30:"12"==r&&(s=31),s<t?0:t}isDate(e){if(10!=e.length)return!1;for(var t in e)if(!this.isDigit(e[t])){if(4==t||7==t){if("-"==e[t])continue;return!1}return!1}return!0}isMonthValid(e){for(var t="",i=0;i<2;i++)t+=e[i+5];return t>12||t<1?0:t}isYearValid(e){for(var t=(new Date).getFullYear("Y"),i="",s=0;s<4;s++)i+=e[s+0];return i>t?0:i}getYear(e){for(var t="",i=0;i<4;i++)t+=e[i+0];return t}isLeapYear(e){return e%4==0&&(e%100!=0||e%400==0)}daysInMonth(e,t){var i=0;return"01"==e?i=31:"02"==e?i=this.isLeapYear(t)?29:28:"03"==e?i=31:"04"==e?i=30:"05"==e?i=31:"06"==e?i=30:"07"==e||"08"==e?i=31:"09"==e?i=30:"10"==e?i=31:"11"==e?i=30:"12"==e&&(i=31),i}dateValue(e){for(var t=365*this.getYear(e),i=0,s=1;s<this.isMonthValid(e);s++)i=this.daysInMonth(s,this.getYear(e))/1+i/1;return t/1+i/1+this.isDayValid(e)/1}today(){var e=new Date,t=e.getMonth()/1+1;return 2!=t.length&&(t="0"+t),e.getFullYear()+"-"+t+"-"+e.getDate()}getDateObject(e){let t=Math.floor(e/this.secondsInDays(1));e-=this.secondsInDays(t);let i=Math.floor(e/this.secondsInHours(1));e-=this.secondsInHours(i);let s=Math.floor(e/this.secondsInMinutes(1));return{days:t,hours:i,minutes:s,seconds:e-=this.secondsInMinutes(s)}}dateWithToday(e){var t=Math.floor(this.dateValue(this.today()));let i=Math.floor(this.dateValue(e));var s={diff:i-t,when:""};return s.when=i>t?"future":i==t?"today":"past",s}dateString(e){var t=new Number(this.getYear(e)),i=new Number(this.isMonthValid(e));return new Number(this.isDayValid(e))+" "+this.months[i-1]+", "+t}secondsInDays(e){return Math.floor(24*e*60*60)}secondsInHours(e){return Math.floor(60*e*60)}secondsInMinutes(e){return Math.floor(60*e)}secondsTillDate(e){return this.secondsInDays(Math.floor(this.dateValue(e)))}secondsTillToday(){return this.secondsTillDate(this.today())}secondsTillNow(){return this.secondsTillDate(this.today())+this.timeToday()}secondsTillMoment(e){return this.secondsTillDate(this.date(e))+this.isTimeValid(this.time(e))}log(...e){let t=`[${this.time()}]:`;console.log(t,...e)}};var o=class extends l{constructor(e=class{}){super(),this.Element=e.Element,this.document=e.document}loadCss(e=""){let t=this.createElement({element:"link",attributes:{rel:"stylesheet",type:"text/css",href:e}});void 0!==this.document&&void 0!==this.document.head&&this.document.head.append(t)}jsonForm(e){let t={},i=e=>{let s=e.children;for(let t=0;t<s.length;t++)i(s[t]);e.hasAttribute("name")&&("file"==e.type?e.hasAttribute("multiple")?t[e.getAttribute("name")]=e.files:t[e.getAttribute("name")]=e.files[0]:t[e.getAttribute("name")]=e.value)};return i(e),t}jsonElement(e){let t=e.nodeName.toLowerCase(),i=e.getAttributes();i.style=e.css();let s=[];for(let r=0;r<e.children.length;r++)s.push(e.children[r].toJson());return{element:t,attributes:i,children:s}}isElement(e){return e instanceof this.Element}createFromObject(e={},t){let i,s;if(this.isElement(e)?s=(i=e).nodeName:this.isElement(e.element)?s=(i=e.element).nodeName:(s=e.element.toLowerCase(),i=document.createElement(e.element)),this.isset(e.attributes)&&!this.isElement(e))for(var r in e.attributes)"style"==r?i.css(e.attributes[r]):i.setAttribute(r,e.attributes[r]);if(this.isset(e.text)&&(i.textContent=e.text),this.isset(e.html)&&(i.innerHTML=e.html),this.isset(e.value)&&(i.value=e.value),s.includes("-")&&(i=this.createFromHTML(i.outerHTML)),this.isset(t)&&t.attachElement(i,e.attachment),this.isset(e.children)&&i.makeElement(e.children),this.isset(e.options)&&Array.isArray(e.options))for(var n of e.options){let t=i.makeElement({element:"option",value:n,text:n,attachment:"append"});this.isset(e.selected)&&e.selected==n&&t.setAttribute("selected",!0),"null"==n.toString().toLowerCase()&&t.setAttribute("disabled",!0)}return this.isset(i.dataset.icon)&&i.addClasses(i.dataset.icon),i}createFromHTML(e="",t){let i=(new DOMParser).parseFromString(e,"text/html"),s=i.body.firstChild;return 1==e.indexOf("html")?s=i:1==e.indexOf("body")&&(s=i.body),this.isset(t)&&t.attachElement(s,t.attachment),s}createPerceptorElement(e,t){let i=this[e.perceptorElement](e.params);return this.isset(t)&&t.attachElement(i,e.attachment),i}getElement(e={element:"",attributes:{}},t){var i;if("string"==typeof e?i=this.createFromHTML(e,t):this.isElement(e)?(i=e,this.isset(t)&&t.attachElement(i,e.attachment)):e.constructor==Object&&(i=e.perceptorElement?this.createPerceptorElement(e,t):this.createFromObject(e,t)),this.isset(i.setKey)&&!this.isset(i.dataset.domKey)&&i.setKey(),this.isset(e.list)){let t=i.makeElement({element:"datalist",options:e.list});i.setAttribute("list",i.dataset.domKey),t.setAttribute("id",i.dataset.domKey)}if(this.isset(e.state)){let t=i.getParents(e.state.owner,e.state.value);this.isnull(t)?i.dataset.stateStatus="pending":(t.addState({name:e.state.name,state:i}),i.dataset.stateStatus="set")}return i}createElement(e={element:"",attributes:{}},t){if(Array.isArray(e)){let i=[];for(let s of e)i.push(this.getElement(s,t));return i}return this.getElement(e,t)}validateFormTextarea(e){return""!=e.value}validateFormInput(e){var t=e.getAttribute("type"),i=e.value;return this.isnull(t)?!this.isSpaceString(i):"file"==(t=t.toLowerCase())?""!=i:"text"==t?!this.isSpaceString(i):"date"==t?this.hasString(e.className,"future")?this.isDate(i):this.isDateValid(i):"email"==t?this.isEmail(i):"number"==t?this.isNumber(i):"password"==t?this.isPasswordValid(i):!this.isSpaceString(i)}validateFormSelect(e){return 0!=e.value&&"null"!=e.value.toLowerCase()}validateForm(e,t){(t=t||{}).nodeNames=t.nodeNames||"INPUT, SELECT, TEXTAREA";let i,s,r=!0,n=e.findAll(t.nodeNames),a=e=>"INPUT"==i?this.validateFormInput(e):"SELECT"==i?this.validateFormSelect(e):"TEXTAREA"==i?this.validateFormTextarea(e):this.validateOtherElements(e);for(let l=0;l<n.length;l++)if(i=n[l].nodeName,s=n[l].getAttribute("name"),"true"!=n[l].getAttribute("ignore")){if(this.isset(t.names)){if(!t.names.includes(s))continue;r=a(n[l])}else r=a(n[l]);if(!r)break}return{flag:r,elementName:s}}validateOtherElements(e){let t=!1;return this.isset(e.value)&&""!=e.value&&(t=!0),t}ValidateFormImages(e){return"file"==type&&!self.isImageValid(value)}isImageValid(e){var t=e.substring(e.lastIndexOf(".")+1).toLowerCase();return"png"==t||"gif"==t||"jpeg"==t||"jpg"==t}imageToJson(e,t=(()=>{})){let i=new FileReader,s={};i.onload=e=>{s.src=e.target.result,t(s)},s.size=e.size,s.type=e.type,i.readAsDataURL(e)}};class c{}var d=class extends o{constructor(e=c){super(e),this.virtual={},this.elementLibrary(e.Element),this.htmlCollectionLibrary(e.HTMLCollection),this.nodeLibrary(e.Node),this.nodeListLibrary(e.NodeList)}elementLibrary(e=c){let t=this;e.prototype.changeNodeName=function(e){let i=this.toJson();return i.element=e,t.createElement(i)},e.prototype.toJson=function(){let e=this.nodeName.toLowerCase(),t=this.getAttributes();t.style=this.css();let i=[];for(let s=0;s<this.children.length;s++)i.push(this.children[s].toJson());return{element:e,attributes:t,children:i}},e.prototype.setOptions=function(e=[],i={selected:""}){i=i||{},t.isset(i.flag)&&(this.innerHTML="");for(let s=0;s<e.length;s++){let r=e[s].text||e[s],n=e[s].value||e[s],a=this.makeElement({element:"option",attributes:{value:n},text:r});"null"==n.toString().toLowerCase()&&a.setAttribute("disabled",!0),t.isset(i.selected)&&n==i.selected&&a.setAttribute("selected",!0)}},e.prototype.commonAncestor=function(e,t){for(let i of e.parents())for(let e of t.parents())if(i==e)return i;return null},e.prototype.onAdded=function(e=(()=>{})){this.addEventListener("DOMNodeInsertedIntoDocument",t=>{e()})},e.prototype.states={},e.prototype.temp={},e.prototype.manyBubbledEvents=function(e,t=(()=>{})){e=e.split(",");for(let i of e)this.bubbledEvent(i.trim(),t)},e.prototype.manyNotBubbledEvents=function(e,t=(()=>{})){e=e.split(",");for(let i of e)this.notBubbledEvent(i.trim(),t)},e.prototype.bubbledEvent=function(e,t=(()=>{})){document.addEventListener(e,e=>{(e.target==this||this.isAncestor(e.target))&&t(e)})},e.prototype.notBubbledEvent=function(e,t=(()=>{})){document.addEventListener(e,e=>{e.target==this||this.isAncestor(e.target)||t(e)})},e.prototype.addMultipleEventListener=function(e,t=(()=>{})){e=e.split(",");for(let i of e)this.addEventListener(i.trim(),e=>{t(e)})},e.prototype.hover=function(e={css:{},do:()=>{}}){let i,s=[];this.addMultipleEventListener("mouseenter",r=>{i=this.css(),t.isset(e.css)&&(s=t.array.each(Object.keys(e.css),e=>t.cssStyleName(e)),this.css(e.css)),t.isfunction(e.do)&&e.do(r)}),this.addMultipleEventListener("mouseleave",r=>{t.isset(e.css)&&(this.cssRemove(s),this.css(i))})},e.prototype.find=function(e="",i=0){let s=null;return t.isset(i)?this.querySelectorAll(e).forEach((e,t)=>{i==t&&(s=e)}):s=this.querySelector(e),s},e.prototype.findAll=function(e=""){return this.querySelectorAll(e)},e.prototype.search=function(e="",i={attributes:{},id:"",nodeName:"",class:"",classes:""},s=0){let r=null,n=[];if(t.isset(i)){let a=this.querySelectorAll(e);for(let e=0;e<a.length;e++){if(r=a[e],t.isset(i.attributes)){for(let e in i.attributes)r.getAttribute(e)==i.attributes[e]||(r=null);if(t.isnull(r))continue}if(t.isset(i.id)&&i.id!=r.id)r=null;else if(!t.isset(i.class)||r.classList.contains(i.class))if(!t.isset(i.classes)||r.hasClasses(i.classes))if(t.isset(i.nodeName)&&r.nodeName.toLowerCase()!=i.nodeName)r=null;else{if(s<=0)return r;n.push(r)}else r=null;else r=null}r=n.length&&t.isset(n[s])?n[s]:null}else r=this.find(e);return r},e.prototype.searchAll=function(e="",i={attributes:{},id:"",nodeName:"",class:"",classes:""}){if(t.isset(i)){let s=this.querySelectorAll(e),r=[];for(let e=0;e<s.length;e++){let n=s[e];if(t.isset(i.attributes))for(let e in i.attributes)n.getAttribute(e)==i.attributes[e]||(n=null);t.isset(i.id)&&i.id!=n.id||t.isset(i.class)&&!n.classList.contains(i.class)||t.isset(i.classes)&&!n.hasClasses(i.classes)||t.isset(i.nodeName)&&n.nodeName.toLowerCase()!=i.nodeName?n=null:t.isnull(n)||r.push(n)}return r}return this.querySelectorAll(e)},e.prototype.fetch=function(e=[],t=0){let i={};for(let s of e)i[s]=this.find(s,t);return i},e.prototype.fetchAll=function(e=[]){let t={};for(let i of e)t[i]=this.findAll(i);return t},e.prototype.nodesBetween=function(e,t){let i=[];for(let s of Array.from(this.children))(s==e||s==t||s.isAncestor(e)||s.isAncestor(t))&&i.push(s);return i},e.prototype.isAncestor=function(e){return e.parents().includes(this)},e.prototype.parents=function(){let e=[],t=this.parentNode;for(;null!=t;)e.push(t),t=t.parentNode;return e},e.prototype.customParents=function(){let e=this.parents(),t=[];for(let i=0;i<e.length;i++)e[i].nodeName.includes("-")&&t.push(e[i]);return t},e.prototype.removeState=function(e={name:""}){let i=this.getState(e);t.isset(i)&&t.isset(e.force)&&(t.isset(i.dataset.domKey)&&delete t.virtual[i.dataset.domKey],i.remove()),this.removeAttribute("data-"+e.name)},e.prototype.getState=function(e={name:""}){let i,s=null;return"string"==typeof e?i=e:t.isset(this.dataset[""+e.name])&&(i=e.name),t.isset(i)&&(s=t.virtual[this.dataset[i]]),s},e.prototype.addState=function(e={name:""}){return t.isset(e.state.dataset.domKey)||e.state.setKey(),this.dataset[e.name]=e.state.dataset.domKey,this.states[e.name]={},this},e.prototype.setState=function(e={name:"",attributes:{},render:{},children:[],text:"",html:"",value:"",options:[]}){let i=this.getState(e);if(i.setAttributes(e.attributes),t.isset(e.children)&&i.makeElement(e.children),t.isset(e.render)&&i.render(e.render),t.isset(e.text)&&(i.textContent=e.text),t.isset(e.html)&&(i.innerHTML=e.html),t.isset(e.value)&&(i.value=e.value),t.isset(e.options))for(var s of e.options)i.makeElement({element:"option",value:s,text:s,attachment:"append"});return this.states[e.name][JSON.stringify(e)]=i.cloneNode(!0),i},e.prototype.setKeyAsync=async function(){return await this.setKey()},e.prototype.setKey=function(){let e=Date.now().toString(36)+Math.random().toString(36).slice(2);return t.isset(this.dataset.domKey)?e=this.dataset.domKey:this.dataset.domKey=e,t.virtual[e]=this,e},e.prototype.dropDown=function(e){let t=this.cloneNode(!0);this.innerHTML="",this.append(t),t.css({boxShadow:"1px 1px 1px 1px #aaaaaa"}),this.css({boxShadow:"0.5px 0.5px 0.5px 0.5px #cccccc"});let i=this.makeElement({element:"div",attributes:{class:"drop-down"}});return i.append(e),this.removeDropDown=()=>{i.remove(),t.css({boxShadow:"unset"}),this.innerHTML=t.innerHTML},this},e.prototype.stopMonitor=function(){return this.observe&&this.observer.disconnect(),this},e.prototype.onAttributeChange=function(e="",t=(()=>{})){this.addEventListener("attributesChanged",i=>{i.detail.attributeName==e&&t(i)})},e.prototype.monitor=function(e={attributes:!0,childList:!0,subtree:!0}){return this.observer=new MutationObserver((e,t)=>{e.length&&this.dispatchEvent(new CustomEvent("mutated"));for(let i of e)"childList"==i.type?this.dispatchEvent(new CustomEvent("childListchanged",{detail:i})):"attributes"==i.type?this.dispatchEvent(new CustomEvent("attributesChanged",{detail:i})):"characterData"==i.type&&this.dispatchEvent(new CustomEvent("characterDataChanged",{detail:i}))}),this.observer.observe(this,e),this},e.prototype.checkChanges=function(e=(()=>{})){this.monitor(),this.addEventListener("mutated",t=>{e(t)})},e.prototype.onChanged=function(e=(()=>{})){this.getAttribute("value");let i=i=>{if("INPUT"==i.target.nodeName)if("date"==i.target.type)this.isDate(this.value)&&this.setAttribute("value",this.value);else if("time"==i.target.type)this.isTimeValid(this.value)&&this.setAttribute("value",this.value);else if("file"==i.target.type){i.target.value;let s=i.target.files[0];0==s.type.indexOf("image")&&t.imageToJson(s,e)}else this.setAttribute("value",this.value);else if("SELECT"==i.target.nodeName)for(let e=0;e<i.target.options.length;e++)e==i.target.selectedIndex?i.target.options[e].setAttribute("selected",!0):i.target.options[e].removeAttribute("selected");else"DATA-ELEMENT"==i.target.nodeName||"SELECT-ELEMENT"==i.target.nodeName?this.setAttribute("value",this.value):this.value=this.textContent;t.isset(e)&&"file"!=i.target.type&&e(this.value,i)};this.addEventListener("keyup",e=>{i(e)}),this.addEventListener("change",e=>{i(e)})},e.prototype.render=function(e={element:"",attributes:{}},i){t.isset(i)?this.removeChildren(i):this.removeChildren(),this.makeElement(e)},e.prototype.getAllCssProperties=function(){let e,t,i=Array.from(document.styleSheets),s=this.id,r=this.nodeName,n=Array.from(this.classList),a={};for(var l in n)n[l]="."+n[l];for(l=0;l<i.length;l++){e=i[l].cssRules;for(var o=0;o<e.length;o++)if((t=e[o].selectorText)=="#"+s||t==r||-1!=n.indexOf(t)){a[t]={};let i=e[o].style;for(let e in i)""!==i[e]&&(a[t][e]=i[e])}}return a.style=this.css(),a},e.prototype.getCssProperties=function(e=""){let t=this.getAllCssProperties(),i={};for(let s in t){i[s]={};for(let r in t[s])e==r&&(i[s][r]=t[s][r])}return i},e.prototype.hasCssProperty=function(e=""){var i=this.getCssProperties(e);for(var s in i)if(t.isset(i[s])&&""!=i[s])return!0;return!1},e.prototype.cssPropertyValue=function(e=""){var i=this.getCssProperties(e),s=this.id,r=Array.from(this.classList);if(t.isset(i.style)&&""!=i.style)return i.style;if(t.isset(s)&&t.isset(i["#"+s])&&""!=i["#"+s])return i["#"+s];for(var n of r)if(t.isset(i["."+n])&&""!=i["."+n])return i["."+n];return t.isset(i[this.nodeName])&&""!=i[this.nodeName]?i[this.nodeName]:""},e.prototype.css=function(e={}){return t.isset(e)&&Object.keys(e).map(t=>{this.style[t]=e[t]}),t.extractCSS(this)},e.prototype.cssRemove=function(e=[]){if(Array.isArray(e))for(var t of e)this.style.removeProperty(t);else this.style.removeProperty(e);return this.css()},e.prototype.toggleChild=function(e){var t,i,s,r=!1;console.log(e),this.children.forEach(n=>{t=n.nodeName,i=n.classList,s=n.id,t==e.nodeName&&s==e.id&&i.toString()==e.classList.toString()&&(n.remove(),r=!0)}),r||this.append(e)},e.prototype.clearClasses=function(e=""){e=e.split(",");for(let t in e)e[t]=e[t].trim();for(let i of this.classList)t.isset(e)&&e.includes(i)||this.classList.remove(i)},e.prototype.removeClasses=function(e=""){e=e.split(",");for(let t of e)""!=(t=t.trim())&&this.classList.remove(t)},e.prototype.addClasses=function(e=""){e=e.split(",");for(let t of e)""!=(t=t.trim())&&this.classList.add(t)},e.prototype.toggleClasses=function(e=""){e=e.split(",");for(let t of e)""!=(t=t.trim())&&this.classList.toggle(t)},e.prototype.removeClass=function(e=""){return this.classList.remove(e),this},e.prototype.hasClasses=function(e=[]){for(let t of e)if(!this.classList.contains(t))return!1;return!0},e.prototype.addClass=function(e=""){return this.classList.add(e),this},e.prototype.toggleClass=function(e=""){return this.classList.toggle(e),this},e.prototype.position=function(e={}){return t.isset(e)&&(Object.keys(e).map(t=>{e[t]="px"==new String(e[t]).slice(e[t].length-2)?e[t]:e[t]+"px"}),this.css(e)),this.getBoundingClientRect()},e.prototype.inView=function(e=""){let i=this.getParents(e),s=this.position().top,r=!1;return t.isnull(i)||(r=s>=0&&s<=i.clientHeight),r},e.prototype.hasClass=function(e=""){return this.classList.contains(e)},e.prototype.setProperties=function(e={}){for(let t in e)this[t]=e[t]},e.prototype.setAttributes=function(e={}){for(let t in e)"style"==t?this.css(e[t]):this.setAttribute(t,e[t])},e.prototype.getAttributes=function(e=[]){0==e.length&&(e=this.getAttributeNames());let t={};for(let i of e)t[i]=this.getAttribute(i);return t},e.prototype.makeElement=function(e={element:"",attributes:{}}){return this.setKeyAsync(),t.createElement(e,this)},e.prototype.getParents=function(e="",i=""){var s=e.slice(0,1),r=this.parentNode;if("."==s)for(;r&&(!t.isset(r.classList)||!r.classList.contains(e.slice(1)));)r=r.parentNode;else if("#"==s)for(;r&&(!t.isset(r.id)||r.id!=e.slice(1));)r=r.parentNode;else for(;r&&(!t.isset(r.nodeName)||r.nodeName.toLowerCase()!=e.toLowerCase());){if(t.isset(r.hasAttribute)&&r.hasAttribute(e)){if(t.isset(i)&&r.getAttribute(e)==i)break;break}r=r.parentNode}return r},e.prototype.toggle=function(){"none"==this.style.display||"hidden"==this.style.visibility?this.show():this.hide()},e.prototype.hide=function(){return this.style.display="none",this},e.prototype.show=function(){return this.cssRemove(["display"]),this},e.prototype.removeChildren=function(e={except:[]}){let t=[];(e=e||{}).except=e.except||[];let i=e.except;for(let s=0;s<i.length;s++){let e=this.findAll(i[s]);for(let i=0;i<e.length;i++)t.includes(e[i])||t.push(e[i])}return this.children.forEach(e=>{t.includes(e)||e.remove()}),this},e.prototype.delete=function(){t.isset(this.dataset.domKey)&&delete t.virtual[this.dataset.domKey],this.remove()},e.prototype.deleteChild=function(e){return e.delete(),this},e.prototype.toggleChildren=function(e={name:"",class:"",id:""}){Array.from(this.children).forEach(i=>{t.isset(e.name)&&e.name==i.nodeName||t.isset(e.class)&&t.hasArrayElement(Array.from(i.classList),e.class.split(" "))||t.isset(e.id)&&(e.id,i.id),i.toggle()})},e.prototype.attachElement=function(e,t="append"){this[t](e)},e.prototype.pressed=function(e=(()=>{})){let t=0,i=0;this.addMultipleEventListener("mousedown, touchstart",e=>{t=e.timeStamp}),this.addMultipleEventListener("mouseup, touchend",s=>{i=s.timeStamp,s.duration=i-t,e(s)})}}htmlCollectionLibrary(e=c){let t=this;e.prototype.popIndex=function(e=0){let i=t.createElement({element:"sample"}).children,s=Array.from(this);for(let t=0;t<s.length;t++)t!=e&&(i[t]=this.item(t),console.log(i));return i},e.prototype.forEach=function(e=(()=>{})){let t=Array.from(this);for(let i=0;i<t.length;i++)e(t[i],i)},e.prototype.each=function(e=(()=>{})){let t=Array.from(this);for(let i=0;i<t.length;i++)e(t[i],i)},e.prototype.indexOf=function(e){let t=Array.from(this);for(let i in t)if(t==e)return i;return-1},e.prototype.includes=function(e){return-1!=this.indexOf(e)},e.prototype.nodesBetween=function(e,t){let i=[],s=Array.from(this);for(let r of s)(r==e||r==t||r.isAncestor(e)||r.isAncestor(t))&&i.push(r);return i}}nodeLibrary(e=c){e.prototype.states={}}nodeListLibrary(e=c){e.prototype.each=function(e=(()=>{})){for(let t=0;t<this.length;t++)e(this[t],t)},e.prototype.indexOf=function(e){for(let t in this)if(this[t]==e)return t;return-1},e.prototype.includes=function(e){return-1!=this.indexOf(e)},e.prototype.nodesBetween=function(e,t){let i=[];for(let s of this)(s==e||s==t||s.isAncestor(e)||s.isAncestor(t))&&i.push(s);return i}}};var u=class extends d{constructor(e=class{}){super(e)}createTab(e={titles:[]}){var t=this.createElement({element:"ul",attributes:{class:"tab"}});for(var i of(e.view.append(t),e.titles))t.append(this.createElement({element:"li",attributes:{class:"tab-title"},text:i}));t.findAll("li").forEach(e=>{e.addEventListener("click",t=>{var i=this.urlSplitter(location.href);i.vars.tab=e.textContent.toLowerCase(),router.render({url:"?"+this.urlSplitter(this.urlMerger(i,"tab")).queries})})})}cell(e={element:"input",attributes:{},name:"",dataAttributes:{},value:"",text:"",html:"",edit:""}){var t,i=this.stringReplace(e.name," ","-")+"-cell",s=this.createElement({element:"label",attributes:{class:"cell-label"},text:e.name});let r;e.attributes=this.isset(e.attributes)?e.attributes:{},e.dataAttributes=this.isset(e.dataAttributes)?e.dataAttributes:{},e.dataAttributes.id=i,t="select"==e.element?{element:e.element,attributes:e.dataAttributes,children:[{element:"option",attributes:{disabled:"",selected:""},text:"Select "+e.name,value:""}]}:{element:e.element,attributes:e.dataAttributes,text:e.value},this.isset(e.value)&&(t.attributes.value=e.value),this.isset(e.options)&&(t.options=e.options),(r=e.element instanceof Element?e.element:this.createElement(t)).classList.add("cell-data"),this.isset(e.value)&&(r.value=e.value);let n,a=this.createElement({element:"div",attributes:e.attributes,children:[s,r]});return a.classList.add("cell"),this.isset(e.text)&&(r.textContent=e.text),this.isset(e.html)&&(r.innerHTML=e.html),this.isset(e.list)&&(a.makeElement({element:"datalist",attributes:{id:i+"-list"},options:e.list.sort()}),r.setAttribute("list",i+"-list")),this.isset(e.edit)&&(n=a.makeElement({element:"i",attributes:{class:""+e.edit,"data-icon":"fas, fa-pen",style:{cursor:"pointer",backgroundColor:"var(--primary-color)",width:"1em",height:"auto",position:"absolute",top:"0px",right:"0px",padding:".15em"}}}),a.css({position:"relative"})),a}message(e={link:"",text:"",temp:0}){var t=this.createElement({element:"span",attributes:{class:"alert"},children:[this.createElement({element:"a",text:e.text,attributes:{class:"text",href:e.link}}),this.createElement({element:"span",attributes:{class:"close"}})]});if(this.isset(e.temp))var i=setTimeout(()=>{t.remove(),clearTimeout(i)},""!=e.temp?1e3*e.time:5e3);t.find(".close").addEventListener("click",e=>{t.remove()}),body.find("#notification-block").append(t)}createTable(e={title:"",contents:{},projection:{},rename:{},sort:!1,search:!1,filter:[]}){let t,i=[],s={},r=0,n=this.createElement({element:"div",attributes:e.attributes});n.classList.add("kerdx-table");for(let c of e.contents){t=e.contents.indexOf(c);for(let t in c)-1==i.indexOf(t)&&(i.push(t),s[t]=n.makeElement({element:"column",attributes:{class:"kerdx-table-column","data-name":t},children:[{element:"span",attributes:{class:"kerdx-table-column-title","data-name":t},children:[{element:"p",attributes:{class:"kerdx-table-column-title-text"},text:t}]},{element:"div",attributes:{class:"kerdx-table-column-contents"}}]}),this.isset(e.sort)&&s[t].find(".kerdx-table-column-title").makeElement({element:"i",attributes:{class:"kerdx-table-column-title-sort","data-icon":"fas, fa-arrow-down"}}))}e.projection=e.projection||{};let a=Object.values(e.projection).includes(1);for(let c of i){for(let i of e.contents)t=e.contents.indexOf(i),s[c].find(".kerdx-table-column-contents").makeElement({element:"span",attributes:{class:"kerdx-table-column-cell","data-name":c,"data-value":i[c]||"","data-row":t},html:i[c]||""});-1==e.projection[c]||a&&!this.isset(e.projection[c])?s[c].css({display:"none"}):r++}n.css({gridTemplateColumns:`repeat(${r}, 1fr)`});let l=this.createElement({element:"div",attributes:{class:"kerdx-table-container"},children:[{element:"span",attributes:{class:"kerdx-table-titleandsearch"}},n]}),o=0;return this.isset(e.title)&&(l.find(".kerdx-table-titleandsearch").makeElement({element:"h5",attributes:{class:"kerdx-table-title"},text:e.title}),o++),this.isset(e.sort)&&(n.dataset.sort=!0),this.isset(e.search)&&(l.find(".kerdx-table-titleandsearch").makeElement({element:"input",attributes:{class:"kerdx-table-search",placeHolder:"Search table..."}}),o++),this.isset(e.filter)&&(l.find(".kerdx-table-titleandsearch").makeElement({element:"select",attributes:{class:"kerdx-table-filter"},options:e.filter}),o++),0==e.contents.length&&(n.textContent="Empty Table"),l.makeElement({element:"style",text:`\n            @media(min-width: 700px) {\n                .kerdx-table-titleandsearch {\n                  grid-template-columns: repeat(${o}, 1fr);\n                }\n              }\n        `}),l}getTableData(e){let t=[],i=e.findAll(".kerdx-table-column-cell");for(let s=0;s<i.length;s++){let{name:e,value:r,row:n}=i[s].dataset;t[n]=t[n]||{},t[n][e]=r}return t}sortTable(e,t="",i=1){let s=this.getTableData(e);return s.sort((e,s)=>(e=e[t],s=s[t],this.isNumber(e)&&this.isNumber(s)&&(e/=1,s/=1),i>-1?e>s?1:-1:e>s?-1:1)),s}listenTable(e={table:{},options:[]},t={click:()=>{},filter:()=>{}}){e.options=e.options||[],t=t||[];let i,s=e.table.find(".kerdx-table"),r=this.createElement({element:"span",attributes:{class:"kerdx-table-options"}}),n={view:"fas fa-eye",delete:"fas fa-trash",edit:"fas fa-pen",revert:"fas fa-history"};for(let b of e.options)i=n[b]||"fas fa-"+b,r.makeElement({element:"i",attributes:{class:i+" kerdx-table-option",id:"kerdx-table-option-"+b}});let a,l=s.findAll(".kerdx-table-column-title"),o=s.findAll(".kerdx-table-column"),c=[],d=o[0];if(this.isnull(d))return;for(let b=0;b<o.length;b++)if("none"!=o[b].css().display){a=o[b];break}let u,h,f,p=d.findAll(".kerdx-table-column-cell"),m=a.findAll(".kerdx-table-column-cell");for(let b=0;b<p.length;b++)c.push(p[b].dataset.row);if("true"==e.table.find(".kerdx-table").dataset.sort)for(let b=0;b<l.length;b++)l[b].addEventListener("mouseenter",e=>{l[b].find(".kerdx-table-column-title-sort").css({display:"unset"})}),l[b].addEventListener("mouseleave",e=>{l[b].find(".kerdx-table-column-title-sort").css({display:"none"})}),l[b].find(".kerdx-table-column-title-sort").addEventListener("click",t=>{let i;l[b].find(".kerdx-table-column-title-sort").toggleClasses("fas, fa-arrow-up"),l[b].find(".kerdx-table-column-title-sort").toggleClasses("fas, fa-arrow-down"),"up"==l[b].find(".kerdx-table-column-title-sort").dataset.direction?(l[b].find(".kerdx-table-column-title-sort").dataset.direction="down",i=1):(l[b].find(".kerdx-table-column-title-sort").dataset.direction="up",i=-1);let r=l[b].find(".kerdx-table-column-title-text").textContent,n=this.sortTable(e.table.find(".kerdx-table"),r,i),a=this.createTable({contents:n}).findAll(".kerdx-table-column");for(let e=0;e<a.length;e++)o[e].find(".kerdx-table-column-contents").innerHTML=a[e].find(".kerdx-table-column-contents").innerHTML;o=s.findAll(".kerdx-table-column"),g()});this.isnull(e.table.find(".kerdx-table-search"))||e.table.find(".kerdx-table-search").onChanged(e=>{g()}),this.isnull(e.table.find(".kerdx-table-filter"))||e.table.find(".kerdx-table-filter").onChanged(e=>{g()});let g=()=>{this.isnull(e.table.find(".kerdx-table-search"))||(h=e.table.find(".kerdx-table-search").value),this.isnull(e.table.find(".kerdx-table-filter"))||(f=e.table.find(".kerdx-table-filter").value);for(let e=0;e<c.length;e++){let i=!1;u=s.findAll(`.kerdx-table-column-cell[data-row="${e}"]`);for(let e=0;e<u.length;e++)u[e].cssRemove(["display"]);if(this.isset(f)&&0==i&&this.isset(t.filter)&&(i=t.filter(f,u)),this.isset(h)&&0==i){i=!0;for(let e=0;e<u.length;e++)if(u[e].textContent.toLowerCase().includes(h.toLowerCase())){i=!1;break}}if(i)for(let e=0;e<u.length;e++)u[e].css({display:"none"})}};this.isset(t.click)&&(s.addMultipleEventListener("mousedown, touchstart",i=>{let n=i.target;if(n.classList.contains("kerdx-table-option"))this.isset(t.click)&&t.click(i);else if(n.classList.contains("kerdx-table-column-cell")||!this.isnull(n.getParents(".kerdx-table-column-cell"))){n.classList.contains("kerdx-table-column-cell")||(n=n.getParents(".kerdx-table-column-cell"));let t=n.dataset.row;if(r.remove(),m[t].css({position:"relative"}),m[t].append(r),e.table.classList.contains("kerdx-selectable")){let i=s.findAll(`.kerdx-table-column-cell[data-row="${t}"]`);for(let e=0;e<i.length;e++)i[e].classList.toggle("kerdx-table-selected-row");r.remove(),n.classList.contains("kerdx-table-selected-row")||0==d.findAll(".kerdx-table-selected-row").length&&e.table.classList.remove("kerdx-selectable")}}}),s.pressed(t=>{let i=t.target;if(t.duration>300&&(i.classList.contains("kerdx-table-column-cell")||!this.isnull(i.getParents(".kerdx-table-column-cell")))){i.classList.contains("kerdx-table-column-cell")||(i=i.getParents(".kerdx-table-column-cell"));let t=i.dataset.row;if(0==d.findAll(".kerdx-table-selected-row").length&&!e.table.classList.contains("kerdx-selectable")){e.table.classList.add("kerdx-selectable");let i=s.findAll(`.kerdx-table-column-cell[data-row="${t}"]`);for(let e=0;e<i.length;e++)i[e].classList.add("kerdx-table-selected-row");r.remove()}}}))}createForm(e={element:"",title:"",columns:1,contents:{},required:[],buttons:{}}){let t,i=this.createElement({element:e.element||"form",attributes:e.attributes,children:[{element:"h3",attributes:{class:"kerdx-form-title"},text:e.title},{element:"section",attributes:{class:"kerdx-form-contents",style:{gridTemplateColumns:`repeat(${e.columns}, 1fr)`}}},{element:"section",attributes:{class:"kerdx-form-buttons"}}]});i.classList.add("kerdx-form"),this.isset(e.parent)&&e.parent.append(i);let s=i.find(".kerdx-form-contents");for(let r in e.contents){t=this.isset(e.contents[r].note)?`(${e.contents[r].note})`:"";let i=e.contents[r].label||this.camelCasedToText(r).toLowerCase(),n=s.makeElement({element:"div",attributes:{class:"kerdx-form-single-content"},children:[{element:"label",html:i,attributes:{class:"kerdx-form-label",for:r.toLowerCase()}}]}),a=n.makeElement(e.contents[r]);a.classList.add("kerdx-form-data"),this.isset(e.contents[r].note)&&n.makeElement({element:"span",text:e.contents[r].note,attributes:{class:"kerdx-form-note"}}),this.isset(e.required)&&e.required.includes(r)&&(a.required=!0)}for(let r in e.buttons)i.find(".kerdx-form-buttons").makeElement(e.buttons[r]);return i.makeElement({element:"span",attributes:{class:"kerdx-form-error"},state:{name:"error",owner:"#"+i.id}}),i}picker(e={title:"",contents:[]},t=(e=>{})){let i=this.createElement({element:"div",attributes:{class:"kerdx-picker"},children:[{element:"h3",attributes:{class:"kerdx-picker-title"},text:e.title||""},{element:"div",attributes:{class:"kerdx-picker-contents"}}]});for(let s of e.contents)i.find(".kerdx-picker-contents").makeElement({element:"span",attributes:{class:"kerdx-picker-single","data-name":s},text:s});return i.addEventListener("dblclick",e=>{e.target.classList.contains("kerdx-picker-single")&&t(e.target.dataset.name)}),i}popUp(e,t={title:"",attributes:{}}){let i=t.container||document.body,s=t.title||"";t.attributes=t.attributes||{},t.attributes.style=t.attributes.style||{},t.attributes.style.width=t.attributes.style.width||"50vw",t.attributes.style.height=t.attributes.style.height||"50vh";let r=this.createElement({element:"div",attributes:{class:"kerdx-pop-up"},children:[{element:"div",attributes:{id:"pop-up-window",class:"kerdx-pop-up-window"},children:[{element:"div",attributes:{id:"pop-up-menu",class:"kerdx-pop-up-menu"},children:[{element:"p",attributes:{id:"",style:{color:"inherit",padding:"1em"}},text:s},{element:"i",attributes:{id:"toggle-window",class:"kerdx-pop-up-control fas fa-expand-alt"}},{element:"i",attributes:{id:"close-window",class:"kerdx-pop-up-control fas fa-times"}}]},{element:"div",attributes:{id:"pop-up-content",class:"kerdx-pop-up-content"},children:[e]}]}]});return r.find("#pop-up-window").setAttributes(t.attributes),r.find("#toggle-window").addEventListener("click",e=>{r.find("#toggle-window").classList.toggle("fa-expand-alt"),r.find("#toggle-window").classList.toggle("fa-compress-alt"),r.find("#toggle-window").classList.contains("fa-expand-alt")?r.find("#pop-up-window").css({height:t.attributes.style.height,width:t.attributes.style.width}):r.find("#pop-up-window").css({height:"var(--fill-parent)",width:"var(--fill-parent)"})}),r.find("#close-window").addEventListener("click",e=>{r.remove()}),i.append(r),r}createSelect(e={value:"",contents:{},multiple:!1}){let t,i=[],s=!1,r=-1,n=this.createElement({element:"div",attributes:e.attributes,children:[{element:"span",attributes:{class:"kerdx-select-control"},children:[{element:"input",attributes:{class:"kerdx-select-input",value:e.value||"",ignore:!0}},{element:"span",attributes:{class:"kerdx-select-toggle"}}]},{element:"input",attributes:{class:"kerdx-select-search",placeHolder:"Search me...",ignore:!0}},{element:"span",attributes:{class:"kerdx-select-contents"}}]});n.classList.add("kerdx-select");let a=n.getAttribute("value");n.value=[],this.isnull(a)||(n.value=this.array.findAll(a.split(","),e=>""!=e.trim())),n.dataset.active="false";let l=n.find(".kerdx-select-contents"),o=n.find(".kerdx-select-input"),c=n.find(".kerdx-select-search"),d=n.find(".kerdx-select-toggle");if(e.contents=e.contents||{},Array.isArray(e.contents)){let t=e.contents;e.contents={};for(let i=0;i<t.length;i++)e.contents[t[i]]=t[i]}for(let v in e.contents){let t=l.makeElement({element:"span",attributes:{class:"kerdx-select-option",value:v}});t.innerHTML=e.contents[v],t.value=v}for(let v of n.value)o.value+=e.contents[v],o.dispatchEvent(new CustomEvent("change"));let u=!this.isset(e.multiple)||0==e.multiple,h=n.findAll(".kerdx-select-option");c.onChanged(e=>{for(let t=0;t<h.length;t++)h[t].textContent.toLowerCase().includes(e.toLowerCase())?h[t].cssRemove(["display"]):h[t].css({display:"none"})});let f,p,m=e=>{s=!1,"ArrowDown"==e.key&&r<h.length-1?(r++,s=!0):"ArrowUp"==e.key&&r>0?(r--,s=!0):e.key,s&&(t=l.find(".kerdx-select-active-option"),this.isnull(t)||t.classList.remove("kerdx-select-active-option"),h[r].classList.add("kerdx-select-active-option"))};d.addEventListener("click",e=>{let t="true"==n.dataset.active;t?y(t):b(t)}),document.body.css({overflow:"auto"});let g=()=>{f=n.position().top,p=document.body.clientHeight-n.position().top,f>p?l.css({top:-l.position().height+"px"}):l.css({top:n.position().height+"px"})},b=()=>{n.inView("body")&&(o.addEventListener("keydown",m,!1),c.css({display:"flex"}),l.css({display:"flex"}),g(),n.dataset.active="true")},y=()=>{o.removeEventListener("keydown",m,!1),c.cssRemove(["display"]),l.cssRemove(["display"]),n.dataset.active="false"};return n.bubbledEvent("click",t=>{if(t.target!=d&&"false"==n.dataset.active&&b(),t.target.classList.contains("kerdx-select-option")){let i=e.contents[t.target.value];"single"==e.multiple&&o.value.includes(i)?o.value=o.value.replace(i,""):o.value+=", "+i,o.dispatchEvent(new CustomEvent("change")),u&&y()}}),n.notBubbledEvent("click",e=>{"true"==n.dataset.active&&y()}),o.addEventListener("change",t=>{let s=o.value.split(",");s=this.array.findAll(s,e=>""!=e.trim()),s=this.array.each(s,e=>e.trim()),u||"single"==e.multiple&&(s=this.array.toSet(s)),(t=>{i=[],t=t.split(",");for(let s of t){s=s.trim();for(let t in e.contents)e.contents[t]==s&&(s=t);i.push(s)}n.value=i,o.value=t})(s=s.join(", "))}),window.addEventListener("scroll",e=>{n.inView("body")&&g()}),n}choose(e={note:"",options:[]}){let t=this.createElement({element:"span",attributes:{class:"crater-choose"},children:[{element:"p",attributes:{class:"crater-choose-note"},text:e.note},{element:"span",attributes:{class:"crater-choose-control"}},{element:"button",attributes:{id:"crater-choose-close",class:"btn"},text:"Close"}]}),i=t.querySelector(".crater-choose-control");t.querySelector("#crater-choose-close").addEventListener("click",e=>{t.remove()});for(let s of e.options)i.makeElement({element:"button",attributes:{class:"btn choose-option"},text:s});return{display:t,choice:new Promise((e,s)=>{i.addEventListener("click",i=>{i.target.classList.contains("choose-option")&&(e(i.target.textContent),t.remove())})})}}textEditor(e={id:"",width:"max-width"}){(e=e||{}).id=e.id||"text-editor";let t=this.createElement({element:"div",attributes:{id:e.id},children:[{element:"style",text:`\n\n                    div#crater-text-editor{\n                        margin: 0 auto;\n                        display: grid;\n                        width: ${e.width||"max-content"};\n                        height: max-content;\n                        border: 2px solid rgb(40, 110, 89);\n                        border-radius: 8px 8px 0px 0px;\n                        background-color: var(--primary-color);\n                    }\n                    \n                    div#crater-rich-text-area{\n                        height: 100%;\n                        width: 100%;\n                    }\n\n                    div#crater-the-ribbon{\n                        border-bottom: none;\n                        width: 100%;\n                        padding: .5em 0;\n                        display: grid;\n                        grid-template-rows: max-content max-content;\n                        background-color: rgb(40, 110, 89);\n                        color: var(--primary-color);\n                        text-align: left;\n                    }\n\n                    iframe#crater-the-WYSIWYG{\n                        height: 100%;\n                        width: 100%;\n                    }\n\n                    div#crater-the-ribbon button{\n                        color: var(--primary-color);\n                        border: none;\n                        outline: none;\n                        background-color: transparent;\n                        cursor: pointer;\n                        padding: .3em;\n                        margin: .5em;\n                    }\n\n                    div#crater-the-ribbon button:hover{\n                        background-color: rgb(20, 90, 70);\n                        transition: all 0.3s linear 0s;\n                    }\n\n                    div#crater-the-ribbon input,  div#crater-the-ribbon select{\n                        margin: .5em;\n                    }\n\n                    div#crater-the-ribbon input[type="color"]{\n                        border: none;\n                        outline: none;\n                        background-color: transparent;\n                    }\n                `},{element:"div",attributes:{id:"crater-the-ribbon"},children:[{element:"span",children:[{element:"button",attributes:{id:"undoButton",title:"Undo"},text:"&larr;"},{element:"button",attributes:{id:"redoButton",title:"Redo"},text:"&rarr;"},{element:"select",attributes:{id:"fontChanger"},options:this.fontStyles},{element:"select",attributes:{id:"fontSizeChanger"},options:this.range(1,20)},{element:"button",attributes:{id:"orderedListButton",title:"Numbered List"},text:"(i)"},{element:"button",attributes:{id:"unorderedListButton",title:"Bulletted List"},text:"&bull;"},{element:"button",attributes:{id:"linkButton",title:"Create Link"},text:"Link"},{element:"button",attributes:{id:"unLinkButton",title:"Remove Link"},text:"Unlink"}]},{element:"span",children:[{element:"button",attributes:{id:"boldButton",title:"Bold"},children:[{element:"b",text:"B"}]},{element:"button",attributes:{id:"italicButton",title:"Italic"},children:[{element:"em",text:"I"}]},{element:"button",attributes:{id:"underlineButton",title:"Underline"},children:[{element:"u",text:"U"}]},{element:"button",attributes:{id:"supButton",title:"Superscript"},children:[{element:"sup",text:"2"}]},{element:"button",attributes:{id:"subButton",title:"Subscript"},children:[{element:"sub",text:"2"}]},{element:"button",attributes:{id:"strikeButton",title:"Strikethrough"},children:[{element:"s",text:"abc"}]},{element:"input",attributes:{type:"color",id:"fontColorButton",title:"Change Font Color",value:"#000000"}},{element:"input",attributes:{type:"color",id:"highlightButton",title:"Hightlight Text",value:"#ffffff"}},{element:"input",attributes:{type:"color",id:"backgroundButton",title:"Change Background",value:"#ffffff"}},{element:"button",attributes:{id:"alignLeftButton",title:"Align Left"},children:[{element:"a",text:"L"}]},{element:"button",attributes:{id:"alignCenterButton",title:"Align Center"},children:[{element:"a",text:"C"}]},{element:"button",attributes:{id:"alignJustifyButton",title:"Align Justify"},children:[{element:"a",text:"J"}]},{element:"button",attributes:{id:"alignRightButton",title:"Align Right"},children:[{element:"a",text:"R"}]}]}]},{element:"div",attributes:{id:"crater-rich-text-area"},children:[{element:"iframe",attributes:{id:"crater-the-WYSIWYG",frameBorder:0,name:"theWYSIWYG"}}]}]});t.findAll("select#font-changer > option").forEach(e=>{e.css({fontFamily:e.value})}),t.find("#unorderedListButton").innerHTML="&bull;",t.find("#redoButton").innerHTML="&rarr;",t.find("#undoButton").innerHTML="&larr;";let i=this,s=t.find("#crater-the-WYSIWYG");return s.onAdded(()=>{let r=s.contentWindow.document;r.body.innerHTML="",i.isset(e.content)&&(r.body.innerHTML=e.content.innerHTML),r.designMode="on",t.find("#boldButton").addEventListener("click",()=>{r.execCommand("Bold",!1,null)},!1),t.find("#italicButton").addEventListener("click",()=>{r.execCommand("Italic",!1,null)},!1),t.find("#underlineButton").addEventListener("click",()=>{r.execCommand("Underline",!1,null)},!1),t.find("#supButton").addEventListener("click",()=>{r.execCommand("Superscript",!1,null)},!1),t.find("#subButton").addEventListener("click",()=>{r.execCommand("Subscript",!1,null)},!1),t.find("#strikeButton").addEventListener("click",()=>{r.execCommand("Strikethrough",!1,null)},!1),t.find("#orderedListButton").addEventListener("click",()=>{r.execCommand("InsertOrderedList",!1,"newOL"+i.random())},!1),t.find("#unorderedListButton").addEventListener("click",()=>{r.execCommand("InsertUnorderedList",!1,"newUL"+i.random())},!1),t.find("#fontColorButton").onChanged(e=>{r.execCommand("ForeColor",!1,e)}),t.find("#highlightButton").onChanged(e=>{r.execCommand("BackColor",!1,e)}),t.find("#backgroundButton").onChanged(e=>{r.body.style.background=e}),t.find("#fontChanger").onChanged(e=>{r.execCommand("FontName",!1,e)}),t.find("#fontSizeChanger").onChanged(e=>{r.execCommand("FontSize",!1,e)}),t.find("#linkButton").addEventListener("click",()=>{let e=prompt("Enter a URL","http://");i.isnull(e)||r.execCommand("CreateLink",!1,e)},!1),t.find("#unLinkButton").addEventListener("click",()=>{r.execCommand("UnLink",!1,null)},!1),t.find("#undoButton").addEventListener("click",()=>{r.execCommand("Undo",!1,null)},!1),t.find("#redoButton").addEventListener("click",()=>{r.execCommand("redo",!1,null)},!1),t.find("#alignLeftButton").addEventListener("click",()=>{r.execCommand("justifyLeft",!1,null)}),t.find("#alignCenterButton").addEventListener("click",()=>{r.execCommand("justifyCenter",!1,null)}),t.find("#alignJustifyButton").addEventListener("click",()=>{r.execCommand("justifyFull",!1,null)}),t.find("#alignRightButton").addEventListener("click",()=>{r.execCommand("justifyRight",!1,null)})},!1),t}displayData(e={},t){let i=[],s=e=>this.createElement({element:"span",attributes:{class:"kerdx-data-str"},text:`"${e}"`}),r=e=>this.createElement({element:"span",attributes:{class:"kerdx-data-lit"},text:""+e}),n=e=>this.createElement({element:"span",attributes:{class:"kerdx-data-pun"},text:""+e}),a=(e,t)=>{t=t||{};let r=this.createElement({element:"span",attributes:{class:"kerdx-data-item"}});return i.push(r),this.isset(t.key)?r.makeElement([s(t.key),n(" : "),c(e)]):r.makeElement([c(e)]),r},l=e=>{let t,s=this.createElement({element:"span",attributes:{class:"kerdx-data-block"}});i.push(s),s.makeElement(n("["));for(let i=0;i<e.length;i++)t=s.makeElement(a(e[i])),i!=e.length-1&&t.makeElement(n(","));return s.makeElement(n("]")),s},o=e=>{let t,s=this.createElement({element:"span",attributes:{class:"kerdx-data-block"}});i.push(s),s.makeElement(n("{"));let r=0;for(let i in e)t=s.makeElement(a(e[i],{key:i})),r!=Object.keys(e).length-1&&t.makeElement(n(",")),r++;return s.makeElement(n("}")),s},c=e=>"string"==typeof e?s(e):Array.isArray(e)?l(e):"object"==typeof e?o(e):r(e),d=this.createElement({element:"pre",attributes:{class:"kerdx-data-window"},children:[{element:"span",attributes:{class:"kerdx-data-line",style:{lineHeight:"25px"}}},{element:"span",attributes:{class:"kerdx-data-toggles"}},{element:"code",attributes:{class:"kerdx-data-code",style:{lineHeight:"25px"}},children:[c(e)]}]});this.isset(t)&&t.append(d);let u,h,f=d.find(".kerdx-data-code"),p=(f.position().height,d.find(".kerdx-data-line")),m=d.find(".kerdx-data-toggles"),g=(parseInt("25px"),f.findAll(".kerdx-data-item"),f.findAll(".kerdx-data-block")),b=e=>{let t=Math.floor((e.position().top-f.position().top)/parseInt("25px"))+1,i=Math.floor((e.position().bottom-f.position().top)/parseInt("25px"))+1;e.range=this.range(i,t)},y=e=>{for(let t=0;t<e.range.length;t++)this.isset(u[e.range[t]].controller)||(u[e.range[t]].css({display:"none"}),u[e.range[t]].controller=e)},v=e=>{let t=e.children;for(let i=0;i<t.length;i++)t[i].classList.contains("kerdx-data-item")&&(t[i].css({display:"none"}),t[i].findAll(".kerdx-data-block").forEach(t=>{this.isset(t.toggle.controller)||(t.toggle.controller=e,t.toggle.css({display:"none"}))}))};return i.push(void 0),d.onAdded(e=>{(()=>{for(let e=0;e<i.length;e++)p.makeElement([{element:"a",html:""+(e/1+1),attributes:{class:"kerdx-data-line-number"}}])})(),(()=>{for(let e=0;e<g.length;e++){let t=g[e].position().top-f.position().top+6+"px",i=m.makeElement({element:"i",attributes:{class:"kerdx-data-toggles-button fas fa-arrow-down",style:{top:t}}});i.block=g[e],g[e].toggle=i}})(),u=p.findAll(".kerdx-data-line-number"),h=m.findAll(".kerdx-data-toggles-button"),d.addEventListener("click",e=>{let t=e.target;t.classList.contains("kerdx-data-toggles-button")&&(this.isset(t.block.range)||b(t.block),t.classList.contains("fa-arrow-down")?(y(t.block),v(t.block)):((e=>{for(let t=0;t<e.range.length;t++)u[e.range[t]].controller==e&&(u[e.range[t]].cssRemove(["display"]),delete u[e.range[t]].controller)})(t.block),(e=>{let t=e.children;for(let i=0;i<t.length;i++)t[i].classList.contains("kerdx-data-item")&&(t[i].cssRemove(["display"]),t[i].findAll(".kerdx-data-block").forEach(t=>{t.toggle.controller==e&&(delete t.toggle.controller,t.toggle.cssRemove(["display"]))}))})(t.block)),t.classList.toggle("fa-arrow-up"),t.classList.toggle("fa-arrow-down"),(()=>{for(let e=0;e<h.length;e++)h[e].css({top:h[e].block.position().top-f.position().top+6+"px"})})())})}),d}},h=function(){let t={};return t.func=new e,t.elementModifier=new d,t.elementModifier.elementLibrary(),t.colorIndicatorPosition={x:0,y:0},t.opacityIndicatorPosition={x:0,y:0},t.convertTo="RGB",t.init=e=>(t.picker=t.elementModifier.createElement({element:"div",attributes:{class:"color-picker"},children:[{element:"span",attributes:{id:"color-picker-setters"},children:[{element:"span",attributes:{id:"color-picker-colors-window"},children:[{element:"canvas",attributes:{id:"color-picker-colors"}},{element:"span",attributes:{id:"color-picker-color-indicator"}}]},{element:"span",attributes:{id:"color-picker-opacities-window"},children:[{element:"canvas",attributes:{id:"color-picker-opacities"}},{element:"span",attributes:{id:"color-picker-opacity-indicator"}}]}]},{element:"div",attributes:{id:"color-picker-result"},children:[{element:"span",attributes:{id:"picked-color"}},{element:"span",attributes:{id:"picked-color-window"},children:[{element:"select",attributes:{id:"picked-color-setter"},options:["RGB","HEX","HSL"]},{element:"span",attributes:{id:"picked-color-value"}}]}]}]}),t.colorWindow=t.picker.find("#color-picker-colors-window"),t.opacityWindow=t.picker.find("#color-picker-opacities-window"),t.colorCanvas=t.picker.find("#color-picker-colors"),t.opacityCanvas=t.picker.find("#color-picker-opacities"),t.colorMarker=t.picker.find("#color-picker-color-indicator"),t.opacityMarker=t.picker.find("#color-picker-opacity-indicator"),t.width=e.width,t.height=e.height,t.pickedColor=e.color||"rgb(0, 0, 0)",t.colorWindow.css({height:t.height+"px"}),t.colorCanvas.width=t.width,t.colorCanvas.height=t.height,t.opacityWindow.css({height:t.height+"px"}),t.opacityCanvas.height=t.height,t.opacityCanvas.width=20,t.colorContext=t.colorCanvas.getContext("2d"),t.opacityContext=t.opacityCanvas.getContext("2d"),t.picker.find("#picked-color-value").innerText=t.pickedColor,t.picker.find("#picked-color-setter").onChanged(e=>{t.convertTo=e,t.reply()}),t.listen(),t.picker),t.calibrateColor=()=>{let e=t.colorContext.createLinearGradient(0,0,t.width,0);e.addColorStop(0,"rgb(255, 0, 0)"),e.addColorStop(.15,"rgb(255, 0, 255)"),e.addColorStop(.33,"rgb(0, 0, 255)"),e.addColorStop(.49,"rgb(0, 255, 255)"),e.addColorStop(.67,"rgb(0, 255, 0)"),e.addColorStop(.87,"rgb(255, 255, 0)"),e.addColorStop(1,"rgb(255, 0, 0)"),t.colorContext.fillStyle=e,t.colorContext.fillRect(0,0,t.width,t.height),(e=t.colorContext.createLinearGradient(0,0,0,t.height)).addColorStop(0,"rgba(255, 255, 255, 1)"),e.addColorStop(.5,"rgba(255, 255, 255, 0)"),e.addColorStop(.5,"rgba(0, 0, 0, 0)"),e.addColorStop(1,"rgba(0, 0, 0, 1)"),t.colorContext.fillStyle=e,t.colorContext.fillRect(0,0,t.width,t.height)},t.calibrateOpacity=()=>{let e;t.opacityContext.clearRect(0,0,t.opacityCanvas.width,t.height);let i=t.opacityContext.createLinearGradient(0,0,0,t.opacityCanvas.height);for(let s=100;s>=0;s--)e=t.addOpacity(t.pickedColor,s/100),i.addColorStop(s/100,e);t.opacityContext.fillStyle=i,t.opacityContext.clearRect(0,0,t.opacityCanvas.width,t.opacityCanvas.height),t.opacityContext.fillRect(0,0,t.opacityCanvas.width,t.opacityCanvas.height)},t.listen=()=>{let e=!1,i=!1;t.picker.notBubbledEvent("click",s=>{!t.added||e||i||t.dispose()}),t.colorCanvas.addEventListener("mousedown",i=>{let s=i.clientX-t.colorCanvas.getBoundingClientRect().left,r=i.clientY-t.colorCanvas.getBoundingClientRect().top;e=s>0&&s<t.colorCanvas.getBoundingClientRect().width&&r>0&&r<t.colorCanvas.getBoundingClientRect().height}),t.colorCanvas.addEventListener("mousemove",i=>{if(e){t.colorIndicatorPosition.x=i.clientX-t.colorCanvas.getBoundingClientRect().left,t.colorIndicatorPosition.y=i.clientY-t.colorCanvas.getBoundingClientRect().top,t.colorMarker.css({top:t.colorIndicatorPosition.y+"px",left:t.colorIndicatorPosition.x+"px"});let e=t.getPickedColor();t.pickedColor=`rgb(${e.r}, ${e.g}, ${e.b})`,t.reply()}}),t.colorCanvas.addEventListener("mouseup",i=>{e=!1,t.calibrateOpacity()}),t.opacityCanvas.addEventListener("mousedown",e=>{let s=e.clientX-t.opacityCanvas.getBoundingClientRect().left,r=e.clientY-t.opacityCanvas.getBoundingClientRect().top;i=s>0&&s<t.opacityCanvas.getBoundingClientRect().width&&r>0&&r<t.opacityCanvas.getBoundingClientRect().height}),t.opacityCanvas.addEventListener("mousemove",e=>{if(i){t.opacityIndicatorPosition.x=e.clientX-t.opacityCanvas.getBoundingClientRect().left,t.opacityIndicatorPosition.y=e.clientY-t.opacityCanvas.getBoundingClientRect().top,t.opacityMarker.css({top:t.opacityIndicatorPosition.y+"px"});let i=t.getPickedOpacity();t.pickedColor=`rgb(${i.r}, ${i.g}, ${i.b}, ${i.a})`,t.reply()}}),t.opacityCanvas.addEventListener("mouseup",e=>{i=!1})},t.reply=()=>{t.converColor(),t.picker.dispatchEvent(new CustomEvent("colorChanged")),t.picker.find("#picked-color").css({backgroundColor:t.convertedColor}),t.picker.find("#picked-color-value").innerText=t.convertedColor},t.converColor=()=>{"HEX"==t.convertTo?t.convertedColor=t.rgbToHex(t.pickedColor):"HSL"==t.convertTo?t.convertedColor=t.rgbToHSL(t.pickedColor):"RGB"==t.convertTo&&(t.convertedColor=t.pickedColor)},t.onChanged=e=>{t.picker.addEventListener("colorChanged",i=>{e(t.convertedColor)})},t.getPickedColor=()=>{let e=t.colorContext.getImageData(t.colorIndicatorPosition.x,t.colorIndicatorPosition.y,1,1);return{r:e.data[0],g:e.data[1],b:e.data[2]}},t.getPickedOpacity=()=>{let e=t.opacityContext.getImageData(t.opacityIndicatorPosition.x,t.opacityIndicatorPosition.y,1,1),i=Math.ceil(e.data[3]/255*100)/100;return{r:e.data[0],g:e.data[1],b:e.data[2],a:i}},t.draw=e=>{t.init(e),t.calibrateColor(),t.calibrateOpacity();let i=setTimeout(()=>{t.added=!0,clearTimeout(i)},2e3);return t.picker},t.dispose=()=>{clearInterval(t.interval),t.picker.remove()},t.colorType=(e="#ffffff")=>{let i="string";if(0==e.indexOf("#")&&(e.length-1)%3==0)i="hex";else if(0==e.indexOf("rgba")){let s=t.func.inBetween(e,"rgba(",")");-1!=s&&4==s.split(",").length&&(i="rgba")}else if(0==e.indexOf("rgb")){let s=t.func.inBetween(e,"rgb(",")");-1!=s&&3==s.split(",").length&&(i="rgb")}else if(0==e.indexOf("hsla")){let s=t.func.inBetween(e,"hsla(",")");-1!=s&&4==s.split(",").length&&(i="hsla")}else if(0==e.indexOf("hsl")){let s=t.func.inBetween(e,"hsl(",")");-1!=s&&3==s.split(",").length&&(i="hsl")}return i},t.hexToRGB=(e="#ffffff",t=!0)=>{let i=0,s=0,r=0,n=255;return 4==e.length?(i="0x"+e[1]+e[1],s="0x"+e[2]+e[2],r="0x"+e[3]+e[3]):5==e.length?(i="0x"+e[1]+e[1],s="0x"+e[2]+e[2],r="0x"+e[3]+e[3],n="0x"+e[4]+e[4]):7==e.length?(i="0x"+e[1]+e[2],s="0x"+e[3]+e[4],r="0x"+e[5]+e[6]):9==e.length&&(i="0x"+e[1]+e[2],s="0x"+e[3]+e[4],r="0x"+e[5]+e[6],n="0x"+e[7]+e[8]),n=+(n/255).toFixed(3),0==t?`rgb(${+i}, ${+s}, ${+r})`:`rgb(${+i}, ${+s}, ${+r}, ${n})`},t.hexToHSL=(e="#ffffff",i=!0)=>{let s=t.hexToRGB(e,i);return t.rgbToHSL(s,i)},t.rgbToHex=(e="rgb(0, 0, 0)",i=!0)=>{let s=e.indexOf("(")+1,r=e.indexOf(")"),[n,a,l,o]=e.slice(s,r).split(",");return t.func.isset(o)||(o=1),n=(+n).toString(16),a=(+a).toString(16),l=(+l).toString(16),o=Math.round(255*o).toString(16),1==n.length&&(n="0"+n),1==a.length&&(a="0"+a),1==l.length&&(l="0"+l),1==o.length&&(o="0"+o),"#"+(0!=i?`${n}${a}${l}${o}`:`${n}${a}${l}`)},t.rgbToHSL=(e="rgb(0, 0, 0)",i=!0)=>{let s=e.indexOf("(")+1,r=e.indexOf(")"),[n,a,l,o]=e.slice(s,r).split(",");console.log(n,a,l),t.func.isset(o)||(o=1),n/=225,a/=225,l/=225;let c=Math.min(n,a,l),d=Math.max(n,a,l),u=d-c,h=0,f=0,p=0;return 0==u?h=0:d==n?h=(a-l)/u%6:d==a?h=(l-n)/u+2:d==a&&(h=(n-a)/u+4),(h=Math.round(60*h))<0&&(h+=360),p=(d+c)/2,f=0==u?0:u/(1-Math.abs(2*p-1)),p=+(100*p).toFixed(1),f=+(100*f).toFixed(1),"hsl"+(0==i?`(${h}, ${f}%, ${p}%)`:`(${h}, ${f}%, ${p}%, ${o})`)},t.hslToRGB=(e="hsl(0, 0%, 0%)",i=!0)=>{let s="rgb",r=e.indexOf("(")+1,n=e.indexOf(")"),[a,l,o,c]=e.slice(r,n).split(",");t.func.isset(c)||(c=1),console.log(a,l,o),a.indexOf("deg")>-1?a=a.substr(0,a.length-3):a.indexOf("rad")>-1?a=Math.round(a.substr(0,a.length-3)*(180/Math.PI)):a.indexOf("turn")>-1&&(a=Math.round(360*a.substr(0,a.length-4))),a>=360&&(a%=360),l=l.replace("%","")/100,o=o.replace("%","")/100;let d=(1-Math.abs(2*o-1))*l,u=d*(1-Math.abs(a/60%2-1)),h=o-d/2,f=0,p=0,m=0;return 0<=a&&a<60?(f=d,p=u,m=0):60<=a&&a<120?(f=u,p=d,m=0):120<=a&&a<180?(f=0,p=d,m=u):180<=a&&a<240?(f=0,p=u,m=d):240<=a&&a<300?(f=u,p=0,m=d):300<=a&&a<360&&(f=d,p=0,m=u),f=Math.round(255*(f+h)),p=Math.round(255*(p+h)),m=Math.round(255*(m+h)),s+(0==i?`(${f}, ${p}, ${m})`:`(${f}, ${p}, ${m}, ${c})`)},t.hslToHex=(e="",i=!0)=>{let s=t.hslToRGB(e,i);return t.rgbToHex(s,i)},t.addOpacity=(e="rgb(0, 0, 0)",t=.5)=>{let i=e.indexOf("(")+1,s=e.indexOf(")"),r=e.slice(i,s).split(",");return r[3]=t,`rgba(${r.join(",")})`},t.getOpacity=(e="rgb(0, 0, 0)")=>{e=t.func.inBetween(e,"(",")");let[i,s,r,n]=e.split(",");return n.trim()},t.invertColor=(e="#ffffff")=>{let i,s=t.colorType(e);if("hex"==s)e=e.replace("#",""),i="#"+t.invertHex(e);else if("rgb"==s)e=t.rgbToHex(e).replace("#",""),i=t.invertHex(e),i=t.hexToRGB(i);else if("rgba"==s){let s=t.getOpacity(e);e=t.rgbToHex(e).replace("#",""),i=t.invertHex(e),i=t.hexToRGB(i),i=t.addOpacity(i,s)}return i},t.invertHex=(e="ffffff")=>(16777215^Number("0x1"+e)).toString(16).substr(1).toUpperCase(),t};var f={"address-book":"fas, fa-address-book",amazon:"fas, fa-amazon",ambulance:"fas, fa-ambulance",android:"fas, fa-android",apple:"fas, fa-apple",asterisk:"fas, fa-asterisk",at:"fas, fa-at",backward:"fas, fa-backward",bank:"fas, fa-bank",battery:"fas, fa-battery",bed:"fas, fa-bed",bell:"fas, fa-bell",bicycle:"fas, fa-bicycle","birthday-cake":"fas, fa-birthday-cake",bitbucket:"fas, fa-bitbucket",bitcoin:"fas, fa-bitcoin",bluetooth:"fas, fa-bluetooth",bolt:"fas, fa-bolt",book:"fas, fa-book",bus:"fas, fa-bus",cab:"fas, fa-cab",calculator:"fas, fa-calculator",camera:"fas, fa-camera",car:"fas, fa-car",certificate:"fas, fa-certificate",child:"fas, fa-child",chrome:"fas, fa-chrome",cloud:"fas, fa-cloud",coffee:"fas, fa-coffee",comment:"fas, fa-comment",compass:"fas, fa-compass",copy:"fas, fa-copy",copyright:"fas, fa-copyright",clone:"fas, fa-clone","credit-card":"fas, fa-credit-card",cube:"fas, fa-cube",desktop:"fas, fa-desktop",diamond:"fas, fa-diamond",download:"fas, fa-download","drivers-license":"fas, fa-drivers-license",dropbox:"fas, fa-dropbox",drupal:"fas, fa-drupal",edge:"fas, fa-edge",edit:"fas, fa-edit",eject:"fas, fa-eject","ellipsis-h":"fas, fa-ellipsis-h",envelope:"fas, fa-envelope",eraser:"fas, fa-eraser",exchange:"fas, fa-exchange",exclamation:"fas, fa-exclamation",expand:"fas, fa-expand",eye:"fas, fa-eye","eye-slash":"fas, fa-eye-slash",fax:"fas, fa-fax",female:"fas, fa-female",file:"fas, fa-file",film:"fas, fa-film",fire:"fas, fa-fire",flag:"fas, fa-flag",flickr:"fas, fa-flickr",folder:"fas, fa-folder",forward:"fas, fa-forward",foursquare:"fas, fa-foursquare",gift:"fas, fa-gift",glass:"fas, fa-glass",globe:"fas, fa-globe",google:"fas, fa-google","graduation-cap":"fas, fa-graduation-cap",group:"fas, fa-group",hashtag:"fas, fa-hashtag",headphones:"fas, fa-headphones",heart:"fas, fa-heart",history:"fas, fa-history",home:"fas, fa-home",hotel:"fas, fa-hotel",hourglass:"fas, fa-hourglass",image:"fas, fa-image",imdb:"fas, fa-imdb",inbox:"fas, fa-inbox",industry:"fas, fa-industry",info:"fas, fa-info",instagram:"fas, fa-instagram",key:"fas, fa-key",language:"fas, fa-language",laptop:"fas, fa-laptop",leaf:"fas, fa-leaf",legal:"fas, fa-legal","life-bouy":"fas, fa-life-bouy",linkedin:"fas, fa-linkedin",linux:"fas, fa-linux",lock:"fas, fa-lock",magic:"fas, fa-magic",magnet:"fas, fa-magnet",male:"fas, fa-male",map:"fas, fa-map",microphone:"fas, fa-microphone",mobile:"fas, fa-mobile",money:"fas, fa-money",motorcycle:"fas, fa-motorcycle",music:"fas, fa-music",opera:"fas, fa-opera","paint-brush":"fas, fa-paint-brush","paper-plane":"fas, fa-paper-plane",pause:"fas, fa-pause",paw:"fas, fa-paw",paypal:"fas, fa-paypal",pen:"fas, fa-pen",pencil:"fas, fa-pencil",phone:"fas, fa-phone",photo:"fas, fa-photo",pinterest:"fas, fa-pinterest",plane:"fas, fa-plane",play:"fas, fa-play",plug:"fas, fa-plug",plus:"fas, fa-plus",podcast:"fas, fa-podcast",question:"fas, fa-question",quora:"fas, fa-quora",recycle:"fas, fa-recycle",reddit:"fas, fa-reddit",redo:"fas, fa-redo",refresh:"fas, fa-refresh",reply:"fas, fa-reply",resistance:"fas, fa-resistance",retweet:"fas, fa-retweet",road:"fas, fa-road",rocket:"fas, fa-rocket",rss:"fas, fa-rss",safari:"fas, fa-safari",scribe:"fas, fa-scribe",search:"fas, fa-search",send:"fas, fa-send",server:"fas, fa-server",ship:"fas, fa-ship","sign-in":"fas, fa-sign-in",sitemap:"fas, fa-sitemap",skyatlas:"fas, fa-skyatlas",skype:"fas, fa-skype",slideshare:"fas, fa-slideshare",snapchat:"fas, fa-snapchat",sort:"fas, fa-sort",soundcloud:"fas, fa-soundcloud",spoon:"fas, fa-spoon",spotify:"fas, fa-spotify",square:"fas, fa-square","stack-exchange":"fas, fa-stack-exchange",star:"fas, fa-star",steam:"fas, fa-steam","sticky-note":"fas, fa-sticky-note",stop:"fas, fa-stop","street-view":"fas, fa-street-view",subway:"fas, fa-subway",suitcase:"fas, fa-suitcase",support:"fas, fa-support",tasks:"fas, fa-tasks",taxi:"fas, fa-taxi",telegram:"fas, fa-telegram",television:"fas, fa-television",terminal:"fas, fa-terminal",thermometer:"fas, fa-thermometer",ticket:"fas, fa-ticket",times:"fas, fa-times",train:"fas, fa-train",trash:"fas, fa-trash",tree:"fas, fa-tree",trophy:"fas, fa-trophy",truck:"fas, fa-truck",tumblr:"fas, fa-tumblr",tv:"fas, fa-tv",twitter:"fas, fa-twitter",umbrella:"fas, fa-umbrella",university:"fas, fa-university",unlock:"fas, fa-unlock",upload:"fas, fa-upload",usb:"fas, fa-usb",user:"fas, fa-user","video-camera":"fas, fa-video-camera",vimeo:"fas, fa-vimeo",warning:"fas, fa-warning",wechat:"fas, fa-wechat",weibo:"fas, fa-weibo",whatsapp:"fas, fa-whatsapp",wheelchair:"fas, fa-wheelchair",wifi:"fas, fa-wifi","wikipedia-w":"fas, fa-wikipedia-w",wordpress:"fas, fa-wordpress",yelp:"fas, fa-yelp",yoast:"fas, fa-yoast",youtube:"fas, fa-youtube",undo:"fas, fa-undo"};let p=new e;let m=r();var g=function(){let e={size:e=>{let t=0;if("string"==typeof e)t+=2*e.length;else if("number"==typeof e)t+=8;else if("boolean"==typeof e)t+=4;else if("object"==typeof e)for(let i in e)t+=roughObjectSize(e[i]);return t},extractFromJsonArray:(e,t)=>{let i=Object.keys(e),s=Object.values(e),r=[];if(null!=t)for(let n of t){let e={};for(let t in i)m.contains(Object.keys(n),s[t])&&(e[i[t]]=n[s[t]]);r.push(e)}return r},find:(e,t)=>{for(let i in e)if(1==t(e[i]))return e[i]},findAll:(e,t)=>{let i={};for(let s in e)1==t(e[s])&&(i[s]=e[s]);return i}};return e.makeIterable=e=>(e[Symbol.iterator]=function*(){let t=Object.keys(e);for(let e of t)yield this[e]},e),e.max=t=>(t=e.sort(t,{value:!0}),e.getIndex(t)),e.min=t=>(t=e.sort(t,{value:!1}),e.getIndex(t)),e.onChanged=(e,t)=>{const i={get(e,t,s){try{return new Proxy(e[t],i)}catch(r){return Reflect.get(e,t,s)}},defineProperty:(e,i,s)=>(t(e,i),Reflect.defineProperty(e,i,s)),deleteProperty:(e,i)=>(t(e,i),Reflect.deleteProperty(e,i))};return new Proxy(e,i)},e.toArray=(e,t)=>{var i=[];return Object.keys(e).map(s=>{1==t?i[s]=e[s]:i.push(e[s])}),i},e.valueOfObjectArray=(e,t)=>{var i=[];for(let s in e)i.push(e[s][t]);return i},e.keysOfObjectArray=(e=[])=>{var t=[];for(let i in e)t=t.concat(Object.keys(e[i]));return m.toSet(t)},e.objectOfObjectArray=(e=[],t,i)=>{var s={};for(let r in e)s[e[r][t]]=e[r][i];return s},e.copy=(e,t)=>{Object.keys(e).map(i=>{t[i]=e[i]})},e.forEach=(e,t)=>{for(let i in e)t(e[i],i)},e.each=function(e,t){let i={};for(let s in e)i[s]=t(e[s],s);return i},e.isSubObject=(e,t)=>{let i;for(let s in t)if(!(i=JSON.stringify(t[s])==JSON.stringify(e[s])))break;return i},e.getSubObject=(t=[],i={})=>{let s=[],r=!0;for(let n in t)(r=e.isSubObject(t[n],i))&&s.push(t[n]);return s},e.sort=(e={},t={items:[],descend:!1,key:!1,value:!1})=>{t.item=t.item||"",t.descend=t.descend||!1;let i=[],s={};for(let[r,n]of Object.entries(e))i.push({key:r,value:n});null!=t.key&&(console.log("Hello"),i.sort((e,i)=>{let s=e.key>=i.key;return 1==t.key&&(s=!s),s})),null!=t.value&&i.sort((e,i)=>{let s=e.value>=i.value;return 1==t.value&&(s=!s),s}),null!=t.items&&i.sort((e,i)=>{let s=0,r=0;for(let a of t.items)e.value[a]>=i.value[a]?s++:r++;let n=s>=r;return 1==t.descend&&(n=!n),n});for(let{key:r,value:n}of i)s[r]=n;return s},e.reverse=(e={})=>{let t=Object.keys(e).reverse(),i={};for(let s of t)i[s]=e[s];return i},e.getIndex=(e={})=>{let t=Object.keys(e).shift();return{key:t,value:e[t]}},e.getLast=(e={})=>{let t=Object.keys(e).pop();return{key:t,value:e[t]}},e.getAt=(e={},t)=>{let i=Object.keys(e)[t];return{key:i,value:e[i]}},e.keyOf=(e={},t)=>{for(let i in e)if(JSON.stringify(e[i])==JSON.stringify(t))return i;return-1},e.lastKeyOf=(e={},t)=>{let i=-1;for(let s in e)JSON.stringify(e[s])==JSON.stringify(t)&&(i=s);return i},e.includes=(t={},i)=>-1!=e.keyOf(t,i),e};let b=r();var y=function(){let e={placeUnit:(e,t,i)=>{e=Math.floor(e).toString(),t=t||e[0],i=i||0;let s=-1;for(let r=0;r<e.length;r++)e[r]==t&&(0==i&&(s=r),i--);return-1!=s&&(s=10**(e.length-s-1)),s},round:e=>(e.dir=e.dir||"round",e.to=e.to||1,Math[e.dir](e.num/e.to)*e.to),variance:t=>{let i=e.mean(t),s=0;for(let e=0;e<t.length;e++)s+=(t[e]-i)**2;return s/t.length},standardDeviation:t=>{let i=e.variance(t);return Math.sqrt(i)},range:e=>{let t=Math.min(...e);return Math.max(...e)-t},mean:t=>e.sum(t)/t.length,median:e=>{let t=e.length;return t%2==0?(e[t/2-1]+e[t/2])/2:e[Math.floor(t/2)]},mode:e=>{let t={};for(let r=0;r<e.length;r++)null!=t[e[r]]?t[e[r]]++:t[e[r]]=r;let i,s=Math.max(...Object.value(t));for(let r in t)if(t[r]==s){i=r;break}return i},normalizeData:e=>{e.sort((e,t)=>e-t);for(var t=e[e.length-1],i=e[0],s=[],r=0;r<e.length;r++)s.push((e[r]-i)/(t-i));return s},minimuimSwaps:(e,t)=>{var i=0,s=[],r=0,n=[...e].sort((e,t)=>e-t);-1==t&&(n=n.reverse());for(var a=0;a<e.length;a++){var l=e[a];if(a!=l&&!s[a]){for(r=0,0==e[0]&&(l=a);!s[a];)s[a]=!0,l=e[a=n.indexOf(l)],r++;0!=r&&(i+=r-1)}}return i},primeFactorize:e=>{if("number"!=typeof e)return[];if(1==(e=Math.abs(parseInt(e)))||0==e)return[];for(var t,i=2,s=[];1!=e;)-1==(t=e/i).toString().indexOf(".")?(e=t,s.push(i)):i++;return s},lcf:t=>{if(!Array.isArray(t))return[];var i=[],s=[],r=1;for(var n of t){if("number"!=typeof n)return[];i.push(e.primeFactorize(n))}e:for(var a of i[0])if(-1==s.indexOf(a)){for(var l of i)if(-1==l.indexOf(a))continue e;s.push(a),r*=a}return r},stripInteger:e=>-1==(e=e.toString()).indexOf(".")?e:e.slice(0,e.indexOf(".")),stripFraction:e=>-1==(e=e.toString()).indexOf(".")?"0":e.slice(e.indexOf(".")+1),changeBase:(e,t,i)=>parseFloat(e,t).toString(i),max:e=>{var t=e[0];return b.each(e,e=>{t<e&&(t=e)}),t},min:e=>{var t=e[0];return b.each(e,e=>{t>e&&(t=e)}),t},sum:e=>{let t=0;for(let i=0;i<e.length;i++){if(isNaN(Math.floor(e[i]))){t=!1;break}t+=e[i]/1}return t},product:e=>{let t=1;for(let i=0;i<e.length;i++){if(isNaN(Math.floor(e[i]))){t=!1;break}t*=e[i]}return t},add:(...e)=>{let t=[];return e[0].forEach((i,s)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[s]:e;i+=1==isNaN(t)?0:t}}),t.push(i)}),t},sub:(...e)=>{let t=[];return e[0].forEach((i,s)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[s]:e;i-=1==isNaN(t)?0:t}}),t.push(i)}),t},mul:(...e)=>{let t=[];return e[0].forEach((i,s)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[s]:e;i*=1==isNaN(t)?0:t}}),t.push(i)}),t},divide:(...e)=>{let t=[];return e[0].forEach((i,s)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[s]:e;i/=1==isNaN(t)?0:t}}),t.push(i)}),t},abs:e=>b.each(e,e=>(e=1==isNaN(e)?0:e,Math.abs(e)))};return e};let v=y(),x=g();var k=function(){let e={entropy:e=>{let t=0,i=Object.values(e),s=v.sum(i);for(let r of i)t-=r/s*Math.log2(r/s);return t},informationGain:(t,i)=>{let s=e=>{let t={};for(let i of e)t[i]=t[i]||0,t[i]++;return t},r=s(t),n=e.entropy(r),a=0,l=Object.values(i),o=0;for(let e=0;e<l.length;e++)o+=l[e].length,l[e]=s(l[e]);for(let c of l)a+=v.sum(Object.values(c))/o*e.entropy(c);return n-a},highestInformationGainNode:(t,i)=>{let s={};for(let r in i)s[r]=e.informationGain(t,i[r]);return x.max(s)},quartileRange:e=>{let t=e=>e.length%2==0?[Math.ceil(e.length/2)-1,Math.ceil(e.length/2)]:[Math.ceil(e.length/2)-1],i=e=>{let[i,s]=t(e),r=[];return r.push(e[i]),null!=s&&r.push(e[s]),r},s=e=>{let[i,s]=t(e);return null==s&&(s=i),[e.slice(0,i),e.slice(s+1)]},r=s(e),[n,a]=s(r[0]),[l,o]=s(r[1]),c=i(r[0]),d=i(r[1]),u=v.median(c);return v.median(d)-u},normalizeData:e=>{e.sort((e,t)=>e-t);for(var t=e[e.length-1],i=e[0],s=[],r=0;r<e.length;r++)s.push((e[r]-i)/(t-i));return s}};return e};let w=y(),C=g(),A=r();var L={Base:class extends u{constructor(e=class{}){super(e),this.colorHandler=new h,this.array=r(),this.object=g(),this.math=y(),this.analytics=k(),this.icons=f,this.styles=["https://kade-95.github.io/kerdx/css/table.css","https://kade-95.github.io/kerdx/css/cell.css","https://kade-95.github.io/kerdx/css/form.css","https://kade-95.github.io/kerdx/css/picker.css","https://kade-95.github.io/kerdx/css/select.css","https://kade-95.github.io/kerdx/css/json.css","https://kade-95.github.io/kerdx/css/popup.css"];for(let t of this.styles)this.loadCss(t)}},ColorPicker:h,Period:l,Matrix:s,Func:e,Components:u,Template:d,NeuralNetwork:class{constructor(e){n.object.copy(e,this),this.ihWeights=new s({rows:this.hNodes,cols:this.iNodes}),this.ihWeights.randomize(),this.ihBias=new s({rows:this.hNodes,cols:1}),this.ihBias.randomize(),this.hoWeights=new s({rows:this.oNodes,cols:this.hNodes}),this.hoWeights.randomize(),this.hoBias=new s({rows:this.oNodes,cols:1}),this.hoBias.randomize(),this.lr=this.lr||.1}feedFoward(e=[]){let t=e instanceof s?e:this.prepareInputs(e),i=s.multiply(this.ihWeights,t);i.add(this.ihBias),i.map(sigmoid);let r=s.multiply(this.hoWeights,i);return r.add(this.hoBias),r.map(sigmoid),{inputs:t,hiddens:i,outputs:r}}queryBack(e=[]){}predict(e=[]){return this.feedFoward(e).outputs}getWeightsUpdate(e=new s,t=new s,i=1){let r=s.map(t,dSigmoid);r.multiply(i),r.multiply(this.lr);let n=s.transpose(e);return{change:s.multiply(r,n),gradients:r}}backpropagate(e=[],t=new s){let{hiddens:i,outputs:r}=this.feedFoward(e),n=s.subtract(t,r),a=this.getWeightsUpdate(i,r,n);this.hoWeights.add(a.change),this.hoBias.add(a.gradients);let l=s.transpose(this.hoWeights),o=s.multiply(l,n),c=this.getWeightsUpdate(e,i,o);this.ihWeights.add(c.change),this.ihBias.add(c.gradients)}train(e={trainingData:[],period:1,epoch:1}){let t=[],i=[];for(let n of e.trainingData)t.push(n.inputs),i.push(n.targets);let s=a.each(t,e=>this.prepareInputs(e)),r=a.each(i,e=>this.prepareTargets(e)),l=()=>{for(let t=0;t<e.period;t++)for(let e in s)this.backpropagate(s[e],r[e])};if(n.isset(e.epoch))for(let n=0;n<e.epoch;n++)l();else l()}setLearningRate(e=.1){this.lr=e}prepareInputs(e=[]){let t=s.fromArray(Math.normalize(e));return t.multiply(.99),t.add(.01),t}prepareTargets(e=[]){let t=s.fromArray(e);return t.add(.01),t.multiply(.99),t}},Icons:f,Shadow:function(e){return{element:e.cloneNode(!0),children:[e],properties:{},childProperties:{},updateNewElementChildProperties:function(e,t={}){let i,s;for(let r in t)for(let n of t[r]){s=this.setPositions(n.positions),i=this.getChildren(r,e,s);for(let e=0;e<i.length;e++)i[e].setProperties(n.properties)}},updateNewElementChildAttributes:function(e,t={}){let i,s;for(let r in t)for(let n of t[r]){s=this.setPositions(n.positions),i=this.getChildren(r,e,s);for(let e=0;e<i.length;e++)i[e].setAttributes(n.attributes)}},setPositions:function(e=1){return Array.isArray(e)||(e=p.range(e)),e},createElement:function(e={childDetails:{attributes:{},properties:{}},details:{attributes:{},properties:{}}}){let t=this.element.cloneNode(!0);return this.children.push(t),this.prepareElement(t,e),t},prepareElement:function(e,t={childDetails:{attributes:{},properties:{}},details:{attributes:{},properties:{}}}){null!=t.childDetails&&(null!=t.childDetails.attributes&&this.updateNewElementChildAttributes(e,t.childDetails.attributes),null!=t.childDetails.properties&&this.updateNewElementChildProperties(e,t.childDetails.properties)),null!=t.details&&(null!=t.details.attributes&&e.setAttributes(t.details.attributes),null!=t.details.properties&&e.setProperties(t.details.properties)),this.updateNewElementChildProperties(e,this.childProperties),e.setProperties(this.properties),this.makeCloneable(e)},removeElement:function(e){let t=[],i=this.children.indexOf(e);for(let s=0;s<this.children.lengt;s++)i!=s&&t.push(this.children[s]);this.children=t},cloneElement:function(e,t={childDetails:{attributes:{},properties:{}},details:{attributes:{},properties:{}}}){let i=this.children[e].cloneNode(!0);return this.children.push(i),this.prepareElement(i,t),i},makeCloneable:function(e){let t=this.children.indexOf(e);-1!=t&&(e.unitClone=e=>this.cloneElement(t,e))},length:function(){return this.children.length},setProperties:function(e={}){for(let t=0;t<this.children.length;t++)this.children[t].setProperties(e);this.element.setProperties(e);for(let t in e)this.properties[t]=e[t]},css:function(e={}){for(let t=0;t<this.children.length;t++)this.children[t].css(e);this.element.css(e)},setAttributes:function(e={}){for(let t=0;t<this.children.length;t++)this.children[t].setAttributes(e);this.element.setAttributes(e)},addClasses:function(e=""){for(let t=0;t<this.children.length;t++)this.children[t].addClasses(e);this.element.addClasses(e)},removeClasses:function(e=""){for(let t=0;t<this.children.length;t++)this.children[t].removeClasses(e);this.element.removeClasses(e)},getChildren:function(e="",t,i=[]){let s=[],r=t.findAll(e);if(r.length>0)for(let n=0;n<i.length;n++)null!=r[i[n]]&&s.push(r[i[n]]);return s},childCss:function(e="",t={},i=[]){let s;i=this.setPositions(i);for(let r=0;r<this.children.length;r++){s=this.getChildren(e,this.children[r],i);for(let e=0;e<s.length;e++)s[e].css(t)}s=this.getChildren(e,this.element,i);for(let r=0;r<s.length;r++)s[r].css(t)},setChildProperties:function(e="",t={},i=[]){let s;i=this.setPositions(i);for(let r=0;r<this.children.length;r++){s=this.getChildren(e,this.children[r],i);for(let e=0;e<s.length;e++)s[e].setProperties(t)}s=this.getChildren(e,this.element,i);for(let r=0;r<s.length;r++)s[r].setProperties(t);this.childProperties[e]=this.childProperties[e]||[],this.childProperties[e].push({properties:t,positions:i})},setChildAttributes:function(e="",t={},i=""){let s;i=this.setPositions(i);for(let r=0;r<this.children.length;r++){s=this.getChildren(e,this.children[r],i);for(let e=0;e<s.length;e++)s[e].setAttributes(t)}s=this.getChildren(e,this.element,i);for(let r=0;r<s.length;r++)s[r].setAttributes(t)},addClassesToChild:function(e="",t="",i=[]){let s;i=this.setPositions(i);for(let r=0;r<this.children.length;r++){s=this.getChildren(e,this.children[r],i);for(let e=0;e<s.length;e++)s[e].addClasses(t)}s=this.getChildren(e,this.element,i);for(let r=0;r<s.length;r++)s[r].addClasses(t)},removeClassesFromChild:function(e="",t="",i=[]){let s;i=this.setPositions(i);for(let r=0;r<this.children.length;r++){s=this.getChildren(e,this.children[r],i);for(let e=0;e<s.length;e++)s[e].removeClasses(t)}s=this.getChildren(e,this.element,i);for(let r=0;r<s.length;r++)s[r].removeClasses(t)}}},ArrayLibrary:r,ObjectsLibrary:g,MathsLibrary:y,AnalysisLibrary:k,Compression:function(){const e={getFrequency:(e=[])=>{const t={};for(let i in e)null==t[e[i]]?t[e[i]]=1:t[e[i]]++;return t},getProbabilities:(t=[])=>{let i=e.getFrequency(t);for(let e in i)i[e]=i[e]/t.length;return i},entropy:(t=[])=>{let i,s=0,r=A.dataType(t);"number"==r?i=t:"string"==r&&(i=Object.values(e.getProbabilities(t)));for(let e of i)s+=-e*Math.log2(e);return s},isUDC:(e=[])=>{let t,i=!0,s=!0,r=t=>{if(e.includes(t))return i=!1,void(s=!1);e.push(t)},n=n=>{t=!0;for(let t=0;t<e.length&&(t==n||(e[t]==e[n]?(i=!1,s=!1):0==e[t].indexOf(e[n])&&r(e[t].replace(e[n],"")),s));t++);};for(;s;){for(let t=0;t<e.length&&(n(t),0!=s);t++);1==t&&(s=!1)}return i},sfAlgorithm:(t=[])=>{let i=e.getFrequency(t),s=C.sort(i,{value:!0}),r="",n={path:"",size:w.sum(Object.values(s)),value:JSON.parse(JSON.stringify(s))},a=JSON.parse(JSON.stringify(s));for(let e in a)a[e]={frequency:a[e]};let l=e=>{let i=[{path:e.path+"0",size:0,value:[]},{path:e.path+"1",size:0,value:[]}];for(let t in e.value)i[0].size<i[1].size?(i[0].value[t]=e.value[t],i[0].size+=e.value[t]):(i[1].value[t]=e.value[t],i[1].size+=e.value[t]);i=(e=>{if(e[0].size>e[1].size){let t=e[0];e[0]=e[1],e[1]=t,t=e[0].path,e[0].path=e[1].path,e[1].path=t}return e})(i);for(let s in i)if(Object.values(i[s].value).length>1)i[s].value=l(i[s]);else{let e=Object.keys(i[s].value)[0];a[e].code=i[s].path,a[e].length=i[s].path.length,a[e].probability=i[s].size/t.length,a[e].log=Math.log2(1/a[e].probability)}return i};n=l(n);for(let e of t)r+=a[e].code;return{codeWord:r,table:a,data:t,tree:n}},huffmanCoding:(t=[])=>{let i=e.getProbabilities(t),s=C.sort(i,{value:!0}),r=[],n={};for(let e in s)n[e]={probability:s[e],path:"",length:0,prod:0},r.push({value:s[e],origins:e});let a=(e=[])=>{let t=e.length,i=[];if(t>1){let s=t-1,r=t-2,n=e[r].value+e[s].value,l=!1;for(let a=0;a<e.length;a++)if(a!=r&&a!=s){if(e[a].value<=n&&!l){let t={value:n,origins:[e[r].origins,e[s].origins]};i.push(t),l=!0}i.push(e[a])}else if(2==t){let t={value:n,origins:[e[r].origins,e[s].origins]};i.push(t);break}t>2&&(i=a(i))}return i};r=a(r);let l=(e,t)=>{for(let i in e)Array.isArray(e[i])?l(e[i],t+i):(n[e[i]].path=t+i,n[e[i]].length=t.length,n[e[i]].prod=t.length*n[e[i]].probability)};l(r[0].origins,"");let o=w.sum(C.valueOfObjectArray(n,"prod"));return i=s=void 0,{table:n,data:t,avgLength:o,tree:r}},golomb:(e,t)=>{let i=Math.floor(e/t),s=Array(i).fill(1).join("")+"0",r=Math.ceil(Math.log2(t)),n=2**r-t,a=e%t;return s+(()=>{let e=a.toString();return a<n?(e=a.toString(),e=Array(r-1-e.length).fill(0).join("")+e):(e=(a+n).toString(),e=Array(r-e.length).fill(0).join("")+e),e})()},encodeArithmetic:(e,t)=>{let i=e=>{let i=0;for(let s in t){if(e==s)break;i=100*(i/10+t[s]/10)/10}return i},s=[{l:0,u:1}],r=t=>{let r=s[t];return r.l+(r.u-r.l)*i(e[t]-1)},n=t=>{let r=s[t];return r.l+(r.u-r.l)*i(e[t])};for(let l=0;l<e.length;l++)s.push({l:r(l),u:n(l)});let a=s.pop();return(a.l+a.u)/2},decodeArithmetic:(e=0,t)=>{let i="",s=e=>{let i=0;for(let s in t){if(e==s)break;i=100*(i/10+t[s]/10)/10}return i},r=[{l:0,u:1}],n=e=>{let t=r[e];return t.l+(t.u-t.l)*s(i[e]-1)},a=e=>{let t=r[e];return t.l+(t.u-t.l)*s(i[e])},l=0,o=!1;for(;!o;){let t=!1,s=1,c={};for(;!t;){let i=n(l),r=a(l);if(o=i>=e&&e<=r)break;t=i<e&&e<r,c={l:i,u:r,x:s},s++}if(o)break;l++,r.push(c),i+=c.x}return i},encodeDiagram:(e="",t={})=>{let i,s="",r=()=>{let s,r=e[i],n=r+e[i+1];return null!=t[n]?(s=t[n],i++):s=t[r],s};for(i=0;i<e.length;i++)s+=r();return s},encodeLZ1:(e="",t={windowSize:0,searchSize:0,lookAheadSize:0})=>{null==t.windowSize&&(t.windowSize=t.searchSize+t.lookAheadSize),null==t.searchSize&&(t.searchSize=t.windowSize-t.lookAheadSize),null==t.lookAheadSize&&(t.lookAheadSize=t.windowSize-t.searchSize);let i,s,r,n,a=0,l=()=>{let t=r[0],i={o:0,l:0,c:t};if(n.includes(t)){let t=[];for(let a in n)if(n[a]==i.c){let i=+s+ +a,l=0,o=0,c=!0,d=[];for(;c;)d.push(e[i]),c=r[l+ ++o]===e[i+o];t.push({o:n.length-a,l:d.length,c:r[d.length]})}i=t[0];for(let e of t)(i.l<e.l||i.l==e.l&&i.o>e.o)&&(i=e)}return a+=i.l,i},o=[];for(a=0;a<e.length;a++)(s=a-t.searchSize)<0&&(s=0),i=a+t.lookAheadSize,n=e.slice(s,a).split(""),r=e.slice(a,i).split(""),o.push(l());return o},decodeLZ1:(e=[{o:0,l:0,c:""}],t={windowSize:0,searchSize:0,lookAheadSize:0})=>{let i="";null==t.windowSize&&(t.windowSize=t.searchSize+t.lookAheadSize),null==t.searchSize&&(t.searchSize=t.windowSize-t.lookAheadSize),null==t.lookAheadSize&&(t.lookAheadSize=t.windowSize-t.searchSize);for(let s of e){for(let e=0;e<s.l;e++)i+=i[i.length-s.o];i+=s.c}return i},encodeLZ2:(e="")=>{let t,i,s=[],r=[],n=s=>{let a=(t=>{let i="";for(let s of t)i+=e[s];return i})(s),l=r.indexOf(a),o={i:i,c:a[a.length-1]};return-1==l?r.push(a):(s.push(++t),i=l+1,o=n(s)),o};for(t=0;t<e.length;t++)i=0,s.push(n([t]));return s},decodeLZ2:(e=[{i:0,c:""}])=>{let t,i=[];for(let s of e)t="",0!=s.i&&(t=i[s.i-1]),t+=s.c,i.push(t);return i.join("")},encodeLZW:(e="",t=[])=>{let i,s,r=[],n=Array.from(t),a=t=>{let r=(t=>{let i="";for(let s of t)i+=e[s];return i})(t),l=n.indexOf(r);return-1==l?(n.push(r),l=0,s--):(s++,t.push(s),i=l+=1,r=a(t)),i};for(s=0;s<e.length;s++){i=0;let e=a([s]);null!=e&&r.push(e)}return r},decodeLZW:(e=[],t=[])=>{let i,s="",r=[],n=0,a=!1,l="",o=0,c=Array.from(t),d=(e=[])=>{let t=(e=>{let t="";n=0,l="";for(let i of e)null==s[i]?(n++,a=!0):l+=s[i],t+=s[i];return t})(e);return-1==c.indexOf(t)?(c.push(t),i--):(++i,e.push(i),d(e)),t},u=e=>{for(i=o;i<s.length;i++)if(d([i]),c.length==e){o=i+1-n;break}};for(let h of e){let e=c[h-1];if(null==e&&(u(h),e=c[h-1]),r.push(e),s=r.join(""),a){a=!1;for(let e=0;e<n;e++)l+=l[e];r.pop(),r.push(l),c.pop(),c.push(l),o+=n}}return s}};return e}};const{Func:S}=L;let E=new S;const{ObjectsLibrary:N}=L;let M=N();const{Base:O,Func:T,NeuralNetwork:P,Matrix:B,Template:j,Components:D,Compression:I,ColorPicker:R,ArrayLibrary:F,AnalysisLibrary:z,ObjectsLibrary:q,MathsLibrary:H}=L;var $={Base:O,IndexedLibrary:function(e,t){let i={name:e,version:t,initialized:!1};return i.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,i.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.msIDBTransaction,i.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange,i.init=function(e){const t=i.indexedDB.open(i.name);t.onupgradeneeded=t=>{null!=e&&e(t.target.result)},t.onsuccess=e=>{i.version=Math.floor(t.result.version)||Math.floor(i.version),i.initialized=!0},t.onerror=e=>{console.log(e.target.error)}},i.getVersion=function(){return new Promise((e,t)=>{const s=i.indexedDB.open(i.name);s.onsuccess=t=>{(null==i.version||i.version<s.result.version)&&(i.version=s.result.version),e(i.version)},s.onerror=e=>{t(e.target.error)}})},i.open=async function(e){return null==i.version&&await i.getVersion(),new Promise((t,s)=>{const r=i.indexedDB.open(i.name,i.version);r.onupgradeneeded=t=>{i.version=r.result.version,null!=e&&(e(t.target.result).onerror=e=>{s(e.target.error)})},r.onsuccess=e=>{t(e.target.result)},r.onerror=e=>{s(e.target.error)}})},i.collectionExists=function(e){return i.open().then(t=>t.objectStoreNames.contains(e))},i.createCollection=async function(...e){let t=await i.getVersion();return i.version=t+1,i.open(t=>{for(let i of e)t.objectStoreNames.contains(i)||t.createObjectStore(i,{keyPath:"_id"});return t})},i.emptyCollection=function(e){let t=0,s=0;return new Promise((r,n)=>{i.find({collection:e,query:{},many:!0}).then(a=>{i.open().then(i=>{if(i.objectStoreNames.contains(e)){let l=i.transaction(e,"readwrite"),o=l.objectStore(e);l.onerror=e=>{n(e.target.error)},l.oncomplete=e=>{r({action:"emptycollection",removedCount:t,ok:t==s})},s=a.length;for(let e of a){let i=o.delete(e._id);i.onerror=e=>{console.log("Error while deleting documents => "+e.target.error)},i.onsuccess=e=>{t++}}}else r({removedCount:t,ok:t==s})}).catch(e=>{n(e)})}).catch(e=>{n(e)})})},i.find=function(e){return new Promise((t,s)=>{i.open().then(i=>{let r=[];if(i.objectStoreNames.contains(e.collection)){let n=i.transaction(e.collection,"readonly");n.onerror=e=>{s(e.target.error)},n.oncomplete=i=>{1==e.many?t(r):t(r[0])};let a,l=n.objectStore(e.collection).openCursor();l.onerror=e=>{s(e.target.error)},l.onsuccess=t=>{(a=t.target.result)&&((null==e.query||M.isSubObject(a.value,e.query))&&r.push(a.value),a.continue())}}else 1==e.many?t(r):t(r[0])}).catch(e=>{s(e)})})},i.documentExists=function(e){return delete e.many,i.find(e).then(e=>null!=e)},i.generateId=function(e){return Date.now().toString(36)+Math.random().toString(36).slice(2)+Math.random().toString(36).slice(2)},i.checkId=function(e,t,s){let r=t._id||i.generateId(),n=e.get(r);n.onsuccess=n=>{null!=n.target.result?i.checkId(e,t,s):s(r)},n.onerror=e=>{console.log("Error checking ID => "+e.target.error)}},i.add=function(e,t){return new Promise((s,r)=>{let n=t.transaction(e.collection,"readwrite");n.onerror=e=>{r(e.target.error)},n.oncomplete=t=>{s({action:"insert",documents:e.query})};let a=n.objectStore(e.collection);if(1==e.many&&Array.isArray(e.query))for(let t of e.query)i.checkId(a,t,e=>{t._id=e,a.add(t)});else i.checkId(a,e.query,t=>{e.query._id=t,a.add(e.query)})})},i.insert=async function(e){return await i.collectionExists(e.collection)?i.open().then(t=>i.add(e,t)).catch(e=>e):i.createCollection(e.collection).then(t=>i.add(e,t)).catch(e=>e)},i.update=function(e){return new Promise((t,s)=>{i.open().then(i=>{i.objectStoreNames.contains(e.collection)||s("Collection not found");let r=i.transaction(e.collection,"readwrite");r.onerror=e=>{s(e.target.error)},r.oncomplete=e=>{t({action:"update",documents:a})};let n=r.objectStore(e.collection).openCursor(),a={};n.onerror=e=>{s(e.target.error)},n.onsuccess=t=>{let i=t.target.result,r=!1;if(i){if(M.isSubObject(i.value,e.check)){r=!0;for(let t in e.query)i.value[t]=e.query[t];try{let e=i.update(i.value);e.onerror=e=>{a[e.target.result]={value:i.value,status:!1}},e.onsuccess=e=>{a[e.target.result]={value:i.value,status:!0}}}catch(n){s(n)}}1!=e.many&&0!=r||i.continue()}}}).catch(e=>{s(e)})})},i.save=function(e={collection:"",query:{},check:{}}){return i.documentExists({collection:e.collection,query:e.check}).then(t=>0==t?i.insert(e):i.update(e))},i.delete=function(e){let t=0,s=0;return new Promise((r,n)=>{i.find(e).then(a=>{i.open().then(i=>{let l=i.transaction(e.collection,"readwrite"),o=l.objectStore(e.collection);if(l.onerror=e=>{n(e.target.error)},l.oncomplete=e=>{r({action:"delete",removedCount:s,ok:s==t})},Array.isArray(a)){t=a.length;for(let e of a){let t=o.delete(e._id);t.onerror=e=>{console.log("Error while deleting documents => "+e.target.error)},t.onsuccess=e=>{s++}}}else{t=1;let e=o.delete(a._id);e.onerror=e=>{console.log("Error while deleting documents => "+e.target.error)},e.onsuccess=e=>{s++}}}).catch(e=>{n(e)})}).catch(e=>{n(e)})})},i},AppLibrary:function(){let e={makeWebapp:(t=(()=>{}))=>{document.addEventListener("click",i=>{let s=i.target,r=i.target.getParents("a"),n=s.getAttribute("href");"a"==s.nodeName.toLowerCase()||E.isnull(r)||(s=r),E.isnull(n)&&!E.isnull(r)&&(s=r),n=s.getAttribute("href"),"_blank"==s.getAttribute("target")?window.open(e.prepareUrl(n)):E.isnull(n)||(i.preventDefault(),e.prepareUrl(n)!=location.href&&window.history.pushState("page","title",n),t())}),window.onpopstate=t},prepareUrl:(e="")=>(e.includes(location.origin)?e.includes(location.protocol)||(e=location.protocol+"//"+e):E.urlSplitter(e).location==location.origin&&(e=location.origin+"/"+e),e)};return e.ajax=(e={async:!0,data:{},url:"",method:"",secured:!1})=>{e.async=e.async||!0,e.data=e.data||{},e.url=e.url||"./",e.method=e.method||"POST",e.secured=e.secured||!1,e.secured&&(e.url="https://cors-anywhere.herokuapp.com/"+e.url);let t=new FormData;if(e.data instanceof FormData)t=e.data;else for(let i in e.data)t.append(i,e.data[i]);return new Promise((i,s)=>{var r=new XMLHttpRequest;r.onreadystatechange=function(e){4==this.readyState&&200==this.status&&i(r.responseText)},E.isset(e.onprogress)&&(r.upload.onprogress=t=>{e.onprogress(t.loaded/t.total*50)},r.onprogress=t=>{e.onprogress(t.loaded/t.total*100)}),r.onerror=e=>{s(e)},r.open(e.method,e.url,e.async),r.send(t)})},e},ArrayLibrary:F},G=function(e){const t=e||{};return t.create=()=>(t.element=base.createElement({element:"span",attributes:{class:"single-item","data-name":t.name},children:[{element:"img",attributes:{class:"single-item-image",src:t.image}},{element:"span",attributes:{class:"single-item-details"},children:[{element:"span",attributes:{class:"single-item-name"},text:t.name},{element:"span",attributes:{class:"single-item-other-details"},children:[{element:"a",attributes:{class:"single-item-price"},text:"#"+t.price},{element:"a",attributes:{class:"single-item-quantity"},text:t.quantity+"(qty)"}]}]},{element:"span",attributes:{class:"single-item-controls"},children:[{element:"i",attributes:{class:"fas fa-minus single-item-remove"}},{element:"a",attributes:{class:"single-item-count"},text:t.count||0},{element:"i",attributes:{class:"fas fa-plus single-item-add"}}]}]}),t.element.addEventListener("click",e=>{e.target.classList.contains("single-item-add")?t.addToCart():e.target.classList.contains("single-item-remove")?t.removeFromCart():t.display()}),t.element),t.addToCart=(e=1)=>{let i=Math.floor(t.element.find(".single-item-count").textContent);return t.quantity>i&&(i+=e,t.element.find(".single-item-count").textContent=i,cart.add(t.name,e)),i},t.removeFromCart=(e=1)=>{let i=Math.floor(t.element.find(".single-item-count").textContent);return 0<i&&(i-=e,t.element.find(".single-item-count").textContent=i,cart.reduce(t.name,e)),i},t.display=()=>{t.page=base.createElement({element:"div",attributes:{class:"single-item-page"},children:[t.element.cloneNode(!0),{element:"span",attributes:{class:"single-item-description-container"},children:[{element:"a",attributes:{class:"single-item-name"},text:"Description"},{element:"span",attributes:{class:"single-item-description"},children:(()=>{let e=[];for(let i of t.description||[])e.push(base.createElement({element:"span",attributes:{class:"single-item-description-block"},children:[{element:"i",attributes:{class:"fas fa-arrow-right"}},{element:"a",attributes:{class:"single-item-description-value"},text:i}]}));return e})()}]}]}),base.popUp(t.page,{attributes:{style:{width:system.smallScreen.matches?"70%":"100%",height:"100%",justifySelf:"flex-end"}},title:"Item: "+t.name}),t.page.addEventListener("click",e=>{e.target.classList.contains("single-item-add")?t.page.find(".single-item-count").textContent=t.addToCart():e.target.classList.contains("single-item-remove")&&(t.page.find(".single-item-count").textContent=t.removeFromCart())})},t},U={Lagos:{stations:["Ikorodu","Surulere"],price:2e3},Abuja:{stations:["Wuse","Gwagwalada"],price:5e3},Enugu:{stations:["Abakpa","New Heaven"],price:5e3}},W={hellow:{cut:.9},remove:{cut:.8},slash:{cut:.5}};let K=new function(){const e={};return e.buyer={state:Object.keys(U)[0],deliveryType:"Door delivery"},e.display=t=>{if(0==Object.keys(t).length)return void alert("You have no item in Cart. Keep shopping");e.items=t,e.page=base.createElement({element:"div",attributes:{id:"checkout-page"},children:[{element:"div",attributes:{id:"checkout-address",class:"checkout-section"},children:[{element:"a",attributes:{id:"checkout-address-title",class:"checkout-section-title"},text:"Enter your address"},{element:"span",attributes:{class:"checkout-section-block"},children:[{element:"label",text:"Full Name"},{element:"input",attributes:{name:"name",class:"checkout-section-data"}}]},{element:"span",attributes:{class:"checkout-section-block"},children:[{element:"label",text:"State"},{element:"select",attributes:{name:"state",class:"checkout-section-data"},options:Object.keys(U)}]},{element:"span",attributes:{class:"checkout-section-block"},children:[{element:"label",text:"Address"},{element:"input",attributes:{name:"address",class:"checkout-section-data"}}]}]},{element:"span",attributes:{class:"checkout-section",id:"checkout-delivery"},children:[{element:"a",attributes:{class:"checkout-section-title"},text:"Delivery Type"},{element:"span",attributes:{class:"checkout-section-block"},children:[{element:"label",text:"Type"},{element:"select",attributes:{name:"deliveryType",class:"checkout-section-data"},options:["Door delivery","Pickup Station"]}]}]},{element:"span",attributes:{class:"checkout-section",id:"checkout-pickup"},children:[{element:"a",attributes:{class:"checkout-section-title"},text:"Pickup Stations"},{element:"span",attributes:{class:"checkout-section-block"},children:[{element:"label",text:"Station"},{element:"select",attributes:{name:"pickupStation",class:"checkout-section-data"},options:U.Lagos.stations}]}]},{element:"span",attributes:{class:"checkout-section",id:"checkout-section-price"},children:[{element:"a",attributes:{class:"checkout-section-title"},text:"Items in cart"},{element:"span",attributes:{id:"checkout-items-container"},children:(()=>{let e=[],i=0;for(let s in t)i++,e.push(base.createElement({element:"span",attributes:{class:"checkout-item"},children:[{element:"a",attributes:{class:"cart-item-data"},text:i},{element:"a",attributes:{class:"cart-item-data"},children:[{element:"img",attributes:{class:"cart-item-image",src:t[s].image}}]},{element:"a",attributes:{class:"cart-item-data"},text:t[s].name},{element:"a",attributes:{class:"cart-item-data"},text:t[s].count},{element:"a",attributes:{class:"cart-item-data"},text:t[s].cost}]}));return e.unshift(base.createElement({element:"span",attributes:{id:"checkout-header"},children:[{element:"a",attributes:{class:"cart-header-title"},text:"S/N"},{element:"a",attributes:{class:"cart-header-title"},text:"Image"},{element:"a",attributes:{class:"cart-header-title"},text:"Name"},{element:"a",attributes:{class:"cart-header-title"},text:"Count"},{element:"a",attributes:{class:"cart-header-title"},text:"Cost"}]})),e})()},{element:"span",attributes:{id:"checkout-coupon-container"},children:[{element:"input",attributes:{id:"checkout-coupon-box",placeHolder:"Coupon code"}},{element:"button",attributes:{id:"checkout-coupon-button"},text:"Use Coupon"}]},{element:"span",attributes:{id:"checkout-fees-container"},children:[{element:"span",attributes:{class:"checkout-fees"},children:[{element:"label",text:"Items total Fee"},{element:"a",attributes:{id:"checkout-items-fee"},text:base.addCommaToMoney(e.getItemsTotal().toString())+"(NGN)"}]},{element:"span",attributes:{class:"checkout-fees"},children:[{element:"label",text:"Delivery Fee"},{element:"a",attributes:{id:"checkout-delivery-fee"},text:base.addCommaToMoney(e.getDeliveryFee().toString())+"(NGN)"}]},{element:"span",attributes:{class:"checkout-fees"},children:[{element:"label",text:"Total"},{element:"a",attributes:{id:"checkout-total"},text:base.addCommaToMoney(e.getTotal().toString())+"(NGN)"}]}]}]},{element:"span",attributes:{id:"checkout-buttons"},children:[{element:"button",attributes:{id:"checkout-back",class:"checkout-single-button"},text:"Back"},{element:"button",attributes:{id:"checkout-finish",class:"checkout-single-button"},text:"Finish"},{element:"button",attributes:{id:"checkout-next",class:"checkout-single-button"},text:"Next"}]}]});let i=base.popUp(e.page,{attributes:{style:{width:system.smallScreen.matches?"70%":"100%",height:"100%",justifySelf:"flex-end"}},title:"Checking Out"}),s=e.page.findAll(".checkout-section"),r=e.page.find("#checkout-back"),n=e.page.find("#checkout-next"),a=e.page.find("#checkout-finish"),l=e.page.find("#checkout-coupon-button");r.css({visibility:"hidden"}),a.css({visibility:"hidden"});let o,c=0;s[c].classList.add("active"),e.page.addEventListener("click",t=>{if((o=t.target)==r)s[c].classList.remove("active"),--c<0&&(c=0),s[c].classList.add("active");else if(o==n){if(base.object.copy(base.jsonForm(s[c]),e.buyer),0==c){if(""==e.buyer.address)return void alert("You need to set your address")}else 1==c?"Door delivery"==e.buyer.deliveryType&&(s[c].classList.remove("active"),c++):2==c&&e.updateFees();s[c].classList.remove("active"),++c>s.length-1&&(c=s.length-1),s[c].classList.add("active")}else o==a?(i.remove(),e.printReceipt()):o==l&&e.applyCoupon(e.page.find("#checkout-coupon-box").value);c==s.length-1?(n.css({visibility:"hidden"}),a.cssRemove(["visibility"])):0==c?(r.css({visibility:"hidden"}),a.css({visibility:"hidden"})):(r.cssRemove(["visibility"]),n.cssRemove(["visibility"]),a.css({visibility:"hidden"}))})},e.getItemsTotal=()=>{let t=0;for(let i in e.items)t+=e.items[i].price*e.items[i].count*1;return t},e.getTotal=()=>{let t=e.getDeliveryFee(),i=e.getItemsTotal();return e.total=t+i,e.total},e.getDeliveryFee=()=>{let t=0;return"Door delivery"==e.buyer.deliveryType&&(t=U[e.buyer.state].price),t},e.applyCoupon=t=>{null!=W[t]&&(e.total=e.getTotal()*W[t].cut,e.page.find("#checkout-total").textContent=base.addCommaToMoney(e.total.toString())+"(NGN)")},e.updateFees=()=>{this.page.find("#checkout-items-fee").textContent=base.addCommaToMoney(e.getItemsTotal().toString())+"(NGN)",this.page.find("#checkout-delivery-fee").textContent=base.addCommaToMoney(e.getDeliveryFee().toString())+"(NGN)",this.page.find("#checkout-total").textContent=base.addCommaToMoney(e.getTotal().toString())+"(NGN)"},e.printReceipt=()=>{let t=base.createElement({element:"span",attributes:{id:"checkout-receipt"},children:[{element:"a",attributes:{id:"checkout-receipt-salute"},text:`Hello ${e.buyer.name||"User"},`},{element:"a",attributes:{id:"checkout-receipt-message"},text:"Your order is being processed and will be delivered shortly"},{element:"a",attributes:{id:"checkout-receipt-bye"},text:"Thanks so much for shopping with us."},{element:"button",attributes:{id:"checkout-receipt-continue"},text:"Continue"}]}),i=base.popUp(t,{attributes:{style:{width:system.smallScreen.matches?"70%":"100%",height:"100%",justifySelf:"flex-end"}},title:"Checking Out"});t.find("#checkout-receipt-continue").addEventListener("click",e=>{i.remove()}),cart.clear()},e};window.system={};const{Base:V,IndexedLibrary:J,ArrayLibrary:Y,AppLibrary:Z}=$;window.base=new V(window),L.array=Y();const X=Z();window.storage=new J("Market"),window.database=[{name:"Mama'S Pride Premium Parboiled Rice 50 Kg",price:5e4,quantity:50,category:["Rice","Grains","Mama's Pride"],tags:["Rice","Grains","Mama's Pride"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/79/615484/1.jpg?6211",description:[" SKU: MA083FF1BEFP8NAFAMZ","Color: White","Main Material: Parboiled Rice","Model: Rice","Production Country: Nigeria","Product Line: Blekn Stores","Weight (kg): 50"]},{name:"Big Parboiled Rice 10kg",price:2e4,quantity:50,category:["Rice","Grains"],tags:["Rice","Grains","Parboiled"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/17/885315/1.jpg?7949",description:["SKU: BI444FF0ANCEBNAFAMZ","Color: Brown","Production Country: Nigeria","Weight (kg): 10"]},{name:"50 50 Soya Custard Powder 2kg",price:1e4,quantity:50,category:["Custard","Powder"],tags:["Soya","Custard","Powder"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/38/375124/1.jpg?3023",description:["SKU: 50760GR0MUIFONAFAMZ","NAFDAC No.: 08-5987L","Color: Brown","Main Material: Soya Milk","Model: Custard","Production Country: Nigeria","Product Line: Dabamat","Weight (kg): 2"]},{name:"Indomie Chicken Flavour Instant Noodles -40 Packs X 70g",price:2300,quantity:50,category:["Indomie","Noddles"],tags:["Indomie","Noddles","Chicken Flavour"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/19/124854/1.jpg?3506",description:["SKU: IN147GR0BDWTYNAFAMZ","NAFDAC No.: N/A","Production Country: Nigeria","Product Line: techlum","Weight (kg): 0.5"]},{name:"Lahda Golden Soya Oil 3 Litre",price:2300,quantity:50,category:["Soya Oil"],tags:["Oil","Soya","Lahda","Golden"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/69/448444/1.jpg?8019",description:["SKU: KA945GR15CIRGNAFAMZ","NAFDAC No.: nill","Production Country: Nigeria","Weight (kg): 3"]},{name:"Nosak Famili Quality Palm Oil",price:2300,quantity:50,category:["Oil","Palm Oil"],tags:["Oil","Palm","Nosak","Famili"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/17/355026/1.jpg?6845",description:["SKU: NO522GR0ABZ82NAFAMZ","NAFDAC No.: N/A","Main Material: PALM KERNEL","Production Country: Nigeria","Weight (kg): 2"]},{name:"Golden Penny Spagetti X20 (1 Carton)",price:2300,quantity:50,category:["Spagetti","Golden Penny"],tags:["Spagetti","Golden Penny"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/91/118065/1.jpg?5783",description:["SKU: GO106GR1I8Z5DNAFAMZ","NAFDAC No.: A1-0291","Production Country: Nigeria","Product Line: Azi6farm","Weight (kg): 2.5"]},{name:"Bama Mayonnaise -473ml",price:2300,quantity:50,category:["Bama","Mayonnaise"],tags:["Bama","Mayonnaise"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/88/046735/1.jpg?0393",description:["SKU: BA099GR1GF5ANNAFAMZ","NAFDAC No.: 01 - 0476","Product Line: CHYCLASIC MALL","Weight (kg): 946"]},{name:"Peak Instand Full Cream Milk Powder Tin- 400g X 6",price:2300,quantity:50,category:["Peak","Milk"],tags:["Powder","Milk","Peak"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/51/507593/1.jpg?4854",description:["SKU: PE294GR0UNZIHNAFAMZ","NAFDAC No.: 01-6215","Product Line: Noble's angel Mart","Weight (kg): 0.4"]},{name:"Ovaltine Chocolate Tea Tin 400G X6",price:2300,quantity:50,category:["Ovaltine","Chocolate","Tea"],tags:["Tin","Tea","Chocolate","Ovaltine"],image:"https://ng.jumia.is/unsafe/fit-in/500x500/filters:fill(white)/product/17/207593/1.jpg?5701",description:["SKU: OV361GR0A8TGPNAFAMZ","NAFDAC No.: 01-1434","Product Line: Noble's angel Mart","Weight (kg): 0.5"]}],window.cart=new function(){const e={items:{},add:(t,i=1)=>{if(null==e.items[t]){let s=base.array.find(database,e=>e.name==t);e.items[t]=s,e.items[t].count=Math.floor(i)}else e.items[t].count+=Math.floor(i);e.items[t].cost=e.items[t].price*e.items[t].count,storage.save({collection:"items",query:{name:t,count:e.items[t].count},check:{name:t}}).then(e=>{console.log(e)})},reduce:(t,i=1)=>{null!=e.items[t]&&(e.items[t].count-=Math.floor(i),e.items[t].cost=e.items[t].price*e.items[t].count,0==e.items[t].count?e.remove(t):storage.save({collection:"items",query:{name:t,count:e.items[t].count},check:{name:t}}))},remove:t=>{delete e.items[t],storage.delete({collection:"items",query:{name:t}}).then(e=>{console.log(e)})},clear:()=>{for(let t in e.items)e.items[t].removeFromCart(e.items[t].count),delete e.items[t]},showEmpty:()=>base.createElement({element:"span",attributes:{id:"empty-cart"},text:"Cart is Epmty. Please keep shopping"}),getTotal:()=>{let t=0;for(let i in e.items)t+=e.items[i].price*e.items[i].count*1;return t},updateTotal:()=>{e.page.find("#cart-total").textContent=base.addCommaToMoney(e.getTotal().toString())+"(NGN)"},display:()=>{let t=0;e.page=base.createElement({element:"div",attributes:{id:"cart-page"},children:[{element:"div",attributes:{id:"cart-items-container",style:{gridTemplateRows:`repeat(${Object.keys(e.items).length}, max-content)`}},children:(()=>{let i=[];for(let s in e.items)i.push(base.createElement({element:"span",attributes:{class:"cart-item","data-name":s},children:[{element:"a",attributes:{class:"cart-item-data"},text:t},{element:"a",attributes:{class:"cart-item-data"},children:[{element:"img",attributes:{class:"cart-item-image",src:e.items[s].image}}]},{element:"a",attributes:{class:"cart-item-data"},text:e.items[s].name},{element:"a",attributes:{class:"cart-item-data cart-item-count"},text:e.items[s].count},{element:"a",attributes:{class:"cart-item-data cart-item-cost"},text:e.items[s].cost},{element:"i",attributes:{class:"fas fa-arrow-up cart-item-add cart-item-data"}},{element:"i",attributes:{class:"fas fa-arrow-down cart-item-reduce cart-item-data"}},{element:"i",attributes:{class:"fas fa-times cart-item-remove cart-item-data"}}]})),t++;return 0==t?i.push(e.showEmpty()):i.unshift(base.createElement({element:"span",attributes:{id:"cart-header"},children:[{element:"a",attributes:{class:"cart-header-title"},text:"S/N"},{element:"a",attributes:{class:"cart-header-title"},text:"Image"},{element:"a",attributes:{class:"cart-header-title"},text:"Name"},{element:"a",attributes:{class:"cart-header-title"},text:"Count"},{element:"a",attributes:{class:"cart-header-title"},text:"Cost"},{element:"a",attributes:{class:"cart-header-title"},text:"Add"},{element:"a",attributes:{class:"cart-header-title"},text:"Reduce"},{element:"a",attributes:{class:"cart-header-title"},text:"Remove"}]})),i})()},{element:"span",attributes:{id:"cart-total-container"},children:[{element:"label",attributes:{},text:"Total: "},{element:"a",attributes:{id:"cart-total"},text:base.addCommaToMoney(e.getTotal().toString())+"(NGN)"}]},{element:"span",attributes:{id:"cart-buttons"},children:[{element:"button",attributes:{id:"cart-clear",class:"cart-single-button"},text:"Clear"},{element:"button",attributes:{id:"cart-continue",class:"cart-single-button"},text:"Continue"},{element:"button",attributes:{id:"cart-checkout",class:"cart-single-button"},text:"Checkout"}]}]});let i=base.popUp(e.page,{attributes:{style:{width:system.smallScreen.matches?"70%":"100%",height:"100%",justifySelf:"flex-end"}},title:"My Cart"});e.page.addEventListener("click",t=>{if(t.target.classList.contains("cart-item-add")){let i=t.target.getParents(".cart-item"),s=i.dataset.name;base.array.find(database,e=>e.name==s).addToCart(1),i.find(".cart-item-count").textContent=e.items[s].count,i.find(".cart-item-cost").textContent=e.items[s].count*e.items[s].price,e.updateTotal()}else if(t.target.classList.contains("cart-item-reduce")){let i=t.target.getParents(".cart-item"),s=i.dataset.name;base.array.find(database,e=>e.name==s).removeFromCart(1),0==Object.keys(e.items).length?e.page.replaceWith(e.display()):0==e.items[s].count?i.remove():(i.find(".cart-item-count").textContent=e.items[s].count,i.find(".cart-item-cost").textContent=e.items[s].count*e.items[s].price),e.updateTotal()}else if(t.target.classList.contains("cart-item-remove")){let s=t.target.getParents(".cart-item"),r=s.dataset.name;base.array.find(database,e=>e.name==r).removeFromCart(e.items[s.dataset.name].count),s.remove(),0==Object.keys(e.items).length&&(i.remove(),e.page.replaceWith(e.display())),e.updateTotal()}else if("cart-clear"==t.target.id)e.clear(),i.remove(),e.page.replaceWith(e.display()),e.updateTotal();else if("cart-continue"==t.target.id)i.remove();else if("cart-checkout"==t.target.id){if(0==Object.keys(e.items).length)return void alert("You have no item in Cart. Keep shopping");i.remove(),K.display(e.items)}})},init:t=>{for(let i=0;i<t.length;i++){let s=base.array.find(database,e=>e.name==t[i].name);s.count=t[i].count,s.cost=s.price*s.count,e.items[s.name]=s}}};return e};const _={};system.smallScreen=window.matchMedia("(min-width: 700px)"),_.home=()=>{storage.find({collection:"items",many:!0}).then(e=>{cart.init(e),document.body.makeElement({element:"main",attributes:{id:"body-main"},children:[{element:"div",attributes:{id:"body-items"},children:(()=>{let t=[];for(let i of database){let s=L.array.find(e,e=>e.name==i.name);null!=s&&(i.count=s.count),t.push(new G(i).create())}return t})()}]})})},_.render=()=>{let e=document.body.makeElement({element:"header",attributes:{id:"body-header"},children:[{element:"span",attributes:{id:"app-name"},text:"Market"},{element:"span",attributes:{id:"body-header-controls"},children:[{element:"input",attributes:{placeHolder:"Search...",id:"search-box"}},{element:"i",attributes:{class:"fas fa-shopping-cart",id:"body-header-cart"}},{element:"i",attributes:{class:"fas fa-cog",id:"body-header-settings"}}]}]});e.addEventListener("click",e=>{"body-header-cart"==e.target.id&&cart.display()}),e.find("#search-box").onChanged(e=>{let t=document.body.findAll(".single-item");for(let i of t)i.dataset.name.toLowerCase().includes(e.toLowerCase())?i.cssRemove(["display"]):i.css({display:"none"})}),_.route()},_.route=()=>{document.body.removeChildren({except:["#body-header"]}),_.home()},document.addEventListener("DOMContentLoaded",e=>{_.render(),X.makeWebapp(e=>{_.route()})})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlc1xcYnJvd3Nlci1wYWNrLWZsYXRcXF9wcmVsdWRlIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9GdW5jLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9NYXRyaXguanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9mdW5jdGlvbnMvQXJyYXlMaWJyYXJ5LmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9OZXVyYWxOZXR3b3JrLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9QZXJpb2QuanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9jbGFzc2VzL0pTRWxlbWVudHMuanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9jbGFzc2VzL1RlbXBsYXRlLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9Db21wb25lbnRzLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9Db2xvclBpY2tlci5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9iYXNlL0ljb25zLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvZnVuY3Rpb25zL1NoYWRvdy5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9iYXNlL2Z1bmN0aW9ucy9PYmplY3RzTGlicmFyeS5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9iYXNlL2Z1bmN0aW9ucy9NYXRoc0xpYnJhcnkuanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9mdW5jdGlvbnMvQ29tcHJlc3Npb24uanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9rZXJkL2Z1bmN0aW9ucy9BcHBMaWJyYXJ5LmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvZnVuY3Rpb25zL0luZGV4ZWRMaWJyYXJ5LmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvYnJvd3Nlci5qcyIsInNyYy9zdG9yYWdlL2RhdGEuanMiLCJzcmMvc3RvcmFnZS9sb2NhdGlvbnMuanMiLCJzcmMvY29tcG9uZW50cy9jaGVja291dC5qcyIsInNyYy9zdG9yYWdlL2NvdXBvbnMuanMiLCJzcmMvbWFpbi5qcyIsInNyYy9jb21wb25lbnRzL2l0ZW0uanMiXSwibmFtZXMiOlsiXyRGdW5jXzQiLCJbb2JqZWN0IE9iamVjdF0iLCJ0aGlzIiwiY2FwaXRhbHMiLCJzbWFsbHMiLCJkaWdpdHMiLCJzeW1ib2xzIiwibW9udGhzIiwiZGF5cyIsImdlbmRlcnMiLCJtYXJpdGFscyIsInJlbGlnaW9ucyIsInVzZXJUeXBlcyIsInN0YWZmUmVxdWVzdHMiLCJzdHVkZW50c1JlcXVlc3RzIiwic3ViamVjdExpc3QiLCJzb3J0Iiwic3ViamVjdExldmVscyIsImZvbnRTdHlsZXMiLCJwaXhlbFNpemVzIiwiY29sb3JzIiwiYm9sZG5lc3MiLCJib3JkZXJUeXBlcyIsInNoYWRvd3MiLCJib3JkZXJzIiwiYWxpZ25tZW50Iiwic291cmNlIiwidmFsdWUiLCJpbkJldHdlZW4iLCJKU09OIiwicGFyc2UiLCJlcnJvciIsImhheXN0YWNrIiwibmVlZGxlIiwicG9zIiwiaW5kZXhPZiIsInNwbGl0IiwibGVuZ3RoIiwiaW5kZXgiLCJpIiwiZmlyc3QiLCJzZWNvbmQiLCJhdDEiLCJhdDIiLCJzdGFydCIsImluZGV4QXQiLCJlbmQiLCJzbGljZSIsImZvdW5kIiwiYWxsIiwiY29tYmluZSIsInB1c2giLCJlbGVtZW50Iiwia2V5IiwiY3NzIiwic3R5bGUiLCJjc3NUZXh0IiwicGFpciIsInRyZW0iLCJqc1N0eWxlTmFtZSIsInN0cmluZ1JlcGxhY2UiLCJwb3AiLCJuYW1lIiwibmV3TmFtZSIsInRvVXBwZXJDYXNlIiwidG9Mb3dlckNhc2UiLCJpc0NhcGl0YWwiLCJ0ZXh0IiwiaXNzZXQiLCJjYW1lbENhc2UiLCJvYmoiLCJzdHJpbmdpZnkiLCJwYXJhbXMiLCJsaW1pdCIsInJhbmdlIiwicmFuZG9tIiwiZW1wdHlPYmplY3QiLCJNYXRoIiwic3RyaW5nIiwiYWxwaGFudW1lcmljIiwiZmxvb3IiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJ1cmwiLCJ1cmxTcGxpdHRlciIsInZhcnMiLCJ0b0FkZCIsImFkZFZhbHVlIiwidXJsTWVyZ2VyIiwibW9uZXkiLCJpbnZlcnNlIiwicG9zaXRpb24iLCJpbmNsdWRlcyIsInJldmVyc2UiLCJqb2luIiwieCIsImlzRGlnaXQiLCJhIiwiYiIsImlzU21hbGwiLCJjIiwiZCIsImlzU3ltYm9sIiwiU3RyaW5nIiwiZW1haWxfcGFydHMiLCJpc1NwYWNlU3RyaW5nIiwiZG90X3BhcnRzIiwidHJ1dGh5IiwidG9Mb2NhbGVMb3dlckNhc2UiLCJmYWxzeSIsIm9iamVjdCIsIk9iamVjdCIsImtleXMiLCJuZXdfbmVlZGxlIiwid29yZCIsImZyb20iLCJ0byIsInBhdGgiLCJjaGFyIiwiaiIsIm9jY3VyYW5jZXMiLCJ2YXJpYWJsZSIsImlzbnVsbCIsImZsYWciLCJjb25zdHJ1Y3RvciIsIkFycmF5IiwiTnVtYmVyIiwiQm9vbGVhbiIsImZ1bmN0aW9ucyIsImNhbGxCYWNrIiwicmVzdWx0cyIsImYiLCJ0ZXN0IiwibmF2aWdhdG9yIiwidXNlckFnZW50Iiwic3BsaXRVcmwiLCJsYXN0UXVlcnkiLCJob3N0VHlwZSIsImhvc3ROYW1lIiwicG9ydCIsImhvc3QiLCJwYXRoTmFtZSIsInF1ZXJpZXMiLCJrZWVwTWFwcGluZyIsIm1hcCIsImxvY2F0aW9uIiwibGFzdEluZGV4T2YiLCJodHRwVHlwZSIsImZ1bGxQYXRoIiwicXVlcnkiLCJwYXJ0cyIsImh0dHBob3N0IiwiZnVuYyIsIk1hdHJpeCIsInJvd3MiLCJjb2xzIiwiY29udGVudHMiLCJzZXREYXRhIiwiZGF0YSIsInNoaWZ0Iiwic3RydWN0dXJlIiwibiIsIm5ld01hdHJpeCIsImNhbGxiYWNrIiwiY29uc29sZSIsInRhYmxlIiwibG9nIiwidG9BcnJheSIsImVhY2giLCJyb3ciLCJyIiwibWF0cml4IiwiYXJyYXkiLCJzdW0iLCJrIiwibm9ybWFsaXplIiwic3F1YXJlIiwic2l6ZSIsImdldENvbHVtbnMiLCJmbGF0dGVuIiwidHJhbnNwb3NlIiwiZGltZW5zaW9ucyIsIm1hdHJpeERpbWVuc2lvbnMiLCJtYWtlTWF0cml4IiwibGF5ZXIiLCJfJE1hdHJpeF82IiwiXyRBcnJheUxpYnJhcnlfMTEiLCJzZWxmIiwiY29udGFpbnMiLCJjb3VudCIsImZpbmQiLCJmaW5kQWxsIiwidmFsdWVzIiwiZ2V0T2JqZWN0IiwiZ2V0QWxsT2JqZWN0cyIsIm5ld0FycmF5IiwiZ2V0QWxsIiwicmVtb3ZlQWxsIiwicHV0QXQiLCJuZXh0IiwiaXNOYU4iLCJwdXNoQXJyYXkiLCJpbnNlcnQiLCJhcnJheUluZGV4IiwiaGFzQXJyYXkiLCJ0b09iamVjdCIsInJlc2hhcGUiLCJyYW5kb21QaWNrIiwicmVtb3ZlRW1wdHkiLCJpc0FycmF5IiwiaGFzQXJyYXlFbGVtZW50IiwidG9TZXQiLCJzaW5nbGUiLCJwb3BJbmRleCIsImRhdGFUeXBlIiwidHlwZSIsIl9fZnVuY183IiwiYXJyYXlMaWJyYXJ5IiwiXyRQZXJpb2RfOCIsInN1cGVyIiwieWVhciIsImdldFllYXIiLCJmZXRjaGVkIiwidGltZSIsImhvdXIiLCJtaW51dGVzIiwic2Vjb25kcyIsImRhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZGF5IiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJnZXRGdWxsWWVhciIsImlzVGltZVZhbGlkIiwiaXNEYXRlIiwiaXNZZWFyVmFsaWQiLCJpc01vbnRoVmFsaWQiLCJpc0RheVZhbGlkIiwidl9kYXkiLCJpc0xlYXBZZWFyIiwidl9tb250aCIsInZfeWVhciIsImRheXNJbk1vbnRoIiwidG9kYXkiLCJzZWNvbmRzSW5EYXlzIiwiaG91cnMiLCJzZWNvbmRzSW5Ib3VycyIsInNlY29uZHNJbk1pbnV0ZXMiLCJkYXRlVmFsdWUiLCJkaWZmIiwid2hlbiIsInNlY29uZHNUaWxsRGF0ZSIsInRpbWVUb2RheSIsIm1vbWVudCIsIl8kSlNFbGVtZW50c181IiwidGhlV2luZG93IiwiRWxlbWVudCIsImRvY3VtZW50IiwiaHJlZiIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwicmVsIiwiaGVhZCIsImFwcGVuZCIsImZvcm0iLCJqc29uIiwicGVyZm9ybSIsImNoaWxkcmVuIiwiaGFzQXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlIiwiZmlsZXMiLCJfZWxlbWVudF8iLCJub2RlTmFtZSIsImdldEF0dHJpYnV0ZXMiLCJ0b0pzb24iLCJzaW5nbGVQYXJlbnQiLCJjcmVhdGVkIiwiaXNFbGVtZW50IiwiYXR0ciIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiaHRtbCIsImlubmVySFRNTCIsImNyZWF0ZUZyb21IVE1MIiwib3V0ZXJIVE1MIiwiYXR0YWNoRWxlbWVudCIsImF0dGFjaG1lbnQiLCJtYWtlRWxlbWVudCIsIm9wdGlvbnMiLCJvcHRpb24iLCJzZWxlY3RlZCIsImRhdGFzZXQiLCJpY29uIiwiYWRkQ2xhc3NlcyIsImh0bWxTdHJpbmciLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJib2R5IiwiZmlyc3RDaGlsZCIsInBlcmNlcHRvckVsZW1lbnQiLCJzaW5nbGVQYXJhbSIsImNyZWF0ZVBlcmNlcHRvckVsZW1lbnQiLCJjcmVhdGVGcm9tT2JqZWN0Iiwic2V0S2V5IiwiZG9tS2V5IiwibGlzdCIsInN0YXRlIiwib3duZXIiLCJnZXRQYXJlbnRzIiwic3RhdGVTdGF0dXMiLCJhZGRTdGF0ZSIsInBhcmVudCIsImVsZW1lbnRzIiwicGFyYW0iLCJnZXRFbGVtZW50IiwiaGFzU3RyaW5nIiwiY2xhc3NOYW1lIiwiaXNEYXRlVmFsaWQiLCJpc0VtYWlsIiwiaXNOdW1iZXIiLCJpc1Bhc3N3b3JkVmFsaWQiLCJub2RlTmFtZXMiLCJlbGVtZW50TmFtZSIsInZhbGlkYXRlTWUiLCJtZSIsInZhbGlkYXRlRm9ybUlucHV0IiwidmFsaWRhdGVGb3JtU2VsZWN0IiwidmFsaWRhdGVGb3JtVGV4dGFyZWEiLCJ2YWxpZGF0ZU90aGVyRWxlbWVudHMiLCJuYW1lcyIsImlzSW1hZ2VWYWxpZCIsImlucHV0IiwiZXh0Iiwic3Vic3RyaW5nIiwiZmlsZSIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwibXlmaWxlIiwib25sb2FkIiwiZXZlbnQiLCJzcmMiLCJ0YXJnZXQiLCJyZXN1bHQiLCJyZWFkQXNEYXRhVVJMIiwiX19FbXB0eV85IiwiXyRUZW1wbGF0ZV85IiwidmlydHVhbCIsImVsZW1lbnRMaWJyYXJ5IiwiaHRtbENvbGxlY3Rpb25MaWJyYXJ5IiwiSFRNTENvbGxlY3Rpb24iLCJub2RlTGlicmFyeSIsIk5vZGUiLCJub2RlTGlzdExpYnJhcnkiLCJOb2RlTGlzdCIsInByb3RvdHlwZSIsImNoYW5nZU5vZGVOYW1lIiwic2V0T3B0aW9ucyIsImNvbW1vbkFuY2VzdG9yIiwiZWxlbWVudEEiLCJlbGVtZW50QiIsImFuY2VzdG9yQSIsInBhcmVudHMiLCJhbmNlc3RvckIiLCJvbkFkZGVkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0YXRlcyIsInRlbXAiLCJtYW55QnViYmxlZEV2ZW50cyIsImV2ZW50cyIsImJ1YmJsZWRFdmVudCIsInRyaW0iLCJtYW55Tm90QnViYmxlZEV2ZW50cyIsIm5vdEJ1YmJsZWRFdmVudCIsImlzQW5jZXN0b3IiLCJhZGRNdWx0aXBsZUV2ZW50TGlzdGVuZXIiLCJlIiwiaG92ZXIiLCJkbyIsImNzc1ZhbHVlcyIsImNzc1N0eWxlTmFtZSIsImlzZnVuY3Rpb24iLCJjc3NSZW1vdmUiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInAiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoIiwiaWQiLCJjbGFzcyIsImNsYXNzZXMiLCJmb3VuZEVsZW1lbnRzIiwiYWxsRWxlbWVudHMiLCJjbGFzc0xpc3QiLCJoYXNDbGFzc2VzIiwic2VhcmNoQWxsIiwiZmV0Y2giLCJmZXRjaEFsbCIsIm5vZGVzQmV0d2VlbiIsImluQmV0d2Vlbk5vZGVzIiwiY2hpbGQiLCJjdXJyZW50UGFyZW50IiwicGFyZW50Tm9kZSIsImN1c3RvbVBhcmVudHMiLCJyZW1vdmVTdGF0ZSIsImdldFN0YXRlIiwiZm9yY2UiLCJyZW1vdmUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzdGF0ZU5hbWUiLCJzZXRTdGF0ZSIsInJlbmRlciIsInNldEF0dHJpYnV0ZXMiLCJjbG9uZU5vZGUiLCJzZXRLZXlBc3luYyIsImFzeW5jIiwiZHJvcERvd24iLCJwYXJlbnRDb250ZW50IiwiYm94U2hhZG93IiwiZHJvcENvbnRhaW5lciIsInJlbW92ZURyb3BEb3duIiwic3RvcE1vbml0b3IiLCJvYnNlcnZlIiwib2JzZXJ2ZXIiLCJkaXNjb25uZWN0Iiwib25BdHRyaWJ1dGVDaGFuZ2UiLCJhdHRyaWJ1dGUiLCJkZXRhaWwiLCJhdHRyaWJ1dGVOYW1lIiwibW9uaXRvciIsImNvbmZpZyIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25MaXN0IiwiZGlzcGF0Y2hFdmVudCIsIkN1c3RvbUV2ZW50IiwibXV0YXRpb24iLCJjaGVja0NoYW5nZXMiLCJvbkNoYW5nZWQiLCJ1cGRhdGVNZSIsImltYWdlVG9Kc29uIiwic2VsZWN0ZWRJbmRleCIsImV4Y2VwdCIsInJlbW92ZUNoaWxkcmVuIiwiZ2V0QWxsQ3NzUHJvcGVydGllcyIsImNzc1J1bGVzIiwic2VsZWN0b3JUZXh0Iiwic3R5bGVTaGVldHMiLCJwcm9wZXJ0aWVzIiwiZ2V0Q3NzUHJvcGVydGllcyIsInByb3BlcnR5IiwiYWxsUHJvcGVydGllcyIsImhhc0Nzc1Byb3BlcnR5IiwiY3NzUHJvcGVydHlWYWx1ZSIsInN0eWxlcyIsImV4dHJhY3RDU1MiLCJyZW1vdmVQcm9wZXJ0eSIsInRvZ2dsZUNoaWxkIiwiX2NsYXNzZXMiLCJub2RlIiwiY2xlYXJDbGFzc2VzIiwicmVtb3ZlQ2xhc3NlcyIsImFkZCIsInRvZ2dsZUNsYXNzZXMiLCJ0b2dnbGUiLCJyZW1vdmVDbGFzcyIsIl9jbGFzcyIsIm1DbGFzcyIsImFkZENsYXNzIiwidG9nZ2xlQ2xhc3MiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJpblZpZXciLCJwYXJlbnRJZGVudGlmaWVyIiwidG9wIiwiY2xpZW50SGVpZ2h0IiwiaGFzQ2xhc3MiLCJzZXRQcm9wZXJ0aWVzIiwiZ2V0QXR0cmlidXRlTmFtZXMiLCJkaXNwbGF5IiwidmlzaWJpbGl0eSIsInNob3ciLCJoaWRlIiwiZXhjZXB0aW9ucyIsImRlbGV0ZSIsImRlbGV0ZUNoaWxkIiwidG9nZ2xlQ2hpbGRyZW4iLCJwcmVzc2VkIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsInRpbWVTdGFtcCIsImR1cmF0aW9uIiwiY29sbGVjdGlvbiIsIml0ZW0iLCJhUGFyZW50IiwiXyRDb21wb25lbnRzXzMiLCJ0aXRsZXMiLCJ0YWJUaXRsZSIsInZpZXciLCJ0YWIiLCJyb3V0ZXIiLCJkYXRhQXR0cmlidXRlcyIsImVkaXQiLCJjb21wb25lbnRzIiwibGFiZWwiLCJkaXNhYmxlZCIsImNlbGwiLCJkYXRhLWljb24iLCJjdXJzb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ3aWR0aCIsImhlaWdodCIsInJpZ2h0IiwicGFkZGluZyIsImxpbmsiLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwidGl0bGUiLCJwcm9qZWN0aW9uIiwicmVuYW1lIiwiZmlsdGVyIiwiaGVhZGVycyIsImNvbHVtbnMiLCJjb2x1bW5Db3VudCIsImNvbnRlbnQiLCJkYXRhLW5hbWUiLCJkYXRhLXZhbHVlIiwiZGF0YS1yb3ciLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwidGFibGVDb250YWluZXIiLCJ0aXRsZUNvdW50IiwicGxhY2VIb2xkZXIiLCJjZWxscyIsImJ5IiwiZGlyZWN0aW9uIiwiZ2V0VGFibGVEYXRhIiwiY2FsbGJhY2tzIiwiY2xpY2siLCJvcHRpb25DbGFzcyIsInJldmVydCIsImZpcnN0VmlzaWJsZUNvbHVtbiIsInRhYmxlVGl0bGVzIiwidGFibGVDb2x1bW5zIiwiZmlyc3RDb2x1bW4iLCJ0YWJsZVJvdyIsInNlYXJjaFZhbHVlIiwiZmlsdGVyVmFsdWUiLCJmaXJzdENlbGxzIiwiZmlyc3RWaXNpYmxlQ2VsbHMiLCJzb3J0VGFibGUiLCJuZXdUYWJsZUNvbHVtbnMiLCJjcmVhdGVUYWJsZSIsInJlcXVpcmVkIiwiYnV0dG9ucyIsIm5vdGUiLCJmb3JtQ29udGVudHMiLCJsYWJsZVRleHQiLCJjYW1lbENhc2VkVG9UZXh0IiwiYmxvY2siLCJmb3IiLCJwaWNrZXIiLCJjb250YWluZXIiLCJwb3BVcCIsImNvbG9yIiwibXVsdGlwbGUiLCJhY3RpdmUiLCJhbGxvd05hdmlnYXRlIiwic2Nyb2xsUG9zaXRpb24iLCJzZWxlY3QiLCJpZ25vcmUiLCJzZXRWYWx1ZSIsInYiLCJpdGVtcyIsImJvdHRvbSIsIm5hdmlnYXRlIiwiZGVhY3RpdmF0ZSIsImFjdGl2YXRlIiwib3ZlcmZsb3ciLCJwbGFjZUNvbnRlbnRzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlcGxhY2UiLCJ3aW5kb3ciLCJjaG9vc2VXaW5kb3ciLCJjaG9vc2VDb250cm9sIiwiY2hvaWNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0ZXh0RWRpdG9yIiwiZnJhbWVCb3JkZXIiLCJmb250IiwiZm9udEZhbWlseSIsImVkaXRvcldpbmRvdyIsImVkaXRvciIsImNvbnRlbnRXaW5kb3ciLCJkZXNpZ25Nb2RlIiwiZXhlY0NvbW1hbmQiLCJiYWNrZ3JvdW5kIiwicHJvbXB0IiwibGluZU51bWJlcnMiLCJkaXNwbGF5U3RyaW5nIiwiZGlzcGxheUxpdGVyYWwiLCJkaXNwbGF5UHVuY3R1YXRpb24iLCJkaXNwbGF5SXRlbSIsImNob29zZURpc3BsYXkiLCJkaXNwbGF5QXJyYXkiLCJkaXNwbGF5T2JqZWN0IiwiZGlzcGxheWVkIiwibGluZUhlaWdodCIsIm51bWJlcnMiLCJ0b2dnbGVCdXR0b25zIiwiY29kZSIsImxpbmVzIiwidG9nZ2xlcyIsImJsb2NrcyIsInBhcnNlSW50Iiwic2V0UmFuZ2UiLCJoaWRlTnVtYmVycyIsImNvbnRyb2xsZXIiLCJoaWRlQmxvY2siLCJibG9ja0NvbnRlbnQiLCJfJENvbG9yUGlja2VyXzIiLCJlbGVtZW50TW9kaWZpZXIiLCJjb2xvckluZGljYXRvclBvc2l0aW9uIiwieSIsIm9wYWNpdHlJbmRpY2F0b3JQb3NpdGlvbiIsImNvbnZlcnRUbyIsImluaXQiLCJjb2xvcldpbmRvdyIsIm9wYWNpdHlXaW5kb3ciLCJjb2xvckNhbnZhcyIsIm9wYWNpdHlDYW52YXMiLCJjb2xvck1hcmtlciIsIm9wYWNpdHlNYXJrZXIiLCJwaWNrZWRDb2xvciIsImNvbG9yQ29udGV4dCIsImdldENvbnRleHQiLCJvcGFjaXR5Q29udGV4dCIsImlubmVyVGV4dCIsInJlcGx5IiwibGlzdGVuIiwiY2FsaWJyYXRlQ29sb3IiLCJjb2xvckdyYWRpZW50IiwiY3JlYXRlTGluZWFyR3JhZGllbnQiLCJhZGRDb2xvclN0b3AiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsImNhbGlicmF0ZU9wYWNpdHkiLCJyZ2JhIiwiY2xlYXJSZWN0Iiwib3BhY2l0eUdyYWRpZW50IiwiYWRkT3BhY2l0eSIsImlzQ29sb3JNb3VzZURvd24iLCJpc09wYWNpdHlNb3VzZURvd24iLCJhZGRlZCIsImRpc3Bvc2UiLCJjdXJyZW50WCIsImNsaWVudFgiLCJsZWZ0IiwiY3VycmVudFkiLCJjbGllbnRZIiwicGlja2VkIiwiZ2V0UGlja2VkQ29sb3IiLCJnIiwiZ2V0UGlja2VkT3BhY2l0eSIsImNvbnZlckNvbG9yIiwiY29udmVydGVkQ29sb3IiLCJyZ2JUb0hleCIsInJnYlRvSFNMIiwiaW1hZ2VEYXRhIiwiZ2V0SW1hZ2VEYXRhIiwiYWxwaGEiLCJjZWlsIiwiZHJhdyIsImludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImNvbG9yVHlwZSIsImhleFRvUkdCIiwiaGV4IiwidG9GaXhlZCIsImhleFRvSFNMIiwicmdiIiwicm91bmQiLCJjbWluIiwibWluIiwiY21heCIsIm1heCIsImRlbHRhIiwiaCIsInMiLCJsIiwiYWJzIiwiaHNsVG9SR0IiLCJoc2wiLCJzdWJzdHIiLCJQSSIsIm0iLCJoc2xUb0hleCIsIm9wYWNpdHkiLCJwb2ludHMiLCJnZXRPcGFjaXR5IiwiaW52ZXJ0Q29sb3IiLCJpbnZlcnQiLCJpbnZlcnRIZXgiLCJfJEljb25zXzEiLCJhZGRyZXNzLWJvb2siLCJhbWF6b24iLCJhbWJ1bGFuY2UiLCJhbmRyb2lkIiwiYXBwbGUiLCJhc3RlcmlzayIsImF0IiwiYmFja3dhcmQiLCJiYW5rIiwiYmF0dGVyeSIsImJlZCIsImJlbGwiLCJiaWN5Y2xlIiwiYmlydGhkYXktY2FrZSIsImJpdGJ1Y2tldCIsImJpdGNvaW4iLCJibHVldG9vdGgiLCJib2x0IiwiYm9vayIsImJ1cyIsImNhYiIsImNhbGN1bGF0b3IiLCJjYW1lcmEiLCJjYXIiLCJjZXJ0aWZpY2F0ZSIsImNocm9tZSIsImNsb3VkIiwiY29mZmVlIiwiY29tbWVudCIsImNvbXBhc3MiLCJjb3B5IiwiY29weXJpZ2h0IiwiY2xvbmUiLCJjcmVkaXQtY2FyZCIsImN1YmUiLCJkZXNrdG9wIiwiZGlhbW9uZCIsImRvd25sb2FkIiwiZHJpdmVycy1saWNlbnNlIiwiZHJvcGJveCIsImRydXBhbCIsImVkZ2UiLCJlamVjdCIsImVsbGlwc2lzLWgiLCJlbnZlbG9wZSIsImVyYXNlciIsImV4Y2hhbmdlIiwiZXhjbGFtYXRpb24iLCJleHBhbmQiLCJleWUiLCJleWUtc2xhc2giLCJmYXgiLCJmZW1hbGUiLCJmaWxtIiwiZmlyZSIsImZsaWNrciIsImZvbGRlciIsImZvcndhcmQiLCJmb3Vyc3F1YXJlIiwiZ2lmdCIsImdsYXNzIiwiZ2xvYmUiLCJnb29nbGUiLCJncmFkdWF0aW9uLWNhcCIsImdyb3VwIiwiaGFzaHRhZyIsImhlYWRwaG9uZXMiLCJoZWFydCIsImhpc3RvcnkiLCJob21lIiwiaG90ZWwiLCJob3VyZ2xhc3MiLCJpbWFnZSIsImltZGIiLCJpbmJveCIsImluZHVzdHJ5IiwiaW5mbyIsImluc3RhZ3JhbSIsImxhbmd1YWdlIiwibGFwdG9wIiwibGVhZiIsImxlZ2FsIiwibGlmZS1ib3V5IiwibGlua2VkaW4iLCJsaW51eCIsImxvY2siLCJtYWdpYyIsIm1hZ25ldCIsIm1hbGUiLCJtaWNyb3Bob25lIiwibW9iaWxlIiwibW90b3JjeWNsZSIsIm11c2ljIiwib3BlcmEiLCJwYWludC1icnVzaCIsInBhcGVyLXBsYW5lIiwicGF1c2UiLCJwYXciLCJwYXlwYWwiLCJwZW4iLCJwZW5jaWwiLCJwaG9uZSIsInBob3RvIiwicGludGVyZXN0IiwicGxhbmUiLCJwbGF5IiwicGx1ZyIsInBsdXMiLCJwb2RjYXN0IiwicXVlc3Rpb24iLCJxdW9yYSIsInJlY3ljbGUiLCJyZWRkaXQiLCJyZWRvIiwicmVmcmVzaCIsInJlc2lzdGFuY2UiLCJyZXR3ZWV0Iiwicm9hZCIsInJvY2tldCIsInJzcyIsInNhZmFyaSIsInNjcmliZSIsInNlbmQiLCJzZXJ2ZXIiLCJzaGlwIiwic2lnbi1pbiIsInNpdGVtYXAiLCJza3lhdGxhcyIsInNreXBlIiwic2xpZGVzaGFyZSIsInNuYXBjaGF0Iiwic291bmRjbG91ZCIsInNwb29uIiwic3BvdGlmeSIsInN0YWNrLWV4Y2hhbmdlIiwic3RhciIsInN0ZWFtIiwic3RpY2t5LW5vdGUiLCJzdG9wIiwic3RyZWV0LXZpZXciLCJzdWJ3YXkiLCJzdWl0Y2FzZSIsInN1cHBvcnQiLCJ0YXNrcyIsInRheGkiLCJ0ZWxlZ3JhbSIsInRlbGV2aXNpb24iLCJ0ZXJtaW5hbCIsInRoZXJtb21ldGVyIiwidGlja2V0IiwidGltZXMiLCJ0cmFpbiIsInRyYXNoIiwidHJlZSIsInRyb3BoeSIsInRydWNrIiwidHVtYmxyIiwidHYiLCJ0d2l0dGVyIiwidW1icmVsbGEiLCJ1bml2ZXJzaXR5IiwidW5sb2NrIiwidXBsb2FkIiwidXNiIiwidXNlciIsInZpZGVvLWNhbWVyYSIsInZpbWVvIiwid2FybmluZyIsIndlY2hhdCIsIndlaWJvIiwid2hhdHNhcHAiLCJ3aGVlbGNoYWlyIiwid2lmaSIsIndpa2lwZWRpYS13Iiwid29yZHByZXNzIiwieWVscCIsInlvYXN0IiwieW91dHViZSIsInVuZG8iLCJfX2Z1bmNfMTUiLCJfX2FycmF5TGlicmFyeV8xNCIsIl8kT2JqZWN0c0xpYnJhcnlfMTQiLCJieXRlcyIsInJvdWdoT2JqZWN0U2l6ZSIsImV4dHJhY3RGcm9tSnNvbkFycmF5IiwibWV0YSIsImVTb3VyY2UiLCJtYWtlSXRlcmFibGUiLCJTeW1ib2wiLCJpdGVyYXRvciIsImdldEluZGV4IiwiaGFuZGxlciIsInJlY2VpdmVyIiwiUHJveHkiLCJlcnIiLCJSZWZsZWN0IiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJkZXNjcmlwdG9yIiwiZGVsZXRlUHJvcGVydHkiLCJuYW1lZCIsInZhbHVlT2ZPYmplY3RBcnJheSIsImtleXNPZk9iamVjdEFycmF5IiwiY29uY2F0Iiwib2JqZWN0T2ZPYmplY3RBcnJheSIsIm5ld09iamVjdCIsImlzU3ViT2JqZWN0Iiwic2FtcGxlIiwiZ2V0U3ViT2JqZWN0IiwibWF0Y2hlZCIsImRlc2NlbmQiLCJzb3J0ZWQiLCJuRGF0YSIsImVudHJpZXMiLCJncmVhdGVyIiwibGVzc2VyIiwiZ2V0TGFzdCIsImdldEF0Iiwia2V5T2YiLCJsYXN0S2V5T2YiLCJfX2FycmF5TGlicmFyeV8xMyIsIl8kTWF0aHNMaWJyYXJ5XzEzIiwicGxhY2VVbml0IiwibnVtIiwiZGlyIiwidmFyaWFuY2UiLCJtZWFuIiwic3RhbmRhcmREZXZpYXRpb24iLCJzcXJ0IiwibWVkaWFuIiwibW9kZSIsInJlY29yZCIsIm5vcm1hbGl6ZURhdGEiLCJub3JtYWxpemVkIiwibWluaW11aW1Td2FwcyIsImFyciIsIm9yZGVyIiwic3dhcCIsImNoZWNrZWQiLCJjb3VudGVyIiwiZmluYWwiLCJwcmltZUZhY3Rvcml6ZSIsIm51bWJlciIsImRpdmlkZW5kIiwiZGl2aWRlciIsImZhY3RvcnMiLCJsY2YiLCJjb21tb25GYWN0b3JzIiwibWFpbiIsImZhY3RvciIsInN0cmlwSW50ZWdlciIsInN0cmlwRnJhY3Rpb24iLCJjaGFuZ2VCYXNlIiwicGFyc2VGbG9hdCIsInByb2R1Y3QiLCJhcnJheXMiLCJzdWIiLCJtdWwiLCJkaXZpZGUiLCJtYXRoTGlicmFyeSIsIm9iamVjdExpYnJhcnkiLCJfJEFuYWx5c2lzTGlicmFyeV8xMCIsImVudHJvcHkiLCJsb2cyIiwiaW5mb3JtYXRpb25HYWluIiwidGFyZ2V0Tm9kZSIsInZhcmlhYmxlRGF0YSIsImFycmFuZ2VEYXRhIiwidGFyZ2V0RGF0YSIsInRhcmdldEVudHJvcHkiLCJzdW1PZkluZm9ybWF0aW9uIiwidmFyaWFibGVWYWx1ZXMiLCJ2YXJpYWJsZUxlbmd0aCIsImhpZ2hlc3RJbmZvcm1hdGlvbkdhaW5Ob2RlIiwibm9kZXMiLCJnYWluZWRJbmZvcm1hdGlvbiIsInF1YXJ0aWxlUmFuZ2UiLCJtaWRkbGUiLCJfZHQiLCJnZXRNaWRkbGUiLCJtaWRkbGUxIiwibWlkZGxlMiIsIm1pZGRsZXMiLCJoYWxmcyIsImxheWVycyIsImxheWVyMSIsImxheWVyMiIsImxheWVyMyIsImxheWVyNCIsIm1pZGRsZTMiLCJxMSIsIl9fbWF0aExpYnJhcnlfMTIiLCJfX29iamVjdExpYnJhcnlfMTIiLCJfX2FycmF5TGlicmFyeV8xMiIsIl8kYmFzZV8xNiIsIkJhc2UiLCJjb2xvckhhbmRsZXIiLCJtYXRoIiwiYW5hbHl0aWNzIiwiaWNvbnMiLCJsb2FkQ3NzIiwiQ29sb3JQaWNrZXIiLCJQZXJpb2QiLCJGdW5jIiwiQ29tcG9uZW50cyIsIlRlbXBsYXRlIiwiTmV1cmFsTmV0d29yayIsImloV2VpZ2h0cyIsImhOb2RlcyIsImlOb2RlcyIsInJhbmRvbWl6ZSIsImloQmlhcyIsImhvV2VpZ2h0cyIsIm9Ob2RlcyIsImhvQmlhcyIsImxyIiwiaW5wdXRBcnJheSIsImlucHV0cyIsInByZXBhcmVJbnB1dHMiLCJoaWRkZW5zIiwibXVsdGlwbHkiLCJzaWdtb2lkIiwib3V0cHV0cyIsInRhcmdldEFycmF5IiwiZmVlZEZvd2FyZCIsImVycm9ycyIsImdyYWRpZW50cyIsImRTaWdtb2lkIiwiaW5wdXRzVHJhbnNwb3NlZCIsImNoYW5nZSIsInRhcmdldHMiLCJob0Vycm9ycyIsInN1YnRyYWN0IiwiaG9VcGRhdGVzIiwiZ2V0V2VpZ2h0c1VwZGF0ZSIsImhvV2VpZ2h0c1RyYW5zcG9zZWQiLCJpaEVycm9ycyIsImloVXBkYXRlcyIsInRyYWluaW5nRGF0YSIsInBlcmlvZCIsImVwb2NoIiwicHJlcGFyZVRhcmdldHMiLCJydW4iLCJiYWNrcHJvcGFnYXRlIiwiZnJvbUFycmF5IiwiSWNvbnMiLCJTaGFkb3ciLCJjaGlsZFByb3BlcnRpZXMiLCJ1cGRhdGVOZXdFbGVtZW50Q2hpbGRQcm9wZXJ0aWVzIiwicHJvcGVydHlDb2xsZWN0aW9uIiwicG9zaXRpb25zIiwiaWRlbnRpZmllciIsInNldFBvc2l0aW9ucyIsImdldENoaWxkcmVuIiwidXBkYXRlTmV3RWxlbWVudENoaWxkQXR0cmlidXRlcyIsImF0dHJpYnV0ZUNvbGxlY3Rpb24iLCJjaGlsZEF0cnJpYnV0ZXMiLCJjaGlsZERldGFpbHMiLCJkZXRhaWxzIiwicHJlcGFyZUVsZW1lbnQiLCJtYWtlQ2xvbmVhYmxlIiwicmVtb3ZlRWxlbWVudCIsImxlbmd0IiwiY2xvbmVFbGVtZW50IiwidW5pdENsb25lIiwiY2hpbGRDc3MiLCJzZXRDaGlsZFByb3BlcnRpZXMiLCJzZXRDaGlsZEF0dHJpYnV0ZXMiLCJhZGRDbGFzc2VzVG9DaGlsZCIsInJlbW92ZUNsYXNzZXNGcm9tQ2hpbGQiLCJBcnJheUxpYnJhcnkiLCJPYmplY3RzTGlicmFyeSIsIk1hdGhzTGlicmFyeSIsIkFuYWx5c2lzTGlicmFyeSIsIkNvbXByZXNzaW9uIiwiZ2V0RnJlcXVlbmN5IiwiZnJlcXVlbmN5IiwiZ2V0UHJvYmFiaWxpdGllcyIsInByb2JzIiwicHJvYmFiaWxpdGllcyIsInByb2IiLCJpc1VEQyIsIm5vUHJlZml4Iiwia2VlcFJ1bm5pbmciLCJhZGRTdXJmaXgiLCJzdHIiLCJjaGVja1ByZWZpeCIsInNmQWxnb3JpdGhtIiwiY29kZVdvcmQiLCJzcGxpdERhdGEiLCJjb21pbmdOb2RlIiwicHJvYmFiaWxpdHkiLCJodWZmbWFuQ29kaW5nIiwicHJvZCIsIm9yaWdpbnMiLCJkaWciLCJjb21pbmciLCJkb3duIiwidXAiLCJuZXdMZWFmIiwibmFtZUl0ZW1zIiwiYXZnTGVuZ3RoIiwiZ29sb21iIiwicSIsInVuYXJ5IiwiZmlsbCIsImVuY29kZUFyaXRobWV0aWMiLCJnZXRYIiwiYm91bmRzIiwidSIsImxvd2VyTiIsImJvdW5kIiwidXBwZXJOIiwiZGVjb2RlQXJpdGhtZXRpYyIsInRhZyIsImNvbXBsZXRlIiwiZW5jb2RlRGlhZ3JhbSIsImRpY3Rpb25hcnkiLCJlbmNvZGUiLCJzeW1ib2wiLCJlbmNvZGVMWjEiLCJ3aW5kb3dTaXplIiwic2VhcmNoU2l6ZSIsImxvb2tBaGVhZFNpemUiLCJsb29rQWhlYWRTdG9wIiwic2VhcmNoU3RvcCIsImxvb2tBaGVhZEJ1ZmZlciIsInNlYXJjaEJ1ZmZlciIsImdldFRyaXBsZXQiLCJvIiwiZm91bmRNYXRjaGVzIiwiaW5kZXhJbkRhdGEiLCJpbmRleEluTG9va0FoZWFkIiwibWF0Y2hpbmciLCJkZWNvZGVMWjEiLCJ0cmlwbGV0cyIsInQiLCJlbmNvZGVMWjIiLCJsYXN0SW5kZXgiLCJkdXBsZXRzIiwiZGVjb2RlTFoyIiwiZW5jb2RlTFpXIiwiaW5pdERpY3Rpb25hcnkiLCJkZWNvZGVMWlciLCJzaW5nbGV0b24iLCJyZWJ1aWxkIiwiYnVpbGRXaXRoIiwiZGVjb2RlIiwiYnVpbGQiLCJfX0Z1bmNfMTgiLCJfX2Z1bmNfMTgiLCJfX09iamVjdHNMaWJyYXJ5XzE5IiwiX19vYmplY3RMaWJyYXJ5XzE5IiwiX19GdW5jXzE3IiwiX19OZXVyYWxOZXR3b3JrXzE3IiwiX19NYXRyaXhfMTciLCJfX1RlbXBsYXRlXzE3IiwiX19Db21wb25lbnRzXzE3IiwiX19Db21wcmVzc2lvbl8xNyIsIl9fQ29sb3JQaWNrZXJfMTciLCJfX0FycmF5TGlicmFyeV8xNyIsIl9fQW5hbHlzaXNMaWJyYXJ5XzE3IiwiX19PYmplY3RzTGlicmFyeV8xNyIsIl9fTWF0aHNMaWJyYXJ5XzE3IiwiXyRicm93c2VyXzE3IiwiSW5kZXhlZExpYnJhcnkiLCJ2ZXJzaW9uIiwiaW5pdGlhbGl6ZWQiLCJpbmRleGVkREIiLCJtb3pJbmRleGVkREIiLCJ3ZWJraXRJbmRleGVkREIiLCJtc0luZGV4ZWREQiIsIklEQlRyYW5zYWN0aW9uIiwid2Via2l0SURCVHJhbnNhY3Rpb24iLCJtc0lEQlRyYW5zYWN0aW9uIiwiSURCS2V5UmFuZ2UiLCJ3ZWJraXRJREJLZXlSYW5nZSIsIm1zSURCS2V5UmFuZ2UiLCJyZXF1ZXN0Iiwib3BlbiIsIm9udXBncmFkZW5lZWRlZCIsIm9uc3VjY2VzcyIsIm9uZXJyb3IiLCJnZXRWZXJzaW9uIiwid29ya2VkRXZlbnQiLCJjb2xsZWN0aW9uRXhpc3RzIiwidGhlbiIsImRiIiwib2JqZWN0U3RvcmVOYW1lcyIsImNyZWF0ZUNvbGxlY3Rpb24iLCJjb2xsZWN0aW9ucyIsImNyZWF0ZU9iamVjdFN0b3JlIiwia2V5UGF0aCIsImVtcHR5Q29sbGVjdGlvbiIsInJlbW92ZWRDb3VudCIsImZvdW5kQ291bnQiLCJtYW55IiwidHJhbnNhY3Rpb24iLCJzdG9yZSIsIm9iamVjdFN0b3JlIiwib25jb21wbGV0ZSIsImFjdGlvbiIsIm9rIiwiX2lkIiwiY2F0Y2giLCJkb2N1bWVudHMiLCJvcGVuQ3Vyc29yIiwiY29udGludWUiLCJkb2N1bWVudEV4aXN0cyIsInJlcyIsImdlbmVyYXRlSWQiLCJjaGVja0lkIiwidXBkYXRlIiwiY2hlY2siLCJyRXZlbnQiLCJzdGF0dXMiLCJzYXZlIiwiZXhpc3RzIiwiQXBwTGlicmFyeSIsIm1ha2VXZWJhcHAiLCJhbmNob3IiLCJwYXJlbnRBbmNob3IiLCJwcmVwYXJlVXJsIiwicHJldmVudERlZmF1bHQiLCJwdXNoU3RhdGUiLCJvbnBvcHN0YXRlIiwib3JpZ2luIiwicHJvdG9jb2wiLCJhamF4IiwibWV0aG9kIiwic2VjdXJlZCIsIkZvcm1EYXRhIiwiWE1MSHR0cFJlcXVlc3QiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwicmVzcG9uc2VUZXh0Iiwib25wcm9ncmVzcyIsImxvYWRlZCIsInRvdGFsIiwiXyRpdGVtXzIyIiwiY3JlYXRlIiwiYmFzZSIsInByaWNlIiwicXVhbnRpdHkiLCJhZGRUb0NhcnQiLCJyZW1vdmVGcm9tQ2FydCIsImN1cnJlbnRRdWFudGl0eSIsImNhcnQiLCJyZWR1Y2UiLCJwYWdlIiwiZGVzY3JpcHRpb25MaXN0IiwiZGVzYyIsImRlc2NyaXB0aW9uIiwic3lzdGVtIiwic21hbGxTY3JlZW4iLCJtYXRjaGVzIiwianVzdGlmeVNlbGYiLCJfJGxvY2F0aW9uc18yNiIsIkxhZ29zIiwic3RhdGlvbnMiLCJBYnVqYSIsIkVudWd1IiwiXyRjb3Vwb25zXzI0IiwiaGVsbG93IiwiY3V0Iiwic2xhc2giLCJjaGVja291dCIsImJ1eWVyIiwiZGVsaXZlcnlUeXBlIiwiYWxlcnQiLCJpdGVtTGlzdCIsImNvc3QiLCJ1bnNoaWZ0IiwiYWRkQ29tbWFUb01vbmV5IiwiZ2V0SXRlbXNUb3RhbCIsImdldERlbGl2ZXJ5RmVlIiwiZ2V0VG90YWwiLCJzZWN0aW9ucyIsImJhY2tCdXR0b24iLCJuZXh0QnV0dG9uIiwiZmluaXNoQnV0dG9uIiwidXNlQ291cG9uIiwicGFnZUNsaWNrZWQiLCJzZWN0aW9uTm8iLCJqc29uRm9ybSIsImFkZHJlc3MiLCJ1cGRhdGVGZWVzIiwicHJpbnRSZWNlaXB0IiwiYXBwbHlDb3Vwb24iLCJkZWxpdmVyeUZlZSIsIml0ZW1zVG90YWwiLCJmZWUiLCJyZWNpZXB0IiwiY2xlYXIiLCJfX0Jhc2VfMjMiLCJfX0luZGV4ZWRMaWJyYXJ5XzIzIiwiX19BcnJheUxpYnJhcnlfMjMiLCJfX0FwcExpYnJhcnlfMjMiLCJhcHBMaWJyYXJ5Iiwic3RvcmFnZSIsImRhdGFiYXNlIiwiY2F0ZWdvcnkiLCJ0YWdzIiwic2F2ZWQiLCJkZWxldGVkIiwic2hvd0VtcHR5IiwidXBkYXRlVG90YWwiLCJncmlkVGVtcGxhdGVSb3dzIiwic2luZ2xlSXRlbSIsInJlcGxhY2VXaXRoIiwic3RvcmVkSXRlbXMiLCJfX3NlbGZfMjMiLCJtYXRjaE1lZGlhIiwiaXRlbXNMaXN0IiwiaGVhZGVyIiwicm91dGUiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0EsSUFBQUEsRUFBQSxNQUFBQyxjQUFBQyxLQUFBQyxTQUFBLDZCQUFBRCxLQUFBRSxPQUFBLDZCQUFBRixLQUFBRyxPQUFBLGFBQUFILEtBQUFJLFFBQUEsNEJBQUFKLEtBQUFLLE9BQUEsQ0FBQSxVQUFBLFVBQUEsUUFBQSxRQUFBLE1BQUEsT0FBQSxPQUFBLFNBQUEsWUFBQSxVQUFBLFdBQUEsWUFBQUwsS0FBQU0sS0FBQSxDQUFBLFNBQUEsU0FBQSxVQUFBLFlBQUEsV0FBQSxTQUFBLFlBQUFOLEtBQUFPLFFBQUEsQ0FBQSxPQUFBLFNBQUEsbUJBQUFQLEtBQUFRLFNBQUEsQ0FBQSxVQUFBLFNBQUEsV0FBQSxXQUFBUixLQUFBUyxVQUFBLENBQUEsZUFBQSxRQUFBLFVBQUEsV0FBQSxVQUFBVCxLQUFBVSxVQUFBLENBQUEsVUFBQSxRQUFBLFFBQUEsT0FBQVYsS0FBQVcsY0FBQSxDQUFBLFFBQUEsYUFBQVgsS0FBQVksaUJBQUEsQ0FBQSxVQUFBLFlBQUFaLEtBQUFhLFlBQUEsQ0FBQSxjQUFBLFVBQUEsVUFBQSxZQUFBLFVBQUEsY0FBQSxhQUFBLFdBQUFDLE9BQUFkLEtBQUFlLGNBQUEsQ0FBQSxVQUFBLFNBQUEsVUFBQSxPQUFBLFVBQUFmLEtBQUFnQixXQUFBLENBQUEsUUFBQSxrQkFBQSxZQUFBLFFBQUEsY0FBQSxVQUFBLFVBQUEsZUFBQSxVQUFBLFNBQUEsVUFBQSxTQUFBLFVBQUEsV0FBQSxXQUFBLFNBQUEsUUFBQSxrQkFBQSxnQkFBQSxjQUFBLFFBQUEsWUFBQSxVQUFBLFlBQUFoQixLQUFBaUIsV0FBQSxDQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsUUFBQSxPQUFBLFFB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QSw4QkFBQW02QixFQUFBMTdCLGlCQUFBLFFBQUF6QixJQUFBLG9CQUFBQSxFQUFBRSxPQUFBOEMsSUFBQWcyQixLQUFBcndCLFlBQUF3MEIsRUFBQTNtQyxLQUFBLGVBQUEyUCxVQUFBL1osSUFBQSxJQUFBOHdDLEVBQUFwaUMsU0FBQXdDLEtBQUE3RyxRQUFBLGdCQUFBLElBQUEsSUFBQWdULEtBQUF5ekIsRUFBQXp6QixFQUFBek0sUUFBQXpPLEtBQUFHLGNBQUE0QixTQUFBbEUsRUFBQXNDLGVBQUErYSxFQUFBL0csVUFBQSxDQUFBLFlBQUErRyxFQUFBMWIsSUFBQSxDQUFBNGEsUUFBQSxXQUFBcTBCLEVBQUFJLFNBQUFKLEVBQUFJLE1BQUEsS0FBQXRpQyxTQUFBd0MsS0FBQWtKLGVBQUEsQ0FBQUQsT0FBQSxDQUFBLGtCQUFBeTJCLEVBQUE5aEIsUUFBQXBnQixTQUFBMkcsaUJBQUEsbUJBQUF6QixJQUFBZzlCLEVBQUF6NEIsU0FBQTQzQixFQUFBL0UsV0FBQXAzQixJQUFBZzlCLEVBQUFJLFl2QkRBIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XG4iLCJ2YXIgXyRGdW5jXzQ9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLmNhcGl0YWxzPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIix0aGlzLnNtYWxscz1cImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6XCIsdGhpcy5kaWdpdHM9XCIxMjM0NTY3ODkwXCIsdGhpcy5zeW1ib2xzPVwiLC4vPychQCMkJV4mKigpLV8rPWB+XFxcXHwgXCIsdGhpcy5tb250aHM9W1wiSmFudWFyeVwiLFwiRmVidWFyeVwiLFwiTWFyY2hcIixcIkFwcmlsXCIsXCJNYXlcIixcIkp1bmVcIixcIkp1bHlcIixcIkF1Z3VzdFwiLFwiU2VwdGVtYmVyXCIsXCJPY3RvYmVyXCIsXCJOb3ZlbWJlclwiLFwiRGVjZW1iZXJcIl0sdGhpcy5kYXlzPVtcIlN1bmRheVwiLFwiTW9uZGF5XCIsXCJUdWVzZGF5XCIsXCJXZWRuZXNkYXlcIixcIlRodXJzZGF5XCIsXCJGcmlkYXlcIixcIlNhdHVyZGF5XCJdLHRoaXMuZ2VuZGVycz1bXCJNYWxlXCIsXCJGZW1hbGVcIixcIkRvIG5vdCBkaXNjbG9zZVwiXSx0aGlzLm1hcml0YWxzPVtcIk1hcnJpZWRcIixcIlNpbmdsZVwiLFwiRGl2b3JjZWRcIixcIldpZG93ZWRcIl0sdGhpcy5yZWxpZ2lvbnM9W1wiQ2hyaXN0YWluaXR5XCIsXCJJc2xhbVwiLFwiSnVkYWlzbVwiLFwiUGFnYW5pc21cIixcIkJ1ZGlzbVwiXSx0aGlzLnVzZXJUeXBlcz1bXCJzdHVkZW50XCIsXCJzdGFmZlwiLFwiYWRtaW5cIixcImNlb1wiXSx0aGlzLnN0YWZmUmVxdWVzdHM9W1wibGVhdmVcIixcImFsbG93YW5jZVwiXSx0aGlzLnN0dWRlbnRzUmVxdWVzdHM9W1wiYWJzZW5jZVwiLFwiYWNhZGVtaWNcIl0sdGhpcy5zdWJqZWN0TGlzdD1bXCJNYXRoZW1hdGljc1wiLFwiRW5nbGlzaFwiLFwiUGh5c2ljc1wiLFwiQ2hlbWlzdHJ5XCIsXCJCaW9sb2d5XCIsXCJBZ3JpY3VsdHVyZVwiLFwiTGl0ZXJhdHVyZVwiLFwiSGlzdG9yeVwiXS5zb3J0KCksdGhpcy5zdWJqZWN0TGV2ZWxzPVtcIkdlbmVyYWxcIixcIlNlbmlvclwiLFwiU2NpZW5jZVwiLFwiQXJ0c1wiLFwiSnVuaW9yXCJdLHRoaXMuZm9udFN0eWxlcz1bXCJBcmlhbFwiLFwiVGltZXMgTmV3IFJvbWFuXCIsXCJIZWx2ZXRpY2FcIixcIlRpbWVzXCIsXCJDb3VyaWVyIE5ld1wiLFwiVmVyZGFuYVwiLFwiQ291cmllclwiLFwiQXJpYWwgTmFycm93XCIsXCJDYW5kYXJhXCIsXCJHZW5ldmFcIixcIkNhbGlicmlcIixcIk9wdGltYVwiLFwiQ2FtYnJpYVwiLFwiR2FyYW1vbmRcIixcIlBlcnBldHVhXCIsXCJNb25hY29cIixcIkRpZG90XCIsXCJCcnVzaCBTY3JpcHQgTVRcIixcIkx1Y2lkYSBCcmlnaHRcIixcIkNvcHBlcnBsYXRlXCIsXCJTZXJpZlwiLFwiU2FuLVNlcmlmXCIsXCJHZW9yZ2lhXCIsXCJTZWdvZSBVSVwiXSx0aGlzLnBpeGVsU2l6ZXM9W1wiMHB4XCIsXCIxcHhcIixcIjJweFwiLFwiM3B4XCIsXCI0cHhcIixcIjVweFwiLFwiNnB4XCIsXCI3cHhcIixcIjhweFwiLFwiOXB4XCIsXCIxMHB4XCIsXCIyMHB4XCIsXCIzMHB4XCIsXCI0MHB4XCIsXCI1MHB4XCIsXCI2MHB4XCIsXCI3MHB4XCIsXCI4MHB4XCIsXCI5MHB4XCIsXCIxMDBweFwiLFwiTm9uZVwiLFwiVW5zZXRcIixcImF1dG9cIixcIi13ZWJraXQtZmlsbC1hdmFpbGFibGVcIl0sdGhpcy5jb2xvcnM9W1wiUmVkXCIsXCJHcmVlblwiLFwiQmx1ZVwiLFwiWWVsbG93XCIsXCJCbGFja1wiLFwiV2hpdGVcIixcIlB1cnBsZVwiLFwiVmlvbGV0XCIsXCJJbmRpZ29cIixcIk9yYW5nZVwiLFwiVHJhbnNwYXJlbnRcIixcIk5vbmVcIixcIlVuc2V0XCJdLHRoaXMuYm9sZG5lc3M9WzEwMCwyMDAsMzAwLDQwMCw1MDAsNjAwLDcwMCw4MDAsOTAwLDFlMyxcImxpZ2h0ZXJcIixcImJvbGRcIixcImJvbGRlclwiLFwibm9ybWFsXCIsXCJ1bnNldFwiXSx0aGlzLmJvcmRlclR5cGVzPVtcIlNvbGlkXCIsXCJEb3R0ZWRcIixcIkRvdWJsZVwiLFwiR3Jvb3ZlXCIsXCJEYXNoZWRcIixcIkluc2V0XCIsXCJOb25lXCIsXCJVbnNldFwiLFwiT3V0c2V0XCIsXCJSaWdnZWRcIixcIkluaGVyaXRcIixcIkluaXRpYWxcIl0sdGhpcy5zaGFkb3dzPVtcIjJweCAycHggNXB4IDJweCByZWRcIixcIjJweCAycHggNXB4IGdyZWVuXCIsXCIycHggMnB4IHllbGxvd1wiLFwiMnB4IGJsYWNrXCIsXCJOb25lXCIsXCJVbnNldFwiXSx0aGlzLmJvcmRlcnM9W1wiMXB4IHNvbGlkIGJsYWNrXCIsXCIycHggZG90dGVkIGdyZWVuXCIsXCIzcHggZGFzaGVkIHllbGxvd1wiLFwiMXB4IGRvdWJsZSByZWRcIixcIk5vbmVcIixcIlVuc2V0XCJdLHRoaXMuYWxpZ25tZW50PVtcIkxlZnRcIixcIkp1c3RpZmllZFwiLFwiUmlnaHRcIixcIkNlbnRlclwiXX1leHRyYWN0U291cmNlKHNvdXJjZSl7bGV0IHZhbHVlPXRoaXMuaW5CZXR3ZWVuKHNvdXJjZSxcIiQjJntcIixcIn0mIyRcIik7dHJ5e3ZhbHVlPUpTT04ucGFyc2UodmFsdWUpfWNhdGNoKGVycm9yKXt2YWx1ZT17fX1yZXR1cm4gdmFsdWV9aW5kZXhBdChoYXlzdGFjaz1cIlwiLG5lZWRsZT1cIlwiLHBvcz0wKXtpZihwb3M9cG9zfHwwLC0xPT1oYXlzdGFjay5pbmRleE9mKG5lZWRsZSkpcmV0dXJuLTE7aWYocG9zPj0oaGF5c3RhY2s9aGF5c3RhY2suc3BsaXQobmVlZGxlKSkubGVuZ3RoKXJldHVybi0xO2xldCBpbmRleD0wO2ZvcihsZXQgaT0wO2k8aGF5c3RhY2subGVuZ3RoO2krKylpPD1wb3MmJihpbmRleCs9aGF5c3RhY2tbaV0ubGVuZ3RoKTtyZXR1cm4gaW5kZXgrPW5lZWRsZS5sZW5ndGgqcG9zfWNvbWJpbmUoaGF5c3RhY2s9XCJcIixmaXJzdD1cIlwiLHNlY29uZD1cIlwiLHBvcz0wKXtsZXQgYXQxPXBvcz1wb3N8fDAsYXQyPWZpcnN0PT09c2Vjb25kP3BvcysxOnBvcyxzdGFydD10aGlzLmluZGV4QXQoaGF5c3RhY2ssZmlyc3QsYXQxKSxlbmQ9dGhpcy5pbmRleEF0KGhheXN0YWNrLHNlY29uZCxhdDIpO3JldHVybi0xPT1zdGFydHx8c3RhcnQrZmlyc3QubGVuZ3RoPj1oYXlzdGFjay5sZW5ndGh8fC0xPT1lbmQ/LTE6aGF5c3RhY2suc2xpY2Uoc3RhcnQsZW5kK3NlY29uZC5sZW5ndGgpfWFsbENvbWJpbmUoaGF5c3RhY2s9XCJcIixmaXJzdD1cIlwiLHNlY29uZD1cIlwiKXtsZXQgZm91bmQscG9zPTAsYWxsPVtdO2Zvcig7LTEhPWZvdW5kOylmb3VuZD10aGlzLmNvbWJpbmUoaGF5c3RhY2ssZmlyc3Qsc2Vjb25kLHBvcykscG9zKyssLTEhPWZvdW5kJiZhbGwucHVzaChmb3VuZCk7cmV0dXJuIGFsbH1pbkJldHdlZW4oaGF5c3RhY2s9XCJcIixmaXJzdD1cIlwiLHNlY29uZD1cIlwiLHBvcz0wKXtsZXQgYXQxPXBvcz1wb3N8fDAsYXQyPWZpcnN0PT09c2Vjb25kP3BvcysxOnBvcyxzdGFydD10aGlzLmluZGV4QXQoaGF5c3RhY2ssZmlyc3QsYXQxKSxlbmQ9dGhpcy5pbmRleEF0KGhheXN0YWNrLHNlY29uZCxhdDIpO3JldHVybi0xPT1zdGFydHx8c3RhcnQrZmlyc3QubGVuZ3RoPj1oYXlzdGFjay5sZW5ndGh8fC0xPT1lbmQ/LTE6aGF5c3RhY2suc2xpY2Uoc3RhcnQrZmlyc3QubGVuZ3RoLGVuZCl9YWxsSW5CZXR3ZWVuKGhheXN0YWNrPVwiXCIsZmlyc3Q9XCJcIixzZWNvbmQ9XCJcIil7bGV0IGZvdW5kLHBvcz0wLGFsbD1bXTtmb3IoOy0xIT1mb3VuZDspZm91bmQ9dGhpcy5pbkJldHdlZW4oaGF5c3RhY2ssZmlyc3Qsc2Vjb25kLHBvcykscG9zKyssLTEhPWZvdW5kJiZhbGwucHVzaChmb3VuZCk7cmV0dXJuIGFsbH1leHRyYWN0Q1NTKGVsZW1lbnQpe2xldCBrZXksdmFsdWUsY3NzPWVsZW1lbnQuc3R5bGUuY3NzVGV4dCxzdHlsZT17fTtpZihcIlwiIT1jc3Mpe2xldCBwYWlyO2Nzcz1jc3Muc3BsaXQoXCI7IFwiKTtmb3IobGV0IGkgb2YgY3NzKXBhaXI9dGhpcy50cmVtKGkpLGtleT10aGlzLmpzU3R5bGVOYW1lKHBhaXIuc3BsaXQoXCI6XCIpWzBdKSx2YWx1ZT10aGlzLnN0cmluZ1JlcGxhY2UocGFpci5zcGxpdChcIjpcIikucG9wKCksXCI7XCIsXCJcIiksXCJcIiE9a2V5JiYoc3R5bGVba2V5XT10aGlzLnRyZW0odmFsdWUpKX1yZXR1cm4gc3R5bGV9dHJpbU1vbnRoQXJyYXkoKXtsZXQgbW9udGhzPVtdO2ZvcihsZXQgaT0wO2k8dGhpcy5tb250aHMubGVuZ3RoO2krKyltb250aHMucHVzaCh0aGlzLm1vbnRoc1tpXS5zbGljZSgwLDMpKTtyZXR1cm4gbW9udGhzfWpzU3R5bGVOYW1lKG5hbWU9XCJcIil7bGV0IG5ld05hbWU9XCJcIjtmb3IobGV0IGk9MDtpPG5hbWUubGVuZ3RoO2krKylcIi1cIj09bmFtZVtpXT9uZXdOYW1lKz1uYW1lWysraV0udG9VcHBlckNhc2UoKTpuZXdOYW1lKz1uYW1lW2ldLnRvTG93ZXJDYXNlKCk7cmV0dXJuIG5ld05hbWV9Y3NzU3R5bGVOYW1lKG5hbWU9XCJcIil7bGV0IG5ld05hbWU9XCJcIjtmb3IobGV0IGk9MDtpPG5hbWUubGVuZ3RoO2krKyl0aGlzLmlzQ2FwaXRhbChuYW1lW2ldKSYmKG5ld05hbWUrPVwiLVwiKSxuZXdOYW1lKz1uYW1lW2ldLnRvTG93ZXJDYXNlKCk7cmV0dXJuIG5ld05hbWV9dGV4dFRvQ2FtZWxDYXNlZCh0ZXh0PVwiXCIpe2xldCB2YWx1ZT1cIlwiO2ZvcihsZXQgaSBpbiB0ZXh0KVwiIFwiIT10ZXh0W2ldJiYoMD09aT92YWx1ZSs9dGV4dFtpXS50b0xvd2VyQ2FzZSgpOnRoaXMuaXNzZXQodGV4dFtpLTFdKSYmXCIgXCI9PXRleHRbaS0xXT92YWx1ZSs9dGV4dFtpXS50b1VwcGVyQ2FzZSgpOnZhbHVlKz10ZXh0W2ldKTtyZXR1cm4gdmFsdWV9Y2FtZWxDYXNlZFRvVGV4dChjYW1lbENhc2U9XCJcIil7bGV0IHZhbHVlPVwiXCI7Zm9yKGxldCBpIGluIGNhbWVsQ2FzZSkwIT1pJiZ0aGlzLmlzQ2FwaXRhbChjYW1lbENhc2VbaV0pP3ZhbHVlKz1gICR7Y2FtZWxDYXNlW2ldLnRvTG93ZXJDYXNlKCl9YDp2YWx1ZSs9Y2FtZWxDYXNlW2ldO3JldHVybiB2YWx1ZX1lbXB0eU9iamVjdChvYmope3JldHVybiBKU09OLnN0cmluZ2lmeShvYmopPT1KU09OLnN0cmluZ2lmeSh7fSl9cmFuZG9tKHBhcmFtcz17bGltaXQ6MSxyYW5nZToxfSl7bGV0IHJhbmRvbTtyZXR1cm4gdGhpcy5lbXB0eU9iamVjdChwYXJhbXMpP3JhbmRvbT0yKk1hdGgucmFuZG9tKCktMTp0aGlzLmlzc2V0KHBhcmFtcy5saW1pdCk/cmFuZG9tPU1hdGgucmFuZG9tKCkqcGFyYW1zLmxpbWl0OnRoaXMuaXNzZXQocGFyYW1zLnJhbmdlKSxyYW5kb219cmFuZ2UoZW5kPTEsc3RhcnQ9MSl7bGV0IHZhbHVlPVtdO2ZvcihsZXQgaT1zdGFydHx8MDtpPGVuZDtpKyspdmFsdWUucHVzaChpKTtyZXR1cm4gdmFsdWV9Z2VuZXJhdGVSYW5kb20obGVuZ3RoPTUpe2Zvcih2YXIgc3RyaW5nPXRoaXMuY2FwaXRhbHMrdGhpcy5zbWFsbHMrdGhpcy5kaWdpdHMsYWxwaGFudW1lcmljPVwiXCIsaT0wO2k8bGVuZ3RoO2krKylhbHBoYW51bWVyaWMrPXN0cmluZ1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqc3RyaW5nLmxlbmd0aCldO3JldHVybiBhbHBoYW51bWVyaWN9Z2VuZXJhdGVSYW5kb21IZXgobGVuZ3RoPTUpe2Zvcih2YXIgc3RyaW5nPXRoaXMuY2FwaXRhbHMuc2xpY2UoMCwzKSt0aGlzLnNtYWxscy5zbGljZSgwLDMpK3RoaXMuZGlnaXRzLGFscGhhbnVtZXJpYz1cIlwiLGk9MDtpPGxlbmd0aDtpKyspYWxwaGFudW1lcmljKz1zdHJpbmdbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnN0cmluZy5sZW5ndGgpXTtyZXR1cm4gYWxwaGFudW1lcmljfWdlbmVyYXRlS2V5KGxlbmd0aD01KXtyZXR1cm4gRGF0ZS5ub3coKS50b1N0cmluZyhsZW5ndGgpK01hdGgucmFuZG9tKCkudG9TdHJpbmcobGVuZ3RoKS5zbGljZSgyKX1lZGl0dGVkVXJsKHBhcmFtcyl7dmFyIHVybD10aGlzLnVybFNwbGl0dGVyKHBhcmFtcy51cmwpO3JldHVybiB1cmwudmFyc1twYXJhbXMudG9BZGRdPXBhcmFtcy5hZGRWYWx1ZS50b0xvd2VyQ2FzZSgpLHRoaXMudXJsTWVyZ2VyKHVybCxwYXJhbXMudG9BZGQpfWFkZENvbW1hVG9Nb25leShtb25leT1cIlwiKXtmb3IodmFyIGludmVyc2U9XCJcIixpPW1vbmV5Lmxlbmd0aC0xO2k+PTA7aS0tKWludmVyc2UrPW1vbmV5W2ldO2Zvcihtb25leT1cIlwiLGk9MDtpPGludmVyc2UubGVuZ3RoO2krKyl7bGV0IHBvc2l0aW9uPShpKzEpJTM7bW9uZXkrPWludmVyc2VbaV0sMD09cG9zaXRpb24mJmkhPWludmVyc2UubGVuZ3RoLTEmJihtb25leSs9XCIsXCIpfWZvcihpbnZlcnNlPVwiXCIsaT1tb25leS5sZW5ndGgtMTtpPj0wO2ktLSlpbnZlcnNlKz1tb25leVtpXTtyZXR1cm4gaW52ZXJzZX1pc0NhcGl0YWwodmFsdWU9XCJcIil7aWYoMT09dmFsdWUubGVuZ3RoKXJldHVybiB0aGlzLmNhcGl0YWxzLmluY2x1ZGVzKHZhbHVlKX1jYXBpdGFsaXplKHZhbHVlPVwiXCIpe3JldHVybiB0aGlzLmlzQ2FwaXRhbCh2YWx1ZVswXSk/dmFsdWU6KCh2YWx1ZT12YWx1ZS5zcGxpdChcIlwiKSlbMF09dGhpcy5jYXBpdGFsc1t0aGlzLnNtYWxscy5pbmRleE9mKHZhbHVlWzBdKV0sdGhpcy5zdHJpbmdSZXBsYWNlKHZhbHVlLnRvU3RyaW5nKCksXCIsXCIsXCJcIikpfWZsaXAoaGF5c3RhY2s9XCJcIil7cmV0dXJuIGhheXN0YWNrLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpfWlzU21hbGwodmFsdWU9XCJcIil7aWYoMT09dmFsdWUubGVuZ3RoKXJldHVybiB0aGlzLnNtYWxscy5pbmNsdWRlcyh2YWx1ZSl9aXNTeW1ib2wodmFsdWU9XCJcIil7aWYoMT09dmFsdWUubGVuZ3RoKXJldHVybiB0aGlzLnN5bWJvbHMuaW5jbHVkZXModmFsdWUpfWlzTmFtZSh2YWx1ZT1cIlwiKXtmb3IodmFyIHggaW4gdmFsdWUpaWYodGhpcy5pc0RpZ2l0KHZhbHVlW3hdKSlyZXR1cm4hMTtyZXR1cm4hMH1pc1Bhc3N3b3JkVmFsaWQodmFsdWU9XCJcIil7aWYodmFsdWUubGVuZ3RoPjcpZm9yKHZhciBhIGluIHZhbHVlKWlmKHRoaXMuaXNDYXBpdGFsKHZhbHVlW2FdKSlmb3IodmFyIGIgaW4gdmFsdWUpaWYodGhpcy5pc1NtYWxsKHZhbHVlW2JdKSlmb3IodmFyIGMgaW4gdmFsdWUpaWYodGhpcy5pc0RpZ2l0KHZhbHVlW2NdKSlmb3IodmFyIGQgaW4gdmFsdWUpaWYodGhpcy5pc1N5bWJvbCh2YWx1ZVtkXSkpcmV0dXJuITA7cmV0dXJuITF9aXNTdWJTdHJpbmcoaGF5c3RhY2s9XCJcIix2YWx1ZT1cIlwiKXtyZXR1cm4tMSE9aGF5c3RhY2suaW5kZXhPZih2YWx1ZSl9aXNEaWdpdCh2YWx1ZT1cIlwiKXtyZXR1cm4gMT09KHZhbHVlPW5ldyBTdHJpbmcodmFsdWUpKS5sZW5ndGgmJnRoaXMuZGlnaXRzLmluY2x1ZGVzKHZhbHVlKX1pc0VtYWlsKHZhbHVlPVwiXCIpe3ZhciBlbWFpbF9wYXJ0cz12YWx1ZS5zcGxpdChcIkBcIik7aWYoMiE9ZW1haWxfcGFydHMubGVuZ3RoKXJldHVybiExO2lmKHRoaXMuaXNTcGFjZVN0cmluZyhlbWFpbF9wYXJ0c1swXSkpcmV0dXJuITE7dmFyIGRvdF9wYXJ0cz1lbWFpbF9wYXJ0c1sxXS5zcGxpdChcIi5cIik7cmV0dXJuIDI9PWRvdF9wYXJ0cy5sZW5ndGgmJiF0aGlzLmlzU3BhY2VTdHJpbmcoZG90X3BhcnRzWzBdKSYmIXRoaXMuaXNTcGFjZVN0cmluZyhkb3RfcGFydHNbMV0pfWlzVHJ1dGh5KHZhbHVlKXtsZXQgdHJ1dGh5O3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdmFsdWU/dHJ1dGh5PXZhbHVlOlwic3RyaW5nXCI9PXR5cGVvZiB2YWx1ZT90cnV0aHk9XCJ0cnVlXCI9PXZhbHVlLnRvTG9jYWxlTG93ZXJDYXNlKCl8fFwiMVwiPT12YWx1ZS50b0xvY2FsZUxvd2VyQ2FzZSgpOlwibnVtYmVyXCI9PXR5cGVvZiB2YWx1ZSYmKHRydXRoeT0xPT12YWx1ZSksdHJ1dGh5fWlzRmFsc3kodmFsdWUpe2xldCBmYWxzeTtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHZhbHVlP2ZhbHN5PXZhbHVlOlwic3RyaW5nXCI9PXR5cGVvZiB2YWx1ZT9mYWxzeT1cImZhbHNlXCI9PXZhbHVlLnRvTG9jYWxlTG93ZXJDYXNlKCl8fFwiMFwiPT12YWx1ZS50b0xvY2FsZUxvd2VyQ2FzZSgpOlwibnVtYmVyXCI9PXR5cGVvZiB2YWx1ZSYmKGZhbHN5PTA9PXZhbHVlKSxmYWxzeX1vYmplY3RMZW5ndGgob2JqZWN0PXt9KXtyZXR1cm4gT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGh9aXNTcGFjZVN0cmluZyh2YWx1ZT1cIlwiKXtpZihcIlwiPT12YWx1ZSlyZXR1cm4hMDtmb3IodmFyIHggaW4gdmFsdWUpaWYoXCIgXCIhPXZhbHVlW3hdKXJldHVybiExO3JldHVybiEwfWhhc1N0cmluZyhoYXlzdGFjaz1cIlwiLG5lZWRsZT1cIlwiKXtmb3IodmFyIHggaW4gaGF5c3RhY2spaWYobmVlZGxlPT1oYXlzdGFja1t4XSlyZXR1cm4hMDtyZXR1cm4hMX10cmVtKG5lZWRsZT1cIlwiKXtpZihcIiBcIj09bmVlZGxlWzBdKXtmb3IodmFyIG5ld19uZWVkbGU9XCJcIixpPTA7aTxuZWVkbGUubGVuZ3RoO2krKykwIT1pJiYobmV3X25lZWRsZSs9bmVlZGxlW2ldKTtuZWVkbGU9dGhpcy50cmVtKG5ld19uZWVkbGUpfWlmKFwiIFwiPT1uZWVkbGVbbmVlZGxlLmxlbmd0aC0xXSl7Zm9yKG5ld19uZWVkbGU9XCJcIixpPTA7aTxuZWVkbGUubGVuZ3RoO2krKylpIT1uZWVkbGUubGVuZ3RoLTEmJihuZXdfbmVlZGxlKz1uZWVkbGVbaV0pO25lZWRsZT10aGlzLnRyZW0obmV3X25lZWRsZSl9cmV0dXJuIG5lZWRsZX1zdHJpbmdSZXBsYWNlKHdvcmQ9XCJcIixmcm9tPVwiXCIsdG89XCJcIil7dmFyIHZhbHVlPVwiXCI7Zm9yKGxldCBpPTA7aTx3b3JkLmxlbmd0aDtpKyspd29yZFtpXT09ZnJvbT92YWx1ZSs9dG86dmFsdWUrPXdvcmRbaV07cmV0dXJuIHZhbHVlfWNvbnZlclRvUmVhbFBhdGgocGF0aD1cIlwiKXtyZXR1cm5cIi9cIiE9cGF0aFtwYXRoLmxlbmd0aC0xXSYmKHBhdGgrPVwiL1wiKSxwYXRofWlzU3BhY2lhbENoYXJhY3RlcihjaGFyPVwiXCIpe2Zvcih2YXIgaT0wO2k8XCInXFxcXC86Pyo8PnwhLlwiLmxlbmd0aDtpKyspaWYoXCInXFxcXC86Pyo8PnwhLlwiW2ldPT1jaGFyKXJldHVybiEwO3JldHVybiExfWNvdW50Q2hhcihoYXlzdGFjaz1cIlwiLG5lZWRsZT1cIlwiKXtmb3IodmFyIGo9MCxpPTA7aTxoYXlzdGFjay5sZW5ndGg7aSsrKWhheXN0YWNrW2ldPT1uZWVkbGUmJmorKztyZXR1cm4gan1vY2N1cmFuY2VzT2YoaGF5c3RhY2s9XCJcIixuZWVkbGU9XCJcIil7bGV0IG9jY3VyYW5jZXM9W107Zm9yKGxldCBpPTA7aTxoYXlzdGFjay5sZW5ndGg7aSsrKWhheXN0YWNrW2ldPT09bmVlZGxlJiZvY2N1cmFuY2VzLnB1c2goaSk7cmV0dXJuIG9jY3VyYW5jZXN9aXNzZXQodmFyaWFibGUpe3JldHVybiB2b2lkIDAhPT12YXJpYWJsZX1pc251bGwodmFyaWFibGUpe3JldHVybiBudWxsPT12YXJpYWJsZX1ub3ROdWxsKHZhcmlhYmxlKXtyZXR1cm4gdGhpcy5pc3NldCh2YXJpYWJsZSkmJiF0aGlzLmlzbnVsbCh2YXJpYWJsZSl9aXNBcnJheSh2YXJpYWJsZSl7bGV0IGZsYWc9ITE7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHZhcmlhYmxlJiYoZmxhZz12YXJpYWJsZS5jb25zdHJ1Y3Rvcj09PUFycmF5KSxmbGFnfWlzT2JqZWN0KHZhcmlhYmxlKXtsZXQgZmxhZz0hMTtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgdmFyaWFibGUmJihmbGFnPXZhcmlhYmxlLmNvbnN0cnVjdG9yPT09T2JqZWN0KSxmbGFnfWlzU3RyaW5nKHZhcmlhYmxlKXtsZXQgZmxhZz0hMTtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdmFyaWFibGUmJihmbGFnPXZhcmlhYmxlLmNvbnN0cnVjdG9yPT09U3RyaW5nKSxmbGFnfWlzTnVtYmVyKHZhcmlhYmxlKXtsZXQgZmxhZz0hMTtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdmFyaWFibGUmJihmbGFnPXZhcmlhYmxlLmNvbnN0cnVjdG9yPT09TnVtYmVyKSxmbGFnfWlzQm9vbCh2YXJpYWJsZSl7bGV0IGZsYWc9ITE7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB2YXJpYWJsZSYmKGZsYWc9dmFyaWFibGUuY29uc3RydWN0b3I9PT1Cb29sZWFuKSxmbGFnfWlzZnVuY3Rpb24odmFyaWFibGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHZhcmlhYmxlfWFzeW5jIHJ1blBhcmFsbGVsKGZ1bmN0aW9ucz1bXSxjYWxsQmFjaz0oKCk9Pnt9KSl7dmFyIHJlc3VsdHM9e307Zm9yKHZhciBmIGluIGZ1bmN0aW9ucylyZXN1bHRzW2ZdPWF3YWl0IGZ1bmN0aW9uc1tmXTtjYWxsQmFjayhyZXN1bHRzKX1pc01vYmlsZSgpe3JldHVybi9BbmRyb2lkfHdlYk9TfGlQaG9uZXxpUGFkfGlQb2R8QmxhY2tCZXJyeXxJRU1vYmlsZXxPcGVyYSBNaW5pL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KX11cmxNZXJnZXIoc3BsaXRVcmw9XCJcIixsYXN0UXVlcnk9XCJcIil7dmFyIGhvc3RUeXBlPXRoaXMuaXNzZXQoc3BsaXRVcmwuaG9zdFR5cGUpP3NwbGl0VXJsLmhvc3RUeXBlOlwiaHR0cFwiLGhvc3ROYW1lPXRoaXMuaXNzZXQoc3BsaXRVcmwuaG9zdE5hbWUpP3NwbGl0VXJsLmhvc3ROYW1lOlwiXCIscG9ydD10aGlzLmlzc2V0KHNwbGl0VXJsLmhvc3QpP3NwbGl0VXJsLnBvcnQ6XCJcIixwYXRoTmFtZT10aGlzLmlzc2V0KHNwbGl0VXJsLnBhdGhOYW1lKT9zcGxpdFVybC5wYXRoTmFtZTpcIlwiLHF1ZXJpZXM9XCI/XCIsa2VlcE1hcHBpbmc9ITA7dGhpcy5pc3NldChzcGxpdFVybC52YXJzKSYmT2JqZWN0LmtleXMoc3BsaXRVcmwudmFycykubWFwKGtleT0+e2tlZXBNYXBwaW5nJiYocXVlcmllcys9a2V5K1wiPVwiK3NwbGl0VXJsLnZhcnNba2V5XStcIiZcIiksa2V5PT1sYXN0UXVlcnkmJihrZWVwTWFwcGluZz0hMSl9KTt2YXIgbG9jYXRpb249aG9zdFR5cGUrXCI6Oi9cIitob3N0TmFtZStcIjpcIitwb3J0K1wiL1wiK3BhdGhOYW1lK3F1ZXJpZXM7cmV0dXJuIGxvY2F0aW9uPShsb2NhdGlvbj1sb2NhdGlvbi5sYXN0SW5kZXhPZihcIiZcIik9PWxvY2F0aW9uLmxlbmd0aC0xP2xvY2F0aW9uLnNsaWNlKDAsbG9jYXRpb24ubGVuZ3RoLTEpOmxvY2F0aW9uKS5sYXN0SW5kZXhPZihcIj1cIik9PWxvY2F0aW9uLmxlbmd0aC0xP2xvY2F0aW9uLnNsaWNlKDAsbG9jYXRpb24ubGVuZ3RoLTEpOmxvY2F0aW9ufXVybFNwbGl0dGVyKGxvY2F0aW9uPVwiXCIpe2lmKHRoaXMuaXNzZXQobG9jYXRpb24pKXt2YXIgaHR0cFR5cGU9LTE9PT0obG9jYXRpb249bG9jYXRpb24udG9TdHJpbmcoKSkuaW5kZXhPZihcIjovL1wiKT9udWxsOmxvY2F0aW9uLnNwbGl0KFwiOi8vXCIpWzBdLGZ1bGxQYXRoPWxvY2F0aW9uLnNwbGl0KFwiOi8vXCIpLnBvcCgwKSxob3N0PWZ1bGxQYXRoLnNwbGl0KFwiL1wiKVswXSxob3N0TmFtZT1ob3N0LnNwbGl0KFwiOlwiKVswXSxwb3J0PWhvc3Quc3BsaXQoXCI6XCIpLnBvcCgwKSxwYXRoPVwiL1wiK2Z1bGxQYXRoLnNwbGl0KFwiL1wiKS5wb3AoMCkscGF0aE5hbWU9cGF0aC5zcGxpdChcIj9cIilbMF0scXVlcmllcz0tMT09PXBhdGguaW5kZXhPZihcIj9cIik/bnVsbDpwYXRoLnNwbGl0KFwiP1wiKS5wb3AoMCksdmFycz17fTtpZihudWxsIT1xdWVyaWVzKXt2YXIgcXVlcnk9cXVlcmllcy5zcGxpdChcIiZcIik7Zm9yKHZhciB4IGluIHF1ZXJ5KXt2YXIgcGFydHM9cXVlcnlbeF0uc3BsaXQoXCI9XCIpO3BhcnRzWzFdP3ZhcnNbdGhpcy5zdHJpbmdSZXBsYWNlKHBhcnRzWzBdLFwiLVwiLFwiIFwiKV09dGhpcy5zdHJpbmdSZXBsYWNlKHBhcnRzWzFdLFwiLVwiLFwiIFwiKTp2YXJzW3RoaXMuc3RyaW5nUmVwbGFjZShwYXJ0c1swXSxcIi1cIixcIiBcIildPVwiXCJ9fXJldHVybntsb2NhdGlvbjpsb2NhdGlvbixodHRwVHlwZTpodHRwVHlwZSxmdWxsUGF0aDpmdWxsUGF0aCxob3N0Omhvc3QsaHR0cGhvc3Q6aHR0cFR5cGUrXCI6Ly9cIitob3N0LGhvc3ROYW1lOmhvc3ROYW1lLHBvcnQ6cG9ydCxwYXRoOnBhdGgscGF0aE5hbWU6cGF0aE5hbWUscXVlcmllczpxdWVyaWVzLHZhcnM6dmFyc319fWdldFVybFZhcnMobG9jYXRpb249XCJcIil7dmFyIHF1ZXJpZXM9LTE9PT0obG9jYXRpb249bG9jYXRpb24udG9TdHJpbmcoKSkuaW5kZXhPZihcIj9cIik/bnVsbDpsb2NhdGlvbi5zcGxpdChcIj9cIikucG9wKDApLHZhcnM9e307aWYobnVsbCE9cXVlcmllcyl7dmFyIHF1ZXJ5PXF1ZXJpZXMuc3BsaXQoXCImXCIpO2Zvcih2YXIgeCBpbiBxdWVyeSl7dmFyIHBhcnRzPXF1ZXJ5W3hdLnNwbGl0KFwiPVwiKTtwYXJ0c1sxXT92YXJzW3RoaXMuc3RyaW5nUmVwbGFjZShwYXJ0c1swXSxcIi1cIixcIiBcIildPXRoaXMuc3RyaW5nUmVwbGFjZShwYXJ0c1sxXSxcIi1cIixcIiBcIik6dmFyc1t0aGlzLnN0cmluZ1JlcGxhY2UocGFydHNbMF0sXCItXCIsXCIgXCIpXT1cIlwifX1yZXR1cm4gdmFyc319O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa1oxYm1NdWFuTWlYU3dpYm1GdFpYTWlPbHNpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSWx0dlltcGxZM1FnVDJKcVpXTjBYU0lzSW5Sb2FYTWlMQ0pqWVhCcGRHRnNjeUlzSW5OdFlXeHNjeUlzSW1ScFoybDBjeUlzSW5ONWJXSnZiSE1pTENKdGIyNTBhSE1pTENKa1lYbHpJaXdpWjJWdVpHVnljeUlzSW0xaGNtbDBZV3h6SWl3aWNtVnNhV2RwYjI1eklpd2lkWE5sY2xSNWNHVnpJaXdpYzNSaFptWlNaWEYxWlhOMGN5SXNJbk4wZFdSbGJuUnpVbVZ4ZFdWemRITWlMQ0p6ZFdKcVpXTjBUR2x6ZENJc0luTnZjblFpTENKemRXSnFaV04wVEdWMlpXeHpJaXdpWm05dWRGTjBlV3hsY3lJc0luQnBlR1ZzVTJsNlpYTWlMQ0pqYjJ4dmNuTWlMQ0ppYjJ4a2JtVnpjeUlzSW1KdmNtUmxjbFI1Y0dWeklpd2ljMmhoWkc5M2N5SXNJbUp2Y21SbGNuTWlMQ0poYkdsbmJtMWxiblFpTENKemIzVnlZMlVpTENKMllXeDFaU0lzSW1sdVFtVjBkMlZsYmlJc0lrcFRUMDRpTENKd1lYSnpaU0lzSW1WeWNtOXlJaXdpYUdGNWMzUmhZMnNpTENKdVpXVmtiR1VpTENKd2IzTWlMQ0pwYm1SbGVFOW1JaXdpYzNCc2FYUWlMQ0pzWlc1bmRHZ2lMQ0pwYm1SbGVDSXNJbWtpTENKbWFYSnpkQ0lzSW5ObFkyOXVaQ0lzSW1GME1TSXNJbUYwTWlJc0luTjBZWEowSWl3aWFXNWtaWGhCZENJc0ltVnVaQ0lzSW5Oc2FXTmxJaXdpWm05MWJtUWlMQ0poYkd3aUxDSmpiMjFpYVc1bElpd2ljSFZ6YUNJc0ltVnNaVzFsYm5RaUxDSnJaWGtpTENKamMzTWlMQ0p6ZEhsc1pTSXNJbU56YzFSbGVIUWlMQ0p3WVdseUlpd2lkSEpsYlNJc0ltcHpVM1I1YkdWT1lXMWxJaXdpYzNSeWFXNW5VbVZ3YkdGalpTSXNJbkJ2Y0NJc0ltNWhiV1VpTENKdVpYZE9ZVzFsSWl3aWRHOVZjSEJsY2tOaGMyVWlMQ0owYjB4dmQyVnlRMkZ6WlNJc0ltbHpRMkZ3YVhSaGJDSXNJblJsZUhRaUxDSnBjM05sZENJc0ltTmhiV1ZzUTJGelpTSXNJbTlpYWlJc0luTjBjbWx1WjJsbWVTSXNJbkJoY21GdGN5SXNJbXhwYldsMElpd2ljbUZ1WjJVaUxDSnlZVzVrYjIwaUxDSmxiWEIwZVU5aWFtVmpkQ0lzSWsxaGRHZ2lMQ0p6ZEhKcGJtY2lMQ0poYkhCb1lXNTFiV1Z5YVdNaUxDSm1iRzl2Y2lJc0lrUmhkR1VpTENKdWIzY2lMQ0owYjFOMGNtbHVaeUlzSW5WeWJDSXNJblZ5YkZOd2JHbDBkR1Z5SWl3aWRtRnljeUlzSW5SdlFXUmtJaXdpWVdSa1ZtRnNkV1VpTENKMWNteE5aWEpuWlhJaUxDSnRiMjVsZVNJc0ltbHVkbVZ5YzJVaUxDSndiM05wZEdsdmJpSXNJbWx1WTJ4MVpHVnpJaXdpY21WMlpYSnpaU0lzSW1wdmFXNGlMQ0o0SWl3aWFYTkVhV2RwZENJc0ltRWlMQ0ppSWl3aWFYTlRiV0ZzYkNJc0ltTWlMQ0prSWl3aWFYTlRlVzFpYjJ3aUxDSlRkSEpwYm1jaUxDSmxiV0ZwYkY5d1lYSjBjeUlzSW1selUzQmhZMlZUZEhKcGJtY2lMQ0prYjNSZmNHRnlkSE1pTENKMGNuVjBhSGtpTENKMGIweHZZMkZzWlV4dmQyVnlRMkZ6WlNJc0ltWmhiSE41SWl3aWIySnFaV04wSWl3aVQySnFaV04wSWl3aWEyVjVjeUlzSW01bGQxOXVaV1ZrYkdVaUxDSjNiM0prSWl3aVpuSnZiU0lzSW5Sdklpd2ljR0YwYUNJc0ltTm9ZWElpTENKcUlpd2liMk5qZFhKaGJtTmxjeUlzSW5aaGNtbGhZbXhsSWl3aWFYTnVkV3hzSWl3aVpteGhaeUlzSW1OdmJuTjBjblZqZEc5eUlpd2lRWEp5WVhraUxDSk9kVzFpWlhJaUxDSkNiMjlzWldGdUlpd2lablZ1WTNScGIyNXpJaXdpWTJGc2JFSmhZMnNpTENKeVpYTjFiSFJ6SWl3aVppSXNJblJsYzNRaUxDSnVZWFpwWjJGMGIzSWlMQ0oxYzJWeVFXZGxiblFpTENKemNHeHBkRlZ5YkNJc0lteGhjM1JSZFdWeWVTSXNJbWh2YzNSVWVYQmxJaXdpYUc5emRFNWhiV1VpTENKd2IzSjBJaXdpYUc5emRDSXNJbkJoZEdoT1lXMWxJaXdpY1hWbGNtbGxjeUlzSW10bFpYQk5ZWEJ3YVc1bklpd2liV0Z3SWl3aWJHOWpZWFJwYjI0aUxDSnNZWE4wU1c1a1pYaFBaaUlzSW1oMGRIQlVlWEJsSWl3aVpuVnNiRkJoZEdnaUxDSnhkV1Z5ZVNJc0luQmhjblJ6SWl3aWFIUjBjR2h2YzNRaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVhkdVFrRkJMRmxCUVU5RExFTkJlRzVDVUN4TFFVRkJMRU5CUlVsRExGZEJRVUZCTEVWQlFVRkJMRU5CUTBsRExFbEJRVUZCTEVOQlFVdERMRkZCUVVGQkxFTkJRVmNzTkVKQlFVRXNRMEZEYUVKRUxFbEJRVUZCTEVOQlFVdEZMRTFCUVVGQkxFTkJRVk1zTkVKQlFVRXNRMEZEWkVZc1NVRkJRVUVzUTBGQlMwY3NUVUZCUVVFc1EwRkJVeXhaUVVGQkxFTkJRMlJJTEVsQlFVRkJMRU5CUVV0SkxFOUJRVUZCTEVOQlFWVXNNa0pCUVVFc1EwRkRaa29zU1VGQlFVRXNRMEZCUzBzc1RVRkJRVUVzUTBGQlV5eERRVUZETEZOQlFVRXNRMEZCVnl4VFFVRkJMRU5CUVZjc1QwRkJRU3hEUVVGVExFOUJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOHNUVUZCUVN4RFFVRlJMRTFCUVVFc1EwRkJVU3hSUVVGQkxFTkJRVlVzVjBGQlFTeERRVUZoTEZOQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGQkxFTkJRelZJVEN4SlFVRkJRU3hEUVVGTFRTeEpRVUZCUVN4RFFVRlBMRU5CUVVNc1VVRkJRU3hEUVVGVkxGRkJRVUVzUTBGQlZTeFRRVUZCTEVOQlFWY3NWMEZCUVN4RFFVRmhMRlZCUVVFc1EwRkJXU3hSUVVGQkxFTkJRVlVzVlVGQlFTeERRVUZCTEVOQlF5OUZUaXhKUVVGQlFTeERRVUZMVHl4UFFVRkJRU3hEUVVGVkxFTkJRVU1zVFVGQlFTeERRVUZSTEZGQlFVRXNRMEZCVlN4cFFrRkJRU3hEUVVGQkxFTkJRMnhEVUN4SlFVRkJRU3hEUVVGTFVTeFJRVUZCUVN4RFFVRlhMRU5CUVVNc1UwRkJRU3hEUVVGWExGRkJRVUVzUTBGQlZTeFZRVUZCTEVOQlFWa3NVMEZCUVN4RFFVRkJMRU5CUTJ4RVVpeEpRVUZCUVN4RFFVRkxVeXhUUVVGQlFTeERRVUZaTEVOQlFVTXNZMEZCUVN4RFFVRm5RaXhQUVVGQkxFTkJRVk1zVTBGQlFTeERRVUZYTEZWQlFVRXNRMEZCV1N4UlFVRkJMRU5CUVVFc1EwRkRiRVZVTEVsQlFVRkJMRU5CUVV0VkxGTkJRVUZCTEVOQlFWa3NRMEZCUXl4VFFVRkJMRU5CUVZjc1QwRkJRU3hEUVVGVExFOUJRVUVzUTBGQlV5eExRVUZCTEVOQlFVRXNRMEZETDBOV0xFbEJRVUZCTEVOQlFVdFhMR0ZCUVVGQkxFTkJRV2RDTEVOQlFVTXNUMEZCUVN4RFFVRlRMRmRCUVVFc1EwRkJRU3hEUVVNdlFsZ3NTVUZCUVVFc1EwRkJTMWtzWjBKQlFVRkJMRU5CUVcxQ0xFTkJRVU1zVTBGQlFTeERRVUZYTEZWQlFVRXNRMEZCUVN4RFFVTndRMW9zU1VGQlFVRXNRMEZCUzJFc1YwRkJRVUVzUTBGQll5eERRVUZETEdGQlFVRXNRMEZCWlN4VFFVRkJMRU5CUVZjc1UwRkJRU3hEUVVGWExGZEJRVUVzUTBGQllTeFRRVUZCTEVOQlFWY3NZVUZCUVN4RFFVRmxMRmxCUVVFc1EwRkJZeXhUUVVGQkxFTkJRVUVzUTBGQlYwTXNTVUZCUVVFc1JVRkJRVUVzUTBGRGVraGtMRWxCUVVGQkxFTkJRVXRsTEdGQlFVRkJMRU5CUVdkQ0xFTkJRVU1zVTBGQlFTeERRVUZYTEZGQlFVRXNRMEZCVlN4VFFVRkJMRU5CUVZjc1RVRkJRU3hEUVVGUkxGRkJRVUVzUTBGQlFTeERRVU01UkdZc1NVRkJRVUVzUTBGQlMyZENMRlZCUVVGQkxFTkJRV0VzUTBGQlF5eFBRVUZCTEVOQlFWTXNhVUpCUVVFc1EwRkJiVUlzVjBGQlFTeERRVUZoTEU5QlFVRXNRMEZCVXl4aFFVRkJMRU5CUVdVc1UwRkJRU3hEUVVGWExGTkJRVUVzUTBGQlZ5eGpRVUZCTEVOQlFXZENMRk5CUVVFc1EwRkJWeXhSUVVGQkxFTkJRVlVzVTBGQlFTeERRVUZYTEZGQlFVRXNRMEZCVlN4VFFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFJRVUZCTEVOQlFWVXNUMEZCUVN4RFFVRlRMR2xDUVVGQkxFTkJRVzFDTEdWQlFVRXNRMEZCYVVJc1lVRkJRU3hEUVVGbExFOUJRVUVzUTBGQlV5eFhRVUZCTEVOQlFXRXNVMEZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVNNVUyaENMRWxCUVVGQkxFTkJRVXRwUWl4VlFVRkJRU3hEUVVGaExFTkJRVU1zUzBGQlFTeERRVUZQTEV0QlFVRXNRMEZCVHl4TFFVRkJMRU5CUVU4c1MwRkJRU3hEUVVGUExFdEJRVUVzUTBGQlR5eExRVUZCTEVOQlFVOHNTMEZCUVN4RFFVRlBMRXRCUVVFc1EwRkJUeXhMUVVGQkxFTkJRVThzUzBGQlFTeERRVUZQTEUxQlFVRXNRMEZCVVN4TlFVRkJMRU5CUVZFc1RVRkJRU3hEUVVGUkxFMUJRVUVzUTBGQlVTeE5RVUZCTEVOQlFWRXNUVUZCUVN4RFFVRlJMRTFCUVVFc1EwRkJVU3hOUVVGQkxFTkJRVkVzVFVGQlFTeERRVUZSTEU5QlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZFc1QwRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVTeDNRa0ZCUVN4RFFVRkJMRU5CUTI1TmFrSXNTVUZCUVVFc1EwRkJTMnRDTEUxQlFVRkJMRU5CUVZNc1EwRkJReXhMUVVGQkxFTkJRVThzVDBGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVN4UlFVRkJMRU5CUVZVc1QwRkJRU3hEUVVGVExFOUJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVXNVVUZCUVN4RFFVRlZMRkZCUVVFc1EwRkJWU3hSUVVGQkxFTkJRVlVzWVVGQlFTeERRVUZsTEUxQlFVRXNRMEZCVVN4UFFVRkJMRU5CUVVFc1EwRkRiRWxzUWl4SlFVRkJRU3hEUVVGTGJVSXNVVUZCUVVFc1EwRkJWeXhEUVVGRExFZEJRVUVzUTBGQlN5eEhRVUZCTEVOQlFVc3NSMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkJTeXhIUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZMTEVkQlFVRXNRMEZCU3l4SFFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGTExFZEJRVUVzUTBGQlRTeFRRVUZCTEVOQlFWY3NUVUZCUVN4RFFVRlJMRkZCUVVFc1EwRkJWU3hSUVVGQkxFTkJRVlVzVDBGQlFTeERRVUZCTEVOQlF6Tkhia0lzU1VGQlFVRXNRMEZCUzI5Q0xGZEJRVUZCTEVOQlFXTXNRMEZCUXl4UFFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVkxGRkJRVUVzUTBGQlZTeFJRVUZCTEVOQlFWVXNVVUZCUVN4RFFVRlZMRTlCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkVzVDBGQlFTeERRVUZUTEZGQlFVRXNRMEZCVlN4UlFVRkJMRU5CUVZVc1UwRkJRU3hEUVVGWExGTkJRVUVzUTBGQlFTeERRVU01U0hCQ0xFbEJRVUZCTEVOQlFVdHhRaXhQUVVGQlFTeERRVUZWTEVOQlFVTXNjVUpCUVVFc1EwRkJkVUlzYlVKQlFVRXNRMEZCY1VJc1owSkJRVUVzUTBGQmEwSXNWMEZCUVN4RFFVRmhMRTFCUVVFc1EwRkJVU3hQUVVGQkxFTkJRVUVzUTBGRGJrZHlRaXhKUVVGQlFTeERRVUZMYzBJc1QwRkJRVUVzUTBGQlZTeERRVUZETEdsQ1FVRkJMRU5CUVcxQ0xHdENRVUZCTEVOQlFXOUNMRzFDUVVGQkxFTkJRWEZDTEdkQ1FVRkJMRU5CUVd0Q0xFMUJRVUVzUTBGQlVTeFBRVUZCTEVOQlFVRXNRMEZEZEVkMFFpeEpRVUZCUVN4RFFVRkxkVUlzVTBGQlFVRXNRMEZCV1N4RFFVRkRMRTFCUVVFc1EwRkJVU3hYUVVGQkxFTkJRV0VzVDBGQlFTeERRVUZUTEZGQlFVRXNRMEZCUVN4RFFVZHdSSGhDTEdGQlFVRkJMRU5CUVdONVFpeE5RVUZCUVN4RFFVRkJRU3hEUVVOV0xFbEJRVWxETEV0QlFVRkJMRU5CUVZGNlFpeEpRVUZCUVN4RFFVRkxNRUlzVTBGQlFVRXNRMEZCVlVZc1RVRkJRVUVzUTBGQlVTeE5RVUZCTEVOQlFWRXNUVUZCUVN4RFFVRkJMRU5CUXpORExFZEJRVUVzUTBGRFNVTXNTMEZCUVVFc1EwRkJVVVVzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRVZ3NTMEZCUVVFc1EwRkJRVUVzUTBGRGNrSXNUVUZCVDBrc1MwRkJRVUVzUTBGQlFVRXNRMEZEVEVvc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlJWb3NUMEZCVDBFc1MwRkJRVUVzUTBGSFdERkNMRTlCUVVGQkxFTkJRVkVyUWl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlNVTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVWxETEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJSWFJETEVkQlJFRkJMRWRCUVVGQkxFTkJRVTFCTEVkQlFVRkJMRVZCUVU4c1EwRkJRU3hEUVVGQkxFTkJRMjlDTEVOQlFVRXNSVUZCTjBKR0xGRkJRVUZCTEVOQlFWTkhMRTlCUVVGQkxFTkJRVkZHTEUxQlFVRkJMRU5CUVVGQkxFTkJRMnBDTEUxQlFVRXNRMEZCVVN4RFFVRkJMRU5CU1Zvc1IwRkJTVU1zUjBGQlFVRXNSVUZCUVVFc1EwRkVTa1lzVVVGQlFVRXNRMEZCVjBFc1VVRkJRVUVzUTBGQlUwa3NTMEZCUVVFc1EwRkJUVWdzVFVGQlFVRXNRMEZCUVVFc1JVRkRUa2tzVFVGQlFVRXNRMEZEYUVJc1RVRkJRU3hEUVVGUkxFTkJRVUVzUTBGSFdpeEpRVUZKUXl4TFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGRFdpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlVDeFJRVUZCUVN4RFFVRlRTeXhOUVVGQlFTeERRVUZSUlN4RFFVRkJRU3hGUVVGQlFTeERRVU0zUWtFc1EwRkJRVUVzUlVGQlMwd3NSMEZCUVVFc1IwRkRURWtzUzBGQlFVRXNSVUZCVTA0c1VVRkJRVUVzUTBGQlUwOHNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwWXNUVUZCUVVFc1EwRkJRVUVzUTBGTE4wSXNUMEZHUVVNc1MwRkJRVUVzUlVGQlUwd3NUVUZCUVVFc1EwRkJUMGtzVFVGQlFVRXNRMEZCVTBnc1IwRkJRVUVzUTBGTE4wSnFReXhQUVVGQlFTeERRVUZSSzBJc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVbFJMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlNWQXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGRmJFUXNTVUZCU1ZFc1IwRkJRVUVzUTBGRVNsSXNSMEZCUVVFc1EwRkJUVUVzUjBGQlFVRXNSVUZCVHl4RFFVRkJMRU5CUlZSVExFZEJRVUZCTEVOQlFVMUlMRXRCUVVGQkxFZEJRVlZETEUxQlFVRkJMRU5CUVZOUUxFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkpRU3hIUVVGQlFTeERRVU51UTFVc1MwRkJRVUVzUTBGQlVURkRMRWxCUVVGQkxFTkJRVXN5UXl4UFFVRkJRU3hEUVVGUllpeFJRVUZCUVN4RFFVRlZVU3hMUVVGQlFTeERRVUZQUlN4SFFVRkJRU3hEUVVGQlFTeERRVU4wUTBrc1IwRkJRVUVzUTBGQlRUVkRMRWxCUVVGQkxFTkJRVXN5UXl4UFFVRkJRU3hEUVVGUllpeFJRVUZCUVN4RFFVRlZVeXhOUVVGQlFTeERRVUZSUlN4SFFVRkJRU3hEUVVGQlFTeERRVVY2UXl4TlFVRkJMRU5CUVdNc1EwRkJRU3hGUVVGV1F5eExRVUZCUVN4RlFVRmxRU3hMUVVGQlFTeERRVUZSU2l4TFFVRkJRU3hEUVVGTlNDeE5RVUZCUVN4RlFVRlZUQ3hSUVVGQlFTeERRVUZUU3l4TlFVRkJRU3hGUVVGQlFTeERRVUZyUWl4RFFVRkJMRVZCUVZKVExFZEJRVUZCTEVOQlFVRkJMRU5CUTJ4RUxFTkJRVUVzUTBGSFRHUXNVVUZCUVVFc1EwRkJVMlVzUzBGQlFVRXNRMEZCVFVnc1MwRkJRVUVzUTBGQlQwVXNSMEZCUVVFc1EwRkJUVXdzVFVGQlFVRXNRMEZCVDBvc1RVRkJRVUVzUTBGQlFVRXNRMEZIT1VOd1F5eFZRVUZCUVN4RFFVRlhLMElzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVsUkxFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCUVN4RFFVTXpReXhKUVVWSlR5eExRVUZCUVN4RFFVWkJaQ3hIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZEVG1Vc1IwRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlJWWXNTMEZCUVN4RFFVRnBRaXhEUVVGQkxFVkJRVlpFTEV0QlFVRkJMRVZCUTBoQkxFdEJRVUZCTEVOQlFWRTVReXhKUVVGQlFTeERRVUZMWjBRc1QwRkJRVUVzUTBGQlVXeENMRkZCUVVGQkxFTkJRVlZSTEV0QlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFWRlFMRWRCUVVGQkxFTkJRVUZCTEVOQlF6bERRU3hIUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVOakxFTkJRVUVzUlVGQlZtTXNTMEZCUVVFc1JVRkRRVU1zUjBGQlFVRXNRMEZCU1VVc1NVRkJRVUVzUTBGQlMwZ3NTMEZCUVVFc1EwRkJRVUVzUTBGSmFrSXNUMEZCVDBNc1IwRkJRVUVzUTBGSFdHaEVMRk5CUVVGQkxFTkJRVlVyUWl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlNWRXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVWxETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGSlVDeEhRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVWd1JDeEpRVUZKVVN4SFFVRkJRU3hEUVVSS1VpeEhRVUZCUVN4RFFVRk5RU3hIUVVGQlFTeEZRVUZQTEVOQlFVRXNRMEZGVkZNc1IwRkJRVUVzUTBGQlRVZ3NTMEZCUVVFc1IwRkJWVU1zVFVGQlFVRXNRMEZCVTFBc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVbEJMRWRCUVVGQkxFTkJRMjVEVlN4TFFVRkJRU3hEUVVGUk1VTXNTVUZCUVVFc1EwRkJTekpETEU5QlFVRkJMRU5CUVZGaUxGRkJRVUZCTEVOQlFWVlJMRXRCUVVGQkxFTkJRVTlGTEVkQlFVRkJMRU5CUVVGQkxFTkJRM1JEU1N4SFFVRkJRU3hEUVVGTk5VTXNTVUZCUVVFc1EwRkJTekpETEU5QlFVRkJMRU5CUVZGaUxGRkJRVUZCTEVOQlFWVlRMRTFCUVVGQkxFTkJRVkZGTEVkQlFVRkJMRU5CUVVGQkxFTkJSWHBETEUxQlFVRXNRMEZCWXl4RFFVRkJMRVZCUVZaRExFdEJRVUZCTEVWQlFXVkJMRXRCUVVGQkxFTkJRVkZLTEV0QlFVRkJMRU5CUVUxSUxFMUJRVUZCTEVWQlFWVk1MRkZCUVVGQkxFTkJRVk5MTEUxQlFVRkJMRVZCUVVGQkxFTkJRV3RDTEVOQlFVRXNSVUZCVWxNc1IwRkJRVUVzUTBGQlFVRXNRMEZEYkVRc1EwRkJRU3hEUVVkTVpDeFJRVUZCUVN4RFFVRlRaU3hMUVVGQlFTeERRVUZOU0N4TFFVRkJRU3hEUVVGUlNpeExRVUZCUVN4RFFVRk5TQ3hOUVVGQlFTeERRVUZSVXl4SFFVRkJRU3hEUVVGQlFTeERRVWRvUkRkRExGbEJRVUZCTEVOQlFXRXJRaXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCU1ZFc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlF6ZERMRWxCUlVsUExFdEJRVUZCTEVOQlJrRmtMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVU5PWlN4SFFVRkJRU3hEUVVGTkxFVkJRVUVzUTBGRlZpeExRVUZCTEVOQlFXbENMRU5CUVVFc1JVRkJWa1FzUzBGQlFVRXNSVUZEU0VFc1MwRkJRVUVzUTBGQlVUbERMRWxCUVVGQkxFTkJRVXN3UWl4VFFVRkJRU3hEUVVGVlNTeFJRVUZCUVN4RFFVRlZVU3hMUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGUlVDeEhRVUZCUVN4RFFVRkJRU3hEUVVOb1JFRXNSMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZEWXl4RFFVRkJMRVZCUVZaakxFdEJRVUZCTEVWQlEwRkRMRWRCUVVGQkxFTkJRVWxGTEVsQlFVRkJMRU5CUVV0SUxFdEJRVUZCTEVOQlFVRkJMRU5CU1dwQ0xFOUJRVTlETEVkQlFVRkJMRU5CUjFob1JDeFZRVUZCUVN4RFFVRlhiVVFzVDBGQlFVRXNRMEZCUVVFc1EwRkRVQ3hKUVVWSlF5eEhRVUZCUVN4RFFVTkJNVUlzUzBGQlFVRXNRMEZJUVRKQ0xFZEJRVUZCTEVOQlFVMUdMRTlCUVVGQkxFTkJRVkZITEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlEzQkNSQ3hMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZKV2l4SFFVRlhMRVZCUVVFc1JVRkJVRVFzUjBGQlFVRXNRMEZCVnl4RFFVVllMRWxCUVVsSExFbEJRVUZCTEVOQlJFcElMRWRCUVVGQkxFTkJRVTFCTEVkQlFVRkJMRU5CUVVsc1FpeExRVUZCUVN4RFFVRk5MRWxCUVVFc1EwRkJRU3hEUVVWb1FpeEpRVUZMTEVsQlFVbEhMRU5CUVVGQkxFbEJRVXRsTEVkQlFVRkJMRU5CUTFaSExFbEJRVUZCTEVOQlFVOTJSQ3hKUVVGQlFTeERRVUZMZDBRc1NVRkJRVUVzUTBGQlMyNUNMRU5CUVVGQkxFTkJRVUZCTEVOQlEycENZeXhIUVVGQlFTeERRVUZOYmtRc1NVRkJRVUVzUTBGQlMzbEVMRmRCUVVGQkxFTkJRVmxHTEVsQlFVRkJMRU5CUVV0eVFpeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzWkRWQ3hMUVVGQlFTeERRVUZSZWtJc1NVRkJRVUVzUTBGQlN6QkVMR0ZCUVVGQkxFTkJRV05JTEVsQlFVRkJMRU5CUVV0eVFpeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTGVVSXNSMEZCUVVFc1JVRkJRVUVzUTBGQlR5eEhRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRkJMRU5CUXpWRExFVkJRVUVzUlVGQlVGSXNSMEZCUVVFc1IwRkRRVVVzUzBGQlFVRXNRMEZCVFVZc1IwRkJRVUVzUTBGQlFVRXNRMEZCVDI1RUxFbEJRVUZCTEVOQlFVdDNSQ3hKUVVGQlFTeERRVUZMTDBJc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxia01zVDBGQlR6UkNMRXRCUVVGQkxFTkJSMWgwUkN4alFVRkJRU3hGUVVGQlFTeERRVU5KTEVsQlFVbE5MRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVU5pTEVsQlFVc3NTVUZCU1dkRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKY2tNc1NVRkJRVUVzUTBGQlMwc3NUVUZCUVVFc1EwRkJUemhDTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNCRGFFTXNUVUZCUVVFc1EwRkJUelJETEVsQlFVRkJMRU5CUVV0cVJDeEpRVUZCUVN4RFFVRkxTeXhOUVVGQlFTeERRVUZQWjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjFFc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZlRU1zVDBGQlQzaERMRTFCUVVGQkxFTkJSMWhPTEZkQlFVRkJMRU5CUVZrMlJDeEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJRU3hEUVVObUxFbEJRVWxETEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVOa0xFbEJRVXNzU1VGQlNYaENMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmRVSXNTVUZCUVVFc1EwRkJTM3BDTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUTJRc1IwRkJRU3hGUVVGWWRVSXNTVUZCUVVFc1EwRkJTM1pDTEVOQlFVRkJMRU5CUVVGQkxFTkJSVXgzUWl4UFFVRkJRU3hGUVVGWFJDeEpRVUZCUVN4RFFVRkJRU3hGUVVSWWRrSXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJVSjVRaXhYUVVGQlFTeEZRVUZCUVN4RFFVVnNRa1FzVDBGQlFVRXNSVUZCVjBRc1NVRkJRVUVzUTBGQlMzWkNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3dRaXhYUVVGQlFTeEZRVUZCUVN4RFFVVTFRaXhQUVVGUFJpeFBRVUZCUVN4RFFVZFlPVVFzV1VGQlFVRXNRMEZCWVRaRUxFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVRkJMRU5CUTJoQ0xFbEJRVWxETEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVOa0xFbEJRVXNzU1VGQlNYaENMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmRVSXNTVUZCUVVFc1EwRkJTM3BDTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNwQ2NrTXNTVUZCUVVFc1EwRkJTMmRGTEZOQlFVRkJMRU5CUVZWS0xFbEJRVUZCTEVOQlFVdDJRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hIUVVGTGQwSXNUMEZCUVVFc1JVRkJWeXhIUVVGQkxFTkJRVUVzUTBGRGVFTkJMRTlCUVVGQkxFVkJRVmRFTEVsQlFVRkJMRU5CUVV0MlFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSE1FSXNWMEZCUVVFc1JVRkJRVUVzUTBGSGRrSXNUMEZCVDBZc1QwRkJRVUVzUTBGSFdEbEVMR2RDUVVGQlFTeERRVUZwUW10RkxFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVRkJMRU5CUTNCQ0xFbEJRVWw0UXl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGRFdpeEpRVUZMTEVsQlFVbFpMRU5CUVVGQkxFbEJRVXMwUWl4SlFVRkJRU3hEUVVOTExFZEJRVUVzUlVGQldFRXNTVUZCUVVFc1EwRkJTelZDTEVOQlFVRkJMRU5CUVVGQkxFZEJRMHNzUTBGQlFTeEZRVUZNUVN4RFFVRkJRU3hEUVVGUldpeExRVUZCUVN4RlFVRlRkME1zU1VGQlFVRXNRMEZCU3pWQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjd1FpeFhRVUZCUVN4RlFVRkJRU3hEUVVONlFpOUVMRWxCUVVGQkxFTkJRVXRyUlN4TFFVRkJRU3hEUVVGTlJDeEpRVUZCUVN4RFFVRkxOVUlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJRU3hGUVVGelFpeEhRVUZCTEVWQlFXWTBRaXhKUVVGQlFTeERRVUZMTlVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCVjFvc1MwRkJRVUVzUlVGQlUzZERMRWxCUVVGQkxFTkJRVXMxUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZIZVVJc1YwRkJRVUVzUlVGQlFVRXNRMEZEY0VWeVF5eExRVUZCUVN4RlFVRlRkME1zU1VGQlFVRXNRMEZCU3pWQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWFpDTEU5QlFVOWFMRXRCUVVGQkxFTkJSMWd4UWl4blFrRkJRVUVzUTBGQmFVSnZSU3hUUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCUVN4RFFVTjZRaXhKUVVGSk1VTXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRMW9zU1VGQlN5eEpRVUZKV1N4RFFVRkJRU3hKUVVGTE9FSXNVMEZCUVVFc1EwRkRSQ3hEUVVGQkxFVkJRVXc1UWl4RFFVRkJRU3hGUVVGVmNrTXNTVUZCUVVFc1EwRkJTMmRGTEZOQlFVRkJMRU5CUVZWSExGTkJRVUZCTEVOQlFWVTVRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGTFdpeExRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRmhNRU1zVTBGQlFVRXNRMEZCVlRsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjd1FpeFhRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTnFSWFJETEV0QlFVRkJMRVZCUVZNd1F5eFRRVUZCUVN4RFFVRlZPVUlzUTBGQlFVRXNRMEZCUVVFc1EwRkZOVUlzVDBGQlQxb3NTMEZCUVVFc1EwRkhXREZDTEZkQlFVRkJMRU5CUVZseFJTeEhRVUZCUVN4RFFVRkJRU3hEUVVOU0xFOUJRVTk2UXl4SlFVRkJRU3hEUVVGTE1FTXNVMEZCUVVFc1EwRkJWVVFzUjBGQlFVRXNRMEZCUVVFc1JVRkJVWHBETEVsQlFVRkJMRU5CUVVzd1F5eFRRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJRU3hEUVVkcVJIUkZMRTFCUVVGQkxFTkJRVTkxUlN4TlFVRkJRU3hEUVVGVExFTkJRVVZETEV0QlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGSFF5eExRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJReTlDTEVsQlFVbERMRTFCUVVGQkxFTkJWVW9zVDBGVVNYcEZMRWxCUVVGQkxFTkJRVXN3UlN4WFFVRkJRU3hEUVVGWlNpeE5RVUZCUVN4RFFVRkJRU3hEUVVOcVFrY3NUVUZCUVVFc1EwRkJlVUlzUTBGQlFTeERRVUZvUWtVc1NVRkJRVUVzUTBGQlMwWXNUVUZCUVVFc1JVRkJRVUVzUTBGQlpTeERRVUZCTEVOQlJYaENla1VzU1VGQlFVRXNRMEZCUzJ0RkxFdEJRVUZCTEVOQlFVMUpMRTFCUVVGQkxFTkJRVTlETEV0QlFVRkJMRU5CUVVGQkxFTkJRM1pDUlN4TlFVRkJRU3hEUVVGVFJTeEpRVUZCUVN4RFFVRkxSaXhOUVVGQlFTeEZRVUZCUVN4RFFVRlhTQ3hOUVVGQlFTeERRVUZQUXl4TFFVRkJRU3hEUVVVelFuWkZMRWxCUVVGQkxFTkJRVXRyUlN4TFFVRkJRU3hEUVVGTlNTeE5RVUZCUVN4RFFVRlBSU3hMUVVGQlFTeERRVUZCUVN4RFFVZHdRa01zVFVGQlFVRXNRMEZIV0RGRkxFdEJRVUZCTEVOQlFVMDJReXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjBZc1MwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZEYmtJc1NVRkJTV3BDTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVOYUxFbEJRVXNzU1VGQlNWa3NRMEZCUVVFc1EwRkJTVXNzUzBGQlFVRXNSVUZCVXl4RFFVRkJMRU5CUVVkTUxFTkJRVUZCTEVOQlFVbFBMRWRCUVVGQkxFTkJRVXRRTEVOQlFVRkJMRVZCUVVGQkxFTkJRemxDV2l4TFFVRkJRU3hEUVVGTmQwSXNTVUZCUVVFc1EwRkJTMW9zUTBGQlFVRXNRMEZCUVVFc1EwRkhaaXhQUVVGUFdpeExRVUZCUVN4RFFVZFlNVUlzWTBGQlFVRXNRMEZCWlc5RExFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUjNCQ0xFbEJSa0VzU1VGQlNYbERMRTFCUVVGQkxFTkJRVk0xUlN4SlFVRkJRU3hEUVVGTFF5eFJRVUZCUVN4RFFVRlhSQ3hKUVVGQlFTeERRVUZMUlN4TlFVRkJRU3hEUVVGVFJpeEpRVUZCUVN4RFFVRkxSeXhOUVVGQlFTeERRVU0xUXpCRkxGbEJRVUZCTEVOQlFXVXNSVUZCUVN4RFFVTldlRU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbEdMRTFCUVVGQkxFTkJRVkZGTEVOQlFVRkJMRVZCUVVGQkxFTkJRM2hDZDBNc1dVRkJRVUVzUlVGQlowSkVMRTFCUVVGQkxFTkJRVTlFTEVsQlFVRkJMRU5CUVV0SExFdEJRVUZCTEVOQlFVMUlMRWxCUVVGQkxFTkJRVXRHTEUxQlFVRkJMRVZCUVVGQkxFTkJRVmRITEUxQlFVRkJMRU5CUVU5NlF5eE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVUzUkN4UFFVRlBNRU1zV1VGQlFVRXNRMEZIV0RsRkxHbENRVUZCUVN4RFFVRnJRbTlETEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJSM1pDTEVsQlJrRXNTVUZCU1hsRExFMUJRVUZCTEVOQlFWTTFSU3hKUVVGQlFTeERRVUZMUXl4UlFVRkJRU3hEUVVGVE5FTXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVczNReXhKUVVGQlFTeERRVUZMUlN4TlFVRkJRU3hEUVVGUE1rTXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVczNReXhKUVVGQlFTeERRVUZMUnl4TlFVRkJRU3hEUVVOd1JUQkZMRmxCUVVGQkxFTkJRV1VzUlVGQlFTeERRVU5XZUVNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxHTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNoQ2QwTXNXVUZCUVVFc1JVRkJaMEpFTEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdEhMRXRCUVVGQkxFTkJRVTFJTEVsQlFVRkJMRU5CUVV0R0xFMUJRVUZCTEVWQlFVRkJMRU5CUVZkSExFMUJRVUZCTEVOQlFVOTZReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVM1JDeFBRVUZQTUVNc1dVRkJRVUVzUTBGSFdEbEZMRmRCUVVGQkxFTkJRVmx2UXl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVVZxUWl4UFFVUlZORU1zU1VGQlFVRXNRMEZCUzBNc1IwRkJRVUVzUlVGQlFVRXNRMEZCVFVNc1VVRkJRVUVzUTBGQlV6bERMRTFCUVVGQkxFTkJRVUZCTEVOQlFWVjNReXhKUVVGQlFTeERRVUZMUml4TlFVRkJRU3hGUVVGQlFTeERRVUZUVVN4UlFVRkJRU3hEUVVGVE9VTXNUVUZCUVVFc1EwRkJRVUVzUTBGQlVWVXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGSmFrWTVReXhWUVVGQlFTeERRVUZYZFVVc1RVRkJRVUVzUTBGQlFVRXNRMEZEVUN4SlFVRkpXU3hIUVVGQlFTeERRVUZOYkVZc1NVRkJRVUVzUTBGQlMyMUdMRmRCUVVGQkxFTkJRVmxpTEUxQlFVRkJMRU5CUVU5WkxFZEJRVUZCTEVOQlFVRkJMRU5CUld4RExFOUJSRUZCTEVkQlFVRkJMRU5CUVVsRkxFbEJRVUZCTEVOQlFVdGtMRTFCUVVGQkxFTkJRVTlsTEV0QlFVRkJMRU5CUVVGQkxFTkJRVk5tTEUxQlFVRkJMRU5CUVU5blFpeFJRVUZCUVN4RFFVRlRka0lzVjBGQlFVRXNSVUZCUVVFc1EwRkRiRU12UkN4SlFVRkJRU3hEUVVGTGRVWXNVMEZCUVVFc1EwRkJWVXdzUjBGQlFVRXNRMEZCUzFvc1RVRkJRVUVzUTBGQlQyVXNTMEZCUVVFc1EwRkJRVUVzUTBGSGRFTjBSaXhsUVVGQlFTeERRVUZuUW5sR0xFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVRkJMRU5CUlhCQ0xFbEJSRUVzU1VGQlNVTXNUMEZCUVVFc1EwRkJWU3hGUVVGQkxFTkJRMHh3UkN4RFFVRkJRU3hEUVVGSmJVUXNTMEZCUVVFc1EwRkJUWEpFTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGSFJTeERRVUZCUVN4RlFVRkxMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNSVUZCUVVFc1EwRkRia052UkN4UFFVRkJRU3hGUVVGWFJDeExRVUZCUVN4RFFVRk5ia1FzUTBGQlFVRXNRMEZCUVVFc1EwRkhja0lzU1VGRVFXMUVMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVU5EYmtRc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWx2UkN4UFFVRkJRU3hEUVVGUmRFUXNUVUZCUVVFc1EwRkJVVVVzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOeVF5eEpRVUZKY1VRc1VVRkJRVUVzUTBGQlFVRXNRMEZCV1hKRUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RlFVRkxMRU5CUVVFc1EwRkRla0p0UkN4TFFVRkJRU3hGUVVGVFF5eFBRVUZCUVN4RFFVRlJjRVFzUTBGQlFVRXNRMEZCUVVFc1EwRkRSQ3hEUVVGQkxFVkJRVnB4UkN4UlFVRkJRU3hGUVVOSmNrUXNRMEZCUVVFc1JVRkJTMjlFTEU5QlFVRkJMRU5CUVZGMFJDeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1IwRkRkRUp4UkN4TFFVRkJRU3hGUVVGVExFZEJRVUVzUTBGQlFTeERRVXR5UWl4SlFVUkJReXhQUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZEUkhCRUxFTkJRVUZCTEVOQlFVbHRSQ3hMUVVGQlFTeERRVUZOY2tRc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVZEZMRU5CUVVGQkxFVkJRVXNzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGQlFTeERRVU51UTI5RUxFOUJRVUZCTEVWQlFWZEVMRXRCUVVGQkxFTkJRVTF1UkN4RFFVRkJRU3hEUVVGQlFTeERRVVZ5UWl4UFFVRlBiMFFzVDBGQlFVRXNRMEZIV0RGR0xGTkJRVUZCTEVOQlFWVXdRaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUVN4RFFVTmtMRWRCUVc5Q0xFTkJRVUVzUlVGQmFFSkJMRXRCUVVGQkxFTkJRVTFWTEUxQlFVRkJMRU5CUTA0c1QwRkJUMjVETEVsQlFVRkJMRU5CUVV0RExGRkJRVUZCTEVOQlFWTXdSaXhSUVVGQlFTeERRVUZUYkVVc1MwRkJRVUVzUTBGQlFVRXNRMEZKZEVNeFFpeFZRVUZCUVN4RFFVRlhNRUlzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVFc1EwRkRaaXhQUVVGTGVrSXNTVUZCUVVFc1EwRkJTMmRGTEZOQlFVRkJMRU5CUVZWMlF5eExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJTMjVDUVN4TFFVRkJRU3hGUVVGQlFTeERRVXBJUVN4TFFVRkJRU3hEUVVGUlFTeExRVUZCUVN4RFFVRk5VeXhMUVVGQlFTeERRVUZOTEVWQlFVRXNRMEZCUVN4RlFVTmtMRU5CUVVFc1EwRkJRU3hEUVVGTGJFTXNTVUZCUVVFc1EwRkJTME1zVVVGQlFVRXNRMEZCVTBRc1NVRkJRVUVzUTBGQlMwVXNUVUZCUVVFc1EwRkJUeXRDTEU5QlFVRkJMRU5CUVZGU0xFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNMVEzcENMRWxCUVVGQkxFTkJRVXN3UkN4aFFVRkJRU3hEUVVGamFrTXNTMEZCUVVFc1EwRkJUWGRFTEZGQlFVRkJMRVZCUVVGQkxFTkJRVmtzUjBGQlFTeERRVUZMTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUzNwRWJFWXNTVUZCUVVFc1EwRkJTeXRDTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRMW9zVDBGQlQwRXNVVUZCUVVFc1EwRkJVMGtzUzBGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVFc1EwRkJTVEJFTEU5QlFVRkJMRVZCUVVGQkxFTkJRVlZETEVsQlFVRkJMRU5CUVVzc1JVRkJRU3hEUVVGQkxFTkJSemRET1VZc1QwRkJRVUVzUTBGQlVUQkNMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVUZCTEVOQlExb3NSMEZCYjBJc1EwRkJRU3hGUVVGb1FrRXNTMEZCUVVFc1EwRkJUVlVzVFVGQlFVRXNRMEZEVGl4UFFVRlBia01zU1VGQlFVRXNRMEZCUzBVc1RVRkJRVUVzUTBGQlQzbEdMRkZCUVVGQkxFTkJRVk5zUlN4TFFVRkJRU3hEUVVGQlFTeERRVWx3UXpGQ0xGRkJRVUZCTEVOQlFWTXdRaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUVN4RFFVTmlMRWRCUVc5Q0xFTkJRVUVzUlVGQmFFSkJMRXRCUVVGQkxFTkJRVTFWTEUxQlFVRkJMRU5CUTA0c1QwRkJUMjVETEVsQlFVRkJMRU5CUVV0SkxFOUJRVUZCTEVOQlFWRjFSaXhSUVVGQlFTeERRVUZUYkVVc1MwRkJRVUVzUTBGQlFVRXNRMEZKY2tNeFFpeE5RVUZCUVN4RFFVRlBNRUlzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVFc1EwRkRXQ3hKUVVGTExFbEJRVWx4UlN4RFFVRkJRU3hKUVVGTGNrVXNTMEZCUVVFc1EwRkRWaXhIUVVGSmVrSXNTVUZCUVVFc1EwRkJTeXRHTEU5QlFVRkJMRU5CUVZGMFJTeExRVUZCUVN4RFFVRk5jVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkhaaXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVWRZTDBZc1pVRkJRVUVzUTBGQlowSXdRaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUVN4RFFVVndRaXhIUVVSVlFTeExRVUZCUVN4RFFVRk5WU3hOUVVGQlFTeERRVU5PTEVOQlFVRXNRMEZEVGl4SlFVRkxMRWxCUVVrMlJDeERRVUZCUVN4SlFVRkxka1VzUzBGQlFVRXNRMEZEVml4SFFVRkpla0lzU1VGQlFVRXNRMEZCUzJkRkxGTkJRVUZCTEVOQlFWVjJReXhMUVVGQlFTeERRVUZOZFVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRja0lzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hKUVVGTGVFVXNTMEZCUVVFc1EwRkRWaXhIUVVGSmVrSXNTVUZCUVVFc1EwRkJTMnRITEU5QlFVRkJMRU5CUVZGNlJTeExRVUZCUVN4RFFVRk5kMFVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNTVUZCU3l4SlFVRkpSU3hEUVVGQlFTeEpRVUZMTVVVc1MwRkJRVUVzUTBGRFZpeEhRVUZKZWtJc1NVRkJRVUVzUTBGQlN5dEdMRTlCUVVGQkxFTkJRVkYwUlN4TFFVRkJRU3hEUVVGTk1FVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEYmtJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4SlFVRkxNMFVzUzBGQlFVRXNRMEZEVml4SFFVRkpla0lzU1VGQlFVRXNRMEZCUzNGSExGRkJRVUZCTEVOQlFWTTFSU3hMUVVGQlFTeERRVUZOTWtVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRjRUlzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZWTTBNc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGSFdISkhMRmRCUVVGQkxFTkJRVmtyUWl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlNVd3NTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVUVzUTBGREwwSXNUVUZCUVN4RFFVRm5ReXhEUVVGQkxFVkJRVFZDU3l4UlFVRkJRU3hEUVVGVFJ5eFBRVUZCUVN4RFFVRlJVaXhMUVVGQlFTeERRVUZCUVN4RFFVbDZRakZDTEU5QlFVRkJMRU5CUVZFd1FpeExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJRU3hEUVVWYUxFOUJRVzlDTEVOQlFVRXNSVUZCUVN4RFFVUndRa0VzUzBGQlFVRXNRMEZCVVN4SlFVRkpOa1VzVFVGQlFVRXNRMEZCVHpkRkxFdEJRVUZCTEVOQlFVRkJMRVZCUTFSVkxFMUJRVUZCTEVWQlEwTnVReXhKUVVGQlFTeERRVUZMUnl4TlFVRkJRU3hEUVVGUGQwWXNVVUZCUVVFc1EwRkJVMnhGTEV0QlFVRkJMRU5CUVVGQkxFTkJTM0JETVVJc1QwRkJRVUVzUTBGQlVUQkNMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVUZCTEVOQlExb3NTVUZCU1RoRkxGZEJRVUZCTEVOQlFXTTVSU3hMUVVGQlFTeERRVUZOVXl4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVU01UWl4SFFVRXdRaXhEUVVGQkxFVkJRWFJDY1VVc1YwRkJRVUVzUTBGQldYQkZMRTFCUVVGQkxFTkJRMW9zVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZGVUN4SFFVRkpia01zU1VGQlFVRXNRMEZCUzNkSExHRkJRVUZCTEVOQlFXTkVMRmRCUVVGQkxFTkJRVmtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZETDBJc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGRldDeEpRVUZKUlN4VFFVRkJRU3hEUVVGWlJpeFhRVUZCUVN4RFFVRlpMRU5CUVVFc1EwRkJRU3hEUVVGSGNrVXNTMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGRGNrTXNUMEZCZDBJc1EwRkJRU3hGUVVGd1FuVkZMRk5CUVVGQkxFTkJRVlYwUlN4TlFVRkJRU3hGUVVGQlFTeERRVWRPYmtNc1NVRkJRVUVzUTBGQlMzZEhMR0ZCUVVGQkxFTkJRV05ETEZOQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUlVGQlFTeERRVWMzUW5wSExFbEJRVUZCTEVOQlFVdDNSeXhoUVVGQlFTeERRVUZqUXl4VFFVRkJRU3hEUVVGVkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlVUZERNVWNzVVVGQlFVRXNRMEZCVXpCQ0xFdEJRVUZCTEVOQlFVRkJMRU5CUTB3c1NVRkJTV2xHTEUxQlFVRkJMRU5CVlVvc1RVRlViMElzVTBGQlFTeEZRVUZCTEU5QlFWUnFSaXhMUVVGQlFTeERRVU5RYVVZc1RVRkJRVUVzUTBGQlUycEdMRXRCUVVGQkxFTkJSVmtzVVVGQlFTeEZRVUZCTEU5QlFWUkJMRXRCUVVGQkxFTkJRMXBwUml4TlFVRkJRU3hEUVVGMVF5eE5RVUZCTEVWQlFUZENha1lzUzBGQlFVRXNRMEZCVFd0R0xHbENRVUZCUVN4RlFVRkJRU3hGUVVFNFJDeEhRVUZCTEVWQlFUZENiRVlzUzBGQlFVRXNRMEZCVFd0R0xHbENRVUZCUVN4RlFVRkJRU3hEUVVWc1F5eFJRVUZCTEVWQlFVRXNUMEZCVkd4R0xFdEJRVUZCTEVkQlExcHBSaXhOUVVGQlFTeERRVUZ0UWl4RFFVRkJMRVZCUVZScVJpeExRVUZCUVN4RFFVRkJRU3hEUVVWUWFVWXNUVUZCUVVFc1EwRkhXRE5ITEU5QlFVRkJMRU5CUVZFd1FpeExRVUZCUVN4RFFVRkJRU3hEUVVOS0xFbEJRVWx0Uml4TFFVRkJRU3hEUVZWS0xFMUJWRzlDTEZOQlFVRXNSVUZCUVN4UFFVRlVia1lzUzBGQlFVRXNRMEZEVUcxR0xFdEJRVUZCTEVOQlFWRnVSaXhMUVVGQlFTeERRVVZoTEZGQlFVRXNSVUZCUVN4UFFVRlVRU3hMUVVGQlFTeERRVU5hYlVZc1MwRkJRVUVzUTBGQmMwTXNUMEZCUVN4RlFVRTNRbTVHTEV0QlFVRkJMRU5CUVUxclJpeHBRa0ZCUVVFc1JVRkJRVUVzUlVGQkswUXNSMEZCUVN4RlFVRTNRbXhHTEV0QlFVRkJMRU5CUVUxclJpeHBRa0ZCUVVFc1JVRkJRVUVzUTBGRmJFTXNVVUZCUVN4RlFVRkJMRTlCUVZSc1JpeExRVUZCUVN4SFFVTmFiVVlzUzBGQlFVRXNRMEZCYTBJc1EwRkJRU3hGUVVGVWJrWXNTMEZCUVVFc1EwRkJRVUVzUTBGRlRtMUdMRXRCUVVGQkxFTkJSMWczUnl4WlFVRkJRU3hEUVVGaE9FY3NUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUTBGRGJFSXNUMEZCVDBNc1RVRkJRVUVzUTBGQlQwTXNTVUZCUVVFc1EwRkJTMFlzVFVGQlFVRXNRMEZCUVVFc1EwRkJVVEZGTEUxQlFVRkJMRU5CUnk5Q2NFTXNZVUZCUVVFc1EwRkJZekJDTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGQkxFTkJRMnhDTEVkQlFXRXNSVUZCUVN4RlFVRlVRU3hMUVVGQlFTeERRVU5CTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUlZBc1NVRkJTeXhKUVVGSmNVVXNRMEZCUVVFc1NVRkJTM0pGTEV0QlFVRkJMRU5CUTFZc1IwRkJaMElzUjBGQlFTeEZRVUZhUVN4TFFVRkJRU3hEUVVGTmNVVXNRMEZCUVVFc1EwRkJRVUVzUTBGRFRpeE5RVUZCTEVOQlFVOHNRMEZCUVN4RFFVbHVRaXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVWRZTDBZc1UwRkJRVUVzUTBGQlZTdENMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVU01UWl4SlFVRkxMRWxCUVVrclJDeERRVUZCUVN4SlFVRkxhRVVzVVVGQlFVRXNRMEZEVml4SFFVRkpReXhOUVVGQlFTeEZRVUZWUkN4UlFVRkJRU3hEUVVGVFowVXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkhaaXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVWRZTDBZc1NVRkJRVUVzUTBGQlMyZERMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlJWWXNSMEZCYVVJc1IwRkJRU3hGUVVGaVFTeE5RVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJRU3hEUVVGWExFTkJSV3hDTEVsQlJFRXNTVUZCU1dsR0xGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVTlNNMFVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbE9MRTFCUVVGQkxFTkJRVTlKTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNSQ0xFTkJRVUVzUlVGQlRFRXNRMEZCUVVFc1IwRkRRVEpGTEZWQlFVRkJMRVZCUVdOcVJpeE5RVUZCUVN4RFFVRlBUU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjM1FrNHNUVUZCUVVFc1EwRkJVeTlDTEVsQlFVRkJMRU5CUVV0M1JDeEpRVUZCUVN4RFFVRkxkMFFzVlVGQlFVRXNRMEZCUVVFc1EwRkpka0lzUjBGQmFVTXNSMEZCUVN4RlFVRTNRbXBHTEUxQlFVRkJMRU5CUVU5QkxFMUJRVUZCTEVOQlFVOUpMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZCTEVOQlFWY3NRMEZGYkVNc1NVRkVTVFpGTEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVOU00wVXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsT0xFMUJRVUZCTEVOQlFVOUpMRTFCUVVGQkxFTkJRVkZGTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DUVN4RFFVRkJRU3hGUVVGTFRpeE5RVUZCUVN4RFFVRlBTU3hOUVVGQlFTeERRVUZUTEVOQlFVRXNSMEZEY2tJMlJTeFZRVUZCUVN4RlFVRmpha1lzVFVGQlFVRXNRMEZCVDAwc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhOMEpPTEUxQlFVRkJMRU5CUVZNdlFpeEpRVUZCUVN4RFFVRkxkMFFzU1VGQlFVRXNRMEZCUzNkRUxGVkJRVUZCTEVOQlFVRkJMRU5CUlhaQ0xFOUJRVTlxUml4TlFVRkJRU3hEUVVkWWFFTXNZVUZCUVVFc1EwRkJZMnRJTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlF5eEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkRja01zU1VGQlNURkdMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVU5hTEVsQlFVc3NTVUZCU1Zrc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWswUlN4SlFVRkJRU3hEUVVGTE9VVXNUVUZCUVVFc1EwRkJVVVVzUTBGQlFVRXNSVUZCUVVFc1EwRkRla0kwUlN4SlFVRkJRU3hEUVVGTE5VVXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRUWkZMRWxCUVVGQkxFTkJRMWg2Uml4TFFVRkJRU3hGUVVGVE1FWXNSVUZCUVVFc1EwRkhWREZHTEV0QlFVRkJMRVZCUVZOM1JpeEpRVUZCUVN4RFFVRkxOVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkhkRUlzVDBGQlQxb3NTMEZCUVVFc1EwRkhXREZDTEdkQ1FVRkJRU3hEUVVGcFFuRklMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZCTEVOQlNYQkNMRTFCU0RaQ0xFZEJRVUVzUlVGQmVrSkJMRWxCUVVGQkxFTkJRVXRCTEVsQlFVRkJMRU5CUVV0cVJpeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hIUVVOdVFtbEdMRWxCUVVGQkxFVkJRVkVzUjBGQlFTeERRVUZCTEVOQlJVeEJMRWxCUVVGQkxFTkJSMWh5U0N4clFrRkJRVUVzUTBGQmJVSnpTQ3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCUVN4RFFVVjBRaXhKUVVSQkxFbEJRMU5vUml4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkVVU3hqUVVGQkxFTkJRMk5HTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpGRExFZEJSbTlDTEdOQlFVRXNRMEZGUlVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVFdkR0xFbEJRVUZCTEVOQlEzaENMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJSMllzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZIV0hSSUxGTkJRVUZCTEVOQlFWVXJRaXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCU1VNc1RVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZGT1VJc1NVRkVRU3hKUVVGSmRVWXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRME5xUml4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVkFzVVVGQlFVRXNRMEZCVTBzc1RVRkJRVUVzUTBGQlVVVXNRMEZCUVVFc1JVRkJRVUVzUTBGRE4wSlFMRkZCUVVGQkxFTkJRVk5QTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTFPTEUxQlFVRkJMRVZCUTJaMVJpeERRVUZCUVN4RlFVRkJRU3hEUVVkU0xFOUJRVTlCTEVOQlFVRkJMRU5CUjFoMlNDeFpRVUZCUVN4RFFVRmhLMElzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUTJwRExFbEJRVWwzUml4VlFVRkJRU3hEUVVGaExFVkJRVUVzUTBGRGFrSXNTVUZCU3l4SlFVRkpiRVlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFFMRkZCUVVGQkxFTkJRVk5MTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpkQ1VDeFJRVUZCUVN4RFFVRlRUeXhEUVVGQlFTeERRVUZCUVN4SFFVRlBUaXhOUVVGQlFTeEZRVU5vUW5kR0xGVkJRVUZCTEVOQlFWZDBSU3hKUVVGQlFTeERRVUZMV2l4RFFVRkJRU3hEUVVGQlFTeERRVWw0UWl4UFFVRlBhMFlzVlVGQlFVRXNRMEZIV0hoSUxFdEJRVUZCTEVOQlFVMTVTQ3hSUVVGQlFTeERRVUZCUVN4RFFVTkdMRTlCUVVFc1MwRkJORUlzUTBGQlFTeEhRVUZpUVN4UlFVRkJRU3hEUVVkdVFucElMRTFCUVVGQkxFTkJRVTk1U0N4UlFVRkJRU3hEUVVGQlFTeERRVU5JTEU5QlFXMUNMRWxCUVVFc1JVRkJXa0VzVVVGQlFVRXNRMEZIV0hwSUxFOUJRVUZCTEVOQlFWRjVTQ3hSUVVGQlFTeERRVUZCUVN4RFFVTktMRTlCUVU5NFNDeEpRVUZCUVN4RFFVRkxhMFVzUzBGQlFVRXNRMEZCVFhORUxGRkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFTkJRV040U0N4SlFVRkJRU3hEUVVGTGVVZ3NUVUZCUVVFc1EwRkJUMFFzVVVGQlFVRXNRMEZCUVVFc1EwRkhhRVI2U0N4UFFVRkJRU3hEUVVGUmVVZ3NVVUZCUVVFc1EwRkJRVUVzUTBGRFNpeEpRVUZKUlN4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZKV0N4TlFVaDFRaXhSUVVGQkxFVkJRVUVzVDBGQldrWXNVVUZCUVVFc1IwRkRVRVVzU1VGQlFVRXNRMEZCVDBZc1VVRkJRVUVzUTBGQlUwY3NWMEZCUVVFc1IwRkJaMEpETEV0QlFVRkJMRU5CUVVGQkxFTkJSVGRDUml4SlFVRkJRU3hEUVVkWU0wZ3NVVUZCUVVFc1EwRkJVM2xJTEZGQlFVRkJMRU5CUVVGQkxFTkJRMHdzU1VGQlNVVXNTVUZCUVVFc1EwRkJRVUVzUTBGQlR5eERRVUZCTEVOQlNWZ3NUVUZJZFVJc1VVRkJRU3hGUVVGQkxFOUJRVnBHTEZGQlFVRkJMRWRCUTFCRkxFbEJRVUZCTEVOQlFVOUdMRkZCUVVGQkxFTkJRVk5ITEZkQlFVRkJMRWRCUVdkQ1lpeE5RVUZCUVN4RFFVRkJRU3hEUVVVM1Fsa3NTVUZCUVVFc1EwRkhXRE5JTEZGQlFVRkJMRU5CUVZONVNDeFJRVUZCUVN4RFFVRkJRU3hEUVVOTUxFbEJRVWxGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVThzUTBGQlFTeERRVWxZTEUxQlNIVkNMRkZCUVVFc1JVRkJRU3hQUVVGYVJpeFJRVUZCUVN4SFFVTlFSU3hKUVVGQlFTeERRVUZQUml4UlFVRkJRU3hEUVVGVFJ5eFhRVUZCUVN4SFFVRm5RbkpDTEUxQlFVRkJMRU5CUVVGQkxFTkJSVGRDYjBJc1NVRkJRVUVzUTBGSFdETklMRkZCUVVGQkxFTkJRVk41U0N4UlFVRkJRU3hEUVVGQlFTeERRVU5NTEVsQlFVbEZMRWxCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVbFlMRTFCU0hWQ0xGRkJRVUVzUlVGQlFTeFBRVUZhUml4UlFVRkJRU3hIUVVOUVJTeEpRVUZCUVN4RFFVRlBSaXhSUVVGQlFTeERRVUZUUnl4WFFVRkJRU3hIUVVGblFrVXNUVUZCUVVFc1EwRkJRVUVzUTBGRk4wSklMRWxCUVVGQkxFTkJSMWd6U0N4TlFVRkJRU3hEUVVGUGVVZ3NVVUZCUVVFc1EwRkJRVUVzUTBGRFNDeEpRVUZKUlN4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZKV0N4TlFVaDFRaXhUUVVGQkxFVkJRVUVzVDBGQldrWXNVVUZCUVVFc1IwRkRVRVVzU1VGQlFVRXNRMEZCVDBZc1VVRkJRVUVzUTBGQlUwY3NWMEZCUVVFc1IwRkJaMEpITEU5QlFVRkJMRU5CUVVGQkxFTkJSVGRDU2l4SlFVRkJRU3hEUVVkWU0wZ3NWVUZCUVVFc1EwRkJWM2xJTEZGQlFVRkJMRU5CUVVGQkxFTkJRMUFzVFVGQk5FSXNWVUZCUVN4RlFVRkJMRTlCUVdKQkxGRkJRVUZCTEVOQlIyNUNla2dzVFVGQlFVRXNWMEZCUVVFc1EwRkJhMEpuU1N4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlNVTXNVVUZCUVVFc1JVRkJWeXhKUVVGQkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzcERMRWxCUVVsRExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTmtMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNTVUZCUzBnc1UwRkJRVUVzUTBGRFZrVXNUMEZCUVVFc1EwRkJVVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzVFVGQlYwZ3NVMEZCUVVFc1EwRkJWVWNzUTBGQlFVRXNRMEZCUVVFc1EwRkZha05HTEZGQlFVRkJMRU5CUVZORExFOUJRVUZCTEVOQlFVRkJMRU5CUjJKc1NTeFJRVUZCUVN4RlFVRkJRU3hEUVVOSkxFMUJRVkVzWjBWQlFVRXNRMEZCYVVWdlNTeEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZWUXl4VFFVRkJRU3hEUVVGQlFTeERRVWMxUm5SSkxGTkJRVUZCTEVOQlFWVjFTU3hSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCU1VNc1UwRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVRXNRMEZEYWtNc1NVRkJTVU1zVVVGQlFVRXNRMEZCV1hoSkxFbEJRVUZCTEVOQlFVdHJSU3hMUVVGQlFTeERRVUZOYjBVc1VVRkJRVUVzUTBGQlUwVXNVVUZCUVVFc1EwRkJRVUVzUTBGQllVWXNVVUZCUVVFc1EwRkJVMFVzVVVGQlFVRXNRMEZCVnl4TlFVRkJMRU5CUTJwRlF5eFJRVUZCUVN4RFFVRlpla2tzU1VGQlFVRXNRMEZCUzJ0RkxFdEJRVUZCTEVOQlFVMXZSU3hSUVVGQlFTeERRVUZUUnl4UlFVRkJRU3hEUVVGQlFTeERRVUZoU0N4UlFVRkJRU3hEUVVGVFJ5eFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkRha1ZETEVsQlFVRkJMRU5CUVZFeFNTeEpRVUZCUVN4RFFVRkxhMFVzUzBGQlFVRXNRMEZCVFc5RkxGRkJRVUZCTEVOQlFWTkxMRWxCUVVGQkxFTkJRVUZCTEVOQlFWTk1MRkZCUVVGQkxFTkJRVk5KTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVOeVJFVXNVVUZCUVVFc1EwRkJXVFZKTEVsQlFVRkJMRU5CUVV0clJTeExRVUZCUVN4RFFVRk5iMFVzVVVGQlFVRXNRMEZCVTAwc1VVRkJRVUVzUTBGQlFVRXNRMEZCWVU0c1VVRkJRVUVzUTBGQlUwMHNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRMnBGUXl4UFFVRkJRU3hEUVVGVkxFZEJRVUVzUTBGRFZrTXNWMEZCUVVFc1EwRkJRVUVzUTBGQll5eERRVUZCTEVOQlEycENPVWtzU1VGQlFVRXNRMEZCUzJ0RkxFdEJRVUZCTEVOQlFVMXZSU3hSUVVGQlFTeERRVUZUYkVRc1NVRkJRVUVzUTBGQlFVRXNSVUZEYWtJd1FpeE5RVUZCUVN4RFFVRlBReXhKUVVGQlFTeERRVUZMZFVJc1VVRkJRVUVzUTBGQlUyeEVMRWxCUVVGQkxFTkJRVUZCTEVOQlFVMHlSQ3hIUVVGQlFTeERRVUZKTlVZc1IwRkJRVUVzUlVGQlFVRXNRMEZEZGtJeVJpeFhRVUZCUVN4SFFVRmhSQ3hQUVVGQlFTeEZRVUZYTVVZc1IwRkJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVMXRSaXhSUVVGQlFTeERRVUZUYkVRc1NVRkJRVUVzUTBGQlMycERMRWRCUVVGQkxFTkJRVUZCTEVOQlFVOHNSMEZCUVN4RFFVRkJMRU5CUTNwRVFTeEhRVUZCUVN4RlFVRlBiMFlzVTBGQlFVRXNSMEZCVjA4c1YwRkJRVUVzUTBGQlFVRXNRMEZCWXl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSVFZETEVsQlFVbEZMRkZCUVVGQkxFTkJRVmRTTEZGQlFVRkJMRU5CUVZjc1MwRkJRU3hEUVVGUlF5eFJRVUZCUVN4RFFVRlhMRWRCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCVHl4SFFVRkJMRU5CUVUxRkxGRkJRVUZCTEVOQlFWZERMRTlCUVVGQkxFTkJSek5GTEU5QlJFRkhMRkZCUVVGQkxFTkJRVUZCTEVOQlJFRkJMRkZCUVVGQkxFTkJRVmxCTEZGQlFVRkJMRU5CUVZORExGZEJRVUZCTEVOQlFWa3NSMEZCUVN4RFFVRkJMRVZCUVZGRUxGRkJRVUZCTEVOQlFWTTNSeXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCU3paSExGRkJRVUZCTEVOQlFWTnVSeXhMUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjIxSExGRkJRVUZCTEVOQlFWTTNSeXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4RFFVRkxOa2NzVVVGQlFVRXNSVUZEY0VaRExGZEJRVUZCTEVOQlFWa3NSMEZCUVN4RFFVRkJMRVZCUVZGRUxGRkJRVUZCTEVOQlFWTTNSeXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCU3paSExGRkJRVUZCTEVOQlFWTnVSeXhMUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjIxSExGRkJRVUZCTEVOQlFWTTNSeXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4RFFVRkxOa2NzVVVGQlFVRXNRMEZKTjBkcVNpeFhRVUZCUVN4RFFVRlphVW9zVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkRia0lzUjBGQlNXaEtMRWxCUVVGQkxFTkJRVXRyUlN4TFFVRkJRU3hEUVVGTk9FVXNVVUZCUVVFc1EwRkJRVUVzUTBGQlZ5eERRVVYwUWl4SlFVRkpSU3hSUVVGQlFTeERRVUZCUVN4RFFVRjVReXhEUVVGQkxFZEJRVUVzUTBGRU4wTkdMRkZCUVVGQkxFTkJRVmRCTEZGQlFVRkJMRU5CUVZNdlJDeFJRVUZCUVN4RlFVRkJRU3hGUVVOTGFFUXNUMEZCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVUVzUTBGQmFVSXNTVUZCUVN4RFFVRlBLMGNzVVVGQlFVRXNRMEZCVXpsSExFdEJRVUZCTEVOQlFVMHNTMEZCUVN4RFFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGQkxFTkJRek5GYVVnc1VVRkJRVUVzUTBGQlYwZ3NVVUZCUVVFc1EwRkJVemxITEV0QlFVRkJMRU5CUVUwc1MwRkJRU3hEUVVGQkxFTkJRVTk1UWl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU55UTJkR0xFbEJRVUZCTEVOQlFVOVJMRkZCUVVGQkxFTkJRVk5xU0N4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZMTEVOQlFVRXNRMEZCUVN4RFFVTXpRblZITEZGQlFVRkJMRU5CUVZkRkxFbEJRVUZCTEVOQlFVdDZSeXhMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hEUVVNelFuZEhMRWxCUVVGQkxFTkJRVTlETEVsQlFVRkJMRU5CUVV0NlJ5eExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTGVVSXNSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGRE0wSjVSQ3hKUVVGQlFTeERRVUZQTEVkQlFVRXNRMEZCVFN0Q0xGRkJRVUZCTEVOQlFWTnFTQ3hMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxlVUlzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkRja05wUml4UlFVRkJRU3hEUVVGWGVFSXNTVUZCUVVFc1EwRkJTMnhHTEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlF6TkNNa2NzVDBGQlFVRXNRMEZCUVVFc1EwRkJhME1zUTBGQlFTeEhRVUYyUW5wQ0xFbEJRVUZCTEVOQlFVdHVSaXhQUVVGQlFTeERRVUZSTEVkQlFVRXNRMEZCUVN4RFFVRmxMRWxCUVVFc1EwRkJUMjFHTEVsQlFVRkJMRU5CUVV0c1JpeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTGVVSXNSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGRmJFVjVRaXhKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZEV0N4SFFVRmxMRWxCUVVFc1JVRkJXSGxFTEU5QlFVRkJMRU5CUVdsQ0xFTkJRMnBDTEVsQlFVbFBMRXRCUVVGQkxFTkJRVkZRTEU5QlFVRkJMRU5CUVZFelJ5eExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVNeFFpeEpRVUZMTEVsQlFVazBSQ3hEUVVGQlFTeEpRVUZMYzBRc1MwRkJRVUVzUTBGQlR5eERRVU5xUWl4SlFVRkpReXhMUVVGQlFTeERRVUZSUkN4TFFVRkJRU3hEUVVGTmRFUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ6VkVMRXRCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlEzWkNiVWdzUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkRUbXBGTEVsQlFVRkJMRU5CUVV0d1JpeEpRVUZCUVN4RFFVRkxNRVFzWVVGQlFVRXNRMEZCWXpKR0xFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVGTExFZEJRVUVzUTBGQlFTeERRVUZCTEVOQlFWRnlTaXhKUVVGQlFTeERRVUZMTUVRc1lVRkJRVUVzUTBGQll6SkdMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkJRU3hEUVVWcVJtcEZMRWxCUVVGQkxFTkJRVXR3Uml4SlFVRkJRU3hEUVVGTE1FUXNZVUZCUVVFc1EwRkJZekpHTEV0QlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZMTEVkQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGQkxFTkJTek5FTEUxQlFVOHNRMEZCUlV3c1VVRkJRVUVzUTBGQlZVRXNVVUZCUVVFc1EwRkJWVVVzVVVGQlFVRXNRMEZCVlVFc1VVRkJRVUVzUTBGQlZVTXNVVUZCUVVFc1EwRkJWVUVzVVVGQlFVRXNRMEZCVlZJc1NVRkJRVUVzUTBGQlRVRXNTVUZCUVVFc1EwRkJUVmNzVVVGQlFVRXNRMEZFYkVWS0xGRkJRVUZCTEVOQlFWY3NTMEZCUVN4RFFVRlJVQ3hKUVVGQlFTeERRVU50UlVZc1VVRkJRVUVzUTBGQlZVRXNVVUZCUVVFc1EwRkJWVU1zU1VGQlFVRXNRMEZCVFVFc1NVRkJRVUVzUTBGQlRYUkNMRWxCUVVGQkxFTkJRVTFCTEVsQlFVRkJMRU5CUVUxM1FpeFJRVUZCUVN4RFFVRlZRU3hSUVVGQlFTeERRVUZWUXl4UFFVRkJRU3hEUVVGVFFTeFBRVUZCUVN4RFFVRlRla1FzU1VGQlFVRXNRMEZCVFVFc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpjazF5Uml4VlFVRkJRU3hEUVVGWGFVb3NVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVUVzUTBGRmJFSXNTVUZCU1Vnc1QwRkJRVUVzUTBGQlFVRXNRMEZCYzBNc1EwRkJRU3hIUVVGQkxFTkJSREZEUnl4UlFVRkJRU3hEUVVGWFFTeFJRVUZCUVN4RFFVRlRMMFFzVVVGQlFVRXNSVUZCUVVFc1JVRkRTV2hFTEU5QlFVRkJMRU5CUVZFc1IwRkJRU3hEUVVGQkxFTkJRV1VzU1VGQlFTeERRVUZQSzBjc1VVRkJRVUVzUTBGQlV6bEhMRXRCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVdDVRaXhIUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVTXhSWGxDTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVWWUxFZEJRV1VzU1VGQlFTeEZRVUZZZVVRc1QwRkJRVUVzUTBGQmFVSXNRMEZEYWtJc1NVRkJTVThzUzBGQlFVRXNRMEZCVVZBc1QwRkJRVUVzUTBGQlVUTkhMRXRCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlF6RkNMRWxCUVVzc1NVRkJTVFJFTEVOQlFVRkJMRWxCUVV0elJDeExRVUZCUVN4RFFVRlBMRU5CUTJwQ0xFbEJRVWxETEV0QlFVRkJMRU5CUVZGRUxFdEJRVUZCTEVOQlFVMTBSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhOVVFzUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRka0p0U0N4TFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVU5PYWtVc1NVRkJRVUVzUTBGQlMzQkdMRWxCUVVGQkxFTkJRVXN3UkN4aFFVRkJRU3hEUVVGak1rWXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlFVc3NSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJVWEpLTEVsQlFVRkJMRU5CUVVzd1JDeGhRVUZCUVN4RFFVRmpNa1lzUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZCTEVOQlJXcEdha1VzU1VGQlFVRXNRMEZCUzNCR0xFbEJRVUZCTEVOQlFVc3dSQ3hoUVVGQlFTeERRVUZqTWtZc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVRXNRMEZKTTBRc1QwRkJUMnBGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJsZXQgZnVuYz1uZXcoXyRGdW5jXzQpO2NsYXNzIE1hdHJpeHtjb25zdHJ1Y3RvcihwYXJhbXM9e3Jvd3M6Mixjb2xzOjIsY29udGVudHM6W119KXtPYmplY3Qua2V5cyhwYXJhbXMpLm1hcChrZXk9Pnt0aGlzW2tleV09cGFyYW1zW2tleV19KSx0aGlzLnJvd3M9dGhpcy5yb3dzfHwyLHRoaXMuY29scz10aGlzLmNvbHN8fDIsdGhpcy5jb250ZW50cz10aGlzLmNvbnRlbnRzfHxbXSx0aGlzLnNldERhdGEodGhpcy5jb250ZW50cyl9c2V0RGF0YShjb250ZW50cz1bXSl7dGhpcy5jb250ZW50cz1jb250ZW50cyx0aGlzLmRhdGE9W107Zm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKXt0aGlzLmRhdGFbaV09W107Zm9yKGxldCBqPTA7ajx0aGlzLnJvd3M7aisrKXRoaXMuZGF0YVtpXVtqXT1jb250ZW50cy5zaGlmdCgpfX1nZXQgc3RydWN0dXJlKCl7bGV0e3Jvd3M6cm93cyxjb2xzOmNvbHN9PXRoaXM7cmV0dXJue3Jvd3M6cm93cyxjb2xzOmNvbHN9fWFkZChuPTApe2lmKG4gaW5zdGFuY2VvZiBNYXRyaXgpZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl0aGlzLmRhdGFbaV1bal0rPW4uZGF0YVtpXVtqXTtlbHNlIGlmKG4gaW5zdGFuY2VvZiBBcnJheSlmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKXRoaXMuZGF0YVtpXVtqXSs9bltpXVtqXTtlbHNlIGZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspdGhpcy5kYXRhW2ldW2pdKz1ufXN1YnRyYWN0KG49MCl7aWYobiBpbnN0YW5jZW9mIE1hdHJpeClmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKXRoaXMuZGF0YVtpXVtqXS09bi5kYXRhW2ldW2pdO2Vsc2UgaWYobiBpbnN0YW5jZW9mIEFycmF5KWZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspdGhpcy5kYXRhW2ldW2pdLT1uW2ldW2pdO2Vsc2UgZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl0aGlzLmRhdGFbaV1bal0tPW59bXVsdGlwbHkobj0xKXtpZihuIGluc3RhbmNlb2YgTWF0cml4KWZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPG4uY29scztqKyspdGhpcy5kYXRhW2ldW2pdKj1uLmRhdGFbaV1bal07ZWxzZSBpZihuIGluc3RhbmNlb2YgQXJyYXkpZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl0aGlzLmRhdGFbaV1bal0qPW5baV1bal07ZWxzZSBmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKXRoaXMuZGF0YVtpXVtqXSo9bn1yYW5kb21pemUoKXt0aGlzLm1hcCh2YWx1ZT0+ZnVuYy5yYW5kb20oKSl9dHJhbnNwb3NlKCl7bGV0IG5ld01hdHJpeD1uZXcgTWF0cml4KHtyb3dzOnRoaXMuY29scyxjb2xzOnRoaXMucm93c30pO2ZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspbmV3TWF0cml4LmRhdGFbal1baV09dGhpcy5kYXRhW2ldW2pdO09iamVjdC5rZXlzKG5ld01hdHJpeCkubWFwKGtleT0+e3RoaXNba2V5XT1uZXdNYXRyaXhba2V5XX0pfW1hcChjYWxsYmFjaz0oKHZhbHVlLC4uLnBvcyk9Pnt9KSl7Zm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl7bGV0IHZhbHVlPXRoaXMuZGF0YVtpXVtqXTt0aGlzLmRhdGFbaV1bal09Y2FsbGJhY2sodmFsdWUsaSxqKX19cHJpbnQoKXtjb25zb2xlLnRhYmxlKHRoaXMuZGF0YSl9c2F5KCl7Y29uc29sZS5sb2codGhpcy50b0FycmF5KCkpfXRvQXJyYXkoKXtyZXR1cm4gdGhpcy5jb250ZW50cz1bXSxNYXRyaXgubWFwKHRoaXMsdmFsdWU9Pnt0aGlzLmNvbnRlbnRzLnB1c2godmFsdWUpfSksdGhpcy5jb250ZW50c31yZXNoYXBlKHBhcmFtcz17cm93czoyLGNvbHM6Mn0pe3RoaXMudG9BcnJheSgpLHRoaXMucm93cz1wYXJhbXMucm93cyx0aGlzLmNvbHM9cGFyYW1zLmNvbHMsdGhpcy5zZXREYXRhKHRoaXMuY29udGVudHMpfWdldENvbHVtbnMoLi4uY29scyl7bGV0IHZhbHVlPVtdO2ZvcihsZXQgaSBpbiBjb2xzKXZhbHVlLnB1c2goQXJyYXkuZWFjaCh0aGlzLmRhdGEscm93PT5yb3dbY29sc1tpXV0pKTtyZXR1cm4gdmFsdWV9Z2V0Um93cyguLi5yb3dzKXtsZXQgdmFsdWU9W107Zm9yKGxldCByPTA7cjx0aGlzLnJvd3M7cisrKXJvd3MuaW5jbHVkZXMocikmJnZhbHVlLnB1c2godGhpcy5kYXRhW3JdKTtyZXR1cm4gdmFsdWV9c3RhdGljIHRvQXJyYXkobWF0cml4KXtsZXQgYXJyYXk9W107cmV0dXJuIE1hdHJpeC5tYXAobWF0cml4LHZhbHVlPT57YXJyYXkucHVzaCh2YWx1ZSl9KSxhcnJheX1zdGF0aWMgc3VidHJhY3QoYT1uZXcgTWF0cml4LGIpe2xldCBjb250ZW50cz1bXSxyb3dzPWEucm93cyxjb2xzPWEuY29scztpZihiIGluc3RhbmNlb2YgTWF0cml4KWZvcihsZXQgaT0wO2k8cm93cztpKyspZm9yKGxldCBqPTA7ajxjb2xzO2orKyljb250ZW50cy5wdXNoKGEuZGF0YVtpXVtqXS1iLmRhdGFbaV1bal0pO2Vsc2UgaWYoYiBpbnN0YW5jZW9mIEFycmF5KWZvcihsZXQgaT0wO2k8YS5yb3dzO2krKylmb3IobGV0IGo9MDtqPGEuY29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0tYltpXVtqXSk7ZWxzZSBmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdLWIpO3JldHVybiBuZXcgTWF0cml4KHtyb3dzOnJvd3MsY29sczpjb2xzLGNvbnRlbnRzOmNvbnRlbnRzfSl9c3RhdGljIGFkZChhPW5ldyBNYXRyaXgsYil7bGV0IGNvbnRlbnRzPVtdLHJvd3M9YS5yb3dzLGNvbHM9YS5jb2xzO2lmKGIgaW5zdGFuY2VvZiBNYXRyaXgpZm9yKGxldCBpPTA7aTxyb3dzO2krKylmb3IobGV0IGo9MDtqPGNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdK2IuZGF0YVtpXVtqXSk7ZWxzZSBpZihiIGluc3RhbmNlb2YgQXJyYXkpZm9yKGxldCBpPTA7aTxhLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8YS5jb2xzO2orKyljb250ZW50cy5wdXNoKGEuZGF0YVtpXVtqXStiW2ldW2pdKTtlbHNlIGZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0rYik7cmV0dXJuIG5ldyBNYXRyaXgoe3Jvd3M6cm93cyxjb2xzOmNvbHMsY29udGVudHM6Y29udGVudHN9KX1zdGF0aWMgbXVsdGlwbHkoYT1uZXcgTWF0cml4LGIpe2xldCByb3dzLGNvbHMsY29udGVudHM9W107aWYoYiBpbnN0YW5jZW9mIE1hdHJpeCl7aWYoYS5jb2xzIT09Yi5yb3dzKXJldHVybiB2b2lkIGNvbnNvbGUubG9nKFwiQ29sdW1ucyBvZiBBIG11c3QgZXF1YWwgcm93cyBvZiBCXCIpO3Jvd3M9YS5yb3dzLGNvbHM9Yi5jb2xzO2ZvcihsZXQgaT0wO2k8cm93cztpKyspZm9yKGxldCBqPTA7ajxjb2xzO2orKyl7bGV0IHN1bT0wO2ZvcihsZXQgaz0wO2s8YS5jb2xzO2srKylzdW0rPWEuZGF0YVtpXVtrXSpiLmRhdGFba11bal07Y29udGVudHMucHVzaChzdW0pfX1lbHNlIGlmKGIgaW5zdGFuY2VvZiBBcnJheSl7cm93cz1hLnJvd3MsY29scz1hLmNvbHM7Zm9yKGxldCBpPTA7aTxhLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8YS5jb2xzO2orKyljb250ZW50cy5wdXNoKGEuZGF0YVtpXVtqXSpiW2ldW2pdKX1lbHNlIGZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0qYik7cmV0dXJuIG5ldyBNYXRyaXgoe3Jvd3M6cm93cyxjb2xzOmNvbHMsY29udGVudHM6Y29udGVudHN9KX1zdGF0aWMgZGl2aWRlKGE9bmV3IE1hdHJpeCxiKXtsZXQgcm93cyxjb2xzLGNvbnRlbnRzPVtdO2lmKGIgaW5zdGFuY2VvZiBNYXRyaXgpe2lmKGEuY29scyE9PWIucm93cylyZXR1cm4gdm9pZCBjb25zb2xlLmxvZyhcIkNvbHVtbnMgb2YgQSBtdXN0IGVxdWFsIHJvd3Mgb2YgQlwiKTtyb3dzPWEucm93cyxjb2xzPWIuY29scztmb3IobGV0IGk9MDtpPHJvd3M7aSsrKWZvcihsZXQgaj0wO2o8Y29scztqKyspe2xldCBzdW09MDtmb3IobGV0IGs9MDtrPGEuY29scztrKyspc3VtKz1hLmRhdGFbaV1ba10vYi5kYXRhW2tdW2pdfHwwO2NvbnRlbnRzLnB1c2goc3VtKX19ZWxzZSBpZihiIGluc3RhbmNlb2YgQXJyYXkpe3Jvd3M9YS5yb3dzLGNvbHM9YS5jb2xzO2ZvcihsZXQgaT0wO2k8YS5yb3dzO2krKylmb3IobGV0IGo9MDtqPGEuY29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0vYltpXVtqXXx8MCl9ZWxzZSBmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdL2J8fDApO3JldHVybiBuZXcgTWF0cml4KHtyb3dzOnJvd3MsY29sczpjb2xzLGNvbnRlbnRzOmNvbnRlbnRzfSl9c3RhdGljIHJhbmRvbWl6ZShtYXRyaXg9bmV3IE1hdHJpeCl7cmV0dXJuIE1hdHJpeC5tYXAobWF0cml4LHZhbHVlPT5mdW5jLnJhbmRvbSgpKX1zdGF0aWMgdHJhbnNwb3NlKG1hdHJpeD1uZXcgTWF0cml4KXtsZXQgbmV3TWF0cml4PW5ldyBNYXRyaXgoe3Jvd3M6bWF0cml4LmNvbHMsY29sczptYXRyaXgucm93c30pO2ZvcihsZXQgaT0wO2k8bWF0cml4LnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8bWF0cml4LmNvbHM7aisrKW5ld01hdHJpeC5kYXRhW2pdW2ldPW1hdHJpeC5kYXRhW2ldW2pdO3JldHVybiBuZXdNYXRyaXh9c3RhdGljIG1hcChtYXRyaXg9bmV3IE1hdHJpeCxjYWxsYmFjaz0oKCk9Pnt9KSl7bGV0IG5ld01hdHJpeD1uZXcgTWF0cml4KHtyb3dzOm1hdHJpeC5yb3dzLGNvbHM6bWF0cml4LmNvbHN9KTtmb3IobGV0IGk9MDtpPG1hdHJpeC5yb3dzO2krKylmb3IobGV0IGo9MDtqPG1hdHJpeC5jb2xzO2orKyl7bGV0IHZhbHVlPW1hdHJpeC5kYXRhW2ldW2pdO25ld01hdHJpeC5kYXRhW2ldW2pdPWNhbGxiYWNrKHZhbHVlLGksail9cmV0dXJuIG5ld01hdHJpeH1zdGF0aWMgZnJvbUFycmF5KGNvbnRlbnRzPVtdKXtyZXR1cm4gbmV3IE1hdHJpeCh7cm93czpjb250ZW50cy5sZW5ndGgsY29sczoxLGNvbnRlbnRzOmNvbnRlbnRzfSl9c3RhdGljIHJlc2hhcGUocGFyYW1zPXtyb3dzOjIsY29sczoyLG1hdHJpeDpuZXcgTWF0cml4fSl7cmV0dXJuIHBhcmFtcy5jb250ZW50cz1NYXRyaXgudG9BcnJheShwYXJhbXMubWF0cml4KSxkZWxldGUgcGFyYW1zLm1hdHJpeCxuZXcgTWF0cml4KHBhcmFtcyl9c3RhdGljIG5vcm1hbGl6ZShtYXRyaXg9bmV3IE1hdHJpeCl7bGV0IGNvbnRlbnRzPU1hdGgubm9ybWFsaXplKE1hdHJpeC50b0FycmF5KG1hdHJpeCkpO3JldHVybiBuZXcgTWF0cml4KHtyb3dzOm1hdHJpeC5yb3dzLGNvbHM6bWF0cml4LmNvbHMsY29udGVudHM6Y29udGVudHN9KX1zdGF0aWMgZGlhZ29uYWwoYXJyYXk9W10pe2xldCBtYXRyaXg9TWF0cml4LnNxdWFyZShhcnJheS5sZW5ndGgpO2ZvcihsZXQgaSBpbiBtYXRyaXguZGF0YSlmb3IobGV0IGogaW4gbWF0cml4LmRhdGFbaV0paT09aiYmKG1hdHJpeC5kYXRhW2ldW2pdPWFycmF5W2ldKTtyZXR1cm4gbWF0cml4LnRvQXJyYXkoKSxtYXRyaXh9c3RhdGljIHVuaXQoc2l6ZT0yKXtsZXQgbWF0cml4PU1hdHJpeC5zcXVhcmUoc2l6ZSk7Zm9yKGxldCBpIGluIG1hdHJpeC5kYXRhKWZvcihsZXQgaiBpbiBtYXRyaXguZGF0YVtpXSlpPT1qJiYobWF0cml4LmRhdGFbaV1bal09MSk7cmV0dXJuIG1hdHJpeC50b0FycmF5KCksbWF0cml4fXN0YXRpYyBzcXVhcmUoc2l6ZT0yKXtyZXR1cm4gbmV3IE1hdHJpeCh7cm93czpzaXplLGNvbHM6c2l6ZX0pfXN0YXRpYyBmcm9tTWF0cml4Q29scyhtYXRyaXg9bmV3IE1hdHJpeCwuLi5jb2xzKXtsZXQgdmFsdWU9bWF0cml4LmdldENvbHVtbnMoLi4uY29scyksY29udGVudHM9QXJyYXkuZmxhdHRlbih2YWx1ZSksbmV3TWF0cml4PW5ldyBNYXRyaXgoe3Jvd3M6dmFsdWUubGVuZ3RoLGNvbHM6bWF0cml4LmNvbHMsY29udGVudHM6Y29udGVudHN9KTtyZXR1cm4gbmV3TWF0cml4LnRyYW5zcG9zZSgpLG5ld01hdHJpeH1zdGF0aWMgZGVlcE1hdHJpeChkaW1lbnNpb25zPVtdLGNvbnRlbnRzPVtdKXtsZXQgbWF0cml4RGltZW5zaW9ucz1bXTtmb3IobGV0IGk9MDtpPGRpbWVuc2lvbnMubGVuZ3RoO2krKyltYXRyaXhEaW1lbnNpb25zLnB1c2goe3Jvd3M6ZGltZW5zaW9uc1tpXSxjb2xzOmRpbWVuc2lvbnNbKytpXXx8MX0pO2xldCBtYWtlTWF0cml4PWxheWVyPT57bGV0IG1hdHJpeD1uZXcgTWF0cml4KG1hdHJpeERpbWVuc2lvbnNbbGF5ZXJdKTtyZXR1cm4gbGF5ZXIrMT09bWF0cml4RGltZW5zaW9ucy5sZW5ndGg/bWF0cml4Lm1hcCh2YWx1ZT0+Y29udGVudHMuc2hpZnQoKXx8MCk6bWF0cml4Lm1hcCh2YWx1ZT0+bWFrZU1hdHJpeChsYXllcisxKSksbWF0cml4fTtyZXR1cm4gbWFrZU1hdHJpeCgwKX19dmFyIF8kTWF0cml4XzY9TWF0cml4O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJazFoZEhKcGVDNXFjeUpkTENKdVlXMWxjeUk2V3lKbWRXNWpJaXdpY21WeGRXbHlaU0lzSWsxaGRISnBlQ0lzSWx0dlltcGxZM1FnVDJKcVpXTjBYU0lzSW5CaGNtRnRjeUlzSW5KdmQzTWlMQ0pqYjJ4eklpd2lZMjl1ZEdWdWRITWlMQ0pQWW1wbFkzUWlMQ0pyWlhseklpd2liV0Z3SWl3aWEyVjVJaXdpZEdocGN5SXNJbk5sZEVSaGRHRWlMQ0prWVhSaElpd2lhU0lzSW1vaUxDSnphR2xtZENJc0luTjBjblZqZEhWeVpTSXNJbTRpTENKQmNuSmhlU0lzSW5aaGJIVmxJaXdpY21GdVpHOXRJaXdpYm1WM1RXRjBjbWw0SWl3aVkyRnNiR0poWTJzaUxDSndiM01pTENKamIyNXpiMnhsSWl3aWRHRmliR1VpTENKc2IyY2lMQ0owYjBGeWNtRjVJaXdpY0hWemFDSXNJbVZoWTJnaUxDSnliM2NpTENKeUlpd2lhVzVqYkhWa1pYTWlMQ0p0WVhSeWFYZ2lMQ0poY25KaGVTSXNJbUVpTENKaUlpd2ljM1Z0SWl3aWF5SXNJbXhsYm1kMGFDSXNJazFoZEdnaUxDSnViM0p0WVd4cGVtVWlMQ0p6Y1hWaGNtVWlMQ0p6YVhwbElpd2laMlYwUTI5c2RXMXVjeUlzSW1ac1lYUjBaVzRpTENKMGNtRnVjM0J2YzJVaUxDSmthVzFsYm5OcGIyNXpJaXdpYldGMGNtbDRSR2x0Wlc1emFXOXVjeUlzSW0xaGEyVk5ZWFJ5YVhnaUxDSnNZWGxsY2lJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVOQkxFbEJRVWxCTEVsQlFVRkJMRU5CUVU4c1NVRkVSVU1zVVVGQlVTeERRVUZCTEVOQlIzSkNMRTFCUVUxRExFMUJRVUZCTEVOQlEwWkRMRmRCUVVGQkxFTkJRVmxETEUxQlFVRkJMRU5CUVZNc1EwRkJSVU1zU1VGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVkRExFbEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkhReXhSUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUXk5RFF5eE5RVUZCUVN4RFFVRlBReXhKUVVGQlFTeERRVUZMVEN4TlFVRkJRU3hEUVVGQlFTeERRVUZSVFN4SFFVRkJRU3hEUVVGSlF5eEhRVUZCUVN4RlFVRkJRU3hEUVVOd1FrTXNTVUZCUVVFc1EwRkJTMFFzUjBGQlFVRXNRMEZCUVVFc1EwRkJUMUFzVFVGQlFVRXNRMEZCVDA4c1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGRrSkRMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVU5UExFbEJRVUZCTEVOQlFVdFFMRWxCUVVGQkxFVkJRVkVzUTBGQlFTeERRVU42UWs4c1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1EwRkJUMDBzU1VGQlFVRXNRMEZCUzA0c1NVRkJRVUVzUlVGQlVTeERRVUZCTEVOQlEzcENUU3hKUVVGQlFTeERRVUZMVEN4UlFVRkJRU3hEUVVGWFN5eEpRVUZCUVN4RFFVRkxUQ3hSUVVGQlFTeEZRVUZaTEVWQlFVRXNRMEZEYWtOTExFbEJRVUZCTEVOQlFVdERMRTlCUVVGQkxFTkJRVkZFTEVsQlFVRkJMRU5CUVV0TUxGRkJRVUZCTEVOQlFVRkJMRU5CUjNSQ1NpeFBRVUZCUVN4RFFVRlJTU3hSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCUVN4RFFVTm1TeXhKUVVGQlFTeERRVUZMVEN4UlFVRkJRU3hEUVVGWFFTeFJRVUZCUVN4RFFVTm9Ra3NzU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlExb3NTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVZ3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTm9RMGdzU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN5eEZRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVb3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZjc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBKS0xFbEJRVUZCTEVOQlFVdEZMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRVTEZGQlFVRkJMRU5CUVZOVkxFdEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJTM1pEUXl4SlFVRkJRU3hUUVVGQlFTeEZRVUZCUVN4RFFVTkpMRWRCUVVFc1EwRkJTV0lzU1VGQlFVRXNRMEZCUlVFc1NVRkJRVUVzUTBGQlNVTXNTVUZCUVVFc1EwRkJSVUVzU1VGQlFVRXNRMEZCUVVFc1EwRkJVMDBzU1VGQlFVRXNRMEZEY2tJc1RVRkJUeXhEUVVGRlVDeEpRVUZCUVN4RFFVRkJRU3hKUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGQlFTeEpRVUZCUVN4RFFVRkJRU3hEUVVkdVFrZ3NSMEZCUVVFc1EwRkJTV2RDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJRMG9zUjBGQlNVRXNRMEZCUVVFc1dVRkJZV3BDTEUxQlFVRkJMRU5CUTJJc1NVRkJTeXhKUVVGSllTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vnc1NVRkJRVUVzUTBGQlMxQXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMElzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVW9zU1VGQlFVRXNRMEZCUzA0c1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRE0wSktMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRVZCUVUxSExFTkJRVUZCTEVOQlFVVk1MRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlIyeERMRWRCUVVsSExFTkJRVUZCTEZsQlFXRkRMRXRCUVVGQkxFTkJRM0JDTEVsQlFVc3NTVUZCU1V3c1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxJTEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbEtMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ1NpeEpRVUZCUVN4RFFVRkxSU3hKUVVGQlFTeERRVUZMUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeEZRVUZOUnl4RFFVRkJRU3hEUVVGRlNpeERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeExRVXRvUXl4SlFVRkxMRWxCUVVsRUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKU0N4SlFVRkJRU3hEUVVGTFVDeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTXpRaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpTaXhKUVVGQlFTeERRVUZMVGl4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVNelFrb3NTVUZCUVVFc1EwRkJTMFVzU1VGQlFVRXNRMEZCUzBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNSVUZCVFVjc1EwRkJRVUVzUTBGTmJrTm9RaXhSUVVGQlFTeERRVUZUWjBJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZEVkN4SFFVRkpRU3hEUVVGQlFTeFpRVUZoYWtJc1RVRkJRVUVzUTBGRFlpeEpRVUZMTEVsQlFVbGhMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNDeEpRVUZCUVN4RFFVRkxVQ3hKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU16UWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKU2l4SlFVRkJRU3hEUVVGTFRpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTXpRa29zU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRVY3NRMEZCUVVFc1EwRkJSVXdzU1VGQlFVRXNRMEZCUzBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1MwRkhiRU1zUjBGQlNVY3NRMEZCUVVFc1dVRkJZVU1zUzBGQlFVRXNRMEZEY0VJc1NVRkJTeXhKUVVGSlRDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vnc1NVRkJRVUVzUTBGQlMxQXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMElzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVW9zU1VGQlFVRXNRMEZCUzA0c1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRE0wSktMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRVZCUVUxSExFTkJRVUZCTEVOQlFVVktMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCUzJoRExFbEJRVXNzU1VGQlNVUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsSUxFbEJRVUZCTEVOQlFVdFFMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxLTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNTaXhKUVVGQlFTeERRVUZMUlN4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hGUVVGTlJ5eERRVUZCUVN4RFFVMXVRMmhDTEZGQlFVRkJMRU5CUVZOblFpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVOVUxFZEJRVWxCTEVOQlFVRkJMRmxCUVdGcVFpeE5RVUZCUVN4RFFVTmlMRWxCUVVzc1NVRkJTV0VzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbElMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ0xFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsSExFTkJRVUZCTEVOQlFVVmlMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRM2hDU2l4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RlFVRk5SeXhEUVVGQlFTeERRVUZGVEN4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeExRVWRzUXl4SFFVRkpSeXhEUVVGQlFTeFpRVUZoUXl4TFFVRkJRU3hEUVVOd1FpeEpRVUZMTEVsQlFVbE1MRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNDeEpRVUZCUVN4RFFVRkxVQ3hKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU16UWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKU2l4SlFVRkJRU3hEUVVGTFRpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTXpRa29zU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRVY3NRMEZCUVVFc1EwRkJSVW9zUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGTGFFTXNTVUZCU3l4SlFVRkpSQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVZ3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vvc1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMEpLTEVsQlFVRkJMRU5CUVV0RkxFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVWQlFVMUhMRU5CUVVGQkxFTkJUVzVEYUVJc1UwRkJRVUVzUlVGQlFVRXNRMEZEU1ZNc1NVRkJRVUVzUTBGQlMwWXNSMEZCUVVFc1EwRkJTVmNzUzBGQlFVRXNSVUZEUlhKQ0xFbEJRVUZCTEVOQlFVdHpRaXhOUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVsd1FtNUNMRk5CUVVGQkxFVkJRVUZCTEVOQlEwa3NTVUZCU1c5Q0xGTkJRVUZCTEVOQlFWa3NTVUZCU1hKQ0xFMUJRVUZCTEVOQlFVOHNRMEZCUlVjc1NVRkJRVUVzUTBGQlRVOHNTVUZCUVVFc1EwRkJTMDRzU1VGQlFVRXNRMEZCVFVFc1NVRkJRVUVzUTBGQlRVMHNTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGVrUXNTVUZCU3l4SlFVRkpWU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVZ3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vvc1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMEpQTEZOQlFVRkJMRU5CUVZWVUxFbEJRVUZCTEVOQlFVdEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdElMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUnpWRFVpeE5RVUZCUVN4RFFVRlBReXhKUVVGQlFTeERRVUZMWXl4VFFVRkJRU3hEUVVGQlFTeERRVUZYWWl4SFFVRkJRU3hEUVVGSlF5eEhRVUZCUVN4RlFVRkJRU3hEUVVOMlFrTXNTVUZCUVVFc1EwRkJTMFFzUjBGQlFVRXNRMEZCUVVFc1EwRkJUMWtzVTBGQlFVRXNRMEZCVlZvc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSk9VSlNMRWRCUVVGQkxFTkJRVWx4UWl4UlFVRkJRU3hGUVVGWExFTkJRVU5JTEV0QlFVRkJMRU5CUVVGQkxFZEJRVlZKTEVkQlFVRkJMRWRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRM1JDTEVsQlFVc3NTVUZCU1ZZc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxJTEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbEtMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVzc1EwRkRhRU1zU1VGQlNVc3NTMEZCUVVFc1EwRkJVVlFzU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUTBGRGVrSktMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVV0UkxGRkJRVUZCTEVOQlFWTklMRXRCUVVGQkxFTkJRVTlPTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTMnBFWWl4TFFVRkJRU3hGUVVGQlFTeERRVU5KZFVJc1QwRkJRVUVzUTBGQlVVTXNTMEZCUVVFc1EwRkJUV1lzU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlFVRXNRMEZIZGtKWUxFZEJRVUZCTEVWQlFVRkJMRU5CUTBsMVFpeFBRVUZCUVN4RFFVRlJSU3hIUVVGQlFTeERRVUZKYUVJc1NVRkJRVUVzUTBGQlMybENMRTlCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUjNKQ01VSXNUMEZCUVVFc1JVRkJRVUVzUTBGTFNTeFBRVXBCVXl4SlFVRkJRU3hEUVVGTFRDeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkRhRUpNTEUxQlFVRkJMRU5CUVU5UkxFZEJRVUZCTEVOQlFVbEZMRWxCUVVGQkxFTkJRVTFUTEV0QlFVRkJMRVZCUVVGQkxFTkJRMkpVTEVsQlFVRkJMRU5CUVV0TUxGRkJRVUZCTEVOQlFWTjFRaXhKUVVGQlFTeERRVUZMVkN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWb1FsUXNTVUZCUVVFc1EwRkJTMHdzVVVGQlFVRXNRMEZIYUVKS0xFOUJRVUZCTEVOQlFWRkRMRTFCUVVGQkxFTkJRVk1zUTBGQlJVTXNTVUZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRETEVsQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRE9VSk5MRWxCUVVGQkxFTkJRVXRwUWl4UFFVRkJRU3hGUVVGQlFTeERRVU5NYWtJc1NVRkJRVUVzUTBGQlMxQXNTVUZCUVVFc1EwRkJUMFFzVFVGQlFVRXNRMEZCVDBNc1NVRkJRVUVzUTBGRGJrSlBMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVU5R0xFMUJRVUZCTEVOQlFVOUZMRWxCUVVGQkxFTkJRMjVDVFN4SlFVRkJRU3hEUVVGTFF5eFBRVUZCUVN4RFFVRlJSQ3hKUVVGQlFTeERRVUZMVEN4UlFVRkJRU3hEUVVGQlFTeERRVWQwUWtvc1ZVRkJRVUVzUTBGQlFVRXNSMEZCWTBjc1NVRkJRVUVzUTBGQlFVRXNRMEZEVml4SlFVRkpaU3hMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZGV2l4SlFVRkxMRWxCUVVsT0xFTkJRVUZCTEVsQlFVdFVMRWxCUVVGQkxFTkJRMVpsTEV0QlFVRkJMRU5CUVUxVExFbEJRVUZCTEVOQlFVdFdMRXRCUVVGQkxFTkJRVTFYTEVsQlFVRkJMRU5CUVV0dVFpeEpRVUZCUVN4RFFVRkxSU3hKUVVGQlFTeERRVUZOYTBJc1IwRkJRVUVzUlVGRGRFSkJMRWRCUVVGQkxFTkJRVWt4UWl4SlFVRkJRU3hEUVVGTFV5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsNFFpeFBRVUZQVFN4TFFVRkJRU3hEUVVkWWJFSXNUMEZCUVVFc1EwRkJRVUVzUjBGQlYwVXNTVUZCUVVFc1EwRkJRVUVzUTBGRFVDeEpRVUZKWjBJc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlJWb3NTVUZCU3l4SlFVRkpXU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYSkNMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVUwMFFpeERRVUZCUVN4RlFVRkJRU3hEUVVOMlFqVkNMRWxCUVVGQkxFTkJRVXMyUWl4UlFVRkJRU3hEUVVGVFJDeERRVUZCUVN4RFFVRkJRU3hGUVVOa1dpeExRVUZCUVN4RFFVRk5VeXhKUVVGQlFTeERRVUZMYkVJc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJTMjFDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNUZENMRTlCUVU5YUxFdEJRVUZCTEVOQlIxaHNRaXhQUVVGQlFTeFBRVUZCUVN4RFFVRmxaME1zVFVGQlFVRXNRMEZCUVVFc1EwRkRXQ3hKUVVGSlF5eExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkpXaXhQUVVoQmJFTXNUVUZCUVVFc1EwRkJUMUVzUjBGQlFVRXNRMEZCU1hsQ0xFMUJRVUZCTEVOQlFWRmtMRXRCUVVGQkxFVkJRVUZCTEVOQlEyWmxMRXRCUVVGQkxFTkJRVTFPTEVsQlFVRkJMRU5CUVV0VUxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJWSmxMRXRCUVVGQkxFTkJSMWhxUXl4UFFVRkJRU3hSUVVGQlFTeERRVUZuUW10RExFTkJRVUZCTEVOQlFVa3NTVUZCU1c1RExFMUJRVUZCTEVOQlFWVnZReXhEUVVGQlFTeERRVUZCUVN4RFFVTTVRaXhKUVVGSkwwSXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVWxHTEVsQlFVRkJMRU5CUVU5blF5eERRVUZCUVN4RFFVRkZhRU1zU1VGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlR5dENMRU5CUVVGQkxFTkJRVVV2UWl4SlFVRkJRU3hEUVVVelF5eEhRVUZKWjBNc1EwRkJRVUVzV1VGQllYQkRMRTFCUVVGQkxFTkJRMklzU1VGQlN5eEpRVUZKWVN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVllzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZEZEVJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1ZZc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRGRFSlVMRkZCUVVGQkxFTkJRVk4xUWl4SlFVRkJRU3hEUVVGTFR5eERRVUZCUVN4RFFVRkZka0lzU1VGQlFVRXNRMEZCUzBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNOQ0xFTkJRVUZCTEVOQlFVVjRRaXhKUVVGQlFTeERRVUZMUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVVrNVF5eEhRVUZKYzBJc1EwRkJRVUVzV1VGQllXeENMRXRCUVVGQkxFTkJRMnhDTEVsQlFVc3NTVUZCU1V3c1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWx6UWl4RFFVRkJRU3hEUVVGRmFFTXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRlRUlzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWEZDTEVOQlFVRkJMRU5CUVVVdlFpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjRRbFFzVVVGQlFVRXNRMEZCVTNWQ0xFbEJRVUZCTEVOQlFVdFBMRU5CUVVGQkxFTkJRVVYyUWl4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGTGMwSXNRMEZCUVVFc1EwRkJSWFpDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCU3pGRExFbEJRVXNzU1VGQlNVUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsSUxFbEJRVUZCTEVOQlFVdFFMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxLTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNWQ3hSUVVGQlFTeERRVUZUZFVJc1NVRkJRVUVzUTBGQlMwOHNRMEZCUVVFc1EwRkJSWFpDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVV0elFpeERRVUZCUVN4RFFVRkJRU3hEUVV0NlF5eFBRVUZQTEVsQlFVbHdReXhOUVVGQlFTeERRVUZQTEVOQlFVVkhMRWxCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVRkJMRWxCUVVGQkxFTkJRVTFETEZGQlFVRkJMRU5CUVVGQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0JEU2l4UFFVRkJRU3hIUVVGQlFTeERRVUZYYTBNc1EwRkJRVUVzUTBGQlNTeEpRVUZKYmtNc1RVRkJRVUVzUTBGQlZXOURMRU5CUVVGQkxFTkJRVUZCTEVOQlEzcENMRWxCUVVrdlFpeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJTVVlzU1VGQlFVRXNRMEZCVDJkRExFTkJRVUZCTEVOQlFVVm9ReXhKUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGUEswSXNRMEZCUVVFc1EwRkJSUzlDTEVsQlFVRkJMRU5CUlRORExFZEJRVWxuUXl4RFFVRkJRU3haUVVGaGNFTXNUVUZCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxoTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpWaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU4wUWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVOMFFsUXNVVUZCUVVFc1EwRkJVM1ZDTEVsQlFVRkJMRU5CUVV0UExFTkJRVUZCTEVOQlFVVjJRaXhKUVVGQlFTeERRVUZMUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZMYzBJc1EwRkJRVUVzUTBGQlJYaENMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCU1RsRExFZEJRVWx6UWl4RFFVRkJRU3haUVVGaGJFSXNTMEZCUVVFc1EwRkRiRUlzU1VGQlN5eEpRVUZKVEN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWE5DTEVOQlFVRkJMRU5CUVVWb1F5eEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjRRaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpjVUlzUTBGQlFVRXNRMEZCUlM5Q0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlEzaENWQ3hSUVVGQlFTeERRVUZUZFVJc1NVRkJRVUVzUTBGQlMwOHNRMEZCUVVFc1EwRkJSWFpDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVV0elFpeERRVUZCUVN4RFFVRkZka0lzUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTMEZMTVVNc1NVRkJTeXhKUVVGSlJDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vnc1NVRkJRVUVzUTBGQlMxQXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMElzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVW9zU1VGQlFVRXNRMEZCUzA0c1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRE0wSlVMRkZCUVVGQkxFTkJRVk4xUWl4SlFVRkJRU3hEUVVGTFR5eERRVUZCUVN4RFFVRkZka0lzU1VGQlFVRXNRMEZCUzBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNOQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUzNwRExFOUJRVThzU1VGQlNYQkRMRTFCUVVGQkxFTkJRVThzUTBGQlJVY3NTVUZCUVVFc1EwRkJRVUVzU1VGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlFVRXNTVUZCUVVFc1EwRkJUVU1zVVVGQlFVRXNRMEZCUVVFc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhjRU5LTEU5QlFVRkJMRkZCUVVGQkxFTkJRV2RDYTBNc1EwRkJRVUVzUTBGQlNTeEpRVUZKYmtNc1RVRkJRVUVzUTBGQlZXOURMRU5CUVVGQkxFTkJRVUZCTEVOQlF6bENMRWxCUVcxQ2FrTXNTVUZCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCY2tKRExGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVVm1MRWRCUVVrclFpeERRVUZCUVN4WlFVRmhjRU1zVFVGQlFVRXNRMEZCVVN4RFFVVnlRaXhIUVVGSmJVTXNRMEZCUVVFc1EwRkJSUzlDTEVsQlFVRkJMRWRCUVZOblF5eERRVUZCUVN4RFFVRkZha01zU1VGQlFVRXNRMEZGWWl4UFFVRkJMRXRCUkVGeFFpeFBRVUZCUVN4RFFVRlJSU3hIUVVGQlFTeERRVUZKTEcxRFFVRkJMRU5CUVVFc1EwRkphRUoyUWl4SlFVRkJRU3hEUVVGUFowTXNRMEZCUVVFc1EwRkJSV2hETEVsQlFVRkJMRU5CUTFSRExFbEJRVUZCTEVOQlFVOW5ReXhEUVVGQlFTeERRVUZGYUVNc1NVRkJRVUVzUTBGRlZDeEpRVUZMTEVsQlFVbFRMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjBRaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpWaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlF6TkNMRWxCUVVsMVFpeEhRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkRWaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpTQ3hEUVVGQlFTeERRVUZGTDBJc1NVRkJRVUVzUTBGQlRXdERMRU5CUVVGQkxFVkJRVUZCTEVOQlEzaENSQ3hIUVVGQlFTeEZRVUZQUml4RFFVRkJRU3hEUVVGRmRrSXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSM2xDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRHTEVOQlFVRkJMRU5CUVVWNFFpeEpRVUZCUVN4RFFVRkxNRUlzUTBGQlFVRXNRMEZCUVVFc1EwRkJSM2hDTEVOQlFVRkJMRU5CUVVGQkxFTkJSWEJEVkN4UlFVRkJRU3hEUVVGVGRVSXNTVUZCUVVFc1EwRkJTMU1zUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTMEZKY2tJc1IwRkJTVVFzUTBGQlFVRXNXVUZCWVd4Q0xFdEJRVUZCTEVOQlFVOHNRMEZGZWtKbUxFbEJRVUZCTEVOQlFVOW5ReXhEUVVGQlFTeERRVUZGYUVNc1NVRkJRVUVzUTBGRFZFTXNTVUZCUVVFc1EwRkJUeXRDTEVOQlFVRkJMRU5CUVVVdlFpeEpRVUZCUVN4RFFVVlVMRWxCUVVzc1NVRkJTVk1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHpRaXhEUVVGQlFTeERRVUZGYUVNc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRGVFSXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYRkNMRU5CUVVGQkxFTkJRVVV2UWl4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVONFFsUXNVVUZCUVVFc1EwRkJVM1ZDTEVsQlFVRkJMRU5CUVV0UExFTkJRVUZCTEVOQlFVVjJRaXhKUVVGQlFTeERRVUZMUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZMYzBJc1EwRkJRVUVzUTBGQlJYWkNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJTekZETEVsQlFVc3NTVUZCU1VRc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxJTEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbEtMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ1ZDeFJRVUZCUVN4RFFVRlRkVUlzU1VGQlFVRXNRMEZCUzA4c1EwRkJRVUVzUTBGQlJYWkNMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXR6UWl4RFFVRkJRU3hEUVVGQlFTeERRVXQ2UXl4UFFVRlBMRWxCUVVsd1F5eE5RVUZCUVN4RFFVRlBMRU5CUVVWSExFbEJRVUZCTEVOQlFVRkJMRWxCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVOQlFVMURMRkZCUVVGQkxFTkJRVUZCTEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzQkRTaXhQUVVGQlFTeE5RVUZCUVN4RFFVRmphME1zUTBGQlFVRXNRMEZCU1N4SlFVRkpia01zVFVGQlFVRXNRMEZCVlc5RExFTkJRVUZCTEVOQlFVRkJMRU5CUXpWQ0xFbEJRVzFDYWtNc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJja0pETEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVWbUxFZEJRVWtyUWl4RFFVRkJRU3haUVVGaGNFTXNUVUZCUVVFc1EwRkJVU3hEUVVWeVFpeEhRVUZKYlVNc1EwRkJRVUVzUTBGQlJTOUNMRWxCUVVGQkxFZEJRVk5uUXl4RFFVRkJRU3hEUVVGRmFrTXNTVUZCUVVFc1EwRkZZaXhQUVVGQkxFdEJSRUZ4UWl4UFFVRkJRU3hEUVVGUlJTeEhRVUZCUVN4RFFVRkpMRzFEUVVGQkxFTkJRVUVzUTBGSmFFSjJRaXhKUVVGQlFTeERRVUZQWjBNc1EwRkJRVUVzUTBGQlJXaERMRWxCUVVGQkxFTkJRMVJETEVsQlFVRkJMRU5CUVU5blF5eERRVUZCUVN4RFFVRkZhRU1zU1VGQlFVRXNRMEZGVkN4SlFVRkxMRWxCUVVsVExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVOMFFpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVRkxMRU5CUXpOQ0xFbEJRVWwxUWl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGRFZpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNDeERRVUZCUVN4RFFVRkZMMElzU1VGQlFVRXNRMEZCVFd0RExFTkJRVUZCTEVWQlFVRkJMRU5CUTNoQ1JDeEhRVUZCUVN4RlFVRlJSaXhEUVVGQlFTeERRVUZGZGtJc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIzbENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdEdMRU5CUVVGQkxFTkJRVVY0UWl4SlFVRkJRU3hEUVVGTE1FSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIzaENMRU5CUVVGQkxFTkJRVUZCTEVWQlFVOHNRMEZCUVN4RFFVVTFRMVFzVVVGQlFVRXNRMEZCVTNWQ0xFbEJRVUZCTEVOQlFVdFRMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJTWEpDTEVkQlFVbEVMRU5CUVVGQkxGbEJRV0ZzUWl4TFFVRkJRU3hEUVVGUExFTkJSWHBDWml4SlFVRkJRU3hEUVVGUFowTXNRMEZCUVVFc1EwRkJSV2hETEVsQlFVRkJMRU5CUTFSRExFbEJRVUZCTEVOQlFVOHJRaXhEUVVGQlFTeERRVUZGTDBJc1NVRkJRVUVzUTBGRlZDeEpRVUZMTEVsQlFVbFRMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmMwSXNRMEZCUVVFc1EwRkJSV2hETEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNoQ0xFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVseFFpeERRVUZCUVN4RFFVRkZMMElzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZEZUVKVUxGRkJRVUZCTEVOQlFWTjFRaXhKUVVGQlFTeERRVUZOVHl4RFFVRkJRU3hEUVVGRmRrSXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJTM05DTEVOQlFVRkJMRU5CUVVWMlFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hGUVVGUExFTkJRVUVzUTBGQlFTeERRVUZCTEV0QlMyeEVMRWxCUVVzc1NVRkJTVVFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbElMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ0xFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsS0xFbEJRVUZCTEVOQlFVdE9MRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DVkN4UlFVRkJRU3hEUVVGVGRVSXNTVUZCUVVFc1EwRkJUVThzUTBGQlFVRXNRMEZCUlhaQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdHpRaXhEUVVGQlFTeEZRVUZOTEVOQlFVRXNRMEZCUVN4RFFVdG9SQ3hQUVVGUExFbEJRVWx3UXl4TlFVRkJRU3hEUVVGUExFTkJRVVZITEVsQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVUxRExGRkJRVUZCTEVOQlFVRkJMRkZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNCRFNpeFBRVUZCUVN4VFFVRkJRU3hEUVVGcFFtZERMRTFCUVVGQkxFTkJRVk1zU1VGQlNXcERMRTFCUVVGQkxFTkJRVUZCTEVOQlF6RkNMRTlCUVU5QkxFMUJRVUZCTEVOQlFVOVJMRWRCUVVGQkxFTkJRVWw1UWl4TlFVRkJRU3hEUVVGVFpDeExRVUZCUVN4RlFVTm9RbkpDTEVsQlFVRkJMRU5CUVV0elFpeE5RVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVWx3UW01Q0xFOUJRVUZCTEZOQlFVRkJMRU5CUVdsQ1owTXNUVUZCUVVFc1EwRkJVeXhKUVVGSmFrTXNUVUZCUVVFc1EwRkJRVUVzUTBGRE1VSXNTVUZCU1hGQ0xGTkJRVUZCTEVOQlFWa3NTVUZCU1hKQ0xFMUJRVUZCTEVOQlFVOHNRMEZCUlVjc1NVRkJRVUVzUTBGQlRUaENMRTFCUVVGQkxFTkJRVTgzUWl4SlFVRkJRU3hEUVVGTlFTeEpRVUZCUVN4RFFVRk5Oa0lzVFVGQlFVRXNRMEZCVHpsQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRemRFTEVsQlFVc3NTVUZCU1ZVc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWx2UWl4TlFVRkJRU3hEUVVGUE9VSXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkROMElzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVzFDTEUxQlFVRkJMRU5CUVU4M1FpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTTNRazhzVTBGQlFVRXNRMEZCVlZRc1NVRkJRVUVzUTBGQlMwVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMyOUNMRTFCUVVGQkxFTkJRVTl5UWl4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVjNVF5eFBRVUZQVHl4VFFVRkJRU3hEUVVkWWNFSXNUMEZCUVVFc1IwRkJRVUVzUTBGQlYyZERMRTFCUVVGQkxFTkJRVk1zU1VGQlNXcERMRTFCUVVGQkxFTkJRVlZ6UWl4UlFVRkJRU3hGUVVGWExFbEJRVUVzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZEZWtNc1NVRkJTVVFzVTBGQlFVRXNRMEZCV1N4SlFVRkpja0lzVFVGQlFVRXNRMEZCVHl4RFFVRkZSeXhKUVVGQlFTeERRVUZOT0VJc1RVRkJRVUVzUTBGQlR6bENMRWxCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVUwMlFpeE5RVUZCUVN4RFFVRlBOMElzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRE4wUXNTVUZCU3l4SlFVRkpVeXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNXOUNMRTFCUVVGQkxFTkJRVTg1UWl4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVNM1FpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmJVSXNUVUZCUVVFc1EwRkJUemRDTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVzc1EwRkRiRU1zU1VGQlNVc3NTMEZCUVVFc1EwRkJVV01zVFVGQlFVRXNRMEZCVDNKQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlF6TkNUeXhUUVVGQlFTeERRVUZWVkN4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGTFVTeFJRVUZCUVN4RFFVRlRTQ3hMUVVGQlFTeERRVUZQVGl4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVkc1JDeFBRVUZQVHl4VFFVRkJRU3hEUVVkWWNFSXNUMEZCUVVFc1UwRkJRVUVzUTBGQmFVSkpMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVUZCTEVOQlEzaENMRTlCUVU4c1NVRkJTVXdzVFVGQlFVRXNRMEZCVHl4RFFVRkZSeXhKUVVGQlFTeERRVUZOUlN4UlFVRkJRU3hEUVVGVGEwTXNUVUZCUVVFc1EwRkJVVzVETEVsQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGSFF5eFJRVUZCUVN4RFFVRkJRU3hSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkNFJFb3NUMEZCUVVFc1QwRkJRVUVzUTBGQlpVTXNUVUZCUVVFc1EwRkJVeXhEUVVGRlF5eEpRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJSME1zU1VGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVjMlFpeE5RVUZCUVN4RFFVRlJMRWxCUVVscVF5eE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWR3UkN4UFFVWkJSU3hOUVVGQlFTeERRVUZQUnl4UlFVRkJRU3hEUVVGWFRDeE5RVUZCUVN4RFFVRlBNa0lzVDBGQlFVRXNRMEZCVVhwQ0xFMUJRVUZCTEVOQlFVOHJRaXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hQUVVOcVF5OUNMRTFCUVVGQkxFTkJRVThyUWl4TlFVRkJRU3hEUVVOUUxFbEJRVWxxUXl4TlFVRkJRU3hEUVVGUFJTeE5RVUZCUVN4RFFVRkJRU3hEUVVkMFFrUXNUMEZCUVVFc1UwRkJRVUVzUTBGQmFVSm5ReXhOUVVGQlFTeERRVUZUTEVsQlFVbHFReXhOUVVGQlFTeERRVUZCUVN4RFFVTXhRaXhKUVVGSlN5eFJRVUZCUVN4RFFVRlhiVU1zU1VGQlFVRXNRMEZCUzBNc1UwRkJRVUVzUTBGQlZYcERMRTFCUVVGQkxFTkJRVTh5UWl4UFFVRkJRU3hEUVVGUlRTeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU0zUXl4UFFVRlBMRWxCUVVscVF5eE5RVUZCUVN4RFFVRlBMRU5CUVVWSExFbEJRVUZCTEVOQlFVMDRRaXhOUVVGQlFTeERRVUZQT1VJc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJUVFpDTEUxQlFVRkJMRU5CUVU4M1FpeEpRVUZCUVN4RFFVRk5ReXhSUVVGQlFTeERRVUZCUVN4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVYzVSRW9zVDBGQlFVRXNVVUZCUVVFc1EwRkJaMEpwUXl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlFTeERRVU53UWl4SlFVRkpSQ3hOUVVGQlFTeERRVUZUYWtNc1RVRkJRVUVzUTBGQlR6QkRMRTFCUVVGQkxFTkJRVTlTTEV0QlFVRkJMRU5CUVUxTExFMUJRVUZCTEVOQlFVRkJMRU5CUTJwRExFbEJRVXNzU1VGQlNURkNMRU5CUVVGQkxFbEJRVXR2UWl4TlFVRkJRU3hEUVVGUGNrSXNTVUZCUVVFc1EwRkRha0lzU1VGQlN5eEpRVUZKUlN4RFFVRkJRU3hKUVVGTGJVSXNUVUZCUVVFc1EwRkJUM0pDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUTJ4Q1FTeERRVUZCUVN4RlFVRkxReXhEUVVGQlFTeEhRVU5NYlVJc1RVRkJRVUVzUTBGQlQzSkNMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXR2UWl4TFFVRkJRU3hEUVVGTmNrSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMZEVNc1QwRkVRVzlDTEUxQlFVRkJMRU5CUVU5T0xFOUJRVUZCTEVWQlFVRkJMRU5CUTBGTkxFMUJRVUZCTEVOQlIxaG9ReXhQUVVGQlFTeEpRVUZCUVN4RFFVRlpNRU1zU1VGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRkRaaXhKUVVGSlZpeE5RVUZCUVN4RFFVRlRha01zVFVGQlFVRXNRMEZCVHpCRExFMUJRVUZCTEVOQlFVOURMRWxCUVVGQkxFTkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTVGxDTEVOQlFVRkJMRWxCUVV0dlFpeE5RVUZCUVN4RFFVRlBja0lzU1VGQlFVRXNRMEZEYWtJc1NVRkJTeXhKUVVGSlJTeERRVUZCUVN4SlFVRkxiVUlzVFVGQlFVRXNRMEZCVDNKQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlEyeENRU3hEUVVGQlFTeEZRVUZMUXl4RFFVRkJRU3hIUVVOTWJVSXNUVUZCUVVFc1EwRkJUM0pDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJTMmhETEU5QlJFRnRRaXhOUVVGQlFTeERRVUZQVGl4UFFVRkJRU3hGUVVGQlFTeERRVU5CVFN4TlFVRkJRU3hEUVVkWWFFTXNUMEZCUVVFc1RVRkJRVUVzUTBGQll6QkRMRWxCUVVGQkxFTkJRVThzUTBGQlFTeERRVUZCTEVOQlEycENMRTlCUVU4c1NVRkJTVE5ETEUxQlFVRkJMRU5CUVU4c1EwRkJSVWNzU1VGQlFVRXNRMEZCVFhkRExFbEJRVUZCTEVOQlFVMTJReXhKUVVGQlFTeERRVUZOZFVNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhNVU14UXl4UFFVRkJRU3hqUVVGQlFTeERRVUZ6UW1kRExFMUJRVUZCTEVOQlFWTXNTVUZCU1dwRExFMUJRVUZCTEVOQlFVRkJMRWRCUVdGSkxFbEJRVUZCTEVOQlFVRkJMRU5CUXpWRExFbEJRVWxsTEV0QlFVRkJMRU5CUVZGakxFMUJRVUZCTEVOQlFVOVhMRlZCUVVGQkxFTkJRVUZCTEVkQlFXTjRReXhKUVVGQlFTeERRVUZCUVN4RFFVTTNRa01zVVVGQlFVRXNRMEZCVjJFc1MwRkJRVUVzUTBGQlRUSkNMRTlCUVVGQkxFTkJRVkV4UWl4TFFVRkJRU3hEUVVGQlFTeERRVU42UWtVc1UwRkJRVUVzUTBGQldTeEpRVUZKY2tJc1RVRkJRVUVzUTBGQlR5eERRVUZGUnl4SlFVRkJRU3hEUVVGTlowSXNTMEZCUVVFc1EwRkJUVzlDTEUxQlFVRkJMRU5CUVZGdVF5eEpRVUZCUVN4RFFVRk5Oa0lzVFVGQlFVRXNRMEZCVHpkQ0xFbEJRVUZCTEVOQlFVMURMRkZCUVVGQkxFTkJRVUZCTEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJYQkZMRTlCUkVGblFpeFRRVUZCUVN4RFFVRlZlVUlzVTBGQlFVRXNSVUZCUVVFc1EwRkRTSHBDTEZOQlFVRkJMRU5CUjFod1FpeFBRVUZCUVN4VlFVRkJRU3hEUVVGclFqaERMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVUZKTVVNc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVRXNRMEZGTVVNc1NVRkJTVEpETEdkQ1FVRkJRU3hEUVVGdFFpeEZRVUZCTEVOQlEzWkNMRWxCUVVzc1NVRkJTVzVETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkphME1zVlVGQlFVRXNRMEZCVjFJc1RVRkJRVUVzUTBGQlVURkNMRU5CUVVGQkxFVkJRVUZCTEVOQlEyNURiVU1zWjBKQlFVRkJMRU5CUVdsQ2NFSXNTVUZCUVVFc1EwRkJTeXhEUVVGRmVrSXNTVUZCUVVFc1EwRkJUVFJETEZWQlFVRkJMRU5CUVZkc1F5eERRVUZCUVN4RFFVRkJRU3hEUVVGSlZDeEpRVUZCUVN4RFFVRk5Na01zVlVGQlFVRXNRMEZCUVVFc1JVRkJZV3hETEVOQlFVRkJMRU5CUVVGQkxFVkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZITVVVc1NVRkJTVzlETEZWQlFVRkJMRU5CUVdORExFdEJRVUZCTEVWQlFVRkJMRU5CUTJRc1NVRkJTV3BDTEUxQlFVRkJMRU5CUVZNc1NVRkJTV3BETEUxQlFVRkJMRU5CUVU5blJDeG5Ra0ZCUVVFc1EwRkJhVUpGTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlYzcERMRTlCVkVsQkxFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RlFVRkxSaXhuUWtGQlFVRXNRMEZCYVVKVUxFMUJRVUZCTEVOQlF6bENUaXhOUVVGQlFTeERRVUZQZWtJc1IwRkJRVUVzUTBGQlNWY3NTMEZCUVVFc1JVRkRRV1FzVVVGQlFVRXNRMEZCVTFVc1MwRkJRVUVzUlVGQlFVRXNSVUZCVnl4RFFVRkJMRU5CUVVFc1EwRkhMMEpyUWl4TlFVRkJRU3hEUVVGUGVrSXNSMEZCUVVFc1EwRkJTVmNzUzBGQlFVRXNSVUZEUVRoQ0xGVkJRVUZCTEVOQlFWZERMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZITTBKcVFpeE5RVUZCUVN4RFFVRkJRU3hEUVVkWUxFOUJRVTluUWl4VlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlNURkNSU3hqUVVGUFF5eERRVUZWY0VRc1RVRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJ2YXIgXyRBcnJheUxpYnJhcnlfMTE9ZnVuY3Rpb24oKXtsZXQgc2VsZj17Y29tYmluZTooaGF5c3RhY2ssZmlyc3Qsc2Vjb25kLHBvcyk9PntsZXQgYXQxPXBvcz1wb3N8fDAsYXQyPWZpcnN0PT09c2Vjb25kP3BvcysxOnBvcyxzdGFydD1zZWxmLmluZGV4QXQoaGF5c3RhY2ssZmlyc3QsYXQxKSxlbmQ9c2VsZi5pbmRleEF0KGhheXN0YWNrLHNlY29uZCxhdDIpKzE7cmV0dXJuLTE9PXN0YXJ0fHwwPT1lbmQ/bnVsbDpoYXlzdGFjay5zbGljZShzdGFydCxlbmQpfSxpbkJldHdlZW46KGhheXN0YWNrLGZpcnN0LHNlY29uZCxwb3MpPT57bGV0IGF0MT1wb3M9cG9zfHwwLGF0Mj1maXJzdD09PXNlY29uZD9wb3MrMTpwb3Msc3RhcnQ9c2VsZi5pbmRleEF0KGhheXN0YWNrLGZpcnN0LGF0MSkrMSxlbmQ9c2VsZi5pbmRleEF0KGhheXN0YWNrLHNlY29uZCxhdDIpO3JldHVybiAwPT1zdGFydHx8LTE9PWVuZD9udWxsOmhheXN0YWNrLnNsaWNlKHN0YXJ0LGVuZCl9LGNvbnRhaW5zOihoYXlzdGFjayxuZWVkbGUpPT57Zm9yKGxldCBpIGluIGhheXN0YWNrKWlmKGhheXN0YWNrW2ldPT1uZWVkbGUpcmV0dXJuITA7cmV0dXJuITF9LGluZGV4QXQ6KGhheXN0YWNrLG5lZWRsZSxwb3MpPT57cG9zPXBvc3x8MDtsZXQgY291bnQ9LTE7Zm9yKGxldCBpPTA7aTxoYXlzdGFjay5sZW5ndGg7aSsrKWlmKGhheXN0YWNrW2ldPT1uZWVkbGUmJisrY291bnQ9PXBvcylyZXR1cm4gaTtyZXR1cm4tMX0sZmluZDooaGF5c3RhY2ssY2FsbGJhY2spPT57Zm9yKGxldCBpIGluIGhheXN0YWNrKWlmKDE9PWNhbGxiYWNrKGhheXN0YWNrW2ldKSlyZXR1cm4gaGF5c3RhY2tbaV19LGZpbmRBbGw6KGhheXN0YWNrLGNhbGxiYWNrKT0+e2xldCB2YWx1ZXM9W107Zm9yKGxldCBpIGluIGhheXN0YWNrKTE9PWNhbGxiYWNrKGhheXN0YWNrW2ldKSYmdmFsdWVzLnB1c2goaGF5c3RhY2tbaV0pO3JldHVybiB2YWx1ZXN9LGdldE9iamVjdDooaGF5c3RhY2ssa2V5LHZhbHVlKT0+e2xldCBvYmplY3Q7Zm9yKGxldCBpIGluIGhheXN0YWNrKWhheXN0YWNrW2ldW2tleV09PXZhbHVlJiYob2JqZWN0PWhheXN0YWNrW2ldKTtyZXR1cm4gb2JqZWN0fSxnZXRBbGxPYmplY3RzOihoYXlzdGFjayxrZXksdmFsdWUpPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBoYXlzdGFjayloYXlzdGFja1tpXVtrZXldPT12YWx1ZSYmbmV3QXJyYXkucHVzaChoYXlzdGFja1tpXSk7cmV0dXJuIG5ld0FycmF5fSxnZXRBbGw6KGhheXN0YWNrLG5lZWRsZSk9PntsZXQgbmV3QXJyYXk9W107Zm9yKGxldCBpIGluIGhheXN0YWNrKWhheXN0YWNrW2ldPT1uZWVkbGUmJm5ld0FycmF5LnB1c2goaSk7cmV0dXJuIG5ld0FycmF5fSxyZW1vdmVBbGw6KGhheXN0YWNrLG5lZWRsZSk9PntsZXQgbmV3QXJyYXk9W107Zm9yKGxldCBpIG9mIGhheXN0YWNrKWkhPW5lZWRsZSYmbmV3QXJyYXkucHVzaChpKTtyZXR1cm4gbmV3QXJyYXl9LHB1dEF0OihoYXlzdGFjaz1bXSx2YWx1ZSxrZXk9MCk9PntsZXQgbmV3QXJyYXk9W107Zm9yKGxldCBpIGluIGhheXN0YWNrKWlmKGk9PWtleSl7bmV3QXJyYXlbaV09dmFsdWU7bGV0IG5leHQ9TWF0aC5mbG9vcihrZXkpO2lzTmFOKG5leHQpP25leHQ9a2V5KzE6bmV4dCsrLG5ld0FycmF5W25leHRdPWhheXN0YWNrW2ldfWVsc2UgbmV3QXJyYXlbaV09aGF5c3RhY2tbaV07cmV0dXJuIG5ld0FycmF5fSxwdXNoQXJyYXk6KGhheXN0YWNrPVtdLG5lZWRsZSxpbnNlcnQpPT57bGV0IHBvc2l0aW9uPXNlbGYuYXJyYXlJbmRleChoYXlzdGFjayxuZWVkbGUpO3JldHVybiBzZWxmLnB1dEF0KGhheXN0YWNrLGluc2VydCxwb3NpdGlvbil9LGFycmF5SW5kZXg6KGhheXN0YWNrPVtdLG5lZWRsZT1bXSk9Pntmb3IobGV0IGkgaW4gaGF5c3RhY2spaWYoSlNPTi5zdHJpbmdpZnkoaGF5c3RhY2tbaV0pPT1KU09OLnN0cmluZ2lmeShuZWVkbGUpKXJldHVybiBpO3JldHVybi0xfSxoYXNBcnJheTooaGF5c3RhY2s9W10sbmVlZGxlPVtdKT0+KGhheXN0YWNrPUpTT04uc3RyaW5naWZ5KGhheXN0YWNrKSxuZWVkbGU9SlNPTi5zdHJpbmdpZnkobmVlZGxlKSwtMSE9aGF5c3RhY2suaW5kZXhPZihuZWVkbGUpKSx0b09iamVjdDooYXJyYXk9W10sa2V5KT0+e2xldCBvYmplY3Q9e307Zm9yKGxldCBpIGluIGFycmF5KW9iamVjdFthcnJheVtpXVtrZXldXT1hcnJheVtpXSxkZWxldGUgb2JqZWN0W2FycmF5W2ldW2tleV1dW2tleV07cmV0dXJuIG9iamVjdH0scmVzaGFwZTpwYXJhbXM9Pnt9LHJhbmRvbVBpY2s6YXJyYXk9PmFycmF5W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSphcnJheS5sZW5ndGgpXSxyZW1vdmVFbXB0eTooYXJyYXk9W10pPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBhcnJheSlBcnJheS5pc0FycmF5KGFycmF5W2ldKSYmYXJyYXlbaV0ubGVuZ3RoPjA/bmV3QXJyYXkucHVzaChzZWxmLnJlbW92ZUVtcHR5KGFycmF5W2ldKSk6bnVsbCE9YXJyYXlbaV0mJm51bGwhPWFycmF5W2ldJiYwIT1hcnJheVtpXSYmXCJcIiE9YXJyYXlbaV0mJm5ld0FycmF5LnB1c2goYXJyYXlbaV0pO3JldHVybiBuZXdBcnJheX0sZWFjaDooYXJyYXk9W10sY2FsbGJhY2s9KCgpPT57fSkpPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBhcnJheSluZXdBcnJheS5wdXNoKGNhbGxiYWNrKGFycmF5W2ldLGkpKTtyZXR1cm4gbmV3QXJyYXl9LGhhc0FycmF5RWxlbWVudDooaGF5c3RhY2s9W10sbmVlZGxlPVtdKT0+e2ZvcihsZXQgaSBpbiBuZWVkbGUpaWYoLTEhPWhheXN0YWNrLmluZGV4T2YobmVlZGxlW2ldKSlyZXR1cm4hMDtyZXR1cm4hMX0sdG9TZXQ6KGhheXN0YWNrPVtdKT0+e2xldCBzaW5nbGU9W107Zm9yKGxldCBpIGluIGhheXN0YWNrKS0xPT1zaW5nbGUuaW5kZXhPZihoYXlzdGFja1tpXSkmJnNpbmdsZS5wdXNoKGhheXN0YWNrW2ldKTtyZXR1cm4gc2luZ2xlfSxwb3BJbmRleDooYXJyYXk9W10saW5kZXgpPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBhcnJheSlpIT1pbmRleCYmbmV3QXJyYXkucHVzaChhcnJheVtpXSk7cmV0dXJuIG5ld0FycmF5fSxkYXRhVHlwZTooYXJyYXk9W10pPT57bGV0IHR5cGU9dHlwZW9mIGFycmF5WzBdO2ZvcihsZXQgaSBpbiBhcnJheSlpZih0eXBlb2YgYXJyYXlbaV0hPXR5cGUpcmV0dXJuXCJtaXhlZFwiO3JldHVybiB0eXBlfX07cmV0dXJuIHNlbGZ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa0Z5Y21GNVRHbGljbUZ5ZVM1cWN5SmRMQ0p1WVcxbGN5STZXeUp0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpYzJWc1ppSXNJbU52YldKcGJtVWlMQ0pvWVhsemRHRmpheUlzSW1acGNuTjBJaXdpYzJWamIyNWtJaXdpY0c5eklpd2lZWFF4SWl3aVlYUXlJaXdpYzNSaGNuUWlMQ0pwYm1SbGVFRjBJaXdpWlc1a0lpd2ljMnhwWTJVaUxDSnBia0psZEhkbFpXNGlMQ0pqYjI1MFlXbHVjeUlzSW01bFpXUnNaU0lzSW1raUxDSmpiM1Z1ZENJc0lteGxibWQwYUNJc0ltWnBibVFpTENKallXeHNZbUZqYXlJc0ltWnBibVJCYkd3aUxDSjJZV3gxWlhNaUxDSndkWE5vSWl3aVoyVjBUMkpxWldOMElpd2lhMlY1SWl3aWRtRnNkV1VpTENKdlltcGxZM1FpTENKblpYUkJiR3hQWW1wbFkzUnpJaXdpYm1WM1FYSnlZWGtpTENKblpYUkJiR3dpTENKeVpXMXZkbVZCYkd3aUxDSndkWFJCZENJc0ltNWxlSFFpTENKTllYUm9JaXdpWm14dmIzSWlMQ0pwYzA1aFRpSXNJbkIxYzJoQmNuSmhlU0lzSW1sdWMyVnlkQ0lzSW5CdmMybDBhVzl1SWl3aVlYSnlZWGxKYm1SbGVDSXNJa3BUVDA0aUxDSnpkSEpwYm1kcFpua2lMQ0pvWVhOQmNuSmhlU0lzSW1sdVpHVjRUMllpTENKMGIwOWlhbVZqZENJc0ltRnljbUY1SWl3aWNtVnphR0Z3WlNJc0luQmhjbUZ0Y3lJc0luSmhibVJ2YlZCcFkyc2lMQ0p5WVc1a2IyMGlMQ0p5WlcxdmRtVkZiWEIwZVNJc0lrRnljbUY1SWl3aWFYTkJjbkpoZVNJc0luVnVaR1ZtYVc1bFpDSXNJbVZoWTJnaUxDSm9ZWE5CY25KaGVVVnNaVzFsYm5RaUxDSjBiMU5sZENJc0luTnBibWRzWlNJc0luQnZjRWx1WkdWNElpd2lhVzVrWlhnaUxDSmtZWFJoVkhsd1pTSXNJblI1Y0dVaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVRoUFFVRXNjVUpCUVU5RExFTkJPVTlRTEZWQlFVRXNRMEZEU1N4SlFVRkpReXhKUVVGQlFTeERRVUZQTEVOQlJWaERMRTlCUVVGQkxFTkJRV1VzUTBGQlEwTXNVVUZCUVVFc1EwRkJWVU1zUzBGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUTBGQlVVTXNSMEZCUVVFc1IwRkJRVUVzUTBGRmNrTXNTVUZCU1VNc1IwRkJRVUVzUTBGRVNrUXNSMEZCUVVFc1EwRkJUVUVzUjBGQlFVRXNSVUZCVHl4RFFVRkJMRU5CUlZSRkxFZEJRVUZCTEVOQlFVMUtMRXRCUVVGQkxFZEJRVlZETEUxQlFVRkJMRU5CUVZORExFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkpRU3hIUVVGQlFTeERRVU51UTBjc1MwRkJRVUVzUTBGQlVWSXNTVUZCUVVFc1EwRkJTMU1zVDBGQlFVRXNRMEZCVVZBc1VVRkJRVUVzUTBGQlZVTXNTMEZCUVVFc1EwRkJUMGNzUjBGQlFVRXNRMEZCUVVFc1EwRkRkRU5KTEVkQlFVRkJMRU5CUVUxV0xFbEJRVUZCTEVOQlFVdFRMRTlCUVVGQkxFTkJRVkZRTEZGQlFVRkJMRU5CUVZWRkxFMUJRVUZCTEVOQlFWRkhMRWRCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVVm9SQ3hOUVVGQkxFTkJRV01zUTBGQlFTeEZRVUZXUXl4TFFVRkJRU3hGUVVGelFpeERRVUZCTEVWQlFWQkZMRWRCUVVGQkxFTkJRMUlzU1VGQlFTeERRVWRLVWl4UlFVRkJRU3hEUVVGVFV5eExRVUZCUVN4RFFVRk5TQ3hMUVVGQlFTeERRVUZQUlN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHFRMFVzVTBGQlFVRXNRMEZCYVVJc1EwRkJRMVlzVVVGQlFVRXNRMEZCVlVNc1MwRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkJVVU1zUjBGQlFVRXNSMEZCUVVFc1EwRkZka01zU1VGQlNVTXNSMEZCUVVFc1EwRkVTa1FzUjBGQlFVRXNRMEZCVFVFc1IwRkJRVUVzUlVGQlR5eERRVUZCTEVOQlJWUkZMRWRCUVVGQkxFTkJRVTFLTEV0QlFVRkJMRWRCUVZWRExFMUJRVUZCTEVOQlFWTkRMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZKUVN4SFFVRkJRU3hEUVVOdVEwY3NTMEZCUVVFc1EwRkJVVklzU1VGQlFVRXNRMEZCUzFNc1QwRkJRVUVzUTBGQlVWQXNVVUZCUVVFc1EwRkJWVU1zUzBGQlFVRXNRMEZCVDBjc1IwRkJRVUVzUTBGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUXpkRFNTeEhRVUZCUVN4RFFVRk5WaXhKUVVGQlFTeERRVUZMVXl4UFFVRkJRU3hEUVVGUlVDeFJRVUZCUVN4RFFVRlZSU3hOUVVGQlFTeERRVUZSUnl4SFFVRkJRU3hEUVVGQlFTeERRVVY2UXl4UFFVRmhMRU5CUVVFc1JVRkJWRU1zUzBGQlFVRXNSVUZCUVVFc1EwRkJjMElzUTBGQlFTeEZRVUZTUlN4SFFVRkJRU3hEUVVOUUxFbEJRVUVzUTBGSFNsSXNVVUZCUVVFc1EwRkJVMU1zUzBGQlFVRXNRMEZCVFVnc1MwRkJRVUVzUTBGQlQwVXNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYWtOSExGRkJRVUZCTEVOQlFXZENMRU5CUVVOWUxGRkJRVUZCTEVOQlFWVlpMRTFCUVVGQkxFZEJRVUZCTEVOQlJYWkNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNTVUZCUzJJc1VVRkJRVUVzUTBGRFZpeEhRVUZKUVN4UlFVRkJRU3hEUVVGVFlTeERRVUZCUVN4RFFVRkJRU3hGUVVGTlJDeE5RVUZCUVN4RFFVTm1MRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJSMllzVFVGQlFTeERRVTVYTEVOQlFVRXNRMEZCUVN4RFFWTm1UQ3hQUVVGQlFTeERRVUZsTEVOQlFVTlFMRkZCUVVGQkxFTkJRVlZaTEUxQlFVRkJMRU5CUVZGVUxFZEJRVUZCTEVkQlFVRkJMRU5CUXpsQ1FTeEhRVUZCUVN4RFFVRk5RU3hIUVVGQlFTeEZRVUZQTEVOQlFVRXNRMEZEWWl4SlFVRkpWeXhMUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxFTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpZaXhSUVVGQlFTeERRVUZUWlN4TlFVRkJRU3hEUVVGUlJpeERRVUZCUVN4RlFVRkJRU3hEUVVOcVF5eEhRVUZKWWl4UlFVRkJRU3hEUVVGVFlTeERRVUZCUVN4RFFVRkJRU3hGUVVGTlJDeE5RVUZCUVN4RlFVRkJRU3hGUVVObVJTeExRVUZCUVN4RlFVVmhXQ3hIUVVGQlFTeERRVU5VTEU5QlFVOVZMRU5CUVVGQkxFTkJTMjVDTEUxQlFVRXNRMEZCVVN4RFFVRkJMRU5CUVVFc1EwRkhXa2NzU1VGQlFVRXNRMEZCV1N4RFFVRkRhRUlzVVVGQlFVRXNRMEZCVldsQ0xGRkJRVUZCTEVkQlFVRkJMRU5CUTI1Q0xFbEJRVXNzU1VGQlNVb3NRMEZCUVVFc1NVRkJTMklzVVVGQlFVRXNRMEZEVml4SFFVRTJRaXhEUVVGQkxFVkJRWHBDYVVJc1VVRkJRVUVzUTBGQlUycENMRkZCUVVGQkxFTkJRVk5oTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlEyeENMRTlCUVU5aUxGRkJRVUZCTEVOQlFWTmhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU3pWQ1N5eFBRVUZCUVN4RFFVRmxMRU5CUVVOc1FpeFJRVUZCUVN4RFFVRlZhVUlzVVVGQlFVRXNSMEZCUVVFc1EwRkRkRUlzU1VGQlNVVXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRMklzU1VGQlN5eEpRVUZKVGl4RFFVRkJRU3hKUVVGTFlpeFJRVUZCUVN4RFFVTnRRaXhEUVVGQkxFVkJRWHBDYVVJc1VVRkJRVUVzUTBGQlUycENMRkZCUVVGQkxFTkJRVk5oTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlEyeENUU3hOUVVGQlFTeERRVUZQUXl4SlFVRkJRU3hEUVVGTGNFSXNVVUZCUVVFc1EwRkJVMkVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSk4wSXNUMEZCVDAwc1RVRkJRVUVzUTBGQlFVRXNRMEZIV0VVc1UwRkJRVUVzUTBGQmFVSXNRMEZCUTNKQ0xGRkJRVUZCTEVOQlFWVnpRaXhIUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hIUVVGQlFTeERRVU0zUWl4SlFVRkpReXhOUVVGQlFTeERRVU5LTEVsQlFVc3NTVUZCU1Znc1EwRkJRVUVzU1VGQlMySXNVVUZCUVVFc1EwRkRUa0VzVVVGQlFVRXNRMEZCVTJFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjFNc1IwRkJRVUVzUTBGQlFVRXNSVUZCVVVNc1MwRkJRVUVzUjBGQlQwTXNUVUZCUVVFc1EwRkJVM2hDTEZGQlFVRkJMRU5CUVZOaExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWEpFTEU5QlFVOVhMRTFCUVVGQkxFTkJRVUZCTEVOQlIxaERMR0ZCUVVGQkxFTkJRWEZDTEVOQlFVTjZRaXhSUVVGQlFTeERRVUZWYzBJc1IwRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1IwRkJRVUVzUTBGRGFrTXNTVUZCU1Vjc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpZaXhEUVVGQlFTeEpRVUZMWWl4UlFVRkJRU3hEUVVOT1FTeFJRVUZCUVN4RFFVRlRZU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhVeXhIUVVGQlFTeERRVUZCUVN4RlFVRlJReXhMUVVGQlFTeEZRVU53UWtjc1VVRkJRVUVzUTBGQlUwNHNTVUZCUVVFc1EwRkJTM0JDTEZGQlFVRkJMRU5CUVZOaExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSeTlDTEU5QlFVOWhMRkZCUVVGQkxFTkJRVUZCTEVOQlIxaERMRTFCUVVGQkxFTkJRV01zUTBGQlF6TkNMRkZCUVVGQkxFTkJRVlZaTEUxQlFVRkJMRWRCUVVGQkxFTkJRM0pDTEVsQlFVbGpMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVU5tTEVsQlFVc3NTVUZCU1dJc1EwRkJRVUVzU1VGQlMySXNVVUZCUVVFc1EwRkRUa0VzVVVGQlFVRXNRMEZCVTJFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVFVRc1RVRkJRVUVzUlVGQlVXTXNVVUZCUVVFc1EwRkJVMDRzU1VGQlFVRXNRMEZCUzFBc1EwRkJRVUVzUTBGQlFVRXNRMEZGTjBNc1QwRkJUMkVzVVVGQlFVRXNRMEZCUVVFc1EwRkhXRVVzVTBGQlFVRXNRMEZCYVVJc1EwRkJRelZDTEZGQlFVRkJMRU5CUVZWWkxFMUJRVUZCTEVkQlFVRkJMRU5CUTNoQ0xFbEJRVWxqTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNXSXNRMEZCUVVFc1NVRkJTMklzVVVGQlFVRXNRMEZEVG1Fc1EwRkJRVUVzUlVGQlMwUXNUVUZCUVVFc1JVRkRUR01zVVVGQlFVRXNRMEZCVTA0c1NVRkJRVUVzUTBGQlMxQXNRMEZCUVVFc1EwRkJRVUVzUTBGSGRFSXNUMEZCVDJFc1VVRkJRVUVzUTBGQlFVRXNRMEZIV0Vjc1MwRkJRVUVzUTBGQllTeERRVUZETjBJc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVbDFRaXhMUVVGQlFTeERRVUZQUkN4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUjBGQlFTeERRVU4wUXl4SlFVRkpTU3hSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEWml4SlFVRkxMRWxCUVVsaUxFTkJRVUZCTEVsQlFVdGlMRkZCUVVGQkxFTkJRMVlzUjBGQlNXRXNRMEZCUVVFc1JVRkJTMU1zUjBGQlFVRXNRMEZCU3l4RFFVTldTU3hSUVVGQlFTeERRVUZUWWl4RFFVRkJRU3hEUVVGQlFTeERRVUZMVlN4TFFVRkJRU3hEUVVOa0xFbEJRVWxQTEVsQlFVRkJMRU5CUVU5RExFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFXTEVkQlFVRkJMRU5CUVVGQkxFTkJSV3hDVnl4TFFVRkJRU3hEUVVGTlNDeEpRVUZCUVN4RFFVRkJRU3hEUVVOT1FTeEpRVUZCUVN4RFFVRlBVaXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZIWWxFc1NVRkJRVUVzUlVGQlFVRXNRMEZGU2tvc1VVRkJRVUVzUTBGQlUwa3NTVUZCUVVFc1EwRkJRVUVzUTBGQlVUbENMRkZCUVVGQkxFTkJRVk5oTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlJ6RkNZU3hSUVVGQlFTeERRVUZUWWl4RFFVRkJRU3hEUVVGQlFTeERRVUZMWWl4UlFVRkJRU3hEUVVGVFlTeERRVUZCUVN4RFFVRkJRU3hEUVVrdlFpeFBRVUZQWVN4UlFVRkJRU3hEUVVGQlFTeERRVWRZVVN4VFFVRkJRU3hEUVVGcFFpeERRVUZEYkVNc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVbFpMRTFCUVVGQkxFTkJRVkYxUWl4TlFVRkJRU3hIUVVGQlFTeERRVU55UXl4SlFVRkpReXhSUVVGQlFTeERRVUZYZEVNc1NVRkJRVUVzUTBGQlMzVkRMRlZCUVVGQkxFTkJRVmR5UXl4UlFVRkJRU3hEUVVGVldTeE5RVUZCUVN4RFFVRkJRU3hEUVVWNlF5eFBRVVJsWkN4SlFVRkJRU3hEUVVGTEswSXNTMEZCUVVFc1EwRkJUVGRDTEZGQlFVRkJMRU5CUVZWdFF5eE5RVUZCUVN4RFFVRlJReXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsb1JFTXNWVUZCUVVFc1EwRkJhMElzUTBGQlEzSkRMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVUZKV1N4TlFVRkJRU3hEUVVGVExFVkJRVUVzUjBGQlFTeERRVU4yUXl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVsQlFVdGlMRkZCUVVGQkxFTkJRMVlzUjBGQlNYTkRMRWxCUVVGQkxFTkJRVXRETEZOQlFVRkJMRU5CUVZWMlF5eFJRVUZCUVN4RFFVRlRZU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGUGVVSXNTVUZCUVVFc1EwRkJTME1zVTBGQlFVRXNRMEZCVlROQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUXpsRExFOUJRVTlETEVOQlFVRkJMRU5CUjJZc1RVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVWRhTWtJc1VVRkJRVUVzUTBGQlowSXNRMEZCUTNoRExGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVRkpXU3hOUVVGQlFTeERRVUZUTEVWQlFVRXNTVUZEY2tOYUxGRkJRVUZCTEVOQlFWZHpReXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVmRrTXNVVUZCUVVFc1EwRkJRVUVzUTBGRE1VSlpMRTFCUVVGQkxFTkJRVk13UWl4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlZNMElzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRldTeERRVUZCTEVWQlFUZENXaXhSUVVGQlFTeERRVUZUZVVNc1QwRkJRVUVzUTBGQlVUZENMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpWQ09FSXNVVUZCUVVFc1EwRkJaMElzUTBGQlEwTXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVWx5UWl4SFFVRkJRU3hIUVVGQlFTeERRVU42UWl4SlFVRkpSU3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsWUxFTkJRVUZCTEVsQlFVczRRaXhMUVVGQlFTeERRVU5XYmtJc1RVRkJRVUVzUTBGQlQyMUNMRXRCUVVGQkxFTkJRVTA1UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZIVXl4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRlJjVUlzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFOUJRM1pDVnl4TlFVRkJRU3hEUVVGUGJVSXNTMEZCUVVFc1EwRkJUVGxDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRUTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVMUJMRWRCUVVGQkxFTkJRVUZCTEVOQlJXcERMRTlCUVU5RkxFMUJRVUZCTEVOQlFVRkJMRU5CUjFodlFpeFBRVUZCUVN4RFFVRm5Ra01zVFVGQlFVRXNSVUZCUVVFc1JVRkJRVUVzUTBGSmFFSkRMRlZCUVVGQkxFTkJRVzFDU0N4TFFVRkJRU3hGUVVOU1FTeExRVUZCUVN4RFFVRk5XaXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTlJDeEpRVUZCUVN4RFFVRkxaMElzVFVGQlFVRXNSVUZCUVVFc1EwRkJWMG9zUzBGQlFVRXNRMEZCVFRWQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMnhFYVVNc1YwRkJRVUVzUTBGQmJVSXNRMEZCUTB3c1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVkQlFVRXNRMEZEZUVJc1NVRkJTV3BDTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNXSXNRMEZCUVVFc1NVRkJTemhDTEV0QlFVRkJMRU5CUTA1TkxFdEJRVUZCTEVOQlFVMURMRTlCUVVGQkxFTkJRVkZRTEV0QlFVRkJMRU5CUVUwNVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZQT0VJc1MwRkJRVUVzUTBGQlRUbENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEZMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVU0zUTFjc1VVRkJRVUVzUTBGQlUwNHNTVUZCUVVFc1EwRkJTM1JDTEVsQlFVRkJMRU5CUVV0clJDeFhRVUZCUVN4RFFVRlpUQ3hMUVVGQlFTeERRVUZOT1VJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmNFSnpReXhKUVVGQlFTeEZRVUZhVWl4TFFVRkJRU3hEUVVGTk9VSXNRMEZCUVVFc1EwRkJRVUVzUlVGQkswSXNTVUZCUVN4RlFVRmFPRUlzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVRkJMRVZCUVRCQ0xFTkJRVUVzUlVGQldqaENMRXRCUVVGQkxFTkJRVTA1UWl4RFFVRkJRU3hEUVVGQlFTeEZRVUYxUWl4RlFVRkJMRVZCUVZvNFFpeExRVUZCUVN4RFFVRk5PVUlzUTBGQlFVRXNRMEZCUVVFc1JVRkRla1ZoTEZGQlFVRkJMRU5CUVZOT0xFbEJRVUZCTEVOQlFVdDFRaXhMUVVGQlFTeERRVUZOT1VJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhOVUlzVDBGQlQyRXNVVUZCUVVFc1EwRkJRVUVzUTBGSFdEQkNMRWxCUVVGQkxFTkJRVmtzUTBGQlExUXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVWt4UWl4UlFVRkJRU3hGUVVGWExFbEJRVUVzUlVGQlFTeERRVUZCTEVkQlFVRXNRMEZEYUVNc1NVRkJTVk1zVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTJZc1NVRkJTeXhKUVVGSllpeERRVUZCUVN4SlFVRkxPRUlzUzBGQlFVRXNRMEZEVm1wQ0xGRkJRVUZCTEVOQlFWTk9MRWxCUVVGQkxFTkJRVXRJTEZGQlFVRkJMRU5CUVZNd1FpeExRVUZCUVN4RFFVRk5PVUlzUTBGQlFVRXNRMEZCUVVFc1EwRkJTVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmNrTXNUMEZCVDJFc1VVRkJRVUVzUTBGQlFVRXNRMEZIV0RKQ0xHVkJRVUZCTEVOQlFYVkNMRU5CUVVOeVJDeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJTVmtzVFVGQlFVRXNRMEZCVXl4RlFVRkJMRWRCUVVFc1EwRkZOVU1zU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hKUVVGTFJDeE5RVUZCUVN4RFFVTldMRWRCUVVFc1EwRkJiME1zUTBGQlFTeEZRVUZvUTFvc1VVRkJRVUVzUTBGQlUzbERMRTlCUVVGQkxFTkJRVkUzUWl4TlFVRkJRU3hEUVVGUFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU40UWl4TlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVkbUxFMUJRVUVzUTBGT1Z5eERRVUZCTEVOQlFVRXNRMEZUWm5sRExFdEJRVUZCTEVOQlFXRXNRMEZCUTNSRUxGRkJRVUZCTEVOQlFWY3NSVUZCUVN4SFFVRkJMRU5CUTNKQ0xFbEJRVWwxUkN4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGRFlpeEpRVUZMTEVsQlFVa3hReXhEUVVGQlFTeEpRVUZMWWl4UlFVRkJRU3hEUVVGQlFTeERRVU13UWl4RFFVRkJMRVZCUVdoRGRVUXNUVUZCUVVFc1EwRkJUMlFzVDBGQlFVRXNRMEZCVVhwRExGRkJRVUZCTEVOQlFWTmhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUTNoQ01FTXNUVUZCUVVFc1EwRkJUMjVETEVsQlFVRkJMRU5CUVV0d1FpeFJRVUZCUVN4RFFVRlRZU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjM1FpeFBRVUZQTUVNc1RVRkJRVUVzUTBGQlFVRXNRMEZIV0VNc1VVRkJRVUVzUTBGQlowSXNRMEZCUTJJc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVbGpMRXRCUVVGQkxFZEJRVUZCTEVOQlEzcENMRWxCUVVrdlFpeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkRaaXhKUVVGTExFbEJRVWxpTEVOQlFVRkJMRWxCUVVzNFFpeExRVUZCUVN4RFFVTk9PVUlzUTBGQlFVRXNSVUZCU3pSRExFdEJRVUZCTEVWQlEwd3ZRaXhSUVVGQlFTeERRVUZUVGl4SlFVRkJRU3hEUVVGTGRVSXNTMEZCUVVFc1EwRkJUVGxDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6VkNMRTlCUVU5aExGRkJRVUZCTEVOQlFVRkJMRU5CUjFoblF5eFJRVUZCUVN4RFFVRm5RaXhEUVVGRFppeExRVUZCUVN4RFFVRlJMRVZCUVVFc1IwRkJRU3hEUVVOeVFpeEpRVUZKWjBJc1NVRkJRVUVzUTBGQlFVRXNUMEZCWTJoQ0xFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUTNoQ0xFbEJRVXNzU1VGQlNUbENMRU5CUVVGQkxFbEJRVXM0UWl4TFFVRkJRU3hEUVVOV0xFZEJRVUVzVDBGQlYwRXNTMEZCUVVFc1EwRkJUVGxDTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTA0UXl4SlFVRkJRU3hEUVVOdVFpeE5RVUZQTEU5QlFVRXNRMEZIWml4UFFVRlBRU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkWUxFOUJRVTgzUkN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiLyogcmVtb3ZlZDogY29uc3QgXyRBcnJheUxpYnJhcnlfMTE9cmVxdWlyZShcIi4vLi4vZnVuY3Rpb25zL0FycmF5TGlicmFyeVwiKTsgKi87bGV0IF9fZnVuY183PW5ldyBfJEZ1bmNfNCxhcnJheUxpYnJhcnk9XyRBcnJheUxpYnJhcnlfMTEoKTt2YXIgXyROZXVyYWxOZXR3b3JrXzc9Y2xhc3N7Y29uc3RydWN0b3IocGFyYW1zKXtfX2Z1bmNfNy5vYmplY3QuY29weShwYXJhbXMsdGhpcyksdGhpcy5paFdlaWdodHM9bmV3IF8kTWF0cml4XzYoe3Jvd3M6dGhpcy5oTm9kZXMsY29sczp0aGlzLmlOb2Rlc30pLHRoaXMuaWhXZWlnaHRzLnJhbmRvbWl6ZSgpLHRoaXMuaWhCaWFzPW5ldyBfJE1hdHJpeF82KHtyb3dzOnRoaXMuaE5vZGVzLGNvbHM6MX0pLHRoaXMuaWhCaWFzLnJhbmRvbWl6ZSgpLHRoaXMuaG9XZWlnaHRzPW5ldyBfJE1hdHJpeF82KHtyb3dzOnRoaXMub05vZGVzLGNvbHM6dGhpcy5oTm9kZXN9KSx0aGlzLmhvV2VpZ2h0cy5yYW5kb21pemUoKSx0aGlzLmhvQmlhcz1uZXcgXyRNYXRyaXhfNih7cm93czp0aGlzLm9Ob2Rlcyxjb2xzOjF9KSx0aGlzLmhvQmlhcy5yYW5kb21pemUoKSx0aGlzLmxyPXRoaXMubHJ8fC4xfWZlZWRGb3dhcmQoaW5wdXRBcnJheT1bXSl7bGV0IGlucHV0cz1pbnB1dEFycmF5IGluc3RhbmNlb2YgXyRNYXRyaXhfNj9pbnB1dEFycmF5OnRoaXMucHJlcGFyZUlucHV0cyhpbnB1dEFycmF5KSxoaWRkZW5zPV8kTWF0cml4XzYubXVsdGlwbHkodGhpcy5paFdlaWdodHMsaW5wdXRzKTtoaWRkZW5zLmFkZCh0aGlzLmloQmlhcyksaGlkZGVucy5tYXAoc2lnbW9pZCk7bGV0IG91dHB1dHM9XyRNYXRyaXhfNi5tdWx0aXBseSh0aGlzLmhvV2VpZ2h0cyxoaWRkZW5zKTtyZXR1cm4gb3V0cHV0cy5hZGQodGhpcy5ob0JpYXMpLG91dHB1dHMubWFwKHNpZ21vaWQpLHtpbnB1dHM6aW5wdXRzLGhpZGRlbnM6aGlkZGVucyxvdXRwdXRzOm91dHB1dHN9fXF1ZXJ5QmFjayh0YXJnZXRBcnJheT1bXSl7fXByZWRpY3QoaW5wdXRBcnJheT1bXSl7cmV0dXJuIHRoaXMuZmVlZEZvd2FyZChpbnB1dEFycmF5KS5vdXRwdXRzfWdldFdlaWdodHNVcGRhdGUoaW5wdXRzPW5ldyBfJE1hdHJpeF82LG91dHB1dHM9bmV3IF8kTWF0cml4XzYsZXJyb3JzPTEpe2xldCBncmFkaWVudHM9XyRNYXRyaXhfNi5tYXAob3V0cHV0cyxkU2lnbW9pZCk7Z3JhZGllbnRzLm11bHRpcGx5KGVycm9ycyksZ3JhZGllbnRzLm11bHRpcGx5KHRoaXMubHIpO2xldCBpbnB1dHNUcmFuc3Bvc2VkPV8kTWF0cml4XzYudHJhbnNwb3NlKGlucHV0cyk7cmV0dXJue2NoYW5nZTpfJE1hdHJpeF82Lm11bHRpcGx5KGdyYWRpZW50cyxpbnB1dHNUcmFuc3Bvc2VkKSxncmFkaWVudHM6Z3JhZGllbnRzfX1iYWNrcHJvcGFnYXRlKGlucHV0cz1bXSx0YXJnZXRzPW5ldyBfJE1hdHJpeF82KXtsZXR7aGlkZGVuczpoaWRkZW5zLG91dHB1dHM6b3V0cHV0c309dGhpcy5mZWVkRm93YXJkKGlucHV0cyksaG9FcnJvcnM9XyRNYXRyaXhfNi5zdWJ0cmFjdCh0YXJnZXRzLG91dHB1dHMpLGhvVXBkYXRlcz10aGlzLmdldFdlaWdodHNVcGRhdGUoaGlkZGVucyxvdXRwdXRzLGhvRXJyb3JzKTt0aGlzLmhvV2VpZ2h0cy5hZGQoaG9VcGRhdGVzLmNoYW5nZSksdGhpcy5ob0JpYXMuYWRkKGhvVXBkYXRlcy5ncmFkaWVudHMpO2xldCBob1dlaWdodHNUcmFuc3Bvc2VkPV8kTWF0cml4XzYudHJhbnNwb3NlKHRoaXMuaG9XZWlnaHRzKSxpaEVycm9ycz1fJE1hdHJpeF82Lm11bHRpcGx5KGhvV2VpZ2h0c1RyYW5zcG9zZWQsaG9FcnJvcnMpLGloVXBkYXRlcz10aGlzLmdldFdlaWdodHNVcGRhdGUoaW5wdXRzLGhpZGRlbnMsaWhFcnJvcnMpO3RoaXMuaWhXZWlnaHRzLmFkZChpaFVwZGF0ZXMuY2hhbmdlKSx0aGlzLmloQmlhcy5hZGQoaWhVcGRhdGVzLmdyYWRpZW50cyl9dHJhaW4ocGFyYW1zPXt0cmFpbmluZ0RhdGE6W10scGVyaW9kOjEsZXBvY2g6MX0pe2xldCBpbnB1dEFycmF5PVtdLHRhcmdldEFycmF5PVtdO2ZvcihsZXQgZGF0YSBvZiBwYXJhbXMudHJhaW5pbmdEYXRhKWlucHV0QXJyYXkucHVzaChkYXRhLmlucHV0cyksdGFyZ2V0QXJyYXkucHVzaChkYXRhLnRhcmdldHMpO2xldCBpbnB1dHM9YXJyYXlMaWJyYXJ5LmVhY2goaW5wdXRBcnJheSx2YWx1ZT0+dGhpcy5wcmVwYXJlSW5wdXRzKHZhbHVlKSksdGFyZ2V0cz1hcnJheUxpYnJhcnkuZWFjaCh0YXJnZXRBcnJheSx2YWx1ZT0+dGhpcy5wcmVwYXJlVGFyZ2V0cyh2YWx1ZSkpLHJ1bj0oKT0+e2ZvcihsZXQgaT0wO2k8cGFyYW1zLnBlcmlvZDtpKyspZm9yKGxldCBqIGluIGlucHV0cyl0aGlzLmJhY2twcm9wYWdhdGUoaW5wdXRzW2pdLHRhcmdldHNbal0pfTtpZihfX2Z1bmNfNy5pc3NldChwYXJhbXMuZXBvY2gpKWZvcihsZXQgcD0wO3A8cGFyYW1zLmVwb2NoO3ArKylydW4oKTtlbHNlIHJ1bigpfXNldExlYXJuaW5nUmF0ZShscj0uMSl7dGhpcy5scj1scn1wcmVwYXJlSW5wdXRzKGlucHV0QXJyYXk9W10pe2xldCBpbnB1dHM9XyRNYXRyaXhfNi5mcm9tQXJyYXkoTWF0aC5ub3JtYWxpemUoaW5wdXRBcnJheSkpO3JldHVybiBpbnB1dHMubXVsdGlwbHkoLjk5KSxpbnB1dHMuYWRkKC4wMSksaW5wdXRzfXByZXBhcmVUYXJnZXRzKHRhcmdldEFycmF5PVtdKXtsZXQgdGFyZ2V0cz1fJE1hdHJpeF82LmZyb21BcnJheSh0YXJnZXRBcnJheSk7cmV0dXJuIHRhcmdldHMuYWRkKC4wMSksdGFyZ2V0cy5tdWx0aXBseSguOTkpLHRhcmdldHN9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWs1bGRYSmhiRTVsZEhkdmNtc3Vhbk1pWFN3aWJtRnRaWE1pT2xzaVpuVnVZeUlzSWtaMWJtTWlMQ0poY25KaGVVeHBZbkpoY25raUxDSkJjbkpoZVV4cFluSmhjbmtpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVcyOWlhbVZqZENCUFltcGxZM1JkSWl3aWNHRnlZVzF6SWl3aWIySnFaV04wSWl3aVkyOXdlU0lzSW5Sb2FYTWlMQ0pwYUZkbGFXZG9kSE1pTENKTllYUnlhWGdpTENKeWIzZHpJaXdpYUU1dlpHVnpJaXdpWTI5c2N5SXNJbWxPYjJSbGN5SXNJbkpoYm1SdmJXbDZaU0lzSW1sb1FtbGhjeUlzSW1odlYyVnBaMmgwY3lJc0ltOU9iMlJsY3lJc0ltaHZRbWxoY3lJc0lteHlJaXdpYVc1d2RYUkJjbkpoZVNJc0ltbHVjSFYwY3lJc0luQnlaWEJoY21WSmJuQjFkSE1pTENKb2FXUmtaVzV6SWl3aWJYVnNkR2x3YkhraUxDSmhaR1FpTENKdFlYQWlMQ0p6YVdkdGIybGtJaXdpYjNWMGNIVjBjeUlzSW5SaGNtZGxkRUZ5Y21GNUlpd2labVZsWkVadmQyRnlaQ0lzSW1WeWNtOXljeUlzSW1keVlXUnBaVzUwY3lJc0ltUlRhV2R0YjJsa0lpd2lhVzV3ZFhSelZISmhibk53YjNObFpDSXNJblJ5WVc1emNHOXpaU0lzSW1Ob1lXNW5aU0lzSW5SaGNtZGxkSE1pTENKb2IwVnljbTl5Y3lJc0luTjFZblJ5WVdOMElpd2lhRzlWY0dSaGRHVnpJaXdpWjJWMFYyVnBaMmgwYzFWd1pHRjBaU0lzSW1odlYyVnBaMmgwYzFSeVlXNXpjRzl6WldRaUxDSnBhRVZ5Y205eWN5SXNJbWxvVlhCa1lYUmxjeUlzSW5SeVlXbHVhVzVuUkdGMFlTSXNJbkJsY21sdlpDSXNJbVZ3YjJOb0lpd2laR0YwWVNJc0luQjFjMmdpTENKbFlXTm9JaXdpZG1Gc2RXVWlMQ0p3Y21Wd1lYSmxWR0Z5WjJWMGN5SXNJbkoxYmlJc0lta2lMQ0pxSWl3aVltRmphM0J5YjNCaFoyRjBaU0lzSW1semMyVjBJaXdpY0NJc0ltWnliMjFCY25KaGVTSXNJazFoZEdnaUxDSnViM0p0WVd4cGVtVWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMQ3RGUVVsQkxFbEJRVWxCTEZGQlFVRkJMRU5CUVU4c1NVRkJTVU1zVVVGQlFVRXNRMEZEV0VNc1dVRkJRVUVzUTBGQlpVTXNhVUpCUVVGQkxFVkJRVUZCTEVOQmRVaHVRa01zY1VKQlFVOURMRU5CY2toUUxFdEJRVUVzUTBGRFNVTXNWMEZCUVVFc1EwRkJXVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkRVbEFzVVVGQlFVRXNRMEZCUzFFc1RVRkJRVUVzUTBGQlQwTXNTVUZCUVVFc1EwRkJTMFlzVFVGQlFVRXNRMEZCVVVjc1NVRkJRVUVzUTBGQlFVRXNRMEZEZWtKQkxFbEJRVUZCTEVOQlFVdERMRk5CUVVGQkxFTkJRVmtzU1VGQlNVTXNWVUZCUVVFc1EwRkJUeXhEUVVGRlF5eEpRVUZCUVN4RFFVRk5TQ3hKUVVGQlFTeERRVUZMU1N4TlFVRkJRU3hEUVVGUlF5eEpRVUZCUVN4RFFVRk5UQ3hKUVVGQlFTeERRVUZMVFN4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTTFSRTRzU1VGQlFVRXNRMEZCUzBNc1UwRkJRVUVzUTBGQlZVMHNVMEZCUVVFc1JVRkJRVUVzUTBGRlpsQXNTVUZCUVVFc1EwRkJTMUVzVFVGQlFVRXNRMEZCVXl4SlFVRkpUaXhWUVVGQlFTeERRVUZQTEVOQlFVVkRMRWxCUVVGQkxFTkJRVTFJTEVsQlFVRkJMRU5CUVV0SkxFMUJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEY0VSTUxFbEJRVUZCTEVOQlFVdFJMRTFCUVVGQkxFTkJRVTlFTEZOQlFVRkJMRVZCUVVGQkxFTkJSVnBRTEVsQlFVRkJMRU5CUVV0VExGTkJRVUZCTEVOQlFWa3NTVUZCU1ZBc1ZVRkJRVUVzUTBGQlR5eERRVUZGUXl4SlFVRkJRU3hEUVVGTlNDeEpRVUZCUVN4RFFVRkxWU3hOUVVGQlFTeERRVUZSVEN4SlFVRkJRU3hEUVVGTlRDeEpRVUZCUVN4RFFVRkxTU3hOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVNMVJFb3NTVUZCUVVFc1EwRkJTMU1zVTBGQlFVRXNRMEZCVlVZc1UwRkJRVUVzUlVGQlFVRXNRMEZGWmxBc1NVRkJRVUVzUTBGQlMxY3NUVUZCUVVFc1EwRkJVeXhKUVVGSlZDeFZRVUZCUVN4RFFVRlBMRU5CUVVWRExFbEJRVUZCTEVOQlFVMUlMRWxCUVVGQkxFTkJRVXRWTEUxQlFVRkJMRU5CUVZGTUxFbEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRjRVJNTEVsQlFVRkJMRU5CUVV0WExFMUJRVUZCTEVOQlFVOUtMRk5CUVVGQkxFVkJRVUZCTEVOQlJWcFFMRWxCUVVGQkxFTkJRVXRaTEVWQlFVRkJMRU5CUVV0YUxFbEJRVUZCTEVOQlFVdFpMRVZCUVVGQkxFVkJRVTBzUlVGQlFTeERRVWQ2UW1oQ0xGVkJRVUZCTEVOQlFWZHBRaXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTndRaXhKUVVGSlF5eE5RVUZCUVN4RFFVRlRSQ3hWUVVGQlFTeFpRVUZ6UWxnc1ZVRkJRVUVzUTBGQlUxY3NWVUZCUVVFc1EwRkJZV0lzU1VGQlFVRXNRMEZCUzJVc1lVRkJRVUVzUTBGQlkwWXNWVUZCUVVFc1EwRkJRVUVzUTBGRmVFVkhMRTlCUVVGQkxFTkJRVlZrTEZWQlFVRkJMRU5CUVU5bExGRkJRVUZCTEVOQlFWTnFRaXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGWFlTeE5RVUZCUVN4RFFVRkJRU3hEUVVNNVEwVXNUMEZCUVVFc1EwRkJVVVVzUjBGQlFVRXNRMEZCU1d4Q0xFbEJRVUZCTEVOQlFVdFJMRTFCUVVGQkxFTkJRVUZCTEVOQlEycENVU3hQUVVGQlFTeERRVUZSUnl4SFFVRkJRU3hEUVVGSlF5eFBRVUZCUVN4RFFVRkJRU3hEUVVWYUxFbEJRVWxETEU5QlFVRkJMRU5CUVZWdVFpeFZRVUZCUVN4RFFVRlBaU3hSUVVGQlFTeERRVUZUYWtJc1NVRkJRVUVzUTBGQlMxTXNVMEZCUVVFc1EwRkJWMDhzVDBGQlFVRXNRMEZCUVVFc1EwRkpPVU1zVDBGSVFVc3NUMEZCUVVFc1EwRkJVVWdzUjBGQlFVRXNRMEZCU1d4Q0xFbEJRVUZCTEVOQlFVdFhMRTFCUVVGQkxFTkJRVUZCTEVOQlEycENWU3hQUVVGQlFTeERRVUZSUml4SFFVRkJRU3hEUVVGSlF5eFBRVUZCUVN4RFFVRkJRU3hEUVVWTUxFTkJRVVZPTEUxQlFVRkJMRU5CUVVGQkxFMUJRVUZCTEVOQlFWRkZMRTlCUVVGQkxFTkJRVUZCTEU5QlFVRkJMRU5CUVZOTExFOUJRVUZCTEVOQlFVRkJMRTlCUVVGQkxFTkJRVUZCTEVOQlJ6bENla0lzVTBGQlFVRXNRMEZCVlRCQ0xGZEJRVUZCTEVOQlFXTXNSVUZCUVN4RFFVRkJMRVZCU1hoQ01VSXNUMEZCUVVFc1EwRkJVV2xDTEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGQkxFTkJRMnBDTEU5QlFVOWlMRWxCUVVGQkxFTkJRVXQxUWl4VlFVRkJRU3hEUVVGWFZpeFZRVUZCUVN4RFFVRkJRU3hEUVVGWlVTeFBRVUZCUVN4RFFVZDJRM3BDTEdkQ1FVRkJRU3hEUVVGcFFtdENMRTFCUVVGQkxFTkJRVk1zU1VGQlNWb3NWVUZCUVVFc1EwRkJWVzFDTEU5QlFVRkJMRU5CUVZVc1NVRkJTVzVDTEZWQlFVRkJMRU5CUVZWelFpeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVOeVJTeEpRVUZKUXl4VFFVRkJRU3hEUVVGWmRrSXNWVUZCUVVFc1EwRkJUMmxDTEVkQlFVRkJMRU5CUVVsRkxFOUJRVUZCTEVOQlFWTkxMRkZCUVVGQkxFTkJRVUZCTEVOQlEzQkRSQ3hUUVVGQlFTeERRVUZWVWl4UlFVRkJRU3hEUVVGVFR5eE5RVUZCUVN4RFFVRkJRU3hEUVVOdVFrTXNVMEZCUVVFc1EwRkJWVklzVVVGQlFVRXNRMEZCVTJwQ0xFbEJRVUZCTEVOQlFVdFpMRVZCUVVGQkxFTkJRVUZCTEVOQlJYaENMRWxCUVVsbExHZENRVUZCUVN4RFFVRnRRbnBDTEZWQlFVRkJMRU5CUVU4d1FpeFRRVUZCUVN4RFFVRlZaQ3hOUVVGQlFTeERRVUZCUVN4RFFVZDRReXhOUVVGUExFTkJRVVZsTEUxQlFVRkJMRU5CUmtrelFpeFZRVUZCUVN4RFFVRlBaU3hSUVVGQlFTeERRVUZUVVN4VFFVRkJRU3hEUVVGWFJTeG5Ra0ZCUVVFc1EwRkJRVUVzUTBGRmRrSkdMRk5CUVVGQkxFTkJRVUZCTEZOQlFVRkJMRU5CUVVGQkxFTkJSM0pDTjBJc1lVRkJRVUVzUTBGQlkydENMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZKWjBJc1QwRkJRVUVzUTBGQlZTeEpRVUZKTlVJc1ZVRkJRVUVzUTBGQlFVRXNRMEZEY2tNc1IwRkJRU3hEUVVGSll5eFBRVUZCUVN4RFFVRkZRU3hQUVVGQlFTeERRVUZQU3l4UFFVRkJRU3hEUVVGRlFTeFBRVUZCUVN4RFFVRkJRU3hEUVVGWmNrSXNTVUZCUVVFc1EwRkJTM1ZDTEZWQlFVRkJMRU5CUVZkVUxFMUJRVUZCTEVOQlFVRkJMRU5CUlhaRGFVSXNVVUZCUVVFc1EwRkJWemRDTEZWQlFVRkJMRU5CUVU4NFFpeFJRVUZCUVN4RFFVRlRSaXhQUVVGQlFTeERRVUZUVkN4UFFVRkJRU3hEUVVGQlFTeERRVU53UTFrc1UwRkJRVUVzUTBGQldXcERMRWxCUVVGQkxFTkJRVXRyUXl4blFrRkJRVUVzUTBGQmFVSnNRaXhQUVVGQlFTeERRVUZUU3l4UFFVRkJRU3hEUVVGVFZTeFJRVUZCUVN4RFFVRkJRU3hEUVVONFJDOUNMRWxCUVVGQkxFTkJRVXRUTEZOQlFVRkJMRU5CUVZWVExFZEJRVUZCTEVOQlFVbGxMRk5CUVVGQkxFTkJRVlZLTEUxQlFVRkJMRU5CUVVGQkxFTkJRemRDTjBJc1NVRkJRVUVzUTBGQlMxY3NUVUZCUVVFc1EwRkJUMDhzUjBGQlFVRXNRMEZCU1dVc1UwRkJRVUVzUTBGQlZWSXNVMEZCUVVFc1EwRkJRVUVzUTBGRk1VSXNTVUZCU1ZVc2JVSkJRVUZCTEVOQlFYTkNha01zVlVGQlFVRXNRMEZCVHpCQ0xGTkJRVUZCTEVOQlFWVTFRaXhKUVVGQlFTeERRVUZMVXl4VFFVRkJRU3hEUVVGQlFTeERRVU0xUXpKQ0xGRkJRVUZCTEVOQlFWZHNReXhWUVVGQlFTeERRVUZQWlN4UlFVRkJRU3hEUVVGVGEwSXNiVUpCUVVGQkxFTkJRWEZDU2l4UlFVRkJRU3hEUVVGQlFTeERRVU5vUkUwc1UwRkJRVUVzUTBGQldYSkRMRWxCUVVGQkxFTkJRVXRyUXl4blFrRkJRVUVzUTBGQmFVSndRaXhOUVVGQlFTeERRVUZSUlN4UFFVRkJRU3hEUVVGVGIwSXNVVUZCUVVFc1EwRkJRVUVzUTBGRGRrUndReXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVmFVSXNSMEZCUVVFc1EwRkJTVzFDTEZOQlFVRkJMRU5CUVZWU0xFMUJRVUZCTEVOQlFVRkJMRU5CUXpkQ04wSXNTVUZCUVVFc1EwRkJTMUVzVFVGQlFVRXNRMEZCVDFVc1IwRkJRVUVzUTBGQlNXMUNMRk5CUVVGQkxFTkJRVlZhTEZOQlFVRkJMRU5CUVVGQkxFTkJSemxDTjBJc1MwRkJRVUVzUTBGQlRVTXNUVUZCUVVFc1EwRkJVeXhEUVVGRmVVTXNXVUZCUVVFc1EwRkJZeXhGUVVGQkxFTkJRVWxETEUxQlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGSFF5eExRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRMnBFTEVsQlFVa3pRaXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCU1ZNc1YwRkJRVUVzUTBGQll5eEZRVUZCTEVOQlEyNURMRWxCUVVzc1NVRkJTVzFDTEVsQlFVRkJMRWxCUVZFMVF5eE5RVUZCUVN4RFFVRlBlVU1zV1VGQlFVRXNRMEZEY0VKNlFpeFZRVUZCUVN4RFFVRlhOa0lzU1VGQlFVRXNRMEZCUzBRc1NVRkJRVUVzUTBGQlN6TkNMRTFCUVVGQkxFTkJRVUZCTEVOQlEzSkNVU3hYUVVGQlFTeERRVUZaYjBJc1NVRkJRVUVzUTBGQlMwUXNTVUZCUVVFc1EwRkJTMWdzVDBGQlFVRXNRMEZCUVVFc1EwRkhNVUlzU1VGQlNXaENMRTFCUVVGQkxFTkJRVk4wUWl4WlFVRkJRU3hEUVVGaGJVUXNTVUZCUVVFc1EwRkJTemxDTEZWQlFVRkJMRU5CUVZrclFpeExRVUZCUVN4RlFVTm9RelZETEVsQlFVRkJMRU5CUVV0bExHRkJRVUZCTEVOQlFXTTJRaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjeFFtUXNUMEZCUVVFc1EwRkJWWFJETEZsQlFVRkJMRU5CUVdGdFJDeEpRVUZCUVN4RFFVRkxja0lzVjBGQlFVRXNRMEZCWVhOQ0xFdEJRVUZCTEVWQlEyeEROVU1zU1VGQlFVRXNRMEZCU3paRExHTkJRVUZCTEVOQlFXVkVMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpOQ1JTeEhRVUZCUVN4RFFVRk5MRWxCUVVFc1EwRkRUaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpiRVFzVFVGQlFVRXNRMEZCVHpCRExFMUJRVUZCTEVOQlFWRlJMRU5CUVVGQkxFVkJRVUZCTEVOQlF5OUNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNTVUZCUzJ4RExFMUJRVUZCTEVOQlExWmtMRWxCUVVGQkxFTkJRVXRwUkN4aFFVRkJRU3hEUVVGamJrTXNUVUZCUVVFc1EwRkJUMnRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWxzUWl4UFFVRkJRU3hEUVVGUmEwSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxiRVFzUjBGQlNURkVMRkZCUVVGQkxFTkJRVXMwUkN4TFFVRkJRU3hEUVVGTmNrUXNUVUZCUVVFc1EwRkJUekpETEV0QlFVRkJMRU5CUVVGQkxFTkJRMnhDTEVsQlFVc3NTVUZCU1Zjc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWwwUkN4TlFVRkJRU3hEUVVGUE1rTXNTMEZCUVVFc1EwRkJUMWNzUTBGQlFVRXNSVUZCUVVFc1EwRkRPVUpNTEVkQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEV0QlIwcEJMRWRCUVVGQkxFVkJRVUZCTEVOQlNWSnNSQ3hsUVVGQlFTeERRVUZuUW1kQ0xFVkJRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRkJMRU5CUTJwQ1dpeEpRVUZCUVN4RFFVRkxXU3hGUVVGQlFTeERRVUZMUVN4RlFVRkJRU3hEUVVka2FFSXNZVUZCUVVFc1EwRkJZMmxDTEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGQkxFTkJRM1pDTEVsQlFVbERMRTFCUVVGQkxFTkJRVk5hTEZWQlFVRkJMRU5CUVU5clJDeFRRVUZCUVN4RFFVRlZReXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVmVrTXNWVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITjBNc1QwRkdRVU1zVFVGQlFVRXNRMEZCVDBjc1VVRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVRXNRMEZEYUVKSUxFMUJRVUZCTEVOQlFVOUpMRWRCUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZCTEVOQlEwcEtMRTFCUVVGQkxFTkJSMWhzUWl4alFVRkJRU3hEUVVGbE1FSXNWMEZCUVVFc1EwRkJZeXhGUVVGQkxFTkJRVUVzUTBGRGVrSXNTVUZCU1ZFc1QwRkJRVUVzUTBGQlZUVkNMRlZCUVVGQkxFTkJRVTlyUkN4VFFVRkJRU3hEUVVGVk9VSXNWMEZCUVVFc1EwRkJRVUVzUTBGSEwwSXNUMEZHUVZFc1QwRkJRVUVzUTBGQlVWb3NSMEZCUVVFc1EwRkJTU3hIUVVGQkxFTkJRVUVzUTBGRFdsa3NUMEZCUVVFc1EwRkJVV0lzVVVGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVVFc1EwRkRWbUVzVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCIvKiByZW1vdmVkOiBjb25zdCBfJEZ1bmNfND1yZXF1aXJlKFwiLi9GdW5jXCIpOyAqLzt2YXIgXyRQZXJpb2RfOD1jbGFzcyBleHRlbmRzIF8kRnVuY180e2NvbnN0cnVjdG9yKCl7c3VwZXIoKX10cmltTW9udGhBcnJheSgpe2xldCBtb250aHM9W107Zm9yKGxldCBpPTA7aTx0aGlzLm1vbnRocy5sZW5ndGg7aSsrKW1vbnRocy5wdXNoKHRoaXMubW9udGhzW2ldLnNsaWNlKDAsMykpO3JldHVybiBtb250aHN9Z2V0WWVhcnMoY291bnQ9NSl7bGV0IHllYXI9KG5ldyBEYXRlKS5nZXRZZWFyKCkrMTkwMCxmZXRjaGVkPVtdO2ZvcihsZXQgaT0wO2k8Y291bnQ7aSsrKWZldGNoZWQucHVzaChgJHt5ZWFyLTF9LSR7eWVhcn1gKSx5ZWFyKys7cmV0dXJuIGZldGNoZWR9aXNUaW1lVmFsaWQodGltZSl7aWYoMj09KHRpbWU9dGltZS5zcGxpdChcIjpcIikpLmxlbmd0aHx8Mz09dGltZS5sZW5ndGgpe3ZhciBob3VyPW5ldyBOdW1iZXIodGltZVswXSksbWludXRlcz1uZXcgTnVtYmVyKHRpbWVbMV0pLHNlY29uZHM9MDtpZigzPT10aW1lLmxlbmd0aCl7aWYoc2Vjb25kcz1uZXcgTnVtYmVyKHRpbWVbMl0pLGhvdXI+MjN8fGhvdXI8MHx8bWludXRlcz41OXx8bWludXRlczwwfHxzZWNvbmRzPjU5fHxzZWNvbmRzPDApcmV0dXJuITF9ZWxzZSBpZihob3VyPjIzfHxob3VyPDB8fG1pbnV0ZXM+NTl8fG1pbnV0ZXM8MClyZXR1cm4hMTtyZXR1cm4gNjAqaG91cio2MCs2MCptaW51dGVzK3NlY29uZHN9cmV0dXJuITF9dGltZSh0aW1lKXtsZXQgZGF0ZT10aGlzLmlzc2V0KHRpbWUpP25ldyBEYXRlKE1hdGguZmxvb3IodGltZSkpOm5ldyBEYXRlLGhvdXI9ZGF0ZS5nZXRIb3VycygpLnRvU3RyaW5nKCksbWludXRlcz1kYXRlLmdldE1pbnV0ZXMoKS50b1N0cmluZygpLHNlY29uZHM9ZGF0ZS5nZXRTZWNvbmRzKCkudG9TdHJpbmcoKTtyZXR1cm5gJHtob3VyPWhvdXIubGVuZ3RoPjE/aG91cjpgMCR7aG91cn1gfToke21pbnV0ZXM9bWludXRlcy5sZW5ndGg+MT9taW51dGVzOmAwJHttaW51dGVzfWB9OiR7c2Vjb25kcz1zZWNvbmRzLmxlbmd0aD4xP3NlY29uZHM6YDAke3NlY29uZHN9YH1gfWRhdGUodGltZSl7bGV0IGRhdGU9dGhpcy5pc3NldCh0aW1lKT9uZXcgRGF0ZShNYXRoLmZsb29yKHRpbWUpKTpuZXcgRGF0ZSxkYXk9ZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKSxtb250aD0oZGF0ZS5nZXRNb250aCgpKzEpLnRvU3RyaW5nKCkseWVhcj1kYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtyZXR1cm4gZGF5PWRheS5sZW5ndGg+MT9kYXk6YDAke2RheX1gLGAke3llYXJ9LSR7bW9udGg9bW9udGgubGVuZ3RoPjE/bW9udGg6YDAke21vbnRofWB9LSR7ZGF5fWB9dGltZV9kYXRlKHRpbWUpe3JldHVybmAke3RoaXMudGltZSh0aW1lKX0sICR7dGhpcy5kYXRlKHRpbWUpfWB9dGltZVRvZGF5KCl7bGV0IGRhdGU9bmV3IERhdGUsaG91cj1kYXRlLmdldEhvdXJzKCksbWludXRlcz1kYXRlLmdldE1pbnV0ZXMoKSxzZWNvbmRzPWRhdGUuZ2V0U2Vjb25kcygpLHRpbWU9dGhpcy5pc1RpbWVWYWxpZChgJHtob3VyfToke21pbnV0ZXN9OiR7c2Vjb25kc31gKTtyZXR1cm4gdGltZXx8LTF9aXNEYXRlVmFsaWQodmFsdWUpe3JldHVybiEhKHRoaXMuaXNEYXRlKHZhbHVlKSYmdGhpcy5pc1llYXJWYWxpZCh2YWx1ZSkmJnRoaXMuaXNNb250aFZhbGlkKHZhbHVlKSYmdGhpcy5pc0RheVZhbGlkKHZhbHVlKSl9aXNEYXlWYWxpZCh2YWx1ZSl7Zm9yKHZhciB2X2RheT1cIlwiLGk9MDtpPDI7aSsrKXZfZGF5Kz12YWx1ZVtpKzhdO3ZhciBsaW1pdD0wLG1vbnRoPXRoaXMuaXNNb250aFZhbGlkKHZhbHVlKTtyZXR1cm5cIjAxXCI9PW1vbnRoP2xpbWl0PTMxOlwiMDJcIj09bW9udGg/bGltaXQ9dGhpcy5pc0xlYXBZZWFyKHRoaXMuaXNZZWFyVmFsaWQodmFsdWUpKT8yOToyODpcIjAzXCI9PW1vbnRoP2xpbWl0PTMxOlwiMDRcIj09bW9udGg/bGltaXQ9MzA6XCIwNVwiPT1tb250aD9saW1pdD0zMTpcIjA2XCI9PW1vbnRoP2xpbWl0PTMwOlwiMDdcIj09bW9udGg/bGltaXQ9MzE6XCIwOFwiPT1tb250aD9saW1pdD0zMTpcIjA5XCI9PW1vbnRoP2xpbWl0PTMwOlwiMTBcIj09bW9udGg/bGltaXQ9MzE6XCIxMVwiPT1tb250aD9saW1pdD0zMDpcIjEyXCI9PW1vbnRoJiYobGltaXQ9MzEpLGxpbWl0PHZfZGF5PzA6dl9kYXl9aXNEYXRlKHZhbHVlKXtpZigxMCE9dmFsdWUubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgeCBpbiB2YWx1ZSlpZighdGhpcy5pc0RpZ2l0KHZhbHVlW3hdKSl7aWYoND09eHx8Nz09eCl7aWYoXCItXCI9PXZhbHVlW3hdKWNvbnRpbnVlO3JldHVybiExfXJldHVybiExfXJldHVybiEwfWlzTW9udGhWYWxpZCh2YWx1ZSl7Zm9yKHZhciB2X21vbnRoPVwiXCIsaT0wO2k8MjtpKyspdl9tb250aCs9dmFsdWVbaSs1XTtyZXR1cm4gdl9tb250aD4xMnx8dl9tb250aDwxPzA6dl9tb250aH1pc1llYXJWYWxpZCh2YWx1ZSl7Zm9yKHZhciB5ZWFyPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoXCJZXCIpLHZfeWVhcj1cIlwiLGk9MDtpPDQ7aSsrKXZfeWVhcis9dmFsdWVbaSswXTtyZXR1cm4gdl95ZWFyPnllYXI/MDp2X3llYXJ9Z2V0WWVhcih2YWx1ZSl7Zm9yKHZhciB2X3llYXI9XCJcIixpPTA7aTw0O2krKyl2X3llYXIrPXZhbHVlW2krMF07cmV0dXJuIHZfeWVhcn1pc0xlYXBZZWFyKHZhbHVlKXtyZXR1cm4gdmFsdWUlND09MCYmKHZhbHVlJTEwMCE9MHx8dmFsdWUlNDAwPT0wKX1kYXlzSW5Nb250aChtb250aCx5ZWFyKXt2YXIgZGF5cz0wO3JldHVyblwiMDFcIj09bW9udGg/ZGF5cz0zMTpcIjAyXCI9PW1vbnRoP2RheXM9dGhpcy5pc0xlYXBZZWFyKHllYXIpPzI5OjI4OlwiMDNcIj09bW9udGg/ZGF5cz0zMTpcIjA0XCI9PW1vbnRoP2RheXM9MzA6XCIwNVwiPT1tb250aD9kYXlzPTMxOlwiMDZcIj09bW9udGg/ZGF5cz0zMDpcIjA3XCI9PW1vbnRoP2RheXM9MzE6XCIwOFwiPT1tb250aD9kYXlzPTMxOlwiMDlcIj09bW9udGg/ZGF5cz0zMDpcIjEwXCI9PW1vbnRoP2RheXM9MzE6XCIxMVwiPT1tb250aD9kYXlzPTMwOlwiMTJcIj09bW9udGgmJihkYXlzPTMxKSxkYXlzfWRhdGVWYWx1ZShkYXRlKXtmb3IodmFyIHllYXI9MzY1KnRoaXMuZ2V0WWVhcihkYXRlKSxtb250aD0wLGk9MTtpPHRoaXMuaXNNb250aFZhbGlkKGRhdGUpO2krKyltb250aD10aGlzLmRheXNJbk1vbnRoKGksdGhpcy5nZXRZZWFyKGRhdGUpKS8xK21vbnRoLzE7cmV0dXJuIHllYXIvMSttb250aC8xK3RoaXMuaXNEYXlWYWxpZChkYXRlKS8xfXRvZGF5KCl7dmFyIHRvZGF5PW5ldyBEYXRlLG1vbnRoPXRvZGF5LmdldE1vbnRoKCkvMSsxO3JldHVybiAyIT1tb250aC5sZW5ndGgmJihtb250aD1cIjBcIittb250aCksdG9kYXk9dG9kYXkuZ2V0RnVsbFllYXIoKStcIi1cIittb250aCtcIi1cIit0b2RheS5nZXREYXRlKCl9Z2V0RGF0ZU9iamVjdCh2YWx1ZSl7bGV0IGRheXM9TWF0aC5mbG9vcih2YWx1ZS90aGlzLnNlY29uZHNJbkRheXMoMSkpO3ZhbHVlLT10aGlzLnNlY29uZHNJbkRheXMoZGF5cyk7bGV0IGhvdXJzPU1hdGguZmxvb3IodmFsdWUvdGhpcy5zZWNvbmRzSW5Ib3VycygxKSk7dmFsdWUtPXRoaXMuc2Vjb25kc0luSG91cnMoaG91cnMpO2xldCBtaW51dGVzPU1hdGguZmxvb3IodmFsdWUvdGhpcy5zZWNvbmRzSW5NaW51dGVzKDEpKTtyZXR1cm57ZGF5czpkYXlzLGhvdXJzOmhvdXJzLG1pbnV0ZXM6bWludXRlcyxzZWNvbmRzOnZhbHVlLT10aGlzLnNlY29uZHNJbk1pbnV0ZXMobWludXRlcyl9fWRhdGVXaXRoVG9kYXkoZGF0ZSl7dmFyIHRvZGF5PU1hdGguZmxvb3IodGhpcy5kYXRlVmFsdWUodGhpcy50b2RheSgpKSk7bGV0IGRhdGVWYWx1ZT1NYXRoLmZsb29yKHRoaXMuZGF0ZVZhbHVlKGRhdGUpKTt2YXIgdmFsdWU9e2RpZmY6ZGF0ZVZhbHVlLXRvZGF5LHdoZW46XCJcIn07cmV0dXJuIHZhbHVlLndoZW49ZGF0ZVZhbHVlPnRvZGF5P1wiZnV0dXJlXCI6ZGF0ZVZhbHVlPT10b2RheT9cInRvZGF5XCI6XCJwYXN0XCIsdmFsdWV9ZGF0ZVN0cmluZyhkYXRlKXt2YXIgeWVhcj1uZXcgTnVtYmVyKHRoaXMuZ2V0WWVhcihkYXRlKSksbW9udGg9bmV3IE51bWJlcih0aGlzLmlzTW9udGhWYWxpZChkYXRlKSk7cmV0dXJuIG5ldyBOdW1iZXIodGhpcy5pc0RheVZhbGlkKGRhdGUpKStcIiBcIit0aGlzLm1vbnRoc1ttb250aC0xXStcIiwgXCIreWVhcn1zZWNvbmRzSW5EYXlzKGRheXMpe3JldHVybiBNYXRoLmZsb29yKDI0KmRheXMqNjAqNjApfXNlY29uZHNJbkhvdXJzKGhvdXJzKXtyZXR1cm4gTWF0aC5mbG9vcig2MCpob3Vycyo2MCl9c2Vjb25kc0luTWludXRlcyhtaW51dGVzKXtyZXR1cm4gTWF0aC5mbG9vcig2MCptaW51dGVzKX1zZWNvbmRzVGlsbERhdGUoZGF0ZSl7cmV0dXJuIHRoaXMuc2Vjb25kc0luRGF5cyhNYXRoLmZsb29yKHRoaXMuZGF0ZVZhbHVlKGRhdGUpKSl9c2Vjb25kc1RpbGxUb2RheSgpe3JldHVybiB0aGlzLnNlY29uZHNUaWxsRGF0ZSh0aGlzLnRvZGF5KCkpfXNlY29uZHNUaWxsTm93KCl7cmV0dXJuIHRoaXMuc2Vjb25kc1RpbGxEYXRlKHRoaXMudG9kYXkoKSkrdGhpcy50aW1lVG9kYXkoKX1zZWNvbmRzVGlsbE1vbWVudChtb21lbnQpe3JldHVybiB0aGlzLnNlY29uZHNUaWxsRGF0ZSh0aGlzLmRhdGUobW9tZW50KSkrdGhpcy5pc1RpbWVWYWxpZCh0aGlzLnRpbWUobW9tZW50KSl9bG9nKC4uLmRhdGEpe2xldCB0aW1lPWBbJHt0aGlzLnRpbWUoKX1dOmA7Y29uc29sZS5sb2codGltZSwuLi5kYXRhKX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbEJsY21sdlpDNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVJuVnVZeUlzSWx0dlltcGxZM1FnVDJKcVpXTjBYU0lzSW5OMWNHVnlJaXdpYlc5dWRHaHpJaXdpYVNJc0luUm9hWE1pTENKc1pXNW5kR2dpTENKd2RYTm9JaXdpYzJ4cFkyVWlMQ0pqYjNWdWRDSXNJbmxsWVhJaUxDSkVZWFJsSWl3aVoyVjBXV1ZoY2lJc0ltWmxkR05vWldRaUxDSjBhVzFsSWl3aWMzQnNhWFFpTENKb2IzVnlJaXdpVG5WdFltVnlJaXdpYldsdWRYUmxjeUlzSW5ObFkyOXVaSE1pTENKa1lYUmxJaXdpYVhOelpYUWlMQ0pOWVhSb0lpd2labXh2YjNJaUxDSm5aWFJJYjNWeWN5SXNJblJ2VTNSeWFXNW5JaXdpWjJWMFRXbHVkWFJsY3lJc0ltZGxkRk5sWTI5dVpITWlMQ0prWVhraUxDSm5aWFJFWVhSbElpd2liVzl1ZEdnaUxDSm5aWFJOYjI1MGFDSXNJbWRsZEVaMWJHeFpaV0Z5SWl3aWFYTlVhVzFsVm1Gc2FXUWlMQ0oyWVd4MVpTSXNJbWx6UkdGMFpTSXNJbWx6V1dWaGNsWmhiR2xrSWl3aWFYTk5iMjUwYUZaaGJHbGtJaXdpYVhORVlYbFdZV3hwWkNJc0luWmZaR0Y1SWl3aWJHbHRhWFFpTENKcGMweGxZWEJaWldGeUlpd2llQ0lzSW1selJHbG5hWFFpTENKMlgyMXZiblJvSWl3aWRsOTVaV0Z5SWl3aVpHRjVjeUlzSW1SaGVYTkpiazF2Ym5Sb0lpd2lkRzlrWVhraUxDSnpaV052Ym1SelNXNUVZWGx6SWl3aWFHOTFjbk1pTENKelpXTnZibVJ6U1c1SWIzVnljeUlzSW5ObFkyOXVaSE5KYmsxcGJuVjBaWE1pTENKa1lYUmxWbUZzZFdVaUxDSmthV1ptSWl3aWQyaGxiaUlzSW5ObFkyOXVaSE5VYVd4c1JHRjBaU0lzSW5ScGJXVlViMlJoZVNJc0ltMXZiV1Z1ZENJc0ltUmhkR0VpTENKamIyNXpiMnhsSWl3aWJHOW5JbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hwUkVGNVZrRkJMR05CUVU5RExFTkJkbFpRTEdOQlFYRkNReXhSUVVGQlFTeERRVVZxUWtNc1YwRkJRVUVzUlVGQlFVRXNRMEZEU1VNc1MwRkJRVUVzUlVGQlFVRXNRMEZIU2tRc1kwRkJRVUVzUlVGQlFVRXNRMEZEU1N4SlFVRkpSU3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKUXl4SlFVRkJRU3hEUVVGTFJpeE5RVUZCUVN4RFFVRlBSeXhOUVVGQlFTeERRVUZSUml4RFFVRkJRU3hGUVVGQlFTeERRVU53UTBRc1RVRkJRVUVzUTBGQlQwa3NTVUZCUVVFc1EwRkJTMFlzU1VGQlFVRXNRMEZCUzBZc1RVRkJRVUVzUTBGQlQwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwa3NTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGZUVNc1QwRkJUMHdzVFVGQlFVRXNRMEZIV0VZc1VVRkJRVUVzUTBGQlUxRXNTMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGRFlpeEpRVUZKUXl4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVsQlFVbERMRWxCUVVGQkxFVkJRVTlETEU5QlFVRkJMRVZCUVVGQkxFTkJRVmtzU1VGQlFTeERRVU01UWtNc1QwRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlEyUXNTVUZCU3l4SlFVRkpWQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVc3NTMEZCUVVFc1EwRkJUMHdzUTBGQlFVRXNSVUZCUVVFc1EwRkRka0pUTEU5QlFVRkJMRU5CUVZGT0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVkZITEVsQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGQkxFTkJRVUVzUlVGQlMwRXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkROVUpCTEVsQlFVRkJMRVZCUVVGQkxFTkJSVW9zVDBGQlQwY3NUMEZCUVVFc1EwRkhXRm9zVjBGQlFVRXNRMEZCV1dFc1NVRkJRVUVzUTBGQlFVRXNRMEZGVWl4SFFVRnRRaXhEUVVGQkxFVkJRVUVzUTBGRWJrSkJMRWxCUVVGQkxFTkJRVTlCTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRVZCUTFSVUxFMUJRVUZCTEVWQlFUaENMRU5CUVVFc1JVRkJabEVzU1VGQlFVRXNRMEZCUzFJc1RVRkJRVUVzUTBGQllTeERRVU4wUXl4SlFVRkpWU3hKUVVGQlFTeERRVUZQTEVsQlFVbERMRTFCUVVGQkxFTkJRVTlJTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGRrSkpMRTlCUVVGQkxFTkJRVlVzU1VGQlNVUXNUVUZCUVVFc1EwRkJUMGdzU1VGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNeFFrc3NUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJSMlFzUjBGQmJVSXNRMEZCUVN4RlFVRm1UQ3hKUVVGQlFTeERRVUZMVWl4TlFVRkJRU3hEUVVGQlFTeERRVVZNTEVkQlJFRmhMRTlCUVVGQkxFTkJRVlVzU1VGQlNVWXNUVUZCUVVFc1EwRkJUMGdzU1VGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOMFFrVXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFVkJRVTFCTEVsQlFVRkJMRU5CUVU4c1EwRkJRU3hGUVVGTFJTeFBRVUZCUVN4RFFVRlZMRVZCUVVFc1JVRkJUVUVzVDBGQlFVRXNRMEZCVlN4RFFVRkJMRVZCUVV0RExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RlFVRk5RU3hQUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZEYkVZc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeExRVWRZTEVkQlFVbElMRWxCUVVGQkxFTkJRVThzUlVGQlFTeEZRVUZOUVN4SlFVRkJRU3hEUVVGUExFTkJRVUVzUlVGQlMwVXNUMEZCUVVFc1EwRkJWU3hGUVVGQkxFVkJRVTFCTEU5QlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVOdVJDeE5RVUZCTEVOQlFVOHNRMEZCUVN4RFFVdG1MRTlCUkc5Q0xFVkJRVUVzUTBGQlVFWXNTVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRV2xDTEVWQlFVRXNRMEZCVmtVc1QwRkJRVUVzUTBGQlowSkRMRTlCUVVGQkxFTkJSM0JFTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUjFoc1FpeEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZCUVN4RFFVTkVMRWxCUVVsTkxFbEJRVUZCTEVOQlFWRm1MRWxCUVVGQkxFTkJRVXRuUWl4TFFVRkJRU3hEUVVGTlVDeEpRVUZCUVN4RFFVRkJRU3hEUVVGVExFbEJRVWxJTEVsQlFVRkJMRU5CUVV0WExFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFVTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWTXNTVUZCU1Vnc1NVRkJRVUVzUTBGRE4wUkxMRWxCUVVGQkxFTkJRVTlKTEVsQlFVRkJMRU5CUVV0SkxGRkJRVUZCTEVWQlFVRkJMRU5CUVZkRExGRkJRVUZCTEVWQlFVRkJMRU5CUTNaQ1VDeFBRVUZCUVN4RFFVRlZSU3hKUVVGQlFTeERRVUZMVFN4VlFVRkJRU3hGUVVGQlFTeERRVUZoUkN4UlFVRkJRU3hGUVVGQlFTeERRVU0xUWs0c1QwRkJRVUVzUTBGQlZVTXNTVUZCUVVFc1EwRkJTMDhzVlVGQlFVRXNSVUZCUVVFc1EwRkJZVVlzVVVGQlFVRXNSVUZCUVVFc1EwRk5hRU1zVFVGQlFTeERRVUZCTEVWQlNrRlVMRWxCUVVGQkxFTkJRVkZCTEVsQlFVRkJMRU5CUVV0V0xFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkxWU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZYUVN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVU4wUTBVc1QwRkJRVUVzUTBGQlYwRXNUMEZCUVVFc1EwRkJVVm9zVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVV0WkxFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXTkJMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlF5OURReXhQUVVGQlFTeERRVUZYUVN4UFFVRkJRU3hEUVVGUllpeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJTMkVzVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCWTBFc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMYmtSc1FpeEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZCUVN4RFFVTkVMRWxCUVVsTkxFbEJRVUZCTEVOQlFWRm1MRWxCUVVGQkxFTkJRVXRuUWl4TFFVRkJRU3hEUVVGTlVDeEpRVUZCUVN4RFFVRkJRU3hEUVVGVExFbEJRVWxJTEVsQlFVRkJMRU5CUVV0WExFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFVTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWTXNTVUZCU1Vnc1NVRkJRVUVzUTBGRE4wUnBRaXhIUVVGQlFTeERRVUZOVWl4SlFVRkJRU3hEUVVGTFV5eFBRVUZCUVN4RlFVRkJRU3hEUVVGVlNpeFJRVUZCUVN4RlFVRkJRU3hEUVVOeVFrc3NTMEZCUVVFc1EwRkJRVUVzUTBGQlUxWXNTVUZCUVVFc1EwRkJTMWNzVVVGQlFVRXNSVUZCUVVFc1EwRkJZU3hEUVVGQkxFVkJRVWRPTEZGQlFVRkJMRVZCUVVGQkxFTkJRemxDWml4SlFVRkJRU3hEUVVGUFZTeEpRVUZCUVN4RFFVRkxXU3hYUVVGQlFTeEZRVUZCUVN4RFFVRmpVQ3hSUVVGQlFTeEZRVUZCUVN4RFFVczVRaXhQUVVoQlJ5eEhRVUZCUVN4RFFVRlBRU3hIUVVGQlFTeERRVUZKZEVJc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVdHpRaXhIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZWUVN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVWQ2UW14Q0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJSbFp2UWl4TFFVRkJRU3hEUVVGVFFTeExRVUZCUVN4RFFVRk5lRUlzVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVV0M1FpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlpRU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVVmtSaXhIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjdlFqTkNMRk5CUVVGQkxFTkJRVlZoTEVsQlFVRkJMRU5CUVVGQkxFTkJRMDRzVFVGQlFTeERRVUZCTEVWQlFWVlVMRWxCUVVGQkxFTkJRVXRUTEVsQlFVRkJMRU5CUVV0QkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFWVlVMRWxCUVVGQkxFTkJRVXRsTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6VkRZaXhUUVVGQlFTeEZRVUZCUVN4RFFVTkpMRWxCUVVsdFFpeEpRVUZCUVN4RFFVRlBMRWxCUVVsVUxFbEJRVUZCTEVOQlExaExMRWxCUVVGQkxFTkJRVTlKTEVsQlFVRkJMRU5CUVV0SkxGRkJRVUZCTEVWQlFVRkJMRU5CUTFwT0xFOUJRVUZCTEVOQlFWVkZMRWxCUVVGQkxFTkJRVXROTEZWQlFVRkJMRVZCUVVGQkxFTkJRMlpRTEU5QlFVRkJMRU5CUVZWRExFbEJRVUZCTEVOQlFVdFBMRlZCUVVGQkxFVkJRVUZCTEVOQlJXWmlMRWxCUVVGQkxFTkJRVTlVTEVsQlFVRkJMRU5CUVVzMFFpeFhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZsYWtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJVVVVzVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlYwTXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRiRVFzVDBGQlQwd3NTVUZCUVVFc1JVRkJRVUVzUTBGQlpTeERRVUZCTEVOQlJ6RkNZaXhYUVVGQlFTeERRVUZaYVVNc1MwRkJRVUVzUTBGQlFVRXNRMEZEVWl4TlFVRkJMRU5CUVVFc1JVRkJTVGRDTEVsQlFVRkJMRU5CUVVzNFFpeE5RVUZCUVN4RFFVRlBSQ3hMUVVGQlFTeERRVUZCUVN4RlFVTlNOMElzU1VGQlFVRXNRMEZCU3l0Q0xGZEJRVUZCTEVOQlFWbEdMRXRCUVVGQkxFTkJRVUZCTEVWQlEySTNRaXhKUVVGQlFTeERRVUZMWjBNc1dVRkJRVUVzUTBGQllVZ3NTMEZCUVVFc1EwRkJRVUVzUlVGRFpEZENMRWxCUVVGQkxFTkJRVXRwUXl4VlFVRkJRU3hEUVVGWFNpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVk53UTJwRExGVkJRVUZCTEVOQlFWZHBReXhMUVVGQlFTeERRVUZCUVN4RFFVVlFMRWxCUkVFc1NVRkJTVXNzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUTBodVF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVWQlFVRkJMRU5CUTI1Q2JVTXNTMEZCUVVFc1JVRkJVMHdzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUlhaQ0xFbEJRVWx2UXl4TFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGRFVsWXNTMEZCUVVFc1EwRkJVWHBDTEVsQlFVRkJMRU5CUVV0blF5eFpRVUZCUVN4RFFVRmhTQ3hMUVVGQlFTeERRVUZCUVN4RFFXZERPVUlzVFVFNVFtRXNTVUZCUVN4RlFVRlVTaXhMUVVGQlFTeERRVU5CVlN4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGRFVTeEpRVUZCTEVWQlFWUldMRXRCUVVGQkxFTkJSVWhWTEV0QlFVRkJMRU5CUkVGdVF5eEpRVUZCUVN4RFFVRkxiME1zVlVGQlFVRXNRMEZCVjNCRExFbEJRVUZCTEVOQlFVc3JRaXhYUVVGQlFTeERRVUZaUml4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjZRaXhGUVVGQkxFTkJSVUVzUlVGQlFTeERRVVZKTEVsQlFVRXNSVUZCVkVvc1MwRkJRVUVzUTBGRFVGVXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRMUVzU1VGQlFTeEZRVUZVVml4TFFVRkJRU3hEUVVOUVZTeExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkRVU3hKUVVGQkxFVkJRVlJXTEV0QlFVRkJMRU5CUTFCVkxFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVTlJMRWxCUVVFc1JVRkJWRllzUzBGQlFVRXNRMEZEVUZVc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlExRXNTVUZCUVN4RlFVRlVWaXhMUVVGQlFTeERRVU5RVlN4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGRFVTeEpRVUZCTEVWQlFWUldMRXRCUVVGQkxFTkJRMUJWTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVOUkxFbEJRVUVzUlVGQlZGWXNTMEZCUVVFc1EwRkRVRlVzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUTFFc1NVRkJRU3hGUVVGVVZpeExRVUZCUVN4RFFVTlFWU3hMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZEVVN4SlFVRkJMRVZCUVZSV0xFdEJRVUZCTEVOQlExQlZMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVU5STEVsQlFVRXNSVUZCVkZZc1MwRkJRVUVzUjBGRFVGVXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVUVzUTBGSFVrRXNTMEZCUVVFc1EwRkJVVVFzUzBGQlFVRXNRMEZEUkN4RFFVRkJMRU5CUlVwQkxFdEJRVUZCTEVOQlIxaDBReXhOUVVGQlFTeERRVUZQYVVNc1MwRkJRVUVzUTBGQlFVRXNRMEZGU0N4SFFVRlhMRVZCUVVFc1JVRkVSRUVzUzBGQlFVRXNRMEZCVFRWQ0xFMUJRVUZCTEVOQmEwSmFMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJhRUpRTEVsQlFVc3NTVUZCU1c5RExFTkJRVUZCTEVsQlFVdFNMRXRCUVVGQkxFTkJRMVlzUjBGQlFTeERRVUZKTjBJc1NVRkJRVUVzUTBGQlMzTkRMRTlCUVVGQkxFTkJRVkZVTEV0QlFVRkJMRU5CUVUxUkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRWFpDTEVOQlIwa3NSMEZCVXl4RFFVRkJMRVZCUVV4QkxFTkJRVUZCTEVWQlFXVXNRMEZCUVN4RlFVRk1RU3hEUVVGQlFTeERRVUZSTEVOQlEyeENMRWRCUVdkQ0xFZEJRVUVzUlVGQldsSXNTMEZCUVVFc1EwRkJUVkVzUTBGQlFVRXNRMEZCUVVFc1EwRkRUaXhUUVVWQkxFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlIxZ3NUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRlBka0lzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZIV0hwRExGbEJRVUZCTEVOQlFXRnBReXhMUVVGQlFTeERRVUZCUVN4RFFVVlVMRWxCUkVFc1NVRkJTVlVzVDBGQlFVRXNRMEZCVlN4RlFVRkJMRU5CUTB4NFF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVWQlFVRkJMRU5CUTI1Q2QwTXNUMEZCUVVFc1JVRkJWMVlzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUlhwQ0xFOUJRVWwzUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUlVGQlRVRXNUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRMjVDTEVOQlFVRXNRMEZGU2tFc1QwRkJRVUVzUTBGSFdETkRMRmRCUVVGQkxFTkJRVmxwUXl4TFFVRkJRU3hEUVVGQlFTeERRVWRTTEVsQlJrRXNTVUZCU1hoQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVU4c1NVRkJTVU1zU1VGQlFVRXNSVUZCVDNGQ0xGZEJRVUZCTEVOQlFWa3NSMEZCUVN4RFFVRkJMRU5CUXpsQ1lTeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRTbnBETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNSVUZCUVVFc1EwRkRia0o1UXl4TlFVRkJRU3hGUVVGVldDeExRVUZCUVN4RFFVRk5PVUlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkZlRUlzVDBGQlNYbERMRTFCUVVGQkxFTkJRVk51UXl4SlFVRkJRU3hEUVVOR0xFTkJRVUVzUTBGRlNtMURMRTFCUVVGQkxFTkJSMWcxUXl4UFFVRkJRU3hEUVVGUmFVTXNTMEZCUVVFc1EwRkJRVUVzUTBGRlNpeEpRVVJCTEVsQlFVbFhMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVU5LZWtNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGQlFTeERRVU51UW5sRExFMUJRVUZCTEVWQlFWVllMRXRCUVVGQkxFTkJRVTA1UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVVY0UWl4UFFVRlBlVU1zVFVGQlFVRXNRMEZIV0RWRExGVkJRVUZCTEVOQlFWZHBReXhMUVVGQlFTeERRVUZCUVN4RFFVTlFMRTlCUVVsQkxFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RlFVRkxMRU5CUVVFc1IwRkRVa0VzUzBGQlFVRXNRMEZCVVN4SFFVRkJMRVZCUVU4c1EwRkJRU3hGUVVGUFFTeExRVUZCUVN4RFFVRlJMRWRCUVVFc1JVRkJUeXhEUVVGQkxFTkJRVUVzUTBGUmJFUnFReXhYUVVGQlFTeERRVUZaTmtJc1MwRkJRVUVzUTBGQlQzQkNMRWxCUVVGQkxFTkJRVUZCTEVOQlEyWXNTVUZCU1c5RExFbEJRVUZCTEVOQlFVOHNRMEZCUVN4RFFUaENXQ3hOUVRkQ1lTeEpRVUZCTEVWQlFWUm9RaXhMUVVGQlFTeERRVU5CWjBJc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlExTXNTVUZCUVN4RlFVRlVhRUlzUzBGQlFVRXNRMEZGU0dkQ0xFbEJRVUZCTEVOQlJFRjZReXhKUVVGQlFTeERRVUZMYjBNc1ZVRkJRVUVzUTBGQlZ5OUNMRWxCUVVGQkxFTkJRVUZCTEVOQlExUXNSVUZCUVN4RFFVVkJMRVZCUVVFc1EwRkZTeXhKUVVGQkxFVkJRVlJ2UWl4TFFVRkJRU3hEUVVOUVowSXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRMU1zU1VGQlFTeEZRVUZVYUVJc1MwRkJRVUVzUTBGRFVHZENMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVU5UTEVsQlFVRXNSVUZCVkdoQ0xFdEJRVUZCTEVOQlExQm5RaXhKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZEVXl4SlFVRkJMRVZCUVZSb1FpeExRVUZCUVN4RFFVTlFaMElzU1VGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUTFNc1NVRkJRU3hGUVVGVWFFSXNTMEZCUVVFc1EwRkRVR2RDTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVOVExFbEJRVUVzUlVGQlZHaENMRXRCUVVGQkxFTkJRMUJuUWl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGRFV5eEpRVUZCTEVWQlFWUm9RaXhMUVVGQlFTeERRVU5RWjBJc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlExTXNTVUZCUVN4RlFVRlVhRUlzUzBGQlFVRXNRMEZEVUdkQ0xFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVTlRMRWxCUVVFc1JVRkJWR2hDTEV0QlFVRkJMRU5CUTFCblFpeEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkRVeXhKUVVGQkxFVkJRVlJvUWl4TFFVRkJRU3hIUVVOUVowSXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVUVzUTBGRlNrRXNTVUZCUVVFc1EwRkhXRGRETEZOQlFVRkJMRU5CUVZWdFFpeEpRVUZCUVN4RFFVRkJRU3hEUVVsT0xFbEJTRUVzU1VGRFNWWXNTVUZCUVVFc1EwRkJORUlzUjBGQlFTeERRVUZ5UWt3c1NVRkJRVUVzUTBGQlMwOHNUMEZCUVVFc1EwRkJVVkVzU1VGQlFVRXNRMEZCUVVFc1EwRkRjRUpWTEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVOSU1VSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsRExFbEJRVUZCTEVOQlFVdG5ReXhaUVVGQlFTeERRVUZoYWtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCVDJoQ0xFTkJRVUZCTEVWQlFVRkJMRU5CUTNwRE1FSXNTMEZCUVVFc1EwRkJVWHBDTEVsQlFVRkJMRU5CUVVzd1F5eFhRVUZCUVN4RFFVRlpNME1zUTBGQlFVRXNRMEZCUjBNc1NVRkJRVUVzUTBGQlMwOHNUMEZCUVVFc1EwRkJVVkVzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVbFZMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVXRzUlN4UFFVWlRjRUlzU1VGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVUxdlFpeExRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkVjRUo2UWl4SlFVRkJRU3hEUVVGTGFVTXNWVUZCUVVFc1EwRkJWMnhDTEVsQlFVRkJMRU5CUVVGQkxFTkJRMmRDTEVOQlFVRXNRMEZMT1VOdVFpeExRVUZCUVN4RlFVRkJRU3hEUVVOSkxFbEJRVWtyUXl4TFFVRkJRU3hEUVVGUkxFbEJRVWx5UXl4SlFVRkJRU3hEUVVOYWJVSXNTMEZCUVVFc1EwRkJVV3RDTEV0QlFVRkJMRU5CUVUxcVFpeFJRVUZCUVN4RlFVRkJRU3hEUVVGaExFTkJRVUVzUTBGQlNTeERRVUZCTEVOQlMyNURMRTlCU205Q0xFTkJRVUVzUlVGQmFFSkVMRXRCUVVGQkxFTkJRVTE0UWl4TlFVRkJRU3hIUVVOT2QwSXNTMEZCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVTFCTEV0QlFVRkJMRU5CUVVGQkxFTkJSV3hDYTBJc1MwRkJRVUVzUTBGQlUwRXNTMEZCUVVFc1EwRkJUV2hDTEZkQlFVRkJMRVZCUVVGQkxFTkJRV2xDTEVkQlFVRXNRMEZCVFVZc1MwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVMXJRaXhMUVVGQlFTeERRVUZOYmtJc1QwRkJRVUVzUlVGQlFVRXNRMEZKT1VRMVFpeGhRVUZCUVN4RFFVRmphVU1zUzBGQlFVRXNRMEZCUVVFc1EwRkRWaXhKUVVGSldTeEpRVUZCUVN4RFFVRlBlRUlzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRWY3NTMEZCUVVFc1EwRkJVVGRDTEVsQlFVRkJMRU5CUVVzMFF5eGhRVUZCUVN4RFFVRmpMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSV3BFWml4TFFVRkJRU3hGUVVGVE4wSXNTVUZCUVVFc1EwRkJTelJETEdGQlFVRkJMRU5CUVdOSUxFbEJRVUZCTEVOQlFVRkJMRU5CUlRWQ0xFbEJRVWxKTEV0QlFVRkJMRU5CUVZFMVFpeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZOVnl4TFFVRkJRU3hEUVVGUk4wSXNTVUZCUVVFc1EwRkJTemhETEdOQlFVRkJMRU5CUVdVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGJrUnFRaXhMUVVGQlFTeEZRVUZUTjBJc1NVRkJRVUVzUTBGQlN6aERMR05CUVVGQkxFTkJRV1ZFTEV0QlFVRkJMRU5CUVVGQkxFTkJSVGRDTEVsQlFVbG9ReXhQUVVGQlFTeERRVUZWU1N4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5WeXhMUVVGQlFTeERRVUZSTjBJc1NVRkJRVUVzUTBGQlN5dERMR2RDUVVGQlFTeERRVUZwUWl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVV0MlJDeE5RVUZQTEVOQlFVVk9MRWxCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVUxSkxFdEJRVUZCTEVOQlFVRkJMRXRCUVVGQkxFTkJRVTlvUXl4UFFVRkJRU3hEUVVGQlFTeFBRVUZCUVN4RFFVRlRReXhQUVVGQlFTeERRVW92UW1Vc1MwRkJRVUVzUlVGQlV6ZENMRWxCUVVGQkxFTkJRVXNyUXl4blFrRkJRVUVzUTBGQmFVSnNReXhQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVU5dVEycENMR0ZCUVVGQkxFTkJRV050UWl4SlFVRkJRU3hEUVVGQlFTeERRVU5XTEVsQlFVazBRaXhMUVVGQlFTeERRVUZSTVVJc1NVRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJUV3hDTEVsQlFVRkJMRU5CUVV0blJDeFRRVUZCUVN4RFFVRlZhRVFzU1VGQlFVRXNRMEZCU3pKRExFdEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlF6TkRMRWxCUVVsTExGTkJRVUZCTEVOQlFWa3ZRaXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTmJFSXNTVUZCUVVFc1EwRkJTMmRFTEZOQlFVRkJMRU5CUVZWcVF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVV4UXl4SlFVRkpZeXhMUVVGQlFTeERRVUZSTEVOQlFVVnZRaXhKUVVGQlFTeERRVUZQUkN4VFFVRkJRU3hEUVVGWlRDeExRVUZCUVN4RFFVRlJUeXhKUVVGQlFTeERRVUZOTEVWQlFVRXNRMEZCUVN4RFFWVXZReXhQUVZKSmNrSXNTMEZCUVVFc1EwRkJUWEZDTEVsQlFVRkJMRU5CUkU1R0xGTkJRVUZCTEVOQlFWbE1MRXRCUVVGQkxFTkJRME1zVVVGQlFTeERRVVZTU3l4VFFVRkJRU3hGUVVGaFRDeExRVUZCUVN4RFFVTk1MRTlCUVVFc1EwRkhRU3hOUVVGQkxFTkJSVlprTEV0QlFVRkJMRU5CUjFocVF5eFZRVUZCUVN4RFFVRlhiVUlzU1VGQlFVRXNRMEZCUVVFc1EwRkRVQ3hKUVVGSlZpeEpRVUZCUVN4RFFVRlBMRWxCUVVsUExFMUJRVUZCTEVOQlFVOWFMRWxCUVVGQkxFTkJRVXRQTEU5QlFVRkJMRU5CUVZGUkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJReTlDVlN4TFFVRkJRU3hEUVVGUkxFbEJRVWxpTEUxQlFVRkJMRU5CUVU5YUxFbEJRVUZCTEVOQlFVdG5ReXhaUVVGQlFTeERRVUZoYWtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhla01zVDBGR1ZTeEpRVUZKU0N4TlFVRkJRU3hEUVVGUFdpeEpRVUZCUVN4RFFVRkxhVU1zVlVGQlFVRXNRMEZCVjJ4Q0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWGhDTEVkQlFVRXNRMEZCVFdZc1NVRkJRVUVzUTBGQlMwWXNUVUZCUVVFc1EwRkJUekpDTEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGQkxFTkJRVXNzU1VGQlFTeERRVUZQY0VJc1NVRkJRVUVzUTBGSGRrUlVMR0ZCUVVGQkxFTkJRV00yUXl4SlFVRkJRU3hEUVVGQlFTeERRVVZXTEU5QlJGbDRRaXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGaExFVkJRVUVzUTBGQlVIVkNMRWxCUVVGQkxFTkJRVmtzUlVGQlFTeERRVUZMTEVWQlFVRXNRMEZCUVN4RFFVazFRemRETEdOQlFVRkJMRU5CUVdWcFJDeExRVUZCUVN4RFFVRkJRU3hEUVVOWUxFOUJRVTgxUWl4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRmpMRVZCUVVFc1EwRkJVakpDTEV0QlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGQkxFTkJSMjVEYWtRc1owSkJRVUZCTEVOQlFXbENhVUlzVDBGQlFVRXNRMEZCUVVFc1EwRkRZaXhQUVVGUFNTeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZuUWl4RlFVRkJMRU5CUVZaTUxFOUJRVUZCTEVOQlFVRkJMRU5CUjNSQ2FrSXNaVUZCUVVFc1EwRkJaMEp0UWl4SlFVRkJRU3hEUVVGQlFTeERRVU5hTEU5QlFVOW1MRWxCUVVGQkxFTkJRVXMwUXl4aFFVRkJRU3hEUVVGak0wSXNTVUZCUVVFc1EwRkJTME1zUzBGQlFVRXNRMEZCVFd4Q0xFbEJRVUZCTEVOQlFVdG5SQ3hUUVVGQlFTeERRVUZWYWtNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGVFUnVRaXhuUWtGQlFVRXNSVUZCUVVFc1EwRkRTU3hQUVVGUFNTeEpRVUZCUVN4RFFVRkxiVVFzWlVGQlFVRXNRMEZCWjBKdVJDeEpRVUZCUVN4RFFVRkxNa01zUzBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGSGNrTXZReXhqUVVGQlFTeEZRVUZCUVN4RFFVTkpMRTlCUVU5SkxFbEJRVUZCTEVOQlFVdHRSQ3hsUVVGQlFTeERRVUZuUW01RUxFbEJRVUZCTEVOQlFVc3lReXhMUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGWE0wTXNTVUZCUVVFc1EwRkJTMjlFTEZOQlFVRkJMRVZCUVVGQkxFTkJSM0pFZUVRc2FVSkJRVUZCTEVOQlFXdENlVVFzVFVGQlFVRXNRMEZCUVVFc1EwRkRaQ3hQUVVGUGNrUXNTVUZCUVVFc1EwRkJTMjFFTEdWQlFVRkJMRU5CUVdkQ2JrUXNTVUZCUVVFc1EwRkJTMlVzU1VGQlFVRXNRMEZCUzNORExFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVmR5UkN4SlFVRkJRU3hEUVVGTE5FSXNWMEZCUVVFc1EwRkJXVFZDTEVsQlFVRkJMRU5CUVV0VExFbEJRVUZCTEVOQlFVczBReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkb1JucEVMRWRCUVVGQkxFTkJRVUZCTEVkQlFVOHdSQ3hKUVVGQlFTeERRVUZCUVN4RFFVTklMRWxCUVVrM1F5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlhWQ3hKUVVGQlFTeERRVUZMVXl4SlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVU53UWpoRExFOUJRVUZCTEVOQlFWRkRMRWRCUVVGQkxFTkJRVWt2UXl4SlFVRkJRU3hEUVVGQlFTeEhRVUZUTmtNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCIvKiByZW1vdmVkOiBjb25zdCBfJFBlcmlvZF84PXJlcXVpcmUoXCIuL1BlcmlvZFwiKTsgKi87Y2xhc3MgRW1wdHl7fXZhciBfJEpTRWxlbWVudHNfNT1jbGFzcyBleHRlbmRzIF8kUGVyaW9kXzh7Y29uc3RydWN0b3IodGhlV2luZG93PUVtcHR5KXtzdXBlcigpLHRoaXMuRWxlbWVudD10aGVXaW5kb3cuRWxlbWVudCx0aGlzLmRvY3VtZW50PXRoZVdpbmRvdy5kb2N1bWVudH1sb2FkQ3NzKGhyZWY9XCJcIil7bGV0IGVsZW1lbnQ9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwibGlua1wiLGF0dHJpYnV0ZXM6e3JlbDpcInN0eWxlc2hlZXRcIix0eXBlOlwidGV4dC9jc3NcIixocmVmOmhyZWZ9fSk7dm9pZCAwIT09dGhpcy5kb2N1bWVudCYmdm9pZCAwIT09dGhpcy5kb2N1bWVudC5oZWFkJiZ0aGlzLmRvY3VtZW50LmhlYWQuYXBwZW5kKGVsZW1lbnQpfWpzb25Gb3JtKGZvcm0pe2xldCBqc29uPXt9LHBlcmZvcm09ZWxlbWVudD0+e2xldCBjaGlsZHJlbj1lbGVtZW50LmNoaWxkcmVuO2ZvcihsZXQgaT0wO2k8Y2hpbGRyZW4ubGVuZ3RoO2krKylwZXJmb3JtKGNoaWxkcmVuW2ldKTtlbGVtZW50Lmhhc0F0dHJpYnV0ZShcIm5hbWVcIikmJihcImZpbGVcIj09ZWxlbWVudC50eXBlP2VsZW1lbnQuaGFzQXR0cmlidXRlKFwibXVsdGlwbGVcIik/anNvbltlbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIildPWVsZW1lbnQuZmlsZXM6anNvbltlbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIildPWVsZW1lbnQuZmlsZXNbMF06anNvbltlbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIildPWVsZW1lbnQudmFsdWUpfTtyZXR1cm4gcGVyZm9ybShmb3JtKSxqc29ufWpzb25FbGVtZW50KF9lbGVtZW50Xyl7bGV0IGVsZW1lbnQ9X2VsZW1lbnRfLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksYXR0cmlidXRlcz1fZWxlbWVudF8uZ2V0QXR0cmlidXRlcygpO2F0dHJpYnV0ZXMuc3R5bGU9X2VsZW1lbnRfLmNzcygpO2xldCBjaGlsZHJlbj1bXTtmb3IobGV0IGk9MDtpPF9lbGVtZW50Xy5jaGlsZHJlbi5sZW5ndGg7aSsrKWNoaWxkcmVuLnB1c2goX2VsZW1lbnRfLmNoaWxkcmVuW2ldLnRvSnNvbigpKTtyZXR1cm57ZWxlbWVudDplbGVtZW50LGF0dHJpYnV0ZXM6YXR0cmlidXRlcyxjaGlsZHJlbjpjaGlsZHJlbn19aXNFbGVtZW50KG9iamVjdCl7cmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mIHRoaXMuRWxlbWVudH1jcmVhdGVGcm9tT2JqZWN0KG9iamVjdD17fSxzaW5nbGVQYXJlbnQpe2xldCBjcmVhdGVkLG5hbWU7aWYodGhpcy5pc0VsZW1lbnQob2JqZWN0KT9uYW1lPShjcmVhdGVkPW9iamVjdCkubm9kZU5hbWU6dGhpcy5pc0VsZW1lbnQob2JqZWN0LmVsZW1lbnQpP25hbWU9KGNyZWF0ZWQ9b2JqZWN0LmVsZW1lbnQpLm5vZGVOYW1lOihuYW1lPW9iamVjdC5lbGVtZW50LnRvTG93ZXJDYXNlKCksY3JlYXRlZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KG9iamVjdC5lbGVtZW50KSksdGhpcy5pc3NldChvYmplY3QuYXR0cmlidXRlcykmJiF0aGlzLmlzRWxlbWVudChvYmplY3QpKWZvcih2YXIgYXR0ciBpbiBvYmplY3QuYXR0cmlidXRlcylcInN0eWxlXCI9PWF0dHI/Y3JlYXRlZC5jc3Mob2JqZWN0LmF0dHJpYnV0ZXNbYXR0cl0pOmNyZWF0ZWQuc2V0QXR0cmlidXRlKGF0dHIsb2JqZWN0LmF0dHJpYnV0ZXNbYXR0cl0pO2lmKHRoaXMuaXNzZXQob2JqZWN0LnRleHQpJiYoY3JlYXRlZC50ZXh0Q29udGVudD1vYmplY3QudGV4dCksdGhpcy5pc3NldChvYmplY3QuaHRtbCkmJihjcmVhdGVkLmlubmVySFRNTD1vYmplY3QuaHRtbCksdGhpcy5pc3NldChvYmplY3QudmFsdWUpJiYoY3JlYXRlZC52YWx1ZT1vYmplY3QudmFsdWUpLG5hbWUuaW5jbHVkZXMoXCItXCIpJiYoY3JlYXRlZD10aGlzLmNyZWF0ZUZyb21IVE1MKGNyZWF0ZWQub3V0ZXJIVE1MKSksdGhpcy5pc3NldChzaW5nbGVQYXJlbnQpJiZzaW5nbGVQYXJlbnQuYXR0YWNoRWxlbWVudChjcmVhdGVkLG9iamVjdC5hdHRhY2htZW50KSx0aGlzLmlzc2V0KG9iamVjdC5jaGlsZHJlbikmJmNyZWF0ZWQubWFrZUVsZW1lbnQob2JqZWN0LmNoaWxkcmVuKSx0aGlzLmlzc2V0KG9iamVjdC5vcHRpb25zKSYmQXJyYXkuaXNBcnJheShvYmplY3Qub3B0aW9ucykpZm9yKHZhciBpIG9mIG9iamVjdC5vcHRpb25zKXtsZXQgb3B0aW9uPWNyZWF0ZWQubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJvcHRpb25cIix2YWx1ZTppLHRleHQ6aSxhdHRhY2htZW50OlwiYXBwZW5kXCJ9KTt0aGlzLmlzc2V0KG9iamVjdC5zZWxlY3RlZCkmJm9iamVjdC5zZWxlY3RlZD09aSYmb3B0aW9uLnNldEF0dHJpYnV0ZShcInNlbGVjdGVkXCIsITApLFwibnVsbFwiPT1pLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSYmb3B0aW9uLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsITApfXJldHVybiB0aGlzLmlzc2V0KGNyZWF0ZWQuZGF0YXNldC5pY29uKSYmY3JlYXRlZC5hZGRDbGFzc2VzKGNyZWF0ZWQuZGF0YXNldC5pY29uKSxjcmVhdGVkfWNyZWF0ZUZyb21IVE1MKGh0bWxTdHJpbmc9XCJcIixzaW5nbGVQYXJlbnQpe2xldCBodG1sPShuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoaHRtbFN0cmluZyxcInRleHQvaHRtbFwiKSxjcmVhdGVkPWh0bWwuYm9keS5maXJzdENoaWxkO3JldHVybiAxPT1odG1sU3RyaW5nLmluZGV4T2YoXCJodG1sXCIpP2NyZWF0ZWQ9aHRtbDoxPT1odG1sU3RyaW5nLmluZGV4T2YoXCJib2R5XCIpJiYoY3JlYXRlZD1odG1sLmJvZHkpLHRoaXMuaXNzZXQoc2luZ2xlUGFyZW50KSYmc2luZ2xlUGFyZW50LmF0dGFjaEVsZW1lbnQoY3JlYXRlZCxzaW5nbGVQYXJlbnQuYXR0YWNobWVudCksY3JlYXRlZH1jcmVhdGVQZXJjZXB0b3JFbGVtZW50KG9iamVjdCxzaW5nbGVQYXJlbnQpe2xldCBjcmVhdGVkPXRoaXNbb2JqZWN0LnBlcmNlcHRvckVsZW1lbnRdKG9iamVjdC5wYXJhbXMpO3JldHVybiB0aGlzLmlzc2V0KHNpbmdsZVBhcmVudCkmJnNpbmdsZVBhcmVudC5hdHRhY2hFbGVtZW50KGNyZWF0ZWQsb2JqZWN0LmF0dGFjaG1lbnQpLGNyZWF0ZWR9Z2V0RWxlbWVudChzaW5nbGVQYXJhbT17ZWxlbWVudDpcIlwiLGF0dHJpYnV0ZXM6e319LHNpbmdsZVBhcmVudCl7dmFyIGVsZW1lbnQ7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHNpbmdsZVBhcmFtP2VsZW1lbnQ9dGhpcy5jcmVhdGVGcm9tSFRNTChzaW5nbGVQYXJhbSxzaW5nbGVQYXJlbnQpOnRoaXMuaXNFbGVtZW50KHNpbmdsZVBhcmFtKT8oZWxlbWVudD1zaW5nbGVQYXJhbSx0aGlzLmlzc2V0KHNpbmdsZVBhcmVudCkmJnNpbmdsZVBhcmVudC5hdHRhY2hFbGVtZW50KGVsZW1lbnQsc2luZ2xlUGFyYW0uYXR0YWNobWVudCkpOnNpbmdsZVBhcmFtLmNvbnN0cnVjdG9yPT1PYmplY3QmJihlbGVtZW50PXNpbmdsZVBhcmFtLnBlcmNlcHRvckVsZW1lbnQ/dGhpcy5jcmVhdGVQZXJjZXB0b3JFbGVtZW50KHNpbmdsZVBhcmFtLHNpbmdsZVBhcmVudCk6dGhpcy5jcmVhdGVGcm9tT2JqZWN0KHNpbmdsZVBhcmFtLHNpbmdsZVBhcmVudCkpLHRoaXMuaXNzZXQoZWxlbWVudC5zZXRLZXkpJiYhdGhpcy5pc3NldChlbGVtZW50LmRhdGFzZXQuZG9tS2V5KSYmZWxlbWVudC5zZXRLZXkoKSx0aGlzLmlzc2V0KHNpbmdsZVBhcmFtLmxpc3QpKXtsZXQgbGlzdD1lbGVtZW50Lm1ha2VFbGVtZW50KHtlbGVtZW50OlwiZGF0YWxpc3RcIixvcHRpb25zOnNpbmdsZVBhcmFtLmxpc3R9KTtlbGVtZW50LnNldEF0dHJpYnV0ZShcImxpc3RcIixlbGVtZW50LmRhdGFzZXQuZG9tS2V5KSxsaXN0LnNldEF0dHJpYnV0ZShcImlkXCIsZWxlbWVudC5kYXRhc2V0LmRvbUtleSl9aWYodGhpcy5pc3NldChzaW5nbGVQYXJhbS5zdGF0ZSkpe2xldCBvd25lcj1lbGVtZW50LmdldFBhcmVudHMoc2luZ2xlUGFyYW0uc3RhdGUub3duZXIsc2luZ2xlUGFyYW0uc3RhdGUudmFsdWUpO3RoaXMuaXNudWxsKG93bmVyKT9lbGVtZW50LmRhdGFzZXQuc3RhdGVTdGF0dXM9XCJwZW5kaW5nXCI6KG93bmVyLmFkZFN0YXRlKHtuYW1lOnNpbmdsZVBhcmFtLnN0YXRlLm5hbWUsc3RhdGU6ZWxlbWVudH0pLGVsZW1lbnQuZGF0YXNldC5zdGF0ZVN0YXR1cz1cInNldFwiKX1yZXR1cm4gZWxlbWVudH1jcmVhdGVFbGVtZW50KHBhcmFtcz17ZWxlbWVudDpcIlwiLGF0dHJpYnV0ZXM6e319LHBhcmVudCl7aWYoQXJyYXkuaXNBcnJheShwYXJhbXMpKXtsZXQgZWxlbWVudHM9W107Zm9yKGxldCBwYXJhbSBvZiBwYXJhbXMpZWxlbWVudHMucHVzaCh0aGlzLmdldEVsZW1lbnQocGFyYW0scGFyZW50KSk7cmV0dXJuIGVsZW1lbnRzfXJldHVybiB0aGlzLmdldEVsZW1lbnQocGFyYW1zLHBhcmVudCl9dmFsaWRhdGVGb3JtVGV4dGFyZWEoZWxlbWVudCl7cmV0dXJuXCJcIiE9ZWxlbWVudC52YWx1ZX12YWxpZGF0ZUZvcm1JbnB1dChlbGVtZW50KXt2YXIgdHlwZT1lbGVtZW50LmdldEF0dHJpYnV0ZShcInR5cGVcIiksdmFsdWU9ZWxlbWVudC52YWx1ZTtyZXR1cm4gdGhpcy5pc251bGwodHlwZSk/IXRoaXMuaXNTcGFjZVN0cmluZyh2YWx1ZSk6XCJmaWxlXCI9PSh0eXBlPXR5cGUudG9Mb3dlckNhc2UoKSk/XCJcIiE9dmFsdWU6XCJ0ZXh0XCI9PXR5cGU/IXRoaXMuaXNTcGFjZVN0cmluZyh2YWx1ZSk6XCJkYXRlXCI9PXR5cGU/dGhpcy5oYXNTdHJpbmcoZWxlbWVudC5jbGFzc05hbWUsXCJmdXR1cmVcIik/dGhpcy5pc0RhdGUodmFsdWUpOnRoaXMuaXNEYXRlVmFsaWQodmFsdWUpOlwiZW1haWxcIj09dHlwZT90aGlzLmlzRW1haWwodmFsdWUpOlwibnVtYmVyXCI9PXR5cGU/dGhpcy5pc051bWJlcih2YWx1ZSk6XCJwYXNzd29yZFwiPT10eXBlP3RoaXMuaXNQYXNzd29yZFZhbGlkKHZhbHVlKTohdGhpcy5pc1NwYWNlU3RyaW5nKHZhbHVlKX12YWxpZGF0ZUZvcm1TZWxlY3QoZWxlbWVudCl7cmV0dXJuIDAhPWVsZW1lbnQudmFsdWUmJlwibnVsbFwiIT1lbGVtZW50LnZhbHVlLnRvTG93ZXJDYXNlKCl9dmFsaWRhdGVGb3JtKGZvcm0sb3B0aW9ucyl7KG9wdGlvbnM9b3B0aW9uc3x8e30pLm5vZGVOYW1lcz1vcHRpb25zLm5vZGVOYW1lc3x8XCJJTlBVVCwgU0VMRUNULCBURVhUQVJFQVwiO2xldCBub2RlTmFtZSxlbGVtZW50TmFtZSxmbGFnPSEwLGVsZW1lbnRzPWZvcm0uZmluZEFsbChvcHRpb25zLm5vZGVOYW1lcyksdmFsaWRhdGVNZT1tZT0+e2xldCB2YWx1ZTtyZXR1cm4gdmFsdWU9XCJJTlBVVFwiPT1ub2RlTmFtZT90aGlzLnZhbGlkYXRlRm9ybUlucHV0KG1lKTpcIlNFTEVDVFwiPT1ub2RlTmFtZT90aGlzLnZhbGlkYXRlRm9ybVNlbGVjdChtZSk6XCJURVhUQVJFQVwiPT1ub2RlTmFtZT90aGlzLnZhbGlkYXRlRm9ybVRleHRhcmVhKG1lKTp0aGlzLnZhbGlkYXRlT3RoZXJFbGVtZW50cyhtZSl9O2ZvcihsZXQgaT0wO2k8ZWxlbWVudHMubGVuZ3RoO2krKylpZihub2RlTmFtZT1lbGVtZW50c1tpXS5ub2RlTmFtZSxlbGVtZW50TmFtZT1lbGVtZW50c1tpXS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpLFwidHJ1ZVwiIT1lbGVtZW50c1tpXS5nZXRBdHRyaWJ1dGUoXCJpZ25vcmVcIikpe2lmKHRoaXMuaXNzZXQob3B0aW9ucy5uYW1lcykpe2lmKCFvcHRpb25zLm5hbWVzLmluY2x1ZGVzKGVsZW1lbnROYW1lKSljb250aW51ZTtmbGFnPXZhbGlkYXRlTWUoZWxlbWVudHNbaV0pfWVsc2UgZmxhZz12YWxpZGF0ZU1lKGVsZW1lbnRzW2ldKTtpZighZmxhZylicmVha31yZXR1cm57ZmxhZzpmbGFnLGVsZW1lbnROYW1lOmVsZW1lbnROYW1lfX12YWxpZGF0ZU90aGVyRWxlbWVudHMoZWxlbWVudCl7bGV0IHZhbHVlPSExO3JldHVybiB0aGlzLmlzc2V0KGVsZW1lbnQudmFsdWUpJiZcIlwiIT1lbGVtZW50LnZhbHVlJiYodmFsdWU9ITApLHZhbHVlfVZhbGlkYXRlRm9ybUltYWdlcyhmb3JtKXtyZXR1cm5cImZpbGVcIj09dHlwZSYmIXNlbGYuaXNJbWFnZVZhbGlkKHZhbHVlKX1pc0ltYWdlVmFsaWQoaW5wdXQpe3ZhciBleHQ9aW5wdXQuc3Vic3RyaW5nKGlucHV0Lmxhc3RJbmRleE9mKFwiLlwiKSsxKS50b0xvd2VyQ2FzZSgpO3JldHVyblwicG5nXCI9PWV4dHx8XCJnaWZcIj09ZXh0fHxcImpwZWdcIj09ZXh0fHxcImpwZ1wiPT1leHR9aW1hZ2VUb0pzb24oZmlsZSxjYWxsQmFjaz0oKCk9Pnt9KSl7bGV0IGZpbGVSZWFkZXI9bmV3IEZpbGVSZWFkZXIsbXlmaWxlPXt9O2ZpbGVSZWFkZXIub25sb2FkPShldmVudD0+e215ZmlsZS5zcmM9ZXZlbnQudGFyZ2V0LnJlc3VsdCxjYWxsQmFjayhteWZpbGUpfSksbXlmaWxlLnNpemU9ZmlsZS5zaXplLG15ZmlsZS50eXBlPWZpbGUudHlwZSxmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSl9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtwVFJXeGxiV1Z1ZEhNdWFuTWlYU3dpYm1GdFpYTWlPbHNpUlcxd2RIa2lMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpVUdWeWFXOWtJaXdpVzI5aWFtVmpkQ0JQWW1wbFkzUmRJaXdpZEdobFYybHVaRzkzSWl3aWMzVndaWElpTENKMGFHbHpJaXdpUld4bGJXVnVkQ0lzSW1SdlkzVnRaVzUwSWl3aWFISmxaaUlzSW1Wc1pXMWxiblFpTENKamNtVmhkR1ZGYkdWdFpXNTBJaXdpWVhSMGNtbGlkWFJsY3lJc0luSmxiQ0lzSW5SNWNHVWlMQ0oxYm1SbFptbHVaV1FpTENKaGNIQmxibVFpTENKbWIzSnRJaXdpYW5OdmJpSXNJbkJsY21admNtMGlMQ0pqYUdsc1pISmxiaUlzSW1raUxDSnNaVzVuZEdnaUxDSm9ZWE5CZEhSeWFXSjFkR1VpTENKblpYUkJkSFJ5YVdKMWRHVWlMQ0ptYVd4bGN5SXNJblpoYkhWbElpd2lYMlZzWlcxbGJuUmZJaXdpYm05a1pVNWhiV1VpTENKMGIweHZkMlZ5UTJGelpTSXNJbWRsZEVGMGRISnBZblYwWlhNaUxDSnpkSGxzWlNJc0ltTnpjeUlzSW5CMWMyZ2lMQ0owYjBwemIyNGlMQ0p2WW1wbFkzUWlMQ0p6YVc1bmJHVlFZWEpsYm5RaUxDSmpjbVZoZEdWa0lpd2libUZ0WlNJc0ltbHpSV3hsYldWdWRDSXNJbWx6YzJWMElpd2lZWFIwY2lJc0luTmxkRUYwZEhKcFluVjBaU0lzSW5SbGVIUWlMQ0owWlhoMFEyOXVkR1Z1ZENJc0ltaDBiV3dpTENKcGJtNWxja2hVVFV3aUxDSnBibU5zZFdSbGN5SXNJbU55WldGMFpVWnliMjFJVkUxTUlpd2liM1YwWlhKSVZFMU1JaXdpWVhSMFlXTm9SV3hsYldWdWRDSXNJbUYwZEdGamFHMWxiblFpTENKdFlXdGxSV3hsYldWdWRDSXNJbTl3ZEdsdmJuTWlMQ0pCY25KaGVTSXNJbWx6UVhKeVlYa2lMQ0p2Y0hScGIyNGlMQ0p6Wld4bFkzUmxaQ0lzSW5SdlUzUnlhVzVuSWl3aVpHRjBZWE5sZENJc0ltbGpiMjRpTENKaFpHUkRiR0Z6YzJWeklpd2lhSFJ0YkZOMGNtbHVaeUlzSWtSUFRWQmhjbk5sY2lJc0luQmhjbk5sUm5KdmJWTjBjbWx1WnlJc0ltSnZaSGtpTENKbWFYSnpkRU5vYVd4a0lpd2lhVzVrWlhoUFppSXNJbkJsY21ObGNIUnZja1ZzWlcxbGJuUWlMQ0p3WVhKaGJYTWlMQ0p6YVc1bmJHVlFZWEpoYlNJc0ltTnZibk4wY25WamRHOXlJaXdpVDJKcVpXTjBJaXdpWTNKbFlYUmxVR1Z5WTJWd2RHOXlSV3hsYldWdWRDSXNJbU55WldGMFpVWnliMjFQWW1wbFkzUWlMQ0p6WlhSTFpYa2lMQ0prYjIxTFpYa2lMQ0pzYVhOMElpd2ljM1JoZEdVaUxDSnZkMjVsY2lJc0ltZGxkRkJoY21WdWRITWlMQ0pwYzI1MWJHd2lMQ0p6ZEdGMFpWTjBZWFIxY3lJc0ltRmtaRk4wWVhSbElpd2ljR0Z5Wlc1MElpd2laV3hsYldWdWRITWlMQ0p3WVhKaGJTSXNJbWRsZEVWc1pXMWxiblFpTENKcGMxTndZV05sVTNSeWFXNW5JaXdpYUdGelUzUnlhVzVuSWl3aVkyeGhjM05PWVcxbElpd2lhWE5FWVhSbElpd2lhWE5FWVhSbFZtRnNhV1FpTENKcGMwVnRZV2xzSWl3aWFYTk9kVzFpWlhJaUxDSnBjMUJoYzNOM2IzSmtWbUZzYVdRaUxDSnViMlJsVG1GdFpYTWlMQ0psYkdWdFpXNTBUbUZ0WlNJc0ltWnNZV2NpTENKbWFXNWtRV3hzSWl3aWRtRnNhV1JoZEdWTlpTSXNJbTFsSWl3aWRtRnNhV1JoZEdWR2IzSnRTVzV3ZFhRaUxDSjJZV3hwWkdGMFpVWnZjbTFUWld4bFkzUWlMQ0oyWVd4cFpHRjBaVVp2Y20xVVpYaDBZWEpsWVNJc0luWmhiR2xrWVhSbFQzUm9aWEpGYkdWdFpXNTBjeUlzSW01aGJXVnpJaXdpYzJWc1ppSXNJbWx6U1cxaFoyVldZV3hwWkNJc0ltbHVjSFYwSWl3aVpYaDBJaXdpYzNWaWMzUnlhVzVuSWl3aWJHRnpkRWx1WkdWNFQyWWlMQ0ptYVd4bElpd2lZMkZzYkVKaFkyc2lMQ0ptYVd4bFVtVmhaR1Z5SWl3aVJtbHNaVkpsWVdSbGNpSXNJbTE1Wm1sc1pTSXNJbTl1Ykc5aFpDSXNJbVYyWlc1MElpd2ljM0pqSWl3aWRHRnlaMlYwSWl3aWNtVnpkV3gwSWl3aWMybDZaU0lzSW5KbFlXUkJjMFJoZEdGVlVrd2lYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMSEZFUVVOQkxFMUJRVTFCTEV0QlFVRkJMRVZCTkZaT1F5eHJRa0ZCVDBNc1EwRjZWbEFzWTBGQmVVSkRMRlZCUVVGQkxFTkJRM0pDUXl4WFFVRkJRU3hEUVVGWlF5eFRRVUZCUVN4RFFVRlpUQ3hMUVVGQlFTeERRVUZCUVN4RFFVTndRazBzUzBGQlFVRXNSVUZCUVVFc1EwRkRRVU1zU1VGQlFVRXNRMEZCUzBNc1QwRkJRVUVzUTBGQlZVZ3NVMEZCUVVFc1EwRkJWVWNzVDBGQlFVRXNRMEZEZWtKRUxFbEJRVUZCTEVOQlFVdEZMRkZCUVVGQkxFTkJRVmRLTEZOQlFVRkJMRU5CUVZWSkxGRkJRVUZCTEVOQlJ6bENUQ3hQUVVGQlFTeERRVUZSVFN4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlFTeERRVU5ZTEVsQlFVbERMRTlCUVVGQkxFTkJRVlZLTEVsQlFVRkJMRU5CUVV0TExHRkJRVUZCTEVOQlFXTXNRMEZCUlVRc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkZMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNSMEZCUVVFc1EwRkJTeXhaUVVGQkxFTkJRV05ETEVsQlFVRkJMRU5CUVUwc1ZVRkJRU3hEUVVGWlRDeEpRVUZCUVN4RFFVRkJRU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4TFFVTnFSazBzUTBGQlFVRXNSMEZCYkVKVUxFbEJRVUZCTEVOQlFVdEZMRkZCUVVGQkxFVkJRVUZCTEV0QlEzbENUeXhEUVVGQlFTeEhRVUV4UWxRc1NVRkJRVUVzUTBGQlMwVXNVVUZCUVVFc1EwRkJaU3hKUVVGQkxFVkJRM0JDUml4SlFVRkJRU3hEUVVGTFJTeFJRVUZCUVN4RFFVRmxMRWxCUVVFc1EwRkJSVkVzVFVGQlFVRXNRMEZCVDA0c1QwRkJRVUVzUTBGQlFVRXNRMEZMZWtOUUxGRkJRVUZCTEVOQlFWTmpMRWxCUVVGQkxFTkJRVUZCTEVOQlEwd3NTVUZCU1VNc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlExQkRMRTlCUVVGQkxFTkJRVmRVTEU5QlFVRkJMRVZCUVVGQkxFTkJRMWdzU1VGQlNWVXNVVUZCUVVFc1EwRkJWMVlzVDBGQlFVRXNRMEZCVVZVc1VVRkJRVUVzUTBGRGRrSXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVUXNVVUZCUVVFc1EwRkJVMFVzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZEYWtOR0xFOUJRVUZCTEVOQlFWRkRMRkZCUVVGQkxFTkJRVk5ETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJXcENXQ3hQUVVGQlFTeERRVUZSWVN4WlFVRkJRU3hEUVVGaExFMUJRVUVzUTBGQlFTeEhRVU5FTEUxQlFVRXNSVUZCYUVKaUxFOUJRVUZCTEVOQlFWRkpMRWxCUVVGQkxFTkJRMHBLTEU5QlFVRkJMRU5CUVZGaExGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUTNKQ1RDeEpRVUZCUVN4RFFVRkxVaXhQUVVGQlFTeERRVUZSWXl4WlFVRkJRU3hEUVVGaExFMUJRVUVzUTBGQlFTeERRVUZCTEVOQlFWZGtMRTlCUVVGQkxFTkJRVkZsTEV0QlFVRkJMRU5CUnpkRFVDeEpRVUZCUVN4RFFVRkxVaXhQUVVGQlFTeERRVUZSWXl4WlFVRkJRU3hEUVVGaExFMUJRVUVzUTBGQlFTeERRVUZCTEVOQlFWZGtMRTlCUVVGQkxFTkJRVkZsTEV0QlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJTWFpFVUN4SlFVRkJRU3hEUVVGTFVpeFBRVUZCUVN4RFFVRlJZeXhaUVVGQlFTeERRVUZoTEUxQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZka0xFOUJRVUZCTEVOQlFWRm5RaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUxNlJDeFBRVVJCVUN4UFFVRkJRU3hEUVVGUlJpeEpRVUZCUVN4RFFVRkJRU3hEUVVORVF5eEpRVUZCUVN4RFFVZFlaaXhYUVVGQlFTeERRVUZaZDBJc1UwRkJRVUVzUTBGQlFVRXNRMEZEVWl4SlFVRkpha0lzVDBGQlFVRXNRMEZCVldsQ0xGTkJRVUZCTEVOQlFWVkRMRkZCUVVGQkxFTkJRVk5ETEZkQlFVRkJMRVZCUVVGQkxFTkJRemRDYWtJc1ZVRkJRVUVzUTBGQllXVXNVMEZCUVVFc1EwRkJWVWNzWVVGQlFVRXNSVUZCUVVFc1EwRkRNMEpzUWl4VlFVRkJRU3hEUVVGWGJVSXNTMEZCUVVFc1EwRkJVVW9zVTBGQlFVRXNRMEZCVlVzc1IwRkJRVUVzUlVGQlFVRXNRMEZETjBJc1NVRkJTVm9zVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTJZc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Uwc1UwRkJRVUVzUTBGQlZWQXNVVUZCUVVFc1EwRkJVMFVzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBORUxGRkJRVUZCTEVOQlFWTmhMRWxCUVVGQkxFTkJRVXRPTEZOQlFVRkJMRU5CUVZWUUxGRkJRVUZCTEVOQlFWTkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZGhMRTFCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUlhoRExFMUJRVThzUTBGQlJYaENMRTlCUVVGQkxFTkJRVUZCTEU5QlFVRkJMRU5CUVZORkxGVkJRVUZCTEVOQlFVRkJMRlZCUVVGQkxFTkJRVmxSTEZGQlFVRkJMRU5CUVVGQkxGRkJRVUZCTEVOQlFVRkJMRU5CUjJ4RGFrSXNVMEZCUVVFc1EwRkJWV2RETEUxQlFVRkJMRU5CUVVGQkxFTkJRMDRzVDBGQlQwRXNUVUZCUVVFc1dVRkJhMEkzUWl4SlFVRkJRU3hEUVVGTFF5eFBRVUZCUVN4RFFVZHNRMG9zWjBKQlFVRkJMRU5CUVdsQ1owTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVWxETEZsQlFVRkJMRU5CUVVGQkxFTkJRekZDTEVsQlFVbERMRTlCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRU5CWjBKaUxFZEJaRWxvUXl4SlFVRkJRU3hEUVVGTGFVTXNVMEZCUVVFc1EwRkJWVW9zVFVGQlFVRXNRMEZCUVVFc1EwRkZaa2NzU1VGQlFVRXNRMEZCUVVFc1EwRkVRVVFzVDBGQlFVRXNRMEZCVlVZc1RVRkJRVUVzUlVGRFMxQXNVVUZCUVVFc1EwRkZWblJDTEVsQlFVRkJMRU5CUVV0cFF5eFRRVUZCUVN4RFFVRlZTaXhOUVVGQlFTeERRVUZQZWtJc1QwRkJRVUVzUTBGQlFVRXNRMEZGTTBJMFFpeEpRVUZCUVN4RFFVRkJRU3hEUVVSQlJDeFBRVUZCUVN4RFFVRlZSaXhOUVVGQlFTeERRVUZQZWtJc1QwRkJRVUVzUlVGRFJtdENMRkZCUVVGQkxFVkJSMlpWTEVsQlFVRkJMRU5CUVU5SUxFMUJRVUZCTEVOQlFVOTZRaXhQUVVGQlFTeERRVUZSYlVJc1YwRkJRVUVzUlVGQlFVRXNRMEZEZEVKUkxFOUJRVUZCTEVOQlFWVTNRaXhSUVVGQlFTeERRVUZUUnl4aFFVRkJRU3hEUVVGamQwSXNUVUZCUVVFc1EwRkJUM3BDTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYaERTaXhKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRVd3NUVUZCUVVFc1EwRkJUM1pDTEZWQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVOQlFXZENUaXhKUVVGQlFTeERRVUZMYVVNc1UwRkJRVUVzUTBGQlZVb3NUVUZCUVVFc1EwRkJRVUVzUTBGRGFrUXNTVUZCU3l4SlFVRkpUU3hKUVVGQlFTeEpRVUZSVGl4TlFVRkJRU3hEUVVGUGRrSXNWVUZCUVVFc1EwRkRVaXhQUVVGQkxFVkJRVkkyUWl4SlFVRkJRU3hEUVVOQlNpeFBRVUZCUVN4RFFVRlJUQ3hIUVVGQlFTeERRVUZKUnl4TlFVRkJRU3hEUVVGUGRrSXNWVUZCUVVFc1EwRkJWelpDTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJUZENTaXhQUVVGQlFTeERRVUZSU3l4WlFVRkJRU3hEUVVGaFJDeEpRVUZCUVN4RFFVRk5UaXhOUVVGQlFTeERRVUZQZGtJc1ZVRkJRVUVzUTBGQlZ6WkNMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CTkVJeFJDeEhRWGhDU1c1RExFbEJRVUZCTEVOQlFVdHJReXhMUVVGQlFTeERRVUZOVEN4TlFVRkJRU3hEUVVGUFVTeEpRVUZCUVN4RFFVRkJRU3hIUVVOc1FrNHNUMEZCUVVFc1EwRkJVVThzVjBGQlFVRXNRMEZCWTFRc1RVRkJRVUVzUTBGQlQxRXNTVUZCUVVFc1EwRkJRVUVzUTBGSE4wSnlReXhKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRVd3NUVUZCUVVFc1EwRkJUMVVzU1VGQlFVRXNRMEZCUVVFc1IwRkRiRUpTTEU5QlFVRkJMRU5CUVZGVExGTkJRVUZCTEVOQlFWbFlMRTFCUVVGQkxFTkJRVTlWTEVsQlFVRkJMRU5CUVVGQkxFTkJSek5DZGtNc1NVRkJRVUVzUTBGQlMydERMRXRCUVVGQkxFTkJRVTFNTEUxQlFVRkJMRU5CUVU5VUxFdEJRVUZCTEVOQlFVRkJMRWRCUTJ4Q1Z5eFBRVUZCUVN4RFFVRlJXQ3hMUVVGQlFTeERRVUZSVXl4TlFVRkJRU3hEUVVGUFZDeExRVUZCUVN4RFFVRkJRU3hEUVVkMlFsa3NTVUZCUVVFc1EwRkJTMU1zVVVGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVVFc1IwRkRaRllzVDBGQlFVRXNRMEZCVlM5Q0xFbEJRVUZCTEVOQlFVc3dReXhqUVVGQlFTeERRVUZsV0N4UFFVRkJRU3hEUVVGUldTeFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQwUXpORExFbEJRVUZCTEVOQlFVdHJReXhMUVVGQlFTeERRVUZOU2l4WlFVRkJRU3hEUVVGQlFTeEZRVU5ZUVN4WlFVRkJRU3hEUVVGaFl5eGhRVUZCUVN4RFFVRmpZaXhQUVVGQlFTeERRVUZUUml4TlFVRkJRU3hEUVVGUFowSXNWVUZCUVVFc1EwRkJRVUVzUTBGSE0wTTNReXhKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRVd3NUVUZCUVVFc1EwRkJUMllzVVVGQlFVRXNRMEZCUVVFc1JVRkRiRUpwUWl4UFFVRkJRU3hEUVVGUlpTeFhRVUZCUVN4RFFVRlpha0lzVFVGQlFVRXNRMEZCVDJZc1VVRkJRVUVzUTBGQlFVRXNRMEZITTBKa0xFbEJRVUZCTEVOQlFVdHJReXhMUVVGQlFTeERRVUZOVEN4TlFVRkJRU3hEUVVGUGEwSXNUMEZCUVVFc1EwRkJRVUVzUlVGQldVTXNTMEZCUVVFc1EwRkJUVU1zVDBGQlFVRXNRMEZCVVhCQ0xFMUJRVUZCTEVOQlFVOXJRaXhQUVVGQlFTeERRVUZCUVN4RFFVTnVSQ3hKUVVGTExFbEJRVWxvUXl4RFFVRkJRU3hKUVVGTFl5eE5RVUZCUVN4RFFVRlBhMElzVDBGQlFVRXNRMEZCVXl4RFFVTXhRaXhKUVVGSlJ5eE5RVUZCUVN4RFFVRlRia0lzVDBGQlFVRXNRMEZCVVdVc1YwRkJRVUVzUTBGQldTeERRVUZGTVVNc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVm5RaXhMUVVGQlFTeERRVUZQVEN4RFFVRkJRU3hEUVVGSGMwSXNTVUZCUVVFc1EwRkJUWFJDTEVOQlFVRkJMRU5CUVVjNFFpeFZRVUZCUVN4RFFVRlpMRkZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRMnBHTjBNc1NVRkJRVUVzUTBGQlMydERMRXRCUVVGQkxFTkJRVTFNTEUxQlFVRkJMRU5CUVU5elFpeFJRVUZCUVN4RFFVRkJRU3hGUVVGaGRFSXNUVUZCUVVFc1EwRkJUM05DTEZGQlFVRkJMRVZCUVZsd1F5eERRVUZCUVN4RlFVTnNSRzFETEUxQlFVRkJMRU5CUVU5a0xGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJSVVlzVFVGQlFTeEZRVUU1UW5KQ0xFTkJRVUZCTEVOQlFVVnhReXhSUVVGQlFTeEZRVUZCUVN4RFFVRlhOMElzVjBGQlFVRXNSVUZCUVVFc1JVRkRZakpDTEUxQlFVRkJMRU5CUVU5a0xGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJVelZETEU5QlNrbHdReXhKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRVZ3NUMEZCUVVFc1EwRkJVWE5DTEU5QlFVRkJMRU5CUVZGRExFbEJRVUZCTEVOQlFVRkJMRVZCUXpOQ2RrSXNUMEZCUVVFc1EwRkJVWGRDTEZWQlFVRkJMRU5CUVZkNFFpeFBRVUZCUVN4RFFVRlJjMElzVDBGQlFVRXNRMEZCVVVNc1NVRkJRVUVzUTBGQlFVRXNRMEZIYUVOMlFpeFBRVUZCUVN4RFFVZFliRU1zWTBGQlFVRXNRMEZCWlRKRUxGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVRkpNVUlzV1VGQlFVRXNRMEZCUVVFc1EwRkROVUlzU1VGRFNWTXNTVUZCUVVFc1EwRkJRVUVzUTBGRVV5eEpRVUZKYTBJc1UwRkJRVUVzUlVGRFEwTXNaVUZCUVVFc1EwRkJaMEpHTEZWQlFVRkJMRU5CUVZrc1YwRkJRU3hEUVVGQkxFTkJSVEZEZWtJc1QwRkJRVUVzUTBGQlZWRXNTVUZCUVVFc1EwRkJTMjlDTEVsQlFVRkJMRU5CUVV0RExGVkJRVUZCTEVOQlZYaENMRTlCVW10RExFTkJRVUVzUlVGQk9VSktMRlZCUVVGQkxFTkJRVmRMTEU5QlFVRkJMRU5CUVZFc1RVRkJRU3hEUVVGQkxFTkJRMjVDT1VJc1QwRkJRVUVzUTBGQlZWRXNTVUZCUVVFc1EwRkZlVUlzUTBGQlFTeEZRVUU1UW1sQ0xGVkJRVUZCTEVOQlFWZExMRTlCUVVGQkxFTkJRVkVzVFVGQlFTeERRVUZCTEVkQlEzaENPVUlzVDBGQlFVRXNRMEZCVlZFc1NVRkJRVUVzUTBGQlMyOUNMRWxCUVVGQkxFTkJRVUZCTEVOQlIyWXpSQ3hKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRVb3NXVUZCUVVFc1EwRkJRVUVzUlVGQlpVRXNXVUZCUVVFc1EwRkJZV01zWVVGQlFVRXNRMEZCWTJJc1QwRkJRVUVzUTBGQlUwUXNXVUZCUVVFc1EwRkJZV1VzVlVGQlFVRXNRMEZCUVVFc1EwRkRlRVZrTEU5QlFVRkJMRU5CUjFoc1F5eHpRa0ZCUVVFc1EwRkJkVUpuUXl4TlFVRkJRU3hEUVVGUlF5eFpRVUZCUVN4RFFVRkJRU3hEUVVNelFpeEpRVUZKUXl4UFFVRkJRU3hEUVVGVkwwSXNTVUZCUVVFc1EwRkJTelpDTEUxQlFVRkJMRU5CUVU5cFF5eG5Ra0ZCUVVFc1EwRkJRVUVzUTBGQmEwSnFReXhOUVVGQlFTeERRVUZQYTBNc1RVRkJRVUVzUTBGQlFVRXNRMEZKYmtRc1QwRklTUzlFTEVsQlFVRkJMRU5CUVV0clF5eExRVUZCUVN4RFFVRk5TaXhaUVVGQlFTeERRVUZCUVN4RlFVTllRU3haUVVGQlFTeERRVUZoWXl4aFFVRkJRU3hEUVVGallpeFBRVUZCUVN4RFFVRlRSaXhOUVVGQlFTeERRVUZQWjBJc1ZVRkJRVUVzUTBGQlFVRXNRMEZGZUVOa0xFOUJRVUZCTEVOQlIxaHNReXhWUVVGQlFTeERRVUZYYlVVc1YwRkJRVUVzUTBGQll5eERRVUZGTlVRc1QwRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVbEZMRlZCUVVGQkxFTkJRVmtzUlVGQlFTeERRVUZCTEVOQlFVMTNRaXhaUVVGQlFTeERRVUZCUVN4RFFVTjBSQ3hKUVVGSk1VSXNUMEZCUVVFc1EwRjFRa29zUjBGeVFqQkNMRkZCUVVFc1JVRkJRU3hQUVVGbU5FUXNWMEZCUVVFc1EwRkRVRFZFTEU5QlFVRkJMRU5CUVZWS0xFbEJRVUZCTEVOQlFVc3dReXhqUVVGQlFTeERRVUZsYzBJc1YwRkJRVUVzUTBGQllXeERMRmxCUVVGQkxFTkJRVUZCTEVOQlJYUkRPVUlzU1VGQlFVRXNRMEZCUzJsRExGTkJRVUZCTEVOQlFWVXJRaXhYUVVGQlFTeERRVUZCUVN4RlFVTndRalZFTEU5QlFVRkJMRU5CUVZVMFJDeFhRVUZCUVN4RFFVTk9hRVVzU1VGQlFVRXNRMEZCUzJ0RExFdEJRVUZCTEVOQlFVMUtMRmxCUVVGQkxFTkJRVUZCTEVWQlFXVkJMRmxCUVVGQkxFTkJRV0ZqTEdGQlFVRkJMRU5CUVdONFF5eFBRVUZCUVN4RFFVRlRORVFzVjBGQlFVRXNRMEZCV1c1Q0xGVkJRVUZCTEVOQlFVRkJMRVZCUjNwRmJVSXNWMEZCUVVFc1EwRkJXVU1zVjBGQlFVRXNSVUZCWlVNc1RVRkJRVUVzUjBGRk5VSTVSQ3hQUVVGQlFTeERRVVJCTkVRc1YwRkJRVUVzUTBGQldVWXNaMEpCUVVGQkxFTkJRMFk1UkN4SlFVRkJRU3hEUVVGTGJVVXNjMEpCUVVGQkxFTkJRWFZDU0N4WFFVRkJRU3hEUVVGaGJFTXNXVUZCUVVFc1EwRkJRVUVzUTBGSGVrTTVRaXhKUVVGQlFTeERRVUZMYjBVc1owSkJRVUZCTEVOQlFXbENTaXhYUVVGQlFTeERRVUZoYkVNc1dVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpha1E1UWl4SlFVRkJRU3hEUVVGTGEwTXNTMEZCUVVFc1EwRkJUVGxDTEU5QlFVRkJMRU5CUVZGcFJTeE5RVUZCUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZaY2tVc1NVRkJRVUVzUTBGQlMydERMRXRCUVVGQkxFTkJRVTA1UWl4UFFVRkJRU3hEUVVGUmFVUXNUMEZCUVVFc1EwRkJVV2xDTEUxQlFVRkJMRU5CUVVGQkxFVkJRekZFYkVVc1QwRkJRVUVzUTBGQlVXbEZMRTFCUVVGQkxFVkJRVUZCTEVOQlIxSnlSU3hKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRUaENMRmRCUVVGQkxFTkJRVmxQTEVsQlFVRkJMRU5CUVVGQkxFTkJRVThzUTBGRE9VSXNTVUZCU1VFc1NVRkJRVUVzUTBGQlQyNUZMRTlCUVVGQkxFTkJRVkV3UXl4WFFVRkJRU3hEUVVGWkxFTkJRVVV4UXl4UFFVRkJRU3hEUVVGVExGVkJRVUVzUTBGQldUSkRMRTlCUVVGQkxFTkJRVk5wUWl4WFFVRkJRU3hEUVVGWlR5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU16Ulc1RkxFOUJRVUZCTEVOQlFWRm5ReXhaUVVGQlFTeERRVUZoTEUxQlFVRXNRMEZCVVdoRExFOUJRVUZCTEVOQlFWRnBSQ3hQUVVGQlFTeERRVUZSYVVJc1RVRkJRVUVzUTBGQlFVRXNRMEZETjBORExFbEJRVUZCTEVOQlFVdHVReXhaUVVGQlFTeERRVUZoTEVsQlFVRXNRMEZCVFdoRExFOUJRVUZCTEVOQlFWRnBSQ3hQUVVGQlFTeERRVUZSYVVJc1RVRkJRVUVzUTBGQlFVRXNRMEZITlVNc1IwRkJTWFJGTEVsQlFVRkJMRU5CUVV0clF5eExRVUZCUVN4RFFVRk5PRUlzVjBGQlFVRXNRMEZCV1ZFc1MwRkJRVUVzUTBGQlFVRXNRMEZCVVN4RFFVTXZRaXhKUVVGSlF5eExRVUZCUVN4RFFVRlJja1VzVDBGQlFVRXNRMEZCVVhORkxGVkJRVUZCTEVOQlFWZFdMRmRCUVVGQkxFTkJRVmxSTEV0QlFVRkJMRU5CUVUxRExFdEJRVUZCTEVOQlFVOVVMRmRCUVVGQkxFTkJRVmxSTEV0QlFVRkJMRU5CUVUxd1JDeExRVUZCUVN4RFFVRkJRU3hEUVVOeVJYQkNMRWxCUVVGQkxFTkJRVXN5UlN4TlFVRkJRU3hEUVVGUFJpeExRVUZCUVN4RFFVRkJRU3hEUVVsaWNrVXNUMEZCUVVFc1EwRkJVV2xFTEU5QlFVRkJMRU5CUVZGMVFpeFhRVUZCUVN4RFFVRmpMRk5CUVVFc1JVRklPVUpJTEV0QlFVRkJMRU5CUVUxSkxGRkJRVUZCTEVOQlFWTXNRMEZCUlRkRExFbEJRVUZCTEVOQlFVMW5ReXhYUVVGQlFTeERRVUZaVVN4TFFVRkJRU3hEUVVGTmVFTXNTVUZCUVVFc1EwRkJUWGRETEV0QlFVRkJMRU5CUVU5d1JTeFBRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU4wUkVFc1QwRkJRVUVzUTBGQlVXbEVMRTlCUVVGQkxFTkJRVkYxUWl4WFFVRkJRU3hEUVVGakxFdEJRVUVzUTBGQlFTeERRVTEwUXl4UFFVRlBlRVVzVDBGQlFVRXNRMEZIV0ZBc1lVRkJRVUVzUTBGQlkydEZMRTFCUVVGQkxFTkJRVk1zUTBGQlJUTkVMRTlCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZKUlN4VlFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlFTeERRVUZOZDBVc1RVRkJRVUVzUTBGQlFVRXNRMEZEY0VRc1IwRkJTVGxDTEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRmpMRTFCUVVGQkxFTkJRVUZCTEVOQlFWTXNRMEZEZGtJc1NVRkJTV2RDTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNVTXNTMEZCUVVFc1NVRkJVMnBDTEUxQlFVRkJMRU5CUTJSblFpeFJRVUZCUVN4RFFVRlRjRVFzU1VGQlFVRXNRMEZCU3pOQ0xFbEJRVUZCTEVOQlFVdHBSaXhWUVVGQlFTeERRVUZYUkN4TFFVRkJRU3hEUVVGUFJpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVY2UXl4UFFVRlBReXhSUVVGQlFTeERRVWRRTEU5QlJHTXZSU3hKUVVGQlFTeERRVUZMYVVZc1ZVRkJRVUVzUTBGQlYyeENMRTFCUVVGQkxFTkJRVkZsTEUxQlFVRkJMRU5CUVVGQkxFTkJTemxEYWtZc2IwSkJRVUZCTEVOQlFYRkNUeXhQUVVGQlFTeERRVUZCUVN4RFFVTnFRaXhOUVVGeFFpeEZRVUZCTEVWQlFXcENRU3hQUVVGQlFTeERRVUZSWjBJc1MwRkJRVUVzUTBGTmFFSjJRaXhwUWtGQlFVRXNRMEZCYTBKUExFOUJRVUZCTEVOQlFVRkJMRU5CUTJRc1NVRkJTVWtzU1VGQlFVRXNRMEZCVDBvc1QwRkJRVUVzUTBGQlVXTXNXVUZCUVVFc1EwRkJZU3hOUVVGQkxFTkJRVUVzUTBGRE5VSkZMRXRCUVVGQkxFTkJRVkZvUWl4UFFVRkJRU3hEUVVGUlowSXNTMEZCUVVFc1EwRkZjRUlzVDBGQlNYQkNMRWxCUVVGQkxFTkJRVXN5UlN4TlFVRkJRU3hEUVVGUGJrVXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEU2xJc1NVRkJRVUVzUTBGQlMydEdMR0ZCUVVGQkxFTkJRV001UkN4TFFVRkJRU3hEUVVGQlFTeERRVWx1UWl4TlFVRkJMRWRCUkZwYUxFbEJRVUZCTEVOQlFVOUJMRWxCUVVGQkxFTkJRVXRsTEZkQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlJWRXNSVUZCUVN4RlFVRlVTQ3hMUVVGQlFTeERRVVZOTEUxQlFVRXNSVUZCVWxvc1NVRkJRVUVzUTBGQlFVRXNRMEZEUjFJc1NVRkJRVUVzUTBGQlMydEdMR0ZCUVVGQkxFTkJRV001UkN4TFFVRkJRU3hEUVVGQlFTeERRVVZrTEUxQlFVRXNSVUZCVWxvc1NVRkJRVUVzUTBGRFJGSXNTVUZCUVVFc1EwRkJTMjFHTEZOQlFVRkJMRU5CUVZVdlJTeFBRVUZCUVN4RFFVRlJaMFlzVTBGQlFVRXNRMEZCVnl4UlFVRkJMRU5CUVVFc1EwRkRNMEp3Uml4SlFVRkJRU3hEUVVGTGNVWXNUVUZCUVVFc1EwRkJUMnBGTEV0QlFVRkJMRU5CUVVGQkxFTkJSVnB3UWl4SlFVRkJRU3hEUVVGTGMwWXNWMEZCUVVFc1EwRkJXV3hGTEV0QlFVRkJMRU5CUVVGQkxFTkJSMllzVDBGQlFTeEZRVUZTV2l4SlFVRkJRU3hEUVVORlVpeEpRVUZCUVN4RFFVRkxkVVlzVDBGQlFVRXNRMEZCVVc1RkxFdEJRVUZCTEVOQlFVRkJMRU5CUlZBc1VVRkJRU3hGUVVGU1dpeEpRVUZCUVN4RFFVTkZVaXhKUVVGQlFTeERRVUZMZDBZc1VVRkJRVUVzUTBGQlUzQkZMRXRCUVVGQkxFTkJRVUZCTEVOQlJWSXNWVUZCUVN4RlFVRlNXaXhKUVVGQlFTeERRVU5GVWl4SlFVRkJRU3hEUVVGTGVVWXNaVUZCUVVFc1EwRkJaMEp5UlN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHdRbkJDTEVsQlFVRkJMRU5CUVV0clJpeGhRVUZCUVN4RFFVRmpPVVFzUzBGQlFVRXNRMEZCUVVFc1EwRkpia04yUWl4clFrRkJRVUVzUTBGQmJVSlBMRTlCUVVGQkxFTkJRVUZCTEVOQlEyWXNUMEZCY1VJc1EwRkJRU3hGUVVGcVFrRXNUMEZCUVVFc1EwRkJVV2RDTEV0QlFVRkJMRVZCUVRaRExFMUJRVUVzUlVGQkwwSm9RaXhQUVVGQlFTeERRVUZSWjBJc1MwRkJRVUVzUTBGQlRVY3NWMEZCUVVFc1JVRkJRVUVzUTBGUE5VTXhRaXhaUVVGQlFTeERRVUZoWXl4SlFVRkJRU3hEUVVGTmIwTXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEWmtFc1QwRkJRVUVzUTBGQlZVRXNUMEZCUVVFc1JVRkJWeXhGUVVGQkxFVkJRMkl5UXl4VFFVRkJRU3hEUVVGWk0wTXNUMEZCUVVFc1EwRkJVVEpETEZOQlFVRkJMRVZCUVdFc2VVSkJRVUVzUTBGRGVrTXNTVUZEU1hCRkxGRkJRVUZCTEVOQlEwRnhSU3hYUVVGQlFTeERRVVpCUXl4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZIVUdJc1VVRkJRVUVzUTBGQlYzQkZMRWxCUVVGQkxFTkJRVXRyUml4UFFVRkJRU3hEUVVGUk9VTXNUMEZCUVVFc1EwRkJVVEpETEZOQlFVRkJMRU5CUVVGQkxFTkJSV2hEU1N4VlFVRkJRU3hEUVVGaFF5eEZRVUZCUVN4RlFVRkJRU3hEUVVOaUxFbEJRVWt6UlN4TFFVRkJRU3hEUVdOS0xFOUJXa2xCTEV0QlFVRkJMRU5CUkZrc1QwRkJRU3hGUVVGYVJTeFJRVUZCUVN4RFFVTlJkRUlzU1VGQlFVRXNRMEZCUzJkSExHbENRVUZCUVN4RFFVRnJRa1FzUlVGQlFVRXNRMEZCUVVFc1EwRkZaQ3hSUVVGQkxFVkJRVnA2UlN4UlFVRkJRU3hEUVVOSGRFSXNTVUZCUVVFc1EwRkJTMmxITEd0Q1FVRkJRU3hEUVVGdFFrWXNSVUZCUVVFc1EwRkJRVUVzUTBGRlppeFZRVUZCTEVWQlFWcDZSU3hSUVVGQlFTeERRVU5IZEVJc1NVRkJRVUVzUTBGQlMydEhMRzlDUVVGQlFTeERRVUZ4UWtnc1JVRkJRVUVzUTBGQlFVRXNRMEZITVVJdlJpeEpRVUZCUVN4RFFVRkxiVWNzY1VKQlFVRkJMRU5CUVhOQ1NpeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTB6UXl4SlFVRkxMRWxCUVVsb1JpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1dkRkxGRkJRVUZCTEVOQlFWTXZSQ3hOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVWxxUXl4SFFVaEJUeXhSUVVGQlFTeERRVUZYZVVRc1VVRkJRVUVzUTBGQlUyaEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZFBMRkZCUVVGQkxFTkJRM1pDY1VVc1YwRkJRVUVzUTBGQlkxb3NVVUZCUVVFc1EwRkJVMmhGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRITEZsQlFVRkJMRU5CUVdFc1RVRkJRU3hEUVVGQkxFTkJSVWNzVFVGQlFTeEZRVUYwUXpaRUxGRkJRVUZCTEVOQlFWTm9SU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhSeXhaUVVGQlFTeERRVUZoTEZGQlFVRXNRMEZCUVN4RFFVRTNRaXhEUVVsQkxFZEJRVWxzUWl4SlFVRkJRU3hEUVVGTGEwTXNTMEZCUVVFc1EwRkJUV0VzVDBGQlFVRXNRMEZCVVhGRUxFdEJRVUZCTEVOQlFVRkJMRU5CUVZFc1EwRkRNMElzUjBGQlFTeERRVUZKY2tRc1QwRkJRVUVzUTBGQlVYRkVMRXRCUVVGQkxFTkJRVTB6UkN4UlFVRkJRU3hEUVVGVGEwUXNWMEZCUVVFc1EwRkJRVUVzUTBGSmRrSXNVMEZJUVVNc1NVRkJRVUVzUTBGQlQwVXNWVUZCUVVFc1EwRkJWMllzVVVGQlFVRXNRMEZCVTJoRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlR5OUNOa1VzU1VGQlFVRXNRMEZCVDBVc1ZVRkJRVUVzUTBGQlYyWXNVVUZCUVVFc1EwRkJVMmhGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ5OUNMRWRCUVVFc1EwRkJTelpGTEVsQlFVRkJMRU5CUTBRc1MwRkJRU3hEUVVsU0xFMUJRVThzUTBGQlJVRXNTVUZCUVVFc1EwRkJRVUVzU1VGQlFVRXNRMEZCVFVRc1YwRkJRVUVzUTBGQlFVRXNWMEZCUVVFc1EwRkJRVUVzUTBGSGJrSTVSaXh4UWtGQlFVRXNRMEZCYzBKUExFOUJRVUZCTEVOQlFVRkJMRU5CUTJ4Q0xFbEJRVWxuUWl4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZGV2l4UFFVUkpjRUlzU1VGQlFVRXNRMEZCUzJ0RExFdEJRVUZCTEVOQlFVMDVRaXhQUVVGQlFTeERRVUZSWjBJc1MwRkJRVUVzUTBGQlFVRXNSVUZCTWtJc1JVRkJRU3hGUVVGcVFtaENMRTlCUVVGQkxFTkJRVkZuUWl4TFFVRkJRU3hIUVVGaFFTeExRVUZCUVN4RFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVU4yUkVFc1MwRkJRVUVzUTBGSFdIWkNMR3RDUVVGQlFTeERRVUZ0UW1Nc1NVRkJRVUVzUTBGQlFVRXNRMEZEWml4TlFVRm5RaXhOUVVGQkxFVkJRVkpJTEVsQlFVRkJMRVZCUVVGQkxFTkJRVzFDTmtZc1NVRkJRVUVzUTBGQlMwTXNXVUZCUVVFc1EwRkJZV3hHTEV0QlFVRkJMRU5CUVVGQkxFTkJSMnBFZGtJc1dVRkJRVUVzUTBGQllUQkhMRXRCUVVGQkxFTkJRVUZCTEVOQlExUXNTVUZCU1VNc1IwRkJRVUVzUTBGQlRVUXNTMEZCUVVFc1EwRkJUVVVzVTBGQlFVRXNRMEZCVlVZc1MwRkJRVUVzUTBGQlRVY3NWMEZCUVVFc1EwRkJXU3hIUVVGQkxFTkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVRXNRMEZCUjI1R0xGZEJRVUZCTEVWQlFVRkJMRU5CUTNSRUxFMUJRVmNzUzBGQlFTeEZRVUZRYVVZc1IwRkJRVUVzUlVGQmRVSXNTMEZCUVN4RlFVRlFRU3hIUVVGQlFTeEZRVUYxUWl4TlFVRkJMRVZCUVZCQkxFZEJRVUZCTEVWQlFYZENMRXRCUVVFc1JVRkJVRUVzUjBGQlFVRXNRMEZQZWtRelJ5eFhRVUZCUVN4RFFVRlpPRWNzU1VGQlFVRXNRMEZCVFVNc1VVRkJRVUVzUlVGQlZ5eEpRVUZCTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNwQ0xFbEJRVWxETEZWQlFVRkJMRU5CUVdFc1NVRkJTVU1zVlVGQlFVRXNRMEZEYWtKRExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVTmlSaXhWUVVGQlFTeERRVUZYUnl4TlFVRkJRU3hGUVVGVlF5eExRVUZCUVN4RlFVRkJRU3hEUVVOcVFrWXNUVUZCUVVFc1EwRkJUMGNzUjBGQlFVRXNRMEZCVFVRc1MwRkJRVUVzUTBGQlRVVXNUVUZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZETVVKU0xGRkJRVUZCTEVOQlFWTkhMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMkpCTEUxQlFVRkJMRU5CUVU5TkxFbEJRVUZCTEVOQlFVOVdMRWxCUVVGQkxFTkJRVXRWTEVsQlFVRkJMRU5CUTI1Q1RpeE5RVUZCUVN4RFFVRlBka2NzU1VGQlFVRXNRMEZCVDIxSExFbEJRVUZCTEVOQlFVdHVSeXhKUVVGQlFTeERRVU51UW5GSExGVkJRVUZCTEVOQlFWZFRMR0ZCUVVGQkxFTkJRV05ZTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kSlNFbGVtZW50c181PXJlcXVpcmUoXCIuL0pTRWxlbWVudHNcIik7ICovO2NsYXNzIF9fRW1wdHlfOXt9dmFyIF8kVGVtcGxhdGVfOT1jbGFzcyBleHRlbmRzIF8kSlNFbGVtZW50c181e2NvbnN0cnVjdG9yKHRoZVdpbmRvdz1fX0VtcHR5Xzkpe3N1cGVyKHRoZVdpbmRvdyksdGhpcy52aXJ0dWFsPXt9LHRoaXMuZWxlbWVudExpYnJhcnkodGhlV2luZG93LkVsZW1lbnQpLHRoaXMuaHRtbENvbGxlY3Rpb25MaWJyYXJ5KHRoZVdpbmRvdy5IVE1MQ29sbGVjdGlvbiksdGhpcy5ub2RlTGlicmFyeSh0aGVXaW5kb3cuTm9kZSksdGhpcy5ub2RlTGlzdExpYnJhcnkodGhlV2luZG93Lk5vZGVMaXN0KX1lbGVtZW50TGlicmFyeShFbGVtZW50PV9fRW1wdHlfOSl7bGV0IHNlbGY9dGhpcztFbGVtZW50LnByb3RvdHlwZS5jaGFuZ2VOb2RlTmFtZT1mdW5jdGlvbihuYW1lKXtsZXQgc3RydWN0dXJlPXRoaXMudG9Kc29uKCk7cmV0dXJuIHN0cnVjdHVyZS5lbGVtZW50PW5hbWUsc2VsZi5jcmVhdGVFbGVtZW50KHN0cnVjdHVyZSl9LEVsZW1lbnQucHJvdG90eXBlLnRvSnNvbj1mdW5jdGlvbigpe2xldCBlbGVtZW50PXRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxhdHRyaWJ1dGVzPXRoaXMuZ2V0QXR0cmlidXRlcygpO2F0dHJpYnV0ZXMuc3R5bGU9dGhpcy5jc3MoKTtsZXQgY2hpbGRyZW49W107Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspY2hpbGRyZW4ucHVzaCh0aGlzLmNoaWxkcmVuW2ldLnRvSnNvbigpKTtyZXR1cm57ZWxlbWVudDplbGVtZW50LGF0dHJpYnV0ZXM6YXR0cmlidXRlcyxjaGlsZHJlbjpjaGlsZHJlbn19LEVsZW1lbnQucHJvdG90eXBlLnNldE9wdGlvbnM9ZnVuY3Rpb24ob3B0aW9ucz1bXSxwYXJhbXM9e3NlbGVjdGVkOlwiXCJ9KXtwYXJhbXM9cGFyYW1zfHx7fSxzZWxmLmlzc2V0KHBhcmFtcy5mbGFnKSYmKHRoaXMuaW5uZXJIVE1MPVwiXCIpO2ZvcihsZXQgaT0wO2k8b3B0aW9ucy5sZW5ndGg7aSsrKXtsZXQgdGV4dD1vcHRpb25zW2ldLnRleHR8fG9wdGlvbnNbaV0sdmFsdWU9b3B0aW9uc1tpXS52YWx1ZXx8b3B0aW9uc1tpXSxvcHRpb249dGhpcy5tYWtlRWxlbWVudCh7ZWxlbWVudDpcIm9wdGlvblwiLGF0dHJpYnV0ZXM6e3ZhbHVlOnZhbHVlfSx0ZXh0OnRleHR9KTtcIm51bGxcIj09dmFsdWUudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpJiZvcHRpb24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwhMCksc2VsZi5pc3NldChwYXJhbXMuc2VsZWN0ZWQpJiZ2YWx1ZT09cGFyYW1zLnNlbGVjdGVkJiZvcHRpb24uc2V0QXR0cmlidXRlKFwic2VsZWN0ZWRcIiwhMCl9fSxFbGVtZW50LnByb3RvdHlwZS5jb21tb25BbmNlc3Rvcj1mdW5jdGlvbihlbGVtZW50QSxlbGVtZW50Qil7Zm9yKGxldCBhbmNlc3RvckEgb2YgZWxlbWVudEEucGFyZW50cygpKWZvcihsZXQgYW5jZXN0b3JCIG9mIGVsZW1lbnRCLnBhcmVudHMoKSlpZihhbmNlc3RvckE9PWFuY2VzdG9yQilyZXR1cm4gYW5jZXN0b3JBO3JldHVybiBudWxsfSxFbGVtZW50LnByb3RvdHlwZS5vbkFkZGVkPWZ1bmN0aW9uKGNhbGxiYWNrPSgoKT0+e30pKXt0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Ob2RlSW5zZXJ0ZWRJbnRvRG9jdW1lbnRcIixldmVudD0+e2NhbGxiYWNrKCl9KX0sRWxlbWVudC5wcm90b3R5cGUuc3RhdGVzPXt9LEVsZW1lbnQucHJvdG90eXBlLnRlbXA9e30sRWxlbWVudC5wcm90b3R5cGUubWFueUJ1YmJsZWRFdmVudHM9ZnVuY3Rpb24oZXZlbnRzLGNhbGxiYWNrPSgoKT0+e30pKXtldmVudHM9ZXZlbnRzLnNwbGl0KFwiLFwiKTtmb3IobGV0IGV2ZW50IG9mIGV2ZW50cyl0aGlzLmJ1YmJsZWRFdmVudChldmVudC50cmltKCksY2FsbGJhY2spfSxFbGVtZW50LnByb3RvdHlwZS5tYW55Tm90QnViYmxlZEV2ZW50cz1mdW5jdGlvbihldmVudHMsY2FsbGJhY2s9KCgpPT57fSkpe2V2ZW50cz1ldmVudHMuc3BsaXQoXCIsXCIpO2ZvcihsZXQgZXZlbnQgb2YgZXZlbnRzKXRoaXMubm90QnViYmxlZEV2ZW50KGV2ZW50LnRyaW0oKSxjYWxsYmFjayl9LEVsZW1lbnQucHJvdG90eXBlLmJ1YmJsZWRFdmVudD1mdW5jdGlvbihldmVudCxjYWxsYmFjaz0oKCk9Pnt9KSl7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCxldmVudD0+eyhldmVudC50YXJnZXQ9PXRoaXN8fHRoaXMuaXNBbmNlc3RvcihldmVudC50YXJnZXQpKSYmY2FsbGJhY2soZXZlbnQpfSl9LEVsZW1lbnQucHJvdG90eXBlLm5vdEJ1YmJsZWRFdmVudD1mdW5jdGlvbihldmVudCxjYWxsYmFjaz0oKCk9Pnt9KSl7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCxldmVudD0+e2V2ZW50LnRhcmdldD09dGhpc3x8dGhpcy5pc0FuY2VzdG9yKGV2ZW50LnRhcmdldCl8fGNhbGxiYWNrKGV2ZW50KX0pfSxFbGVtZW50LnByb3RvdHlwZS5hZGRNdWx0aXBsZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oZXZlbnRzLGNhbGxiYWNrPSgoKT0+e30pKXtldmVudHM9ZXZlbnRzLnNwbGl0KFwiLFwiKTtmb3IobGV0IGV2ZW50IG9mIGV2ZW50cyl0aGlzLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQudHJpbSgpLGU9PntjYWxsYmFjayhlKX0pfSxFbGVtZW50LnByb3RvdHlwZS5ob3Zlcj1mdW5jdGlvbihwYXJhbXM9e2Nzczp7fSxkbzooKT0+e319KXtsZXQgY3NzVmFsdWVzLGNzcz1bXTt0aGlzLmFkZE11bHRpcGxlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIixldmVudD0+e2Nzc1ZhbHVlcz10aGlzLmNzcygpLHNlbGYuaXNzZXQocGFyYW1zLmNzcykmJihjc3M9c2VsZi5hcnJheS5lYWNoKE9iamVjdC5rZXlzKHBhcmFtcy5jc3MpLHZhbHVlPT5zZWxmLmNzc1N0eWxlTmFtZSh2YWx1ZSkpLHRoaXMuY3NzKHBhcmFtcy5jc3MpKSxzZWxmLmlzZnVuY3Rpb24ocGFyYW1zLmRvKSYmcGFyYW1zLmRvKGV2ZW50KX0pLHRoaXMuYWRkTXVsdGlwbGVFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGV2ZW50PT57c2VsZi5pc3NldChwYXJhbXMuY3NzKSYmKHRoaXMuY3NzUmVtb3ZlKGNzcyksdGhpcy5jc3MoY3NzVmFsdWVzKSl9KX0sRWxlbWVudC5wcm90b3R5cGUuZmluZD1mdW5jdGlvbihuYW1lPVwiXCIscG9zaXRpb249MCl7bGV0IGVsZW1lbnQ9bnVsbDtyZXR1cm4gc2VsZi5pc3NldChwb3NpdGlvbik/dGhpcy5xdWVyeVNlbGVjdG9yQWxsKG5hbWUpLmZvckVhY2goKGUscCk9Pntwb3NpdGlvbj09cCYmKGVsZW1lbnQ9ZSl9KTplbGVtZW50PXRoaXMucXVlcnlTZWxlY3RvcihuYW1lKSxlbGVtZW50fSxFbGVtZW50LnByb3RvdHlwZS5maW5kQWxsPWZ1bmN0aW9uKG5hbWU9XCJcIil7cmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbChuYW1lKX0sRWxlbWVudC5wcm90b3R5cGUuc2VhcmNoPWZ1bmN0aW9uKG5hbWU9XCJcIixvcHRpb25zPXthdHRyaWJ1dGVzOnt9LGlkOlwiXCIsbm9kZU5hbWU6XCJcIixjbGFzczpcIlwiLGNsYXNzZXM6XCJcIn0scG9zaXRpb249MCl7bGV0IGVsZW1lbnQ9bnVsbCxmb3VuZEVsZW1lbnRzPVtdO2lmKHNlbGYuaXNzZXQob3B0aW9ucykpe2xldCBhbGxFbGVtZW50cz10aGlzLnF1ZXJ5U2VsZWN0b3JBbGwobmFtZSk7Zm9yKGxldCBpPTA7aTxhbGxFbGVtZW50cy5sZW5ndGg7aSsrKXtpZihlbGVtZW50PWFsbEVsZW1lbnRzW2ldLHNlbGYuaXNzZXQob3B0aW9ucy5hdHRyaWJ1dGVzKSl7Zm9yKGxldCBhdHRyIGluIG9wdGlvbnMuYXR0cmlidXRlcyllbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKT09b3B0aW9ucy5hdHRyaWJ1dGVzW2F0dHJdfHwoZWxlbWVudD1udWxsKTtpZihzZWxmLmlzbnVsbChlbGVtZW50KSljb250aW51ZX1pZihzZWxmLmlzc2V0KG9wdGlvbnMuaWQpJiZvcHRpb25zLmlkIT1lbGVtZW50LmlkKWVsZW1lbnQ9bnVsbDtlbHNlIGlmKCFzZWxmLmlzc2V0KG9wdGlvbnMuY2xhc3MpfHxlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhvcHRpb25zLmNsYXNzKSlpZighc2VsZi5pc3NldChvcHRpb25zLmNsYXNzZXMpfHxlbGVtZW50Lmhhc0NsYXNzZXMob3B0aW9ucy5jbGFzc2VzKSlpZihzZWxmLmlzc2V0KG9wdGlvbnMubm9kZU5hbWUpJiZlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPW9wdGlvbnMubm9kZU5hbWUpZWxlbWVudD1udWxsO2Vsc2V7aWYocG9zaXRpb248PTApcmV0dXJuIGVsZW1lbnQ7Zm91bmRFbGVtZW50cy5wdXNoKGVsZW1lbnQpfWVsc2UgZWxlbWVudD1udWxsO2Vsc2UgZWxlbWVudD1udWxsfWVsZW1lbnQ9Zm91bmRFbGVtZW50cy5sZW5ndGgmJnNlbGYuaXNzZXQoZm91bmRFbGVtZW50c1twb3NpdGlvbl0pP2ZvdW5kRWxlbWVudHNbcG9zaXRpb25dOm51bGx9ZWxzZSBlbGVtZW50PXRoaXMuZmluZChuYW1lKTtyZXR1cm4gZWxlbWVudH0sRWxlbWVudC5wcm90b3R5cGUuc2VhcmNoQWxsPWZ1bmN0aW9uKG5hbWU9XCJcIixvcHRpb25zPXthdHRyaWJ1dGVzOnt9LGlkOlwiXCIsbm9kZU5hbWU6XCJcIixjbGFzczpcIlwiLGNsYXNzZXM6XCJcIn0pe2lmKHNlbGYuaXNzZXQob3B0aW9ucykpe2xldCBhbGxFbGVtZW50cz10aGlzLnF1ZXJ5U2VsZWN0b3JBbGwobmFtZSksZWxlbWVudHM9W107Zm9yKGxldCBpPTA7aTxhbGxFbGVtZW50cy5sZW5ndGg7aSsrKXtsZXQgZWxlbWVudD1hbGxFbGVtZW50c1tpXTtpZihzZWxmLmlzc2V0KG9wdGlvbnMuYXR0cmlidXRlcykpZm9yKGxldCBhdHRyIGluIG9wdGlvbnMuYXR0cmlidXRlcyllbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKT09b3B0aW9ucy5hdHRyaWJ1dGVzW2F0dHJdfHwoZWxlbWVudD1udWxsKTtzZWxmLmlzc2V0KG9wdGlvbnMuaWQpJiZvcHRpb25zLmlkIT1lbGVtZW50LmlkP2VsZW1lbnQ9bnVsbDpzZWxmLmlzc2V0KG9wdGlvbnMuY2xhc3MpJiYhZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMob3B0aW9ucy5jbGFzcyl8fHNlbGYuaXNzZXQob3B0aW9ucy5jbGFzc2VzKSYmIWVsZW1lbnQuaGFzQ2xhc3NlcyhvcHRpb25zLmNsYXNzZXMpP2VsZW1lbnQ9bnVsbDpzZWxmLmlzc2V0KG9wdGlvbnMubm9kZU5hbWUpJiZlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPW9wdGlvbnMubm9kZU5hbWU/ZWxlbWVudD1udWxsOnNlbGYuaXNudWxsKGVsZW1lbnQpfHxlbGVtZW50cy5wdXNoKGVsZW1lbnQpfXJldHVybiBlbGVtZW50c31yZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKG5hbWUpfSxFbGVtZW50LnByb3RvdHlwZS5mZXRjaD1mdW5jdGlvbihuYW1lcz1bXSxwb3NpdGlvbj0wKXtsZXQgZWxlbWVudHM9e307Zm9yKGxldCBuYW1lIG9mIG5hbWVzKWVsZW1lbnRzW25hbWVdPXRoaXMuZmluZChuYW1lLHBvc2l0aW9uKTtyZXR1cm4gZWxlbWVudHN9LEVsZW1lbnQucHJvdG90eXBlLmZldGNoQWxsPWZ1bmN0aW9uKG5hbWVzPVtdKXtsZXQgZWxlbWVudHM9e307Zm9yKGxldCBuYW1lIG9mIG5hbWVzKWVsZW1lbnRzW25hbWVdPXRoaXMuZmluZEFsbChuYW1lKTtyZXR1cm4gZWxlbWVudHN9LEVsZW1lbnQucHJvdG90eXBlLm5vZGVzQmV0d2Vlbj1mdW5jdGlvbihlbGVtZW50QSxlbGVtZW50Qil7bGV0IGluQmV0d2Vlbk5vZGVzPVtdO2ZvcihsZXQgY2hpbGQgb2YgQXJyYXkuZnJvbSh0aGlzLmNoaWxkcmVuKSkoY2hpbGQ9PWVsZW1lbnRBfHxjaGlsZD09ZWxlbWVudEJ8fGNoaWxkLmlzQW5jZXN0b3IoZWxlbWVudEEpfHxjaGlsZC5pc0FuY2VzdG9yKGVsZW1lbnRCKSkmJmluQmV0d2Vlbk5vZGVzLnB1c2goY2hpbGQpO3JldHVybiBpbkJldHdlZW5Ob2Rlc30sRWxlbWVudC5wcm90b3R5cGUuaXNBbmNlc3Rvcj1mdW5jdGlvbihjaGlsZCl7cmV0dXJuIGNoaWxkLnBhcmVudHMoKS5pbmNsdWRlcyh0aGlzKX0sRWxlbWVudC5wcm90b3R5cGUucGFyZW50cz1mdW5jdGlvbigpe2xldCBwYXJlbnRzPVtdLGN1cnJlbnRQYXJlbnQ9dGhpcy5wYXJlbnROb2RlO2Zvcig7bnVsbCE9Y3VycmVudFBhcmVudDspcGFyZW50cy5wdXNoKGN1cnJlbnRQYXJlbnQpLGN1cnJlbnRQYXJlbnQ9Y3VycmVudFBhcmVudC5wYXJlbnROb2RlO3JldHVybiBwYXJlbnRzfSxFbGVtZW50LnByb3RvdHlwZS5jdXN0b21QYXJlbnRzPWZ1bmN0aW9uKCl7bGV0IHBhcmVudHM9dGhpcy5wYXJlbnRzKCksY3VzdG9tUGFyZW50cz1bXTtmb3IobGV0IGk9MDtpPHBhcmVudHMubGVuZ3RoO2krKylwYXJlbnRzW2ldLm5vZGVOYW1lLmluY2x1ZGVzKFwiLVwiKSYmY3VzdG9tUGFyZW50cy5wdXNoKHBhcmVudHNbaV0pO3JldHVybiBjdXN0b21QYXJlbnRzfSxFbGVtZW50LnByb3RvdHlwZS5yZW1vdmVTdGF0ZT1mdW5jdGlvbihwYXJhbXM9e25hbWU6XCJcIn0pe2xldCBzdGF0ZT10aGlzLmdldFN0YXRlKHBhcmFtcyk7c2VsZi5pc3NldChzdGF0ZSkmJnNlbGYuaXNzZXQocGFyYW1zLmZvcmNlKSYmKHNlbGYuaXNzZXQoc3RhdGUuZGF0YXNldC5kb21LZXkpJiZkZWxldGUgc2VsZi52aXJ0dWFsW3N0YXRlLmRhdGFzZXQuZG9tS2V5XSxzdGF0ZS5yZW1vdmUoKSksdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYGRhdGEtJHtwYXJhbXMubmFtZX1gKX0sRWxlbWVudC5wcm90b3R5cGUuZ2V0U3RhdGU9ZnVuY3Rpb24ocGFyYW1zPXtuYW1lOlwiXCJ9KXtsZXQgc3RhdGVOYW1lLHN0YXRlPW51bGw7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHBhcmFtcz9zdGF0ZU5hbWU9cGFyYW1zOnNlbGYuaXNzZXQodGhpcy5kYXRhc2V0W2Ake3BhcmFtcy5uYW1lfWBdKSYmKHN0YXRlTmFtZT1wYXJhbXMubmFtZSksc2VsZi5pc3NldChzdGF0ZU5hbWUpJiYoc3RhdGU9c2VsZi52aXJ0dWFsW3RoaXMuZGF0YXNldFtzdGF0ZU5hbWVdXSksc3RhdGV9LEVsZW1lbnQucHJvdG90eXBlLmFkZFN0YXRlPWZ1bmN0aW9uKHBhcmFtcz17bmFtZTpcIlwifSl7cmV0dXJuIHNlbGYuaXNzZXQocGFyYW1zLnN0YXRlLmRhdGFzZXQuZG9tS2V5KXx8cGFyYW1zLnN0YXRlLnNldEtleSgpLHRoaXMuZGF0YXNldFtwYXJhbXMubmFtZV09cGFyYW1zLnN0YXRlLmRhdGFzZXQuZG9tS2V5LHRoaXMuc3RhdGVzW3BhcmFtcy5uYW1lXT17fSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihwYXJhbXM9e25hbWU6XCJcIixhdHRyaWJ1dGVzOnt9LHJlbmRlcjp7fSxjaGlsZHJlbjpbXSx0ZXh0OlwiXCIsaHRtbDpcIlwiLHZhbHVlOlwiXCIsb3B0aW9uczpbXX0pe2xldCBzdGF0ZT10aGlzLmdldFN0YXRlKHBhcmFtcyk7aWYoc3RhdGUuc2V0QXR0cmlidXRlcyhwYXJhbXMuYXR0cmlidXRlcyksc2VsZi5pc3NldChwYXJhbXMuY2hpbGRyZW4pJiZzdGF0ZS5tYWtlRWxlbWVudChwYXJhbXMuY2hpbGRyZW4pLHNlbGYuaXNzZXQocGFyYW1zLnJlbmRlcikmJnN0YXRlLnJlbmRlcihwYXJhbXMucmVuZGVyKSxzZWxmLmlzc2V0KHBhcmFtcy50ZXh0KSYmKHN0YXRlLnRleHRDb250ZW50PXBhcmFtcy50ZXh0KSxzZWxmLmlzc2V0KHBhcmFtcy5odG1sKSYmKHN0YXRlLmlubmVySFRNTD1wYXJhbXMuaHRtbCksc2VsZi5pc3NldChwYXJhbXMudmFsdWUpJiYoc3RhdGUudmFsdWU9cGFyYW1zLnZhbHVlKSxzZWxmLmlzc2V0KHBhcmFtcy5vcHRpb25zKSlmb3IodmFyIGkgb2YgcGFyYW1zLm9wdGlvbnMpc3RhdGUubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJvcHRpb25cIix2YWx1ZTppLHRleHQ6aSxhdHRhY2htZW50OlwiYXBwZW5kXCJ9KTtyZXR1cm4gdGhpcy5zdGF0ZXNbcGFyYW1zLm5hbWVdW0pTT04uc3RyaW5naWZ5KHBhcmFtcyldPXN0YXRlLmNsb25lTm9kZSghMCksc3RhdGV9LEVsZW1lbnQucHJvdG90eXBlLnNldEtleUFzeW5jPWFzeW5jIGZ1bmN0aW9uKCl7cmV0dXJuIGF3YWl0IHRoaXMuc2V0S2V5KCl9LEVsZW1lbnQucHJvdG90eXBlLnNldEtleT1mdW5jdGlvbigpe2xldCBrZXk9RGF0ZS5ub3coKS50b1N0cmluZygzNikrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7cmV0dXJuIHNlbGYuaXNzZXQodGhpcy5kYXRhc2V0LmRvbUtleSk/a2V5PXRoaXMuZGF0YXNldC5kb21LZXk6dGhpcy5kYXRhc2V0LmRvbUtleT1rZXksc2VsZi52aXJ0dWFsW2tleV09dGhpcyxrZXl9LEVsZW1lbnQucHJvdG90eXBlLmRyb3BEb3duPWZ1bmN0aW9uKGVsZW1lbnQpe2xldCBwYXJlbnRDb250ZW50PXRoaXMuY2xvbmVOb2RlKCEwKTt0aGlzLmlubmVySFRNTD1cIlwiLHRoaXMuYXBwZW5kKHBhcmVudENvbnRlbnQpLHBhcmVudENvbnRlbnQuY3NzKHtib3hTaGFkb3c6XCIxcHggMXB4IDFweCAxcHggI2FhYWFhYVwifSksdGhpcy5jc3Moe2JveFNoYWRvdzpcIjAuNXB4IDAuNXB4IDAuNXB4IDAuNXB4ICNjY2NjY2NcIn0pO2xldCBkcm9wQ29udGFpbmVyPXRoaXMubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImRyb3AtZG93blwifX0pO3JldHVybiBkcm9wQ29udGFpbmVyLmFwcGVuZChlbGVtZW50KSx0aGlzLnJlbW92ZURyb3BEb3duPSgoKT0+e2Ryb3BDb250YWluZXIucmVtb3ZlKCkscGFyZW50Q29udGVudC5jc3Moe2JveFNoYWRvdzpcInVuc2V0XCJ9KSx0aGlzLmlubmVySFRNTD1wYXJlbnRDb250ZW50LmlubmVySFRNTH0pLHRoaXN9LEVsZW1lbnQucHJvdG90eXBlLnN0b3BNb25pdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub2JzZXJ2ZSYmdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCksdGhpc30sRWxlbWVudC5wcm90b3R5cGUub25BdHRyaWJ1dGVDaGFuZ2U9ZnVuY3Rpb24oYXR0cmlidXRlPVwiXCIsY2FsbGJhY2s9KCgpPT57fSkpe3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImF0dHJpYnV0ZXNDaGFuZ2VkXCIsZXZlbnQ9PntldmVudC5kZXRhaWwuYXR0cmlidXRlTmFtZT09YXR0cmlidXRlJiZjYWxsYmFjayhldmVudCl9KX0sRWxlbWVudC5wcm90b3R5cGUubW9uaXRvcj1mdW5jdGlvbihjb25maWc9e2F0dHJpYnV0ZXM6ITAsY2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KXtyZXR1cm4gdGhpcy5vYnNlcnZlcj1uZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25MaXN0LG9ic2VydmVyKT0+e211dGF0aW9uTGlzdC5sZW5ndGgmJnRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJtdXRhdGVkXCIpKTtmb3IobGV0IG11dGF0aW9uIG9mIG11dGF0aW9uTGlzdClcImNoaWxkTGlzdFwiPT1tdXRhdGlvbi50eXBlP3RoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJjaGlsZExpc3RjaGFuZ2VkXCIse2RldGFpbDptdXRhdGlvbn0pKTpcImF0dHJpYnV0ZXNcIj09bXV0YXRpb24udHlwZT90aGlzLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiYXR0cmlidXRlc0NoYW5nZWRcIix7ZGV0YWlsOm11dGF0aW9ufSkpOlwiY2hhcmFjdGVyRGF0YVwiPT1tdXRhdGlvbi50eXBlJiZ0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiY2hhcmFjdGVyRGF0YUNoYW5nZWRcIix7ZGV0YWlsOm11dGF0aW9ufSkpfSksdGhpcy5vYnNlcnZlci5vYnNlcnZlKHRoaXMsY29uZmlnKSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5jaGVja0NoYW5nZXM9ZnVuY3Rpb24oY2FsbGJhY2s9KCgpPT57fSkpe3RoaXMubW9uaXRvcigpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcIm11dGF0ZWRcIixldmVudD0+e2NhbGxiYWNrKGV2ZW50KX0pfSxFbGVtZW50LnByb3RvdHlwZS5vbkNoYW5nZWQ9ZnVuY3Rpb24oY2FsbEJhY2s9KCgpPT57fSkpe3RoaXMuZ2V0QXR0cmlidXRlKFwidmFsdWVcIik7bGV0IHVwZGF0ZU1lPWV2ZW50PT57aWYoXCJJTlBVVFwiPT1ldmVudC50YXJnZXQubm9kZU5hbWUpaWYoXCJkYXRlXCI9PWV2ZW50LnRhcmdldC50eXBlKXRoaXMuaXNEYXRlKHRoaXMudmFsdWUpJiZ0aGlzLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsdGhpcy52YWx1ZSk7ZWxzZSBpZihcInRpbWVcIj09ZXZlbnQudGFyZ2V0LnR5cGUpdGhpcy5pc1RpbWVWYWxpZCh0aGlzLnZhbHVlKSYmdGhpcy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLHRoaXMudmFsdWUpO2Vsc2UgaWYoXCJmaWxlXCI9PWV2ZW50LnRhcmdldC50eXBlKXtldmVudC50YXJnZXQudmFsdWU7bGV0IGZpbGU9ZXZlbnQudGFyZ2V0LmZpbGVzWzBdOzA9PWZpbGUudHlwZS5pbmRleE9mKFwiaW1hZ2VcIikmJnNlbGYuaW1hZ2VUb0pzb24oZmlsZSxjYWxsQmFjayl9ZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsdGhpcy52YWx1ZSk7ZWxzZSBpZihcIlNFTEVDVFwiPT1ldmVudC50YXJnZXQubm9kZU5hbWUpZm9yKGxldCBpPTA7aTxldmVudC50YXJnZXQub3B0aW9ucy5sZW5ndGg7aSsrKWk9PWV2ZW50LnRhcmdldC5zZWxlY3RlZEluZGV4P2V2ZW50LnRhcmdldC5vcHRpb25zW2ldLnNldEF0dHJpYnV0ZShcInNlbGVjdGVkXCIsITApOmV2ZW50LnRhcmdldC5vcHRpb25zW2ldLnJlbW92ZUF0dHJpYnV0ZShcInNlbGVjdGVkXCIpO2Vsc2VcIkRBVEEtRUxFTUVOVFwiPT1ldmVudC50YXJnZXQubm9kZU5hbWU/dGhpcy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLHRoaXMudmFsdWUpOlwiU0VMRUNULUVMRU1FTlRcIj09ZXZlbnQudGFyZ2V0Lm5vZGVOYW1lP3RoaXMuc2V0QXR0cmlidXRlKFwidmFsdWVcIix0aGlzLnZhbHVlKTp0aGlzLnZhbHVlPXRoaXMudGV4dENvbnRlbnQ7c2VsZi5pc3NldChjYWxsQmFjaykmJlwiZmlsZVwiIT1ldmVudC50YXJnZXQudHlwZSYmY2FsbEJhY2sodGhpcy52YWx1ZSxldmVudCl9O3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsZXZlbnQ9Pnt1cGRhdGVNZShldmVudCl9KSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixldmVudD0+e3VwZGF0ZU1lKGV2ZW50KX0pfSxFbGVtZW50LnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24ocGFyYW1zPXtlbGVtZW50OlwiXCIsYXR0cmlidXRlczp7fX0sZXhjZXB0KXtzZWxmLmlzc2V0KGV4Y2VwdCk/dGhpcy5yZW1vdmVDaGlsZHJlbihleGNlcHQpOnRoaXMucmVtb3ZlQ2hpbGRyZW4oKSx0aGlzLm1ha2VFbGVtZW50KHBhcmFtcyl9LEVsZW1lbnQucHJvdG90eXBlLmdldEFsbENzc1Byb3BlcnRpZXM9ZnVuY3Rpb24oKXtsZXQgY3NzUnVsZXMsc2VsZWN0b3JUZXh0LHN0eWxlU2hlZXRzPUFycmF5LmZyb20oZG9jdW1lbnQuc3R5bGVTaGVldHMpLGlkPXRoaXMuaWQsbm9kZU5hbWU9dGhpcy5ub2RlTmFtZSxjbGFzc0xpc3Q9QXJyYXkuZnJvbSh0aGlzLmNsYXNzTGlzdCkscHJvcGVydGllcz17fTtmb3IodmFyIGkgaW4gY2xhc3NMaXN0KWNsYXNzTGlzdFtpXT1gLiR7Y2xhc3NMaXN0W2ldfWA7Zm9yKGk9MDtpPHN0eWxlU2hlZXRzLmxlbmd0aDtpKyspe2Nzc1J1bGVzPXN0eWxlU2hlZXRzW2ldLmNzc1J1bGVzO2Zvcih2YXIgaj0wO2o8Y3NzUnVsZXMubGVuZ3RoO2orKylpZigoc2VsZWN0b3JUZXh0PWNzc1J1bGVzW2pdLnNlbGVjdG9yVGV4dCk9PWAjJHtpZH1gfHxzZWxlY3RvclRleHQ9PW5vZGVOYW1lfHwtMSE9Y2xhc3NMaXN0LmluZGV4T2Yoc2VsZWN0b3JUZXh0KSl7cHJvcGVydGllc1tzZWxlY3RvclRleHRdPXt9O2xldCBzdHlsZT1jc3NSdWxlc1tqXS5zdHlsZTtmb3IobGV0IG4gaW4gc3R5bGUpXCJcIiE9PXN0eWxlW25dJiYocHJvcGVydGllc1tzZWxlY3RvclRleHRdW25dPXN0eWxlW25dKX19cmV0dXJuIHByb3BlcnRpZXMuc3R5bGU9dGhpcy5jc3MoKSxwcm9wZXJ0aWVzfSxFbGVtZW50LnByb3RvdHlwZS5nZXRDc3NQcm9wZXJ0aWVzPWZ1bmN0aW9uKHByb3BlcnR5PVwiXCIpe2xldCBhbGxQcm9wZXJ0aWVzPXRoaXMuZ2V0QWxsQ3NzUHJvcGVydGllcygpLHByb3BlcnRpZXM9e307Zm9yKGxldCBuYW1lIGluIGFsbFByb3BlcnRpZXMpe3Byb3BlcnRpZXNbbmFtZV09e307Zm9yKGxldCBwIGluIGFsbFByb3BlcnRpZXNbbmFtZV0pcHJvcGVydHk9PXAmJihwcm9wZXJ0aWVzW25hbWVdW3BdPWFsbFByb3BlcnRpZXNbbmFtZV1bcF0pfXJldHVybiBwcm9wZXJ0aWVzfSxFbGVtZW50LnByb3RvdHlwZS5oYXNDc3NQcm9wZXJ0eT1mdW5jdGlvbihwcm9wZXJ0eT1cIlwiKXt2YXIgcHJvcGVydGllcz10aGlzLmdldENzc1Byb3BlcnRpZXMocHJvcGVydHkpO2Zvcih2YXIgaSBpbiBwcm9wZXJ0aWVzKWlmKHNlbGYuaXNzZXQocHJvcGVydGllc1tpXSkmJlwiXCIhPXByb3BlcnRpZXNbaV0pcmV0dXJuITA7cmV0dXJuITF9LEVsZW1lbnQucHJvdG90eXBlLmNzc1Byb3BlcnR5VmFsdWU9ZnVuY3Rpb24ocHJvcGVydHk9XCJcIil7dmFyIHByb3BlcnRpZXM9dGhpcy5nZXRDc3NQcm9wZXJ0aWVzKHByb3BlcnR5KSxpZD10aGlzLmlkLGNsYXNzTGlzdD1BcnJheS5mcm9tKHRoaXMuY2xhc3NMaXN0KTtpZihzZWxmLmlzc2V0KHByb3BlcnRpZXMuc3R5bGUpJiZcIlwiIT1wcm9wZXJ0aWVzLnN0eWxlKXJldHVybiBwcm9wZXJ0aWVzLnN0eWxlO2lmKHNlbGYuaXNzZXQoaWQpJiZzZWxmLmlzc2V0KHByb3BlcnRpZXNbYCMke2lkfWBdKSYmXCJcIiE9cHJvcGVydGllc1tgIyR7aWR9YF0pcmV0dXJuIHByb3BlcnRpZXNbYCMke2lkfWBdO2Zvcih2YXIgaSBvZiBjbGFzc0xpc3QpaWYoc2VsZi5pc3NldChwcm9wZXJ0aWVzW2AuJHtpfWBdKSYmXCJcIiE9cHJvcGVydGllc1tgLiR7aX1gXSlyZXR1cm4gcHJvcGVydGllc1tgLiR7aX1gXTtyZXR1cm4gc2VsZi5pc3NldChwcm9wZXJ0aWVzW3RoaXMubm9kZU5hbWVdKSYmXCJcIiE9cHJvcGVydGllc1t0aGlzLm5vZGVOYW1lXT9wcm9wZXJ0aWVzW3RoaXMubm9kZU5hbWVdOlwiXCJ9LEVsZW1lbnQucHJvdG90eXBlLmNzcz1mdW5jdGlvbihzdHlsZXM9e30pe3JldHVybiBzZWxmLmlzc2V0KHN0eWxlcykmJk9iamVjdC5rZXlzKHN0eWxlcykubWFwKGtleT0+e3RoaXMuc3R5bGVba2V5XT1zdHlsZXNba2V5XX0pLHNlbGYuZXh0cmFjdENTUyh0aGlzKX0sRWxlbWVudC5wcm90b3R5cGUuY3NzUmVtb3ZlPWZ1bmN0aW9uKHN0eWxlcz1bXSl7aWYoQXJyYXkuaXNBcnJheShzdHlsZXMpKWZvcih2YXIgaSBvZiBzdHlsZXMpdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShpKTtlbHNlIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoc3R5bGVzKTtyZXR1cm4gdGhpcy5jc3MoKX0sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlQ2hpbGQ9ZnVuY3Rpb24oY2hpbGQpe3ZhciBuYW1lLF9jbGFzc2VzLGlkLGZvdW5kPSExO2NvbnNvbGUubG9nKGNoaWxkKSx0aGlzLmNoaWxkcmVuLmZvckVhY2gobm9kZT0+e25hbWU9bm9kZS5ub2RlTmFtZSxfY2xhc3Nlcz1ub2RlLmNsYXNzTGlzdCxpZD1ub2RlLmlkLG5hbWU9PWNoaWxkLm5vZGVOYW1lJiZpZD09Y2hpbGQuaWQmJl9jbGFzc2VzLnRvU3RyaW5nKCk9PWNoaWxkLmNsYXNzTGlzdC50b1N0cmluZygpJiYobm9kZS5yZW1vdmUoKSxmb3VuZD0hMCl9KSxmb3VuZHx8dGhpcy5hcHBlbmQoY2hpbGQpfSxFbGVtZW50LnByb3RvdHlwZS5jbGVhckNsYXNzZXM9ZnVuY3Rpb24oZXhjZXB0PVwiXCIpe2V4Y2VwdD1leGNlcHQuc3BsaXQoXCIsXCIpO2ZvcihsZXQgaiBpbiBleGNlcHQpZXhjZXB0W2pdPWV4Y2VwdFtqXS50cmltKCk7Zm9yKGxldCBpIG9mIHRoaXMuY2xhc3NMaXN0KXNlbGYuaXNzZXQoZXhjZXB0KSYmZXhjZXB0LmluY2x1ZGVzKGkpfHx0aGlzLmNsYXNzTGlzdC5yZW1vdmUoaSl9LEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUNsYXNzZXM9ZnVuY3Rpb24oY2xhc3Nlcz1cIlwiKXtjbGFzc2VzPWNsYXNzZXMuc3BsaXQoXCIsXCIpO2ZvcihsZXQgaSBvZiBjbGFzc2VzKVwiXCIhPShpPWkudHJpbSgpKSYmdGhpcy5jbGFzc0xpc3QucmVtb3ZlKGkpfSxFbGVtZW50LnByb3RvdHlwZS5hZGRDbGFzc2VzPWZ1bmN0aW9uKGNsYXNzZXM9XCJcIil7Y2xhc3Nlcz1jbGFzc2VzLnNwbGl0KFwiLFwiKTtmb3IobGV0IGkgb2YgY2xhc3NlcylcIlwiIT0oaT1pLnRyaW0oKSkmJnRoaXMuY2xhc3NMaXN0LmFkZChpKX0sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlQ2xhc3Nlcz1mdW5jdGlvbihjbGFzc2VzPVwiXCIpe2NsYXNzZXM9Y2xhc3Nlcy5zcGxpdChcIixcIik7Zm9yKGxldCBpIG9mIGNsYXNzZXMpXCJcIiE9KGk9aS50cmltKCkpJiZ0aGlzLmNsYXNzTGlzdC50b2dnbGUoaSl9LEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUNsYXNzPWZ1bmN0aW9uKF9jbGFzcz1cIlwiKXtyZXR1cm4gdGhpcy5jbGFzc0xpc3QucmVtb3ZlKF9jbGFzcyksdGhpc30sRWxlbWVudC5wcm90b3R5cGUuaGFzQ2xhc3Nlcz1mdW5jdGlvbihjbGFzc0xpc3Q9W10pe2ZvcihsZXQgbUNsYXNzIG9mIGNsYXNzTGlzdClpZighdGhpcy5jbGFzc0xpc3QuY29udGFpbnMobUNsYXNzKSlyZXR1cm4hMTtyZXR1cm4hMH0sRWxlbWVudC5wcm90b3R5cGUuYWRkQ2xhc3M9ZnVuY3Rpb24oX2NsYXNzPVwiXCIpe3JldHVybiB0aGlzLmNsYXNzTGlzdC5hZGQoX2NsYXNzKSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS50b2dnbGVDbGFzcz1mdW5jdGlvbihfY2xhc3M9XCJcIil7cmV0dXJuIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShfY2xhc3MpLHRoaXN9LEVsZW1lbnQucHJvdG90eXBlLnBvc2l0aW9uPWZ1bmN0aW9uKHBhcmFtcz17fSl7cmV0dXJuIHNlbGYuaXNzZXQocGFyYW1zKSYmKE9iamVjdC5rZXlzKHBhcmFtcykubWFwKGtleT0+e3BhcmFtc1trZXldPVwicHhcIj09bmV3IFN0cmluZyhwYXJhbXNba2V5XSkuc2xpY2UocGFyYW1zW2tleV0ubGVuZ3RoLTIpP3BhcmFtc1trZXldOmAke3BhcmFtc1trZXldfXB4YH0pLHRoaXMuY3NzKHBhcmFtcykpLHRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCl9LEVsZW1lbnQucHJvdG90eXBlLmluVmlldz1mdW5jdGlvbihwYXJlbnRJZGVudGlmaWVyPVwiXCIpe2xldCBwYXJlbnQ9dGhpcy5nZXRQYXJlbnRzKHBhcmVudElkZW50aWZpZXIpLHRvcD10aGlzLnBvc2l0aW9uKCkudG9wLGZsYWc9ITE7cmV0dXJuIHNlbGYuaXNudWxsKHBhcmVudCl8fChmbGFnPXRvcD49MCYmdG9wPD1wYXJlbnQuY2xpZW50SGVpZ2h0KSxmbGFnfSxFbGVtZW50LnByb3RvdHlwZS5oYXNDbGFzcz1mdW5jdGlvbihfY2xhc3M9XCJcIil7cmV0dXJuIHRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKF9jbGFzcyl9LEVsZW1lbnQucHJvdG90eXBlLnNldFByb3BlcnRpZXM9ZnVuY3Rpb24ocHJvcGVydGllcz17fSl7Zm9yKGxldCBpIGluIHByb3BlcnRpZXMpdGhpc1tpXT1wcm9wZXJ0aWVzW2ldfSxFbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGVzPWZ1bmN0aW9uKGF0dHJpYnV0ZXM9e30pe2ZvcihsZXQgaSBpbiBhdHRyaWJ1dGVzKVwic3R5bGVcIj09aT90aGlzLmNzcyhhdHRyaWJ1dGVzW2ldKTp0aGlzLnNldEF0dHJpYnV0ZShpLGF0dHJpYnV0ZXNbaV0pfSxFbGVtZW50LnByb3RvdHlwZS5nZXRBdHRyaWJ1dGVzPWZ1bmN0aW9uKG5hbWVzPVtdKXswPT1uYW1lcy5sZW5ndGgmJihuYW1lcz10aGlzLmdldEF0dHJpYnV0ZU5hbWVzKCkpO2xldCBhdHRyaWJ1dGVzPXt9O2ZvcihsZXQgbmFtZSBvZiBuYW1lcylhdHRyaWJ1dGVzW25hbWVdPXRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpO3JldHVybiBhdHRyaWJ1dGVzfSxFbGVtZW50LnByb3RvdHlwZS5tYWtlRWxlbWVudD1mdW5jdGlvbihwYXJhbXM9e2VsZW1lbnQ6XCJcIixhdHRyaWJ1dGVzOnt9fSl7cmV0dXJuIHRoaXMuc2V0S2V5QXN5bmMoKSxzZWxmLmNyZWF0ZUVsZW1lbnQocGFyYW1zLHRoaXMpfSxFbGVtZW50LnByb3RvdHlwZS5nZXRQYXJlbnRzPWZ1bmN0aW9uKG5hbWU9XCJcIix2YWx1ZT1cIlwiKXt2YXIgYXR0cmlidXRlPW5hbWUuc2xpY2UoMCwxKSxwYXJlbnQ9dGhpcy5wYXJlbnROb2RlO2lmKFwiLlwiPT1hdHRyaWJ1dGUpZm9yKDtwYXJlbnQmJighc2VsZi5pc3NldChwYXJlbnQuY2xhc3NMaXN0KXx8IXBhcmVudC5jbGFzc0xpc3QuY29udGFpbnMobmFtZS5zbGljZSgxKSkpOylwYXJlbnQ9cGFyZW50LnBhcmVudE5vZGU7ZWxzZSBpZihcIiNcIj09YXR0cmlidXRlKWZvcig7cGFyZW50JiYoIXNlbGYuaXNzZXQocGFyZW50LmlkKXx8cGFyZW50LmlkIT1uYW1lLnNsaWNlKDEpKTspcGFyZW50PXBhcmVudC5wYXJlbnROb2RlO2Vsc2UgZm9yKDtwYXJlbnQmJighc2VsZi5pc3NldChwYXJlbnQubm9kZU5hbWUpfHxwYXJlbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSE9bmFtZS50b0xvd2VyQ2FzZSgpKTspe2lmKHNlbGYuaXNzZXQocGFyZW50Lmhhc0F0dHJpYnV0ZSkmJnBhcmVudC5oYXNBdHRyaWJ1dGUobmFtZSkpe2lmKHNlbGYuaXNzZXQodmFsdWUpJiZwYXJlbnQuZ2V0QXR0cmlidXRlKG5hbWUpPT12YWx1ZSlicmVhazticmVha31wYXJlbnQ9cGFyZW50LnBhcmVudE5vZGV9cmV0dXJuIHBhcmVudH0sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKCl7XCJub25lXCI9PXRoaXMuc3R5bGUuZGlzcGxheXx8XCJoaWRkZW5cIj09dGhpcy5zdHlsZS52aXNpYmlsaXR5P3RoaXMuc2hvdygpOnRoaXMuaGlkZSgpfSxFbGVtZW50LnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pLHRoaXN9LEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUNoaWxkcmVuPWZ1bmN0aW9uKHBhcmFtcz17ZXhjZXB0OltdfSl7bGV0IGV4Y2VwdGlvbnM9W107KHBhcmFtcz1wYXJhbXN8fHt9KS5leGNlcHQ9cGFyYW1zLmV4Y2VwdHx8W107bGV0IGV4Y2VwdD1wYXJhbXMuZXhjZXB0O2ZvcihsZXQgaT0wO2k8ZXhjZXB0Lmxlbmd0aDtpKyspe2xldCBhbGw9dGhpcy5maW5kQWxsKGV4Y2VwdFtpXSk7Zm9yKGxldCBqPTA7ajxhbGwubGVuZ3RoO2orKylleGNlcHRpb25zLmluY2x1ZGVzKGFsbFtqXSl8fGV4Y2VwdGlvbnMucHVzaChhbGxbal0pfXJldHVybiB0aGlzLmNoaWxkcmVuLmZvckVhY2gobm9kZT0+e2V4Y2VwdGlvbnMuaW5jbHVkZXMobm9kZSl8fG5vZGUucmVtb3ZlKCl9KSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24oKXtzZWxmLmlzc2V0KHRoaXMuZGF0YXNldC5kb21LZXkpJiZkZWxldGUgc2VsZi52aXJ0dWFsW3RoaXMuZGF0YXNldC5kb21LZXldLHRoaXMucmVtb3ZlKCl9LEVsZW1lbnQucHJvdG90eXBlLmRlbGV0ZUNoaWxkPWZ1bmN0aW9uKGNoaWxkKXtyZXR1cm4gY2hpbGQuZGVsZXRlKCksdGhpc30sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlQ2hpbGRyZW49ZnVuY3Rpb24ocGFyYW1zPXtuYW1lOlwiXCIsY2xhc3M6XCJcIixpZDpcIlwifSl7QXJyYXkuZnJvbSh0aGlzLmNoaWxkcmVuKS5mb3JFYWNoKG5vZGU9PntzZWxmLmlzc2V0KHBhcmFtcy5uYW1lKSYmcGFyYW1zLm5hbWU9PW5vZGUubm9kZU5hbWV8fHNlbGYuaXNzZXQocGFyYW1zLmNsYXNzKSYmc2VsZi5oYXNBcnJheUVsZW1lbnQoQXJyYXkuZnJvbShub2RlLmNsYXNzTGlzdCkscGFyYW1zLmNsYXNzLnNwbGl0KFwiIFwiKSl8fHNlbGYuaXNzZXQocGFyYW1zLmlkKSYmKHBhcmFtcy5pZCxub2RlLmlkKSxub2RlLnRvZ2dsZSgpfSl9LEVsZW1lbnQucHJvdG90eXBlLmF0dGFjaEVsZW1lbnQ9ZnVuY3Rpb24oZWxlbWVudCxhdHRhY2htZW50PVwiYXBwZW5kXCIpe3RoaXNbYXR0YWNobWVudF0oZWxlbWVudCl9LEVsZW1lbnQucHJvdG90eXBlLnByZXNzZWQ9ZnVuY3Rpb24oY2FsbGJhY2s9KCgpPT57fSkpe2xldCBzdGFydFRpbWU9MCxlbmRUaW1lPTA7dGhpcy5hZGRNdWx0aXBsZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd24sIHRvdWNoc3RhcnRcIixldmVudD0+e3N0YXJ0VGltZT1ldmVudC50aW1lU3RhbXB9KSx0aGlzLmFkZE11bHRpcGxlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXAsIHRvdWNoZW5kXCIsZXZlbnQ9PntlbmRUaW1lPWV2ZW50LnRpbWVTdGFtcCxldmVudC5kdXJhdGlvbj1lbmRUaW1lLXN0YXJ0VGltZSxjYWxsYmFjayhldmVudCl9KX19aHRtbENvbGxlY3Rpb25MaWJyYXJ5KEhUTUxDb2xsZWN0aW9uPV9fRW1wdHlfOSl7bGV0IHNlbGY9dGhpcztIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUucG9wSW5kZXg9ZnVuY3Rpb24ocG9zaXRpb249MCl7bGV0IGNvbGxlY3Rpb249c2VsZi5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic2FtcGxlXCJ9KS5jaGlsZHJlbixsaXN0PUFycmF5LmZyb20odGhpcyk7Zm9yKGxldCBpPTA7aTxsaXN0Lmxlbmd0aDtpKyspaSE9cG9zaXRpb24mJihjb2xsZWN0aW9uW2ldPXRoaXMuaXRlbShpKSxjb25zb2xlLmxvZyhjb2xsZWN0aW9uKSk7cmV0dXJuIGNvbGxlY3Rpb259LEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5mb3JFYWNoPWZ1bmN0aW9uKGNhbGxiYWNrPSgoKT0+e30pKXtsZXQgbGlzdD1BcnJheS5mcm9tKHRoaXMpO2ZvcihsZXQgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKWNhbGxiYWNrKGxpc3RbaV0saSl9LEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5lYWNoPWZ1bmN0aW9uKGNhbGxiYWNrPSgoKT0+e30pKXtsZXQgbGlzdD1BcnJheS5mcm9tKHRoaXMpO2ZvcihsZXQgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKWNhbGxiYWNrKGxpc3RbaV0saSl9LEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKGVsZW1lbnQpe2xldCBsaXN0PUFycmF5LmZyb20odGhpcyk7Zm9yKGxldCBpIGluIGxpc3QpaWYobGlzdD09ZWxlbWVudClyZXR1cm4gaTtyZXR1cm4tMX0sSFRNTENvbGxlY3Rpb24ucHJvdG90eXBlLmluY2x1ZGVzPWZ1bmN0aW9uKGVsZW1lbnQpe3JldHVybi0xIT10aGlzLmluZGV4T2YoZWxlbWVudCl9LEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5ub2Rlc0JldHdlZW49ZnVuY3Rpb24oZWxlbWVudEEsZWxlbWVudEIpe2xldCBpbkJldHdlZW5Ob2Rlcz1bXSxsaXN0PUFycmF5LmZyb20odGhpcyk7Zm9yKGxldCBhUGFyZW50IG9mIGxpc3QpKGFQYXJlbnQ9PWVsZW1lbnRBfHxhUGFyZW50PT1lbGVtZW50Qnx8YVBhcmVudC5pc0FuY2VzdG9yKGVsZW1lbnRBKXx8YVBhcmVudC5pc0FuY2VzdG9yKGVsZW1lbnRCKSkmJmluQmV0d2Vlbk5vZGVzLnB1c2goYVBhcmVudCk7cmV0dXJuIGluQmV0d2Vlbk5vZGVzfX1ub2RlTGlicmFyeShOb2RlPV9fRW1wdHlfOSl7Tm9kZS5wcm90b3R5cGUuc3RhdGVzPXt9fW5vZGVMaXN0TGlicmFyeShOb2RlTGlzdD1fX0VtcHR5Xzkpe05vZGVMaXN0LnByb3RvdHlwZS5lYWNoPWZ1bmN0aW9uKGNhbGxiYWNrPSgoKT0+e30pKXtmb3IobGV0IGk9MDtpPHRoaXMubGVuZ3RoO2krKyljYWxsYmFjayh0aGlzW2ldLGkpfSxOb2RlTGlzdC5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlbGVtZW50KXtmb3IobGV0IGkgaW4gdGhpcylpZih0aGlzW2ldPT1lbGVtZW50KXJldHVybiBpO3JldHVybi0xfSxOb2RlTGlzdC5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZWxlbWVudCl7cmV0dXJuLTEhPXRoaXMuaW5kZXhPZihlbGVtZW50KX0sTm9kZUxpc3QucHJvdG90eXBlLm5vZGVzQmV0d2Vlbj1mdW5jdGlvbihlbGVtZW50QSxlbGVtZW50Qil7bGV0IGluQmV0d2Vlbk5vZGVzPVtdO2ZvcihsZXQgYVBhcmVudCBvZiB0aGlzKShhUGFyZW50PT1lbGVtZW50QXx8YVBhcmVudD09ZWxlbWVudEJ8fGFQYXJlbnQuaXNBbmNlc3RvcihlbGVtZW50QSl8fGFQYXJlbnQuaXNBbmNlc3RvcihlbGVtZW50QikpJiZpbkJldHdlZW5Ob2Rlcy5wdXNoKGFQYXJlbnQpO3JldHVybiBpbkJldHdlZW5Ob2Rlc319fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWxSbGJYQnNZWFJsTG1weklsMHNJbTVoYldWeklqcGJJa1Z0Y0hSNUlpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJa3BUUld4bGJXVnVkSE1pTENKYmIySnFaV04wSUU5aWFtVmpkRjBpTENKMGFHVlhhVzVrYjNjaUxDSnpkWEJsY2lJc0luUm9hWE1pTENKMmFYSjBkV0ZzSWl3aVpXeGxiV1Z1ZEV4cFluSmhjbmtpTENKRmJHVnRaVzUwSWl3aWFIUnRiRU52Ykd4bFkzUnBiMjVNYVdKeVlYSjVJaXdpU0ZSTlRFTnZiR3hsWTNScGIyNGlMQ0p1YjJSbFRHbGljbUZ5ZVNJc0lrNXZaR1VpTENKdWIyUmxUR2x6ZEV4cFluSmhjbmtpTENKT2IyUmxUR2x6ZENJc0luTmxiR1lpTENKd2NtOTBiM1I1Y0dVaUxDSmphR0Z1WjJWT2IyUmxUbUZ0WlNJc0ltNWhiV1VpTENKemRISjFZM1IxY21VaUxDSjBiMHB6YjI0aUxDSmxiR1Z0Wlc1MElpd2lZM0psWVhSbFJXeGxiV1Z1ZENJc0ltNXZaR1ZPWVcxbElpd2lkRzlNYjNkbGNrTmhjMlVpTENKaGRIUnlhV0oxZEdWeklpd2laMlYwUVhSMGNtbGlkWFJsY3lJc0luTjBlV3hsSWl3aVkzTnpJaXdpWTJocGJHUnlaVzRpTENKcElpd2liR1Z1WjNSb0lpd2ljSFZ6YUNJc0luTmxkRTl3ZEdsdmJuTWlMQ0p2Y0hScGIyNXpJaXdpY0dGeVlXMXpJaXdpYzJWc1pXTjBaV1FpTENKcGMzTmxkQ0lzSW1ac1lXY2lMQ0pwYm01bGNraFVUVXdpTENKMFpYaDBJaXdpZG1Gc2RXVWlMQ0p2Y0hScGIyNGlMQ0p0WVd0bFJXeGxiV1Z1ZENJc0luUnZVM1J5YVc1bklpd2ljMlYwUVhSMGNtbGlkWFJsSWl3aVkyOXRiVzl1UVc1alpYTjBiM0lpTENKbGJHVnRaVzUwUVNJc0ltVnNaVzFsYm5SQ0lpd2lZVzVqWlhOMGIzSkJJaXdpY0dGeVpXNTBjeUlzSW1GdVkyVnpkRzl5UWlJc0ltOXVRV1JrWldRaUxDSmpZV3hzWW1GamF5SXNJbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSWlMQ0psZG1WdWRDSXNJbk4wWVhSbGN5SXNJblJsYlhBaUxDSnRZVzU1UW5WaVlteGxaRVYyWlc1MGN5SXNJbVYyWlc1MGN5SXNJbk53YkdsMElpd2lZblZpWW14bFpFVjJaVzUwSWl3aWRISnBiU0lzSW0xaGJubE9iM1JDZFdKaWJHVmtSWFpsYm5Seklpd2libTkwUW5WaVlteGxaRVYyWlc1MElpd2laRzlqZFcxbGJuUWlMQ0owWVhKblpYUWlMQ0pwYzBGdVkyVnpkRzl5SWl3aVlXUmtUWFZzZEdsd2JHVkZkbVZ1ZEV4cGMzUmxibVZ5SWl3aVpTSXNJbWh2ZG1WeUlpd2laRzhpTENKamMzTldZV3gxWlhNaUxDSmhjbkpoZVNJc0ltVmhZMmdpTENKUFltcGxZM1FpTENKclpYbHpJaXdpWTNOelUzUjViR1ZPWVcxbElpd2lhWE5tZFc1amRHbHZiaUlzSW1OemMxSmxiVzkyWlNJc0ltWnBibVFpTENKd2IzTnBkR2x2YmlJc0luRjFaWEo1VTJWc1pXTjBiM0pCYkd3aUxDSm1iM0pGWVdOb0lpd2ljQ0lzSW5GMVpYSjVVMlZzWldOMGIzSWlMQ0ptYVc1a1FXeHNJaXdpYzJWaGNtTm9JaXdpYVdRaUxDSmpiR0Z6Y3lJc0ltTnNZWE56WlhNaUxDSm1iM1Z1WkVWc1pXMWxiblJ6SWl3aVlXeHNSV3hsYldWdWRITWlMQ0poZEhSeUlpd2laMlYwUVhSMGNtbGlkWFJsSWl3aWFYTnVkV3hzSWl3aVkyeGhjM05NYVhOMElpd2lZMjl1ZEdGcGJuTWlMQ0pvWVhORGJHRnpjMlZ6SWl3aWMyVmhjbU5vUVd4c0lpd2laV3hsYldWdWRITWlMQ0ptWlhSamFDSXNJbTVoYldWeklpd2labVYwWTJoQmJHd2lMQ0p1YjJSbGMwSmxkSGRsWlc0aUxDSnBia0psZEhkbFpXNU9iMlJsY3lJc0ltTm9hV3hrSWl3aVFYSnlZWGtpTENKbWNtOXRJaXdpYVc1amJIVmtaWE1pTENKamRYSnlaVzUwVUdGeVpXNTBJaXdpY0dGeVpXNTBUbTlrWlNJc0ltTjFjM1J2YlZCaGNtVnVkSE1pTENKeVpXMXZkbVZUZEdGMFpTSXNJbk4wWVhSbElpd2laMlYwVTNSaGRHVWlMQ0ptYjNKalpTSXNJbVJoZEdGelpYUWlMQ0prYjIxTFpYa2lMQ0p5WlcxdmRtVWlMQ0p5WlcxdmRtVkJkSFJ5YVdKMWRHVWlMQ0p6ZEdGMFpVNWhiV1VpTENKaFpHUlRkR0YwWlNJc0luTmxkRXRsZVNJc0luTmxkRk4wWVhSbElpd2ljbVZ1WkdWeUlpd2lhSFJ0YkNJc0luTmxkRUYwZEhKcFluVjBaWE1pTENKMFpYaDBRMjl1ZEdWdWRDSXNJbUYwZEdGamFHMWxiblFpTENKS1UwOU9JaXdpYzNSeWFXNW5hV1o1SWl3aVkyeHZibVZPYjJSbElpd2ljMlYwUzJWNVFYTjVibU1pTENKaGMzbHVZeUlzSW10bGVTSXNJa1JoZEdVaUxDSnViM2NpTENKTllYUm9JaXdpY21GdVpHOXRJaXdpYzJ4cFkyVWlMQ0prY205d1JHOTNiaUlzSW5CaGNtVnVkRU52Ym5SbGJuUWlMQ0poY0hCbGJtUWlMQ0ppYjNoVGFHRmtiM2NpTENKa2NtOXdRMjl1ZEdGcGJtVnlJaXdpY21WdGIzWmxSSEp2Y0VSdmQyNGlMQ0p6ZEc5d1RXOXVhWFJ2Y2lJc0ltOWljMlZ5ZG1VaUxDSnZZbk5sY25abGNpSXNJbVJwYzJOdmJtNWxZM1FpTENKdmJrRjBkSEpwWW5WMFpVTm9ZVzVuWlNJc0ltRjBkSEpwWW5WMFpTSXNJbVJsZEdGcGJDSXNJbUYwZEhKcFluVjBaVTVoYldVaUxDSnRiMjVwZEc5eUlpd2lZMjl1Wm1sbklpd2lZMmhwYkdSTWFYTjBJaXdpYzNWaWRISmxaU0lzSWsxMWRHRjBhVzl1VDJKelpYSjJaWElpTENKdGRYUmhkR2x2Ymt4cGMzUWlMQ0prYVhOd1lYUmphRVYyWlc1MElpd2lRM1Z6ZEc5dFJYWmxiblFpTENKdGRYUmhkR2x2YmlJc0luUjVjR1VpTENKdmJrTm9ZVzVuWldRaUxDSmpZV3hzUW1GamF5SXNJblZ3WkdGMFpVMWxJaXdpYVhORVlYUmxJaXdpYVhOVWFXMWxWbUZzYVdRaUxDSm1hV3hsSWl3aVptbHNaWE1pTENKcGJtUmxlRTltSWl3aWFXMWhaMlZVYjBwemIyNGlMQ0p6Wld4bFkzUmxaRWx1WkdWNElpd2laWGhqWlhCMElpd2ljbVZ0YjNabFEyaHBiR1J5Wlc0aUxDSm5aWFJCYkd4RGMzTlFjbTl3WlhKMGFXVnpJaXdpWTNOelVuVnNaWE1pTENKelpXeGxZM1J2Y2xSbGVIUWlMQ0p6ZEhsc1pWTm9aV1YwY3lJc0luQnliM0JsY25ScFpYTWlMQ0pxSWl3aWJpSXNJbWRsZEVOemMxQnliM0JsY25ScFpYTWlMQ0p3Y205d1pYSjBlU0lzSW1Gc2JGQnliM0JsY25ScFpYTWlMQ0pvWVhORGMzTlFjbTl3WlhKMGVTSXNJbU56YzFCeWIzQmxjblI1Vm1Gc2RXVWlMQ0p6ZEhsc1pYTWlMQ0p0WVhBaUxDSmxlSFJ5WVdOMFExTlRJaXdpYVhOQmNuSmhlU0lzSW5KbGJXOTJaVkJ5YjNCbGNuUjVJaXdpZEc5bloyeGxRMmhwYkdRaUxDSmZZMnhoYzNObGN5SXNJbVp2ZFc1a0lpd2lZMjl1YzI5c1pTSXNJbXh2WnlJc0ltNXZaR1VpTENKamJHVmhja05zWVhOelpYTWlMQ0p5WlcxdmRtVkRiR0Z6YzJWeklpd2lZV1JrUTJ4aGMzTmxjeUlzSW1Ga1pDSXNJblJ2WjJkc1pVTnNZWE56WlhNaUxDSjBiMmRuYkdVaUxDSnlaVzF2ZG1WRGJHRnpjeUlzSWw5amJHRnpjeUlzSW0xRGJHRnpjeUlzSW1Ga1pFTnNZWE56SWl3aWRHOW5aMnhsUTJ4aGMzTWlMQ0pUZEhKcGJtY2lMQ0puWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRaUxDSnBibFpwWlhjaUxDSndZWEpsYm5SSlpHVnVkR2xtYVdWeUlpd2ljR0Z5Wlc1MElpd2laMlYwVUdGeVpXNTBjeUlzSW5SdmNDSXNJbU5zYVdWdWRFaGxhV2RvZENJc0ltaGhjME5zWVhOeklpd2ljMlYwVUhKdmNHVnlkR2xsY3lJc0ltZGxkRUYwZEhKcFluVjBaVTVoYldWeklpd2lhR0Z6UVhSMGNtbGlkWFJsSWl3aVpHbHpjR3hoZVNJc0luWnBjMmxpYVd4cGRIa2lMQ0p6YUc5M0lpd2lhR2xrWlNJc0ltVjRZMlZ3ZEdsdmJuTWlMQ0poYkd3aUxDSmtaV3hsZEdVaUxDSmtaV3hsZEdWRGFHbHNaQ0lzSW5SdloyZHNaVU5vYVd4a2NtVnVJaXdpYUdGelFYSnlZWGxGYkdWdFpXNTBJaXdpWVhSMFlXTm9SV3hsYldWdWRDSXNJbkJ5WlhOelpXUWlMQ0p6ZEdGeWRGUnBiV1VpTENKbGJtUlVhVzFsSWl3aWRHbHRaVk4wWVcxd0lpd2laSFZ5WVhScGIyNGlMQ0p3YjNCSmJtUmxlQ0lzSW1OdmJHeGxZM1JwYjI0aUxDSnNhWE4wSWl3aWFYUmxiU0lzSW1GUVlYSmxiblFpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTERaRVFVVkJMRTFCUVUxQkxGTkJRVUZCTEVWQmEycERUa01zWjBKQlFVOURMRU5CTDJsRFVDeGpRVUYxUWtNc1kwRkJRVUVzUTBGRGJrSkRMRmRCUVVGQkxFTkJRVmxETEZOQlFVRkJMRU5CUVZsTUxGTkJRVUZCTEVOQlFVRkJMRU5CUTNCQ1RTeExRVUZCUVN4RFFVRk5SQ3hUUVVGQlFTeERRVUZCUVN4RFFVTk9SU3hKUVVGQlFTeERRVUZMUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRFprUXNTVUZCUVVFc1EwRkJTMFVzWTBGQlFVRXNRMEZCWlVvc1UwRkJRVUVzUTBGQlZVc3NUMEZCUVVFc1EwRkJRVUVzUTBGRE9VSklMRWxCUVVGQkxFTkJRVXRKTEhGQ1FVRkJRU3hEUVVGelFrNHNVMEZCUVVFc1EwRkJWVThzWTBGQlFVRXNRMEZCUVVFc1EwRkRja05NTEVsQlFVRkJMRU5CUVV0TkxGZEJRVUZCTEVOQlFWbFNMRk5CUVVGQkxFTkJRVlZUTEVsQlFVRkJMRU5CUVVGQkxFTkJRek5DVUN4SlFVRkJRU3hEUVVGTFVTeGxRVUZCUVN4RFFVRm5RbFlzVTBGQlFVRXNRMEZCVlZjc1VVRkJRVUVzUTBGQlFVRXNRMEZIYmtOYUxHTkJRVUZCTEVOQlFXVk5MRTlCUVVGQkxFTkJRVlZXTEZOQlFVRkJMRU5CUVVGQkxFTkJSWEpDTEVsQlFVbHBRaXhKUVVGQlFTeERRVUZQVml4SlFVRkJRU3hEUVVOWVJ5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWUXl4alFVRkJRU3hEUVVGcFFpeFRRVUZWUXl4SlFVRkJRU3hEUVVGQlFTeERRVU42UXl4SlFVRkpReXhUUVVGQlFTeERRVUZaWkN4SlFVRkJRU3hEUVVGTFpTeE5RVUZCUVN4RlFVRkJRU3hEUVVkeVFpeFBRVVpCUkN4VFFVRkJRU3hEUVVGVlJTeFBRVUZCUVN4RFFVRlZTQ3hKUVVGQlFTeERRVU5PU0N4SlFVRkJRU3hEUVVGTFR5eGhRVUZCUVN4RFFVRmpTQ3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVseVExZ3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlVrc1RVRkJRVUVzUTBGQlV5eFZRVUZCTEVOQlEzWkNMRWxCUVVsRExFOUJRVUZCTEVOQlFWVm9RaXhKUVVGQlFTeERRVUZMYTBJc1VVRkJRVUVzUTBGQlUwTXNWMEZCUVVFc1JVRkJRVUVzUTBGRGVFSkRMRlZCUVVGQkxFTkJRV0Z3UWl4SlFVRkJRU3hEUVVGTGNVSXNZVUZCUVVFc1JVRkJRVUVzUTBGRGRFSkVMRlZCUVVGQkxFTkJRVmRGTEV0QlFVRkJMRU5CUVZGMFFpeEpRVUZCUVN4RFFVRkxkVUlzUjBGQlFVRXNSVUZCUVVFc1EwRkRlRUlzU1VGQlNVTXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRMllzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWHBDTEVsQlFVRkJMRU5CUVV0M1FpeFJRVUZCUVN4RFFVRlRSU3hOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU4wUTBRc1VVRkJRVUVzUTBGQlUwY3NTVUZCUVVFc1EwRkJTek5DTEVsQlFVRkJMRU5CUVV0M1FpeFJRVUZCUVN4RFFVRlRReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhWaXhOUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVWdVF5eE5RVUZQTEVOQlFVVkRMRTlCUVVGQkxFTkJRVUZCTEU5QlFVRkJMRU5CUVZOSkxGVkJRVUZCTEVOQlFVRkJMRlZCUVVGQkxFTkJRVmxKTEZGQlFVRkJMRU5CUVVGQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMnhEY2tJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV2xDTEZWQlFVRkJMRU5CUVdFc1UwRkJWVU1zVDBGQlFVRXNRMEZCVlN4RlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWTXNRMEZCUlVNc1VVRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjRSVVFzVFVGQlFVRXNRMEZCVTBFc1RVRkJRVUVzUlVGQlZTeEZRVUZCTEVOQlEyWndRaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUMGNzU1VGQlFVRXNRMEZCUVVFc1IwRkRiRUpxUXl4SlFVRkJRU3hEUVVGTGEwTXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGSGNrSXNTVUZCU3l4SlFVRkpWQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVa3NUMEZCUVVFc1EwRkJVVWdzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTnlReXhKUVVGSlZTeEpRVUZCUVN4RFFVRlBUaXhQUVVGQlFTeERRVUZSU2l4RFFVRkJRU3hEUVVGQlFTeERRVUZIVlN4SlFVRkJRU3hGUVVGUlRpeFBRVUZCUVN4RFFVRlJTaXhEUVVGQlFTeERRVUZCUVN4RFFVTnNRMWNzUzBGQlFVRXNRMEZCVVZBc1QwRkJRVUVzUTBGQlVVb3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIxY3NTMEZCUVVFc1JVRkJVMUFzVDBGQlFVRXNRMEZCVVVvc1EwRkJRVUVzUTBGQlFVRXNRMEZGY0VOWkxFMUJRVUZCTEVOQlFWTnlReXhKUVVGQlFTeERRVUZMYzBNc1YwRkJRVUVzUTBGQldTeERRVUZGZEVJc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkpMRlZCUVVGQkxFTkJRVmtzUTBGQlJXZENMRXRCUVVGQkxFTkJRVUZCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVk5FTEVsQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWEJETEUxQlFVRXNSVUZCYkVORExFdEJRVUZCTEVOQlFVMUhMRkZCUVVGQkxFVkJRVUZCTEVOQlFWZHdRaXhYUVVGQlFTeEZRVUZCUVN4RlFVTnFRbXRDTEUxQlFVRkJMRU5CUVU5SExGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJSMmhET1VJc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVU5RExGRkJRVUZCTEVOQlFVRkJMRVZCUVdGTExFdEJRVUZCTEVWQlFWTk9MRTFCUVVGQkxFTkJRVTlETEZGQlFVRkJMRVZCUXk5RFRTeE5RVUZCUVN4RFFVRlBSeXhaUVVGQlFTeERRVUZoTEZWQlFVRXNRMEZCUVN4RFFVRlpMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGTE5VTnlReXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVk9FSXNZMEZCUVVFc1EwRkJhVUlzVTBGQlZVTXNVVUZCUVVFc1EwRkJWVU1zVVVGQlFVRXNRMEZCUVVFc1EwRkRia1FzU1VGQlN5eEpRVUZKUXl4VFFVRkJRU3hKUVVGaFJpeFJRVUZCUVN4RFFVRlRSeXhQUVVGQlFTeEZRVUZCUVN4RFFVTXpRaXhKUVVGTExFbEJRVWxETEZOQlFVRkJMRWxCUVdGSUxGRkJRVUZCTEVOQlFWTkZMRTlCUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWRCUVVsRUxGTkJRVUZCTEVWQlFXRkZMRk5CUVVGQkxFTkJRVmNzVDBGQlQwWXNVMEZCUVVFc1EwRkpNME1zVDBGQlR5eEpRVUZCTEVOQlFVRXNRMEZIV0hwRExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ2UXl4UFFVRkJRU3hEUVVGVkxGTkJRVlZETEZGQlFVRkJMRVZCUVZjc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU0zUTJoRUxFbEJRVUZCTEVOQlFVdHBSQ3huUWtGQlFVRXNRMEZCYVVJc05rSkJRVUVzUTBGQkswSkRMRXRCUVVGQkxFVkJRVUZCTEVOQlEycEVSaXhSUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbFNOME1zVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZYZERMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVWN6UW1oRUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlY1UXl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGSGVrSnFSQ3hQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVk1FTXNhVUpCUVVGQkxFTkJRVzlDTEZOQlFWVkRMRTFCUVVGQkxFTkJRVkZPTEZGQlFVRkJMRVZCUVZjc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU12UkUwc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRkRUlzU1VGQlN5eEpRVUZKVEN4TFFVRkJRU3hKUVVGVFNTeE5RVUZCUVN4RFFVTmtkRVFzU1VGQlFVRXNRMEZCUzNkRUxGbEJRVUZCTEVOQlFXRk9MRXRCUVVGQkxFTkJRVTFQTEVsQlFVRkJMRVZCUVVGQkxFTkJRVkZVTEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzaEROME1zVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZTdERMRzlDUVVGQlFTeERRVUYxUWl4VFFVRlZTaXhOUVVGQlFTeERRVUZSVGl4UlFVRkJRU3hGUVVGWExFbEJRVUVzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZEYkVWTkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVTlETEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRM1JDTEVsQlFVc3NTVUZCU1V3c1MwRkJRVUVzU1VGQlUwa3NUVUZCUVVFc1EwRkRaSFJFTEVsQlFVRkJMRU5CUVVzeVJDeGxRVUZCUVN4RFFVRm5RbFFzUzBGQlFVRXNRMEZCVFU4c1NVRkJRVUVzUlVGQlFVRXNRMEZCVVZRc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxNME0zUXl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZOa01zV1VGQlFVRXNRMEZCWlN4VFFVRlZUaXhMUVVGQlFTeERRVUZQUml4UlFVRkJRU3hGUVVGWExFbEJRVUVzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZGZWtSWkxGRkJRVUZCTEVOQlFWTllMR2RDUVVGQlFTeERRVUZwUWtNc1MwRkJRVUVzUTBGQlQwRXNTMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZGZWtKQkxFdEJRVUZCTEVOQlFVMVhMRTFCUVVGQkxFVkJRVlUzUkN4SlFVRkJRU3hGUVVGUlFTeEpRVUZCUVN4RFFVRkxPRVFzVlVGQlFVRXNRMEZCVjFvc1MwRkJRVUVzUTBGQlRWY3NUVUZCUVVFc1EwRkJRVUVzUjBGRE9VTmlMRkZCUVVGQkxFTkJRVk5GTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUWEpDTDBNc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV2RFTEdWQlFVRkJMRU5CUVd0Q0xGTkJRVlZVTEV0QlFVRkJMRU5CUVU5R0xGRkJRVUZCTEVWQlFWY3NTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNMVJGa3NVVUZCUVVFc1EwRkJVMWdzWjBKQlFVRkJMRU5CUVdsQ1F5eExRVUZCUVN4RFFVRlBRU3hMUVVGQlFTeEZRVUZCUVN4RFFVTjJRa0VzUzBGQlFVRXNRMEZCVFZjc1RVRkJRVUVzUlVGQlZUZEVMRWxCUVVGQkxFVkJRVkZCTEVsQlFVRkJMRU5CUVVzNFJDeFZRVUZCUVN4RFFVRlhXaXhMUVVGQlFTeERRVUZOVnl4TlFVRkJRU3hEUVVGQlFTeEZRVU5vUkdJc1VVRkJRVUVzUTBGQlUwVXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrSXZReXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmIwUXNkMEpCUVVGQkxFTkJRVEpDTEZOQlFWVlVMRTFCUVVGQkxFTkJRVkZPTEZGQlFVRkJMRVZCUVZjc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4wUlUwc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRkRUlzU1VGQlN5eEpRVUZKVEN4TFFVRkJRU3hKUVVGVFNTeE5RVUZCUVN4RFFVTmtkRVFzU1VGQlFVRXNRMEZCUzJsRUxHZENRVUZCUVN4RFFVRnBRa01zUzBGQlFVRXNRMEZCVFU4c1NVRkJRVUVzUlVGQlFVRXNRMEZCVVU4c1EwRkJRVUVzUlVGQlFVRXNRMEZEYUVOb1FpeFJRVUZCUVN4RFFVRlRaMElzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5ja0kzUkN4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjMFFzUzBGQlFVRXNRMEZCVVN4VFFVRlZia01zVFVGQlFVRXNRMEZCVXl4RFFVRkZVQ3hIUVVGQlFTeERRVUZMTEVWQlFVRXNRMEZCU1RKRExFVkJRVUZCTEVOQlFVa3NTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWNFJDeEpRVU5KUXl4VFFVRkJRU3hEUVVSQk5VTXNSMEZCUVVFc1EwRkJUU3hGUVVGQkxFTkJSMVoyUWl4SlFVRkJRU3hEUVVGTEswUXNkMEpCUVVGQkxFTkJRWGxDTEZsQlFVRXNRMEZCWTJJc1MwRkJRVUVzUlVGQlFVRXNRMEZEZUVOcFFpeFRRVUZCUVN4RFFVRlpia1VzU1VGQlFVRXNRMEZCUzNWQ0xFZEJRVUZCTEVWQlFVRkJMRU5CUTJKaUxFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUFVDeEhRVUZCUVN4RFFVRkJRU3hIUVVOc1FrRXNSMEZCUVVFc1EwRkJUV0lzU1VGQlFVRXNRMEZCU3pCRUxFdEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5RExFbEJRVUZCTEVOQlFVdDZReXhOUVVGQlFTeERRVUZQVUN4SFFVRkJRU3hEUVVGQlFTeERRVUZOWVN4TFFVRkJRU3hGUVVOd1F6RkNMRWxCUVVGQkxFTkJRVXM0UkN4WlFVRkJRU3hEUVVGaGNFTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGTjBKd1F5eEpRVUZCUVN4RFFVRkxkVUlzUjBGQlFVRXNRMEZCU1U4c1RVRkJRVUVzUTBGQlQxQXNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYUVKaUxFbEJRVUZCTEVOQlFVc3JSQ3hWUVVGQlFTeERRVUZYTTBNc1RVRkJRVUVzUTBGQlQyOURMRVZCUVVGQkxFTkJRVUZCTEVWQlEzWkNjRU1zVFVGQlFVRXNRMEZCVDI5RExFVkJRVUZCTEVOQlFVZG9RaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxzUW14RUxFbEJRVUZCTEVOQlFVc3JSQ3gzUWtGQlFVRXNRMEZCZVVJc1dVRkJRU3hEUVVGallpeExRVUZCUVN4RlFVRkJRU3hEUVVOd1EzaERMRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTlJpeE5RVUZCUVN4RFFVRlBVQ3hIUVVGQlFTeERRVUZCUVN4SFFVTnNRblpDTEVsQlFVRkJMRU5CUVVzd1JTeFRRVUZCUVN4RFFVRlZia1FzUjBGQlFVRXNRMEZCUVVFc1EwRkRablpDTEVsQlFVRkJMRU5CUVV0MVFpeEhRVUZCUVN4RFFVRkpORU1zVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrSm9SU3hQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVlowVXNTVUZCUVVFc1EwRkJUeXhUUVVGVk9VUXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVWtyUkN4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVU55UkN4SlFVRkpOVVFzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CVTJRc1QwRlNTVTRzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMDBReXhSUVVGQlFTeERRVUZCUVN4RFFVTllOVVVzU1VGQlFVRXNRMEZCU3paRkxHZENRVUZCUVN4RFFVRnBRbWhGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTFwUlN4UFFVRkJRU3hEUVVGUkxFTkJRVU5rTEVOQlFVRkJMRU5CUVVkbExFTkJRVUZCTEVkQlFVRkJMRU5CUTJoRFNDeFJRVUZCUVN4RlFVRlpSeXhEUVVGQlFTeEhRVUZITDBRc1QwRkJRVUVzUTBGQlZXZEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV3BEYUVRc1QwRkJRVUVzUTBGQlZXaENMRWxCUVVGQkxFTkJRVXRuUml4aFFVRkJRU3hEUVVGamJrVXNTVUZCUVVFc1EwRkJRVUVzUTBGRk1VSkhMRTlCUVVGQkxFTkJRVUZCTEVOQlNWaGlMRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWelJTeFBRVUZCUVN4RFFVRlZMRk5CUVZWd1JTeEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJRU3hEUVVONlF5eFBRVUZQWWl4SlFVRkJRU3hEUVVGTE5rVXNaMEpCUVVGQkxFTkJRV2xDYUVVc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpha05XTEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVjFSU3hOUVVGQlFTeERRVUZUTEZOQlFWVnlSU3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1dkQ0xFOUJRVUZCTEVOQlFWVXNRMEZCUlZRc1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVa3JSQ3hGUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1dwRkxGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkphMFVzUzBGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsRExFOUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUVUxVUxGRkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRkJMRU5CUTI1SkxFbEJRVWsxUkN4UFFVRkJRU3hEUVVGVkxFbEJRVUVzUTBGRFZuTkZMR0ZCUVVGQkxFTkJRV2RDTEVWQlFVRXNRMEZGY0VJc1IwRkJTVFZGTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5TQ3hQUVVGQlFTeERRVUZCUVN4RFFVRlZMRU5CUTNKQ0xFbEJRVWt3UkN4WFFVRkJRU3hEUVVGamRrWXNTVUZCUVVFc1EwRkJTelpGTEdkQ1FVRkJRU3hEUVVGcFFtaEZMRWxCUVVGQkxFTkJRVUZCTEVOQlIzaERMRWxCUVVzc1NVRkJTVmtzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVazRSQ3hYUVVGQlFTeERRVUZaTjBRc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN5eERRVWw2UXl4SFFVaEJWQ3hQUVVGQlFTeERRVUZWZFVVc1YwRkJRVUVzUTBGQldUbEVMRU5CUVVGQkxFTkJRVUZCTEVOQlIyeENaaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVZ3NUMEZCUVVFc1EwRkJVVlFzVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVOb1F5eEpRVUZMTEVsQlFVbHZSU3hKUVVGQlFTeEpRVUZSTTBRc1QwRkJRVUVzUTBGQlVWUXNWVUZCUVVFc1EwRkZha0pLTEU5QlFVRkJMRU5CUVZGNVJTeFpRVUZCUVN4RFFVRmhSQ3hKUVVGQlFTeERRVUZCUVN4RlFVRlRNMFFzVDBGQlFVRXNRMEZCVVZRc1ZVRkJRVUVzUTBGQlYyOUZMRWxCUVVGQkxFTkJRVUZCTEVkQlEycEVlRVVzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CUVVFc1EwRkxiRUlzUjBGQlNVNHNTVUZCUVVFc1EwRkJTMmRHTEUxQlFVRkJMRU5CUVU4eFJTeFBRVUZCUVN4RFFVRkJRU3hEUVVGVkxGRkJRVUVzUTBGSk9VSXNSMEZCU1U0c1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFJTEU5QlFVRkJMRU5CUVZGelJDeEZRVUZCUVN4RFFVRkJRU3hGUVVGUGRFUXNUMEZCUVVFc1EwRkJVWE5FTEVWQlFVRkJMRVZCUVUxdVJTeFBRVUZCUVN4RFFVRlJiVVVzUlVGQlFVRXNRMEZEYUVSdVJTeFBRVUZCUVN4RFFVRlZMRWxCUVVFc1EwRkJRU3hMUVV0a0xFZEJRVUVzUTBGQlNVNHNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxSUxFOUJRVUZCTEVOQlFWRjFSQ3hMUVVGQlFTeERRVUZCUVN4RlFVRlhjRVVzVDBGQlFVRXNRMEZCVVRKRkxGTkJRVUZCTEVOQlFWVkRMRkZCUVVGQkxFTkJRVk12UkN4UFFVRkJRU3hEUVVGUmRVUXNTMEZCUVVFc1EwRkJRVUVzUTBGTmNrVXNSMEZCUVN4RFFVRkpNVVVzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMUlMRTlCUVVGQkxFTkJRVkYzUkN4UFFVRkJRU3hEUVVGQlFTeEZRVUZoY2tVc1QwRkJRVUVzUTBGQlVUWkZMRlZCUVVGQkxFTkJRVmRvUlN4UFFVRkJRU3hEUVVGUmQwUXNUMEZCUVVFc1EwRkJRVUVzUTBGTkwwUXNSMEZCU1RORkxFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOU0N4UFFVRkJRU3hEUVVGUldDeFJRVUZCUVN4RFFVRkJRU3hGUVVGaFJpeFBRVUZCUVN4RFFVRlJSU3hSUVVGQlFTeERRVUZUUXl4WFFVRkJRU3hGUVVGQlFTeEZRVUZwUWxVc1QwRkJRVUVzUTBGQlVWZ3NVVUZCUVVFc1EwRkRNVVZHTEU5QlFVRkJMRU5CUVZVc1NVRkJRU3hEUVVGQkxFbEJSR1FzUTBGTlFTeEhRVUZKTkVRc1VVRkJRVUVzUlVGQldTeERRVUZCTEVOQlFVY3NUMEZCVHpWRUxFOUJRVUZCTEVOQlF6RkNjMFVzWVVGQlFVRXNRMEZCWXpORUxFbEJRVUZCTEVOQlFVdFlMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCV21aQkxFOUJRVUZCTEVOQlFWVXNTVUZCUVN4RFFVRkJMRXRCVGxaQkxFOUJRVUZCTEVOQlFWVXNTVUZCUVN4RFFYTkNaRUVzVDBGQlFVRXNRMEZFUVhORkxHRkJRVUZCTEVOQlFXTTFSQ3hOUVVGQlFTeEZRVUZWYUVJc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTF6UkN4aFFVRkJRU3hEUVVGalZpeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU4yUTFVc1lVRkJRVUVzUTBGQlkxWXNVVUZCUVVFc1EwRkJRVUVzUTBGSFpDeEpRVUZCTEVOQlFVRXNTMEZKWkRWRUxFOUJRVUZCTEVOQlFWVm9RaXhKUVVGQlFTeERRVUZMTWtVc1NVRkJRVUVzUTBGQlN6bEVMRWxCUVVGQkxFTkJRVUZCTEVOQlIzaENMRTlCUVU5SExFOUJRVUZCTEVOQlFVRkJMRU5CU1ZoaUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ0Uml4VFFVRkJRU3hEUVVGWkxGTkJRVlZxUml4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlNXZENMRTlCUVVGQkxFTkJRVlVzUTBGQlJWUXNWVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVWtyUkN4RlFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNXcEZMRkZCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZKYTBVc1MwRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbERMRTlCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZEY2tnc1IwRkJTVE5GTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5TQ3hQUVVGQlFTeERRVUZCUVN4RFFVRlZMRU5CUTNKQ0xFbEJRVWt3UkN4WFFVRkJRU3hEUVVGamRrWXNTVUZCUVVFc1EwRkJTelpGTEdkQ1FVRkJRU3hEUVVGcFFtaEZMRWxCUVVGQkxFTkJRVUZCTEVOQlEzQkRhMFlzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTJZc1NVRkJTeXhKUVVGSmRFVXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrNFJDeFhRVUZCUVN4RFFVRlpOMFFzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTjZReXhKUVVGSlZDeFBRVUZCUVN4RFFVRlZkVVVzVjBGQlFVRXNRMEZCV1RsRUxFTkJRVUZCTEVOQlFVRkJMRU5CUXpGQ0xFZEJRVWxtTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5TQ3hQUVVGQlFTeERRVUZSVkN4VlFVRkJRU3hEUVVGQlFTeERRVU51UWl4SlFVRkxMRWxCUVVsdlJTeEpRVUZCUVN4SlFVRlJNMFFzVDBGQlFVRXNRMEZCVVZRc1ZVRkJRVUVzUTBGRGFrSktMRTlCUVVGQkxFTkJRVkY1UlN4WlFVRkJRU3hEUVVGaFJDeEpRVUZCUVN4RFFVRkJRU3hGUVVGVE0wUXNUMEZCUVVFc1EwRkJVVlFzVlVGQlFVRXNRMEZCVjI5RkxFbEJRVUZCTEVOQlFVRkJMRWRCUTJwRWVFVXNUMEZCUVVFc1EwRkJWU3hKUVVGQkxFTkJRVUVzUTBGTmJFSk9MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTlNDeFBRVUZCUVN4RFFVRlJjMFFzUlVGQlFVRXNRMEZCUVVFc1JVRkJUM1JFTEU5QlFVRkJMRU5CUVZGelJDeEZRVUZCUVN4RlFVRk5ia1VzVDBGQlFVRXNRMEZCVVcxRkxFVkJRVUZCTEVOQlEyaEVia1VzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CU1ZaT0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOU0N4UFFVRkJRU3hEUVVGUmRVUXNTMEZCUVVFc1EwRkJRVUVzUlVGQlFVRXNRMEZCVjNCRkxFOUJRVUZCTEVOQlFWRXlSU3hUUVVGQlFTeERRVUZWUXl4UlFVRkJRU3hEUVVGVEwwUXNUMEZCUVVFc1EwRkJVWFZFTEV0QlFVRkJMRU5CUVVGQkxFVkJTMnBGTVVVc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFJTEU5QlFVRkJMRU5CUVZGM1JDeFBRVUZCUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZoY2tVc1QwRkJRVUVzUTBGQlVUWkZMRlZCUVVGQkxFTkJRVmRvUlN4UFFVRkJRU3hEUVVGUmQwUXNUMEZCUVVFc1EwRkJRVUVzUTBGS00wUnlSU3hQUVVGQlFTeERRVUZWTEVsQlFVRXNRMEZUVms0c1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFJTEU5QlFVRkJMRU5CUVZGWUxGRkJRVUZCTEVOQlFVRkJMRVZCUVdGR0xFOUJRVUZCTEVOQlFWRkZMRkZCUVVGQkxFTkJRVk5ETEZkQlFVRkJMRVZCUVVGQkxFVkJRV2xDVlN4UFFVRkJRU3hEUVVGUldDeFJRVUZCUVN4RFFVTXhSVVlzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CU1ZST0xFbEJRVUZCTEVOQlFVdG5SaXhOUVVGQlFTeERRVUZQTVVVc1QwRkJRVUVzUTBGQlFVRXNSVUZEWWl0RkxGRkJRVUZCTEVOQlFWTndSU3hKUVVGQlFTeERRVUZMV0N4UFFVRkJRU3hEUVVGQlFTeERRVWQwUWl4UFFVRlBLMFVzVVVGQlFVRXNRMEZGV0N4UFFVRlBMMFlzU1VGQlFVRXNRMEZCU3paRkxHZENRVUZCUVN4RFFVRnBRbWhGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXcERWaXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmNVWXNTMEZCUVVFc1EwRkJVU3hUUVVGVlF5eExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJTWEpDTEZGQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVGQkxFTkJRM1pFTEVsQlFVbHRRaXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEWml4SlFVRkxMRWxCUVVsc1JpeEpRVUZCUVN4SlFVRlJiMFlzUzBGQlFVRXNRMEZEWWtZc1VVRkJRVUVzUTBGQlUyeEdMRWxCUVVGQkxFTkJRVUZCTEVOQlFWRmlMRWxCUVVGQkxFTkJRVXN5UlN4SlFVRkJRU3hEUVVGTE9VUXNTVUZCUVVFc1EwRkJUU3RFTEZGQlFVRkJMRU5CUVVGQkxFTkJSM0pETEU5QlFVOXRRaXhSUVVGQlFTeERRVUZCUVN4RFFVbFlOVVlzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZYVkdMRkZCUVVGQkxFTkJRVmNzVTBGQlZVUXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVUVzUTBGRE0wTXNTVUZCU1VZc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpiRVlzU1VGQlFVRXNTVUZCVVc5R0xFdEJRVUZCTEVOQlEySkdMRkZCUVVGQkxFTkJRVk5zUml4SlFVRkJRU3hEUVVGQlFTeERRVUZSWWl4SlFVRkJRU3hEUVVGTGFVWXNUMEZCUVVFc1EwRkJVWEJGTEVsQlFVRkJMRU5CUVVGQkxFTkJSMnhETEU5QlFVOXJSaXhSUVVGQlFTeERRVUZCUVN4RFFVbFlOVVlzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZYZEdMRmxCUVVGQkxFTkJRV1VzVTBGQlZYcEVMRkZCUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVVGQkxFTkJRMnBFTEVsQlFVbDVSQ3hqUVVGQlFTeERRVUZwUWl4RlFVRkJMRU5CUTNKQ0xFbEJRVXNzU1VGQlNVTXNTMEZCUVVFc1NVRkJVME1zUzBGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlMzWkhMRWxCUVVGQkxFTkJRVXQzUWl4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVXhRalpGTEV0QlFVRkJMRVZCUVZNelJDeFJRVUZCUVN4RlFVRlpNa1FzUzBGQlFVRXNSVUZCVXpGRUxGRkJRVUZCTEVWQlFWa3dSQ3hMUVVGQlFTeERRVUZOZGtNc1ZVRkJRVUVzUTBGQlYzQkNMRkZCUVVGQkxFTkJRVUZCTEVWQlFXRXlSQ3hMUVVGQlFTeERRVUZOZGtNc1ZVRkJRVUVzUTBGQlYyNUNMRkZCUVVGQkxFTkJRVUZCTEVkQlEzcEdlVVFzWTBGQlFVRXNRMEZCWlhwRkxFbEJRVUZCTEVOQlFVc3dSU3hMUVVGQlFTeERRVUZCUVN4RFFVazFRaXhQUVVGUFJDeGpRVUZCUVN4RFFVRkJRU3hEUVVsWWFrY3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlcxRUxGVkJRVUZCTEVOQlFXRXNVMEZCVlhWRExFdEJRVUZCTEVOQlFVRkJMRU5CUlhKRExFOUJSR05CTEV0QlFVRkJMRU5CUVUxNFJDeFBRVUZCUVN4RlFVRkJRU3hEUVVOTU1rUXNVVUZCUVVFc1EwRkJVM2hITEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNUVkNSeXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmEwTXNUMEZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRM2hDTEVsQlFVbEJMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVU5XTkVRc1lVRkJRVUVzUTBGQlowSjZSeXhKUVVGQlFTeERRVUZMTUVjc1ZVRkJRVUVzUTBGRGVrSXNTMEZCZDBJc1NVRkJRU3hGUVVGcVFrUXNZVUZCUVVFc1JVRkRTRFZFTEU5QlFVRkJMRU5CUVZGc1FpeEpRVUZCUVN4RFFVRkxPRVVzWVVGQlFVRXNRMEZCUVVFc1EwRkRZa0VzWVVGQlFVRXNRMEZCWjBKQkxHRkJRVUZCTEVOQlFXTkRMRlZCUVVGQkxFTkJSMnhETEU5QlFVODNSQ3hQUVVGQlFTeERRVUZCUVN4RFFVZFlNVU1zVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZXZEhMR0ZCUVVGQkxFTkJRV2RDTEZWQlFVRXNRMEZET1VJc1NVRkJTVGxFTEU5QlFVRkJMRU5CUVZVM1F5eEpRVUZCUVN4RFFVRkxOa01zVDBGQlFVRXNSVUZCUVVFc1EwRkRaamhFTEdGQlFVRkJMRU5CUVdkQ0xFVkJRVUVzUTBGRGNFSXNTVUZCU3l4SlFVRkpiRVlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHZRaXhQUVVGQlFTeERRVUZSYmtJc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRE5VSnZRaXhQUVVGQlFTeERRVUZSY0VJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjFBc1VVRkJRVUVzUTBGQlUzTkdMRkZCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZCTEVWQlF6ZENSeXhoUVVGQlFTeERRVUZqYUVZc1NVRkJRVUVzUTBGQlMydENMRTlCUVVGQkxFTkJRVkZ3UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHVReXhQUVVGUGEwWXNZVUZCUVVFc1EwRkJRVUVzUTBGSldIaEhMRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWcFJ5eFhRVUZCUVN4RFFVRmpMRk5CUVZVNVJTeE5RVUZCUVN4RFFVRlRMRU5CUVVWcVFpeEpRVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRM1pFTEVsQlFVbG5SeXhMUVVGQlFTeERRVUZSTjBjc1NVRkJRVUVzUTBGQlN6aEhMRkZCUVVGQkxFTkJRVk5vUml4TlFVRkJRU3hEUVVGQlFTeERRVU4wUW5CQ0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOTmtVc1MwRkJRVUVzUTBGQlFVRXNSVUZCVlc1SExFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUGFVWXNTMEZCUVVFc1EwRkJRVUVzUjBGRGJrTnlSeXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRUWkZMRXRCUVVGQkxFTkJRVTFITEU5QlFVRkJMRU5CUVZGRExFMUJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFOUJRMnhDZGtjc1NVRkJRVUVzUTBGQlMxUXNUMEZCUVVFc1EwRkJVVFJITEV0QlFVRkJMRU5CUVUxSExFOUJRVUZCTEVOQlFWRkRMRTFCUVVGQkxFTkJRVUZCTEVOQlJYUkRTaXhMUVVGQlFTeERRVUZOU3l4TlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVVldiRWdzU1VGQlFVRXNRMEZCUzIxSUxHVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJRVUZCTEVWQlFYZENja1lzVFVGQlFVRXNRMEZCVDJwQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hoRFZpeFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWYlVjc1VVRkJRVUVzUTBGQlZ5eFRRVUZWYUVZc1RVRkJRVUVzUTBGQlV5eERRVUZGYWtJc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTndSQ3hKUVVOSmRVY3NVMEZCUVVFc1EwRkVRVkFzUzBGQlFVRXNRMEZCVVN4SlFVRkJMRU5CWjBKYUxFMUJXbkZDTEZGQlFVRXNSVUZCUVN4UFFVRldMMFVzVFVGQlFVRXNRMEZEVUhOR0xGTkJRVUZCTEVOQlFWbDBSaXhOUVVGQlFTeERRVVZRY0VJc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFvUXl4SlFVRkJRU3hEUVVGTFowZ3NUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVjJ4R0xFMUJRVUZCTEVOQlFVOXFRaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4SFFVTjJRM1ZITEZOQlFVRkJMRU5CUVZsMFJpeE5RVUZCUVN4RFFVRlBha0lzU1VGQlFVRXNRMEZCUVVFc1EwRkhia0pJTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5iMFlzVTBGQlFVRXNRMEZCUVVFc1IwRkRXRkFzUzBGQlFVRXNRMEZCVVc1SExFbEJRVUZCTEVOQlFVdFVMRTlCUVVGQkxFTkJRVkZFTEVsQlFVRkJMRU5CUVV0blNDeFBRVUZCUVN4RFFVRlJTU3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWt2UWxBc1MwRkJRVUVzUTBGQlFVRXNRMEZKV0RGSExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlV3Unl4UlFVRkJRU3hEUVVGWExGTkJRVlYyUml4TlFVRkJRU3hEUVVGVExFTkJRVVZxUWl4SlFVRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlUzQkVMRTlCVUV0SUxFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUEswVXNTMEZCUVVFc1EwRkJUVWNzVDBGQlFVRXNRMEZCVVVNc1RVRkJRVUVzUTBGQlFVRXNSVUZEYWtOdVJpeE5RVUZCUVN4RFFVRlBLMFVzUzBGQlFVRXNRMEZCVFZNc1RVRkJRVUVzUlVGQlFVRXNRMEZKYWtKMFNDeEpRVUZCUVN4RFFVRkxaMGdzVDBGQlFVRXNRMEZCVVd4R0xFMUJRVUZCTEVOQlFVOXFRaXhKUVVGQlFTeERRVUZCUVN4RFFVRlJhVUlzVFVGQlFVRXNRMEZCVHl0RkxFdEJRVUZCTEVOQlFVMUhMRTlCUVVGQkxFTkJRVkZETEUxQlFVRkJMRU5CUTJwRWFrZ3NTVUZCUVVFc1EwRkJTMjFFTEUxQlFVRkJMRU5CUVU5eVFpeE5RVUZCUVN4RFFVRlBha0lzU1VGQlFVRXNRMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRM0JDWWl4SlFVRkJRU3hEUVVGQlFTeERRVWxZUnl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZORWNzVVVGQlFVRXNRMEZCVnl4VFFVRlZla1lzVFVGQlFVRXNRMEZCVXl4RFFVRkZha0lzU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVsUExGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkpiMGNzVFVGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVsb1J5eFJRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJTVmNzU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVselJpeEpRVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkJTWEpHTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlVDeFBRVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRekZKTEVsQlFVbG5SaXhMUVVGQlFTeERRVUZSTjBjc1NVRkJRVUVzUTBGQlN6aEhMRkZCUVVGQkxFTkJRVk5vUml4TlFVRkJRU3hEUVVGQlFTeERRVzlETVVJc1IwRldRU3RGTEV0QlFVRkJMRU5CUVUxaExHRkJRVUZCTEVOQlFXTTFSaXhOUVVGQlFTeERRVUZQVml4VlFVRkJRU3hEUVVGQlFTeERRVU4yUWxZc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVU5T0xGRkJRVUZCTEVOQlFVRkJMRVZCUTJ4Q2NVWXNTMEZCUVVFc1EwRkJUWFpGTEZkQlFVRkJMRU5CUVZsU0xFMUJRVUZCTEVOQlFVOU9MRkZCUVVGQkxFTkJRVUZCTEVOQlJYcENaQ3hKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUekJHTEUxQlFVRkJMRU5CUVVGQkxFVkJRMnhDV0N4TFFVRkJRU3hEUVVGTlZ5eE5RVUZCUVN4RFFVRlBNVVlzVFVGQlFVRXNRMEZCVHpCR0xFMUJRVUZCTEVOQlFVRkJMRU5CUlhCQ09VY3NTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxR0xFMUJRVUZCTEVOQlFVOUxMRWxCUVVGQkxFTkJRVUZCTEVkQlFVOHdSU3hMUVVGQlFTeERRVUZOWXl4WFFVRkJRU3hEUVVGak4wWXNUVUZCUVVFc1EwRkJUMHNzU1VGQlFVRXNRMEZCUVVFc1EwRkRjRVI2UWl4SlFVRkJRU3hEUVVGTGMwSXNTMEZCUVVFc1EwRkJUVVlzVFVGQlFVRXNRMEZCVHpKR0xFbEJRVUZCTEVOQlFVRkJMRWRCUVU5YUxFdEJRVUZCTEVOQlFVMHpSU3hUUVVGQlFTeERRVUZaU2l4TlFVRkJRU3hEUVVGUE1rWXNTVUZCUVVFc1EwRkJRVUVzUTBGRGJFUXZSeXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUMDBzUzBGQlFVRXNRMEZCUVVFc1IwRkJVWGxGTEV0QlFVRkJMRU5CUVUxNlJTeExRVUZCUVN4RFFVRlJUaXhOUVVGQlFTeERRVUZQVFN4TFFVRkJRU3hEUVVGQlFTeERRVU12UXpGQ0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUFJDeFBRVUZCUVN4RFFVRkJRU3hEUVVOc1FpeEpRVUZMTEVsQlFVbEtMRU5CUVVGQkxFbEJRVXRMTEUxQlFVRkJMRU5CUVU5RUxFOUJRVUZCTEVOQlEycENaMFlzUzBGQlFVRXNRMEZCVFhaRkxGZEJRVUZCTEVOQlFWa3NRMEZCUlhSQ0xFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZiMElzUzBGQlFVRXNRMEZCVDFnc1EwRkJRVUVzUTBGQlIxVXNTVUZCUVVFc1EwRkJUVllzUTBGQlFVRXNRMEZCUjIxSExGVkJRVUZCTEVOQlFWa3NVVUZCUVN4RFFVRkJMRU5CUVVFc1EwRk5PVVVzVDBGR1FUVklMRWxCUVVGQkxFTkJRVXR0UkN4TlFVRkJRU3hEUVVGUGNrSXNUVUZCUVVFc1EwRkJUMnBDTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTFuU0N4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlZhRWNzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlZ5dEZMRXRCUVVGQkxFTkJRVTFyUWl4VFFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUVN4RFFVVTFSR3hDTEV0QlFVRkJMRU5CUVVGQkxFTkJTVmd4Unl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjVWdzVjBGQlFVRXNRMEZCWTBNc1owSkJRVUZCTEVOQlF6VkNMRTlCUVVFc1RVRkJZV3BKTEVsQlFVRkJMRU5CUVV0elNDeE5RVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVWwwUW01SUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlV5Unl4TlFVRkJRU3hEUVVGVExGVkJRVUVzUTBGRGRrSXNTVUZCU1Zrc1IwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTME1zUjBGQlFVRXNSVUZCUVVFc1EwRkJUVGRHTEZGQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRVTA0Uml4SlFVRkJRU3hEUVVGTFF5eE5RVUZCUVN4RlFVRkJRU3hEUVVGVEwwWXNVVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUTBGQlNXZEhMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlQzSkZMRTlCVGtzM1NDeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFdoRExFbEJRVUZCTEVOQlFVdG5TQ3hQUVVGQlFTeERRVUZSUXl4TlFVRkJRU3hEUVVGQlFTeERRVWQ2UW1sQ0xFZEJRVUZCTEVOQlFVMXNTU3hKUVVGQlFTeERRVUZMWjBnc1QwRkJRVUVzUTBGQlVVTXNUVUZCUVVFc1EwRkdia0pxU0N4SlFVRkJRU3hEUVVGTFowZ3NUMEZCUVVFc1EwRkJVVU1zVFVGQlFVRXNRMEZCVTJsQ0xFZEJRVUZCTEVOQlNURkNlRWdzU1VGQlFVRXNRMEZCUzFRc1QwRkJRVUVzUTBGQlVXbEpMRWRCUVVGQkxFTkJRVUZCTEVOQlFVOXNTU3hKUVVGQlFTeERRVU5pYTBrc1IwRkJRVUVzUTBGQlFVRXNRMEZKV0M5SUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlUyU0N4UlFVRkJRU3hEUVVGWExGTkJRVlY0U0N4UFFVRkJRU3hEUVVGQlFTeERRVU51UXl4SlFVRkplVWdzWVVGQlFVRXNRMEZCWjBKNlNTeEpRVUZCUVN4RFFVRkxLMGdzVTBGQlFVRXNRMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRVUVzUTBGRGJrTXZTQ3hKUVVGQlFTeERRVUZMYTBNc1UwRkJRVUVzUTBGQldTeEZRVUZCTEVOQlEycENiRU1zU1VGQlFVRXNRMEZCU3pCSkxFMUJRVUZCTEVOQlFVOUVMR0ZCUVVGQkxFTkJRVUZCTEVOQlExcEJMR0ZCUVVGQkxFTkJRV05zU0N4SFFVRkJRU3hEUVVGSkxFTkJRVVZ2U0N4VFFVRkJRU3hEUVVGWExIbENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXZRak5KTEVsQlFVRkJMRU5CUVV0MVFpeEhRVUZCUVN4RFFVRkpMRU5CUVVWdlNDeFRRVUZCUVN4RFFVRlhMR2xEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVYwUWl4SlFVRkpReXhoUVVGQlFTeERRVUZuUWpWSkxFbEJRVUZCTEVOQlFVdHpReXhYUVVGQlFTeERRVUZaTEVOQlEycERkRUlzVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5SkxGVkJRVUZCTEVOQlFWa3NRMEZCUldkRkxFdEJRVUZCTEVOQlFVOHNWMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVZWNlF5eFBRVkpCZDBRc1lVRkJRVUVzUTBGQlkwWXNUVUZCUVVFc1EwRkJUekZJTEU5QlFVRkJMRU5CUVVGQkxFTkJSWEpDYUVJc1NVRkJRVUVzUTBGQlN6WkpMR05CUVVGQkxFVkJRV2xDTEVsQlFVRXNRMEZEYkVKRUxHRkJRVUZCTEVOQlFXTXhRaXhOUVVGQlFTeEZRVUZCUVN4RFFVTmtkVUlzWVVGQlFVRXNRMEZCWTJ4SUxFZEJRVUZCTEVOQlFVa3NRMEZCUlc5SUxGTkJRVUZCTEVOQlFWY3NUMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRMMEl6U1N4SlFVRkJRU3hEUVVGTGEwTXNVMEZCUVVFc1EwRkJXWFZITEdGQlFVRkJMRU5CUVdOMlJ5eFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWMxUW14RExFbEJRVUZCTEVOQlFVRkJMRU5CU1ZoSExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ0U1N4WFFVRkJRU3hEUVVGakxGVkJRVUVzUTBGRk5VSXNUMEZFU1RsSkxFbEJRVUZCTEVOQlFVc3JTU3hQUVVGQlFTeEZRVUZUTDBrc1NVRkJRVUVzUTBGQlMyZEtMRkZCUVVGQkxFTkJRVk5ETEZWQlFVRkJMRVZCUVVGQkxFTkJRM3BDYWtvc1NVRkJRVUVzUTBGQlFVRXNRMEZKV0Vjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWWFZKTEdsQ1FVRkJRU3hEUVVGdlFpeFRRVUZWUXl4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlNXNUhMRkZCUVVGQkxFVkJRVmNzU1VGQlFTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjJSV2hFTEVsQlFVRkJMRU5CUVV0cFJDeG5Ra0ZCUVVFc1EwRkJhVUlzYlVKQlFVRXNRMEZCY1VKRExFdEJRVUZCTEVWQlFVRkJMRU5CUTI1RFFTeExRVUZCUVN4RFFVRk5hMGNzVFVGQlFVRXNRMEZCVDBNc1lVRkJRVUVzUlVGQmFVSkdMRk5CUVVGQkxFVkJRemxDYmtjc1VVRkJRVUVzUTBGQlUwVXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrSXZReXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVk1ra3NUMEZCUVVFc1EwRkJWU3hUUVVGVlF5eE5RVUZCUVN4RFFVRlRMRU5CUVVWdVNTeFZRVUZCUVN4RFFVRkJRU3hEUVVGWkxFTkJRVUVzUTBGQlRXOUpMRk5CUVVGQkxFTkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRk5ReXhQUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJhVUo2Uml4UFFXaENRWHBLTEVsQlFVRkJMRU5CUVV0blNpeFJRVUZCUVN4RFFVRlhMRWxCUVVsVkxHZENRVUZCUVN4RFFVRnBRaXhEUVVGRFF5eFpRVUZCUVN4RFFVRmpXQ3hSUVVGQlFTeEhRVUZCUVN4RFFVTTFRMWNzV1VGQlFVRXNRMEZCWVdwSkxFMUJRVUZCTEVWQlFWRXhRaXhKUVVGQlFTeERRVUZMTkVvc1lVRkJRVUVzUTBGQll5eEpRVUZKUXl4WFFVRkJRU3hEUVVGWkxGTkJRVUVzUTBGQlFTeERRVUZCTEVOQlF6VkVMRWxCUVVzc1NVRkJTVU1zVVVGQlFVRXNTVUZCV1Vnc1dVRkJRVUVzUTBGRFNTeFhRVUZCTEVWQlFXcENSeXhSUVVGQlFTeERRVUZUUXl4SlFVRkJRU3hEUVVOVUwwb3NTVUZCUVVFc1EwRkJTelJLTEdGQlFVRkJMRU5CUVdNc1NVRkJTVU1zVjBGQlFVRXNRMEZCV1N4clFrRkJRU3hEUVVGdlFpeERRVUZGVkN4TlFVRkJRU3hEUVVGUlZTeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVXpReXhaUVVGQkxFVkJRV3BDUVN4UlFVRkJRU3hEUVVGVFF5eEpRVUZCUVN4RFFVTmtMMG9zU1VGQlFVRXNRMEZCU3pSS0xHRkJRVUZCTEVOQlFXTXNTVUZCU1VNc1YwRkJRVUVzUTBGQldTeHRRa0ZCUVN4RFFVRnhRaXhEUVVGRlZDeE5RVUZCUVN4RFFVRlJWU3hSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVUxUXl4bFFVRkJMRVZCUVdwQ1FTeFJRVUZCUVN4RFFVRlRReXhKUVVGQlFTeEZRVU5rTDBvc1NVRkJRVUVzUTBGQlN6UktMR0ZCUVVGQkxFTkJRV01zU1VGQlNVTXNWMEZCUVVFc1EwRkJXU3h6UWtGQlFTeERRVUYzUWl4RFFVRkZWQ3hOUVVGQlFTeERRVUZSVlN4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVdHFSamxLTEVsQlFVRkJMRU5CUVV0blNpeFJRVUZCUVN4RFFVRlRSQ3hQUVVGQlFTeERRVUZSTDBrc1NVRkJRVUVzUTBGQlRYVktMRTFCUVVGQkxFTkJRVUZCTEVOQlEzSkNka29zU1VGQlFVRXNRMEZCUVVFc1EwRkhXRWNzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQmQwSXNXVUZCUVN4RFFVRkpMRk5CUVZWeFF5eFJRVUZCUVN4RlFVRlhMRWxCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGNrUm9SQ3hKUVVGQlFTeERRVUZMYzBvc1QwRkJRVUVzUlVGQlFVRXNRMEZEVEhSS0xFbEJRVUZCTEVOQlFVdHBSQ3huUWtGQlFVRXNRMEZCYVVJc1UwRkJRU3hEUVVGWFF5eExRVUZCUVN4RlFVRkJRU3hEUVVNM1FrWXNVVUZCUVVFc1EwRkJVMFVzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxha0l2UXl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjVW9zVTBGQlFVRXNRMEZCV1N4VFFVRlZReXhSUVVGQlFTeEZRVUZYTEVsQlFVRXNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkRia05xU3l4SlFVRkJRU3hEUVVGTGVVWXNXVUZCUVVFc1EwRkJZU3hQUVVGQkxFTkJRVUVzUTBGQk9VSXNTVUZEU1hsRkxGRkJRVUZCTEVOQlFWbG9TQ3hMUVVGQlFTeEZRVUZCUVN4RFFVVmFMRWRCUVRaQ0xFOUJRVUVzUlVGQmVrSkJMRXRCUVVGQkxFTkJRVTFYTEUxQlFVRkJMRU5CUVU4elF5eFJRVUZCUVN4RFFVTmlMRWRCUVhsQ0xFMUJRVUVzUlVGQmNrSm5ReXhMUVVGQlFTeERRVUZOVnl4TlFVRkJRU3hEUVVGUGEwY3NTVUZCUVVFc1EwRkRWQzlLTEVsQlFVRkJMRU5CUVV0dFN5eE5RVUZCUVN4RFFVRlBia3NzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVRkJMRVZCUVZGd1F5eEpRVUZCUVN4RFFVRkxkME1zV1VGQlFVRXNRMEZCWVN4UFFVRkJMRU5CUVZONFF5eEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGRk5VUXNSMEZCZVVJc1RVRkJRU3hGUVVGeVFtTXNTMEZCUVVFc1EwRkJUVmNzVFVGQlFVRXNRMEZCVDJ0SExFbEJRVUZCTEVOQlEyUXZTaXhKUVVGQlFTeERRVUZMYjBzc1YwRkJRVUVzUTBGQldYQkxMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGQlFTeEZRVUZSY0VNc1NVRkJRVUVzUTBGQlMzZERMRmxCUVVGQkxFTkJRV0VzVDBGQlFTeERRVUZUZUVNc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCUldwRkxFZEJRWGxDTEUxQlFVRXNSVUZCY2tKakxFdEJRVUZCTEVOQlFVMVhMRTFCUVVGQkxFTkJRVTlyUnl4SlFVRkJRU3hEUVVGblFpeERRVU51UWpkSExFdEJRVUZCTEVOQlFVMVhMRTFCUVVGQkxFTkJRVTk2UWl4TFFVRkJRU3hEUVVFMVFpeEpRVU5KYVVrc1NVRkJRVUVzUTBGQlQyNUlMRXRCUVVGQkxFTkJRVTFYTEUxQlFVRkJMRU5CUVU5NVJ5eExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVOSkxFTkJRVUVzUlVGQk9VSkVMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVV0UkxFOUJRVUZCTEVOQlFWRXNUMEZCUVN4RFFVRkJMRVZCUTJ4Q04wb3NTVUZCUVVFc1EwRkJTemhLTEZkQlFVRkJMRU5CUVZsSUxFbEJRVUZCTEVOQlFVMUtMRkZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCU1ROQ2Frc3NTVUZCUVVFc1EwRkJTM2RETEZsQlFVRkJMRU5CUVdFc1QwRkJRU3hEUVVGVGVFTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlIyNURMRWRCUVRaQ0xGRkJRVUVzUlVGQmVrSmpMRXRCUVVGQkxFTkJRVTFYTEUxQlFVRkJMRU5CUVU4elF5eFJRVUZCUVN4RFFVTnNRaXhKUVVGTExFbEJRVWxQTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkplVUlzUzBGQlFVRXNRMEZCVFZjc1RVRkJRVUVzUTBGQlQyaERMRTlCUVVGQkxFTkJRVkZJTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTNwRFFTeERRVUZCUVN4RlFVRkxlVUlzUzBGQlFVRXNRMEZCVFZjc1RVRkJRVUVzUTBGQlR6UkhMR0ZCUVVGQkxFTkJRMnhDZGtnc1MwRkJRVUVzUTBGQlRWY3NUVUZCUVVFc1EwRkJUMmhETEU5QlFVRkJMRU5CUVZGS0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkbExGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJSV3BFVlN4TFFVRkJRU3hEUVVGTlZ5eE5RVUZCUVN4RFFVRlBhRU1zVDBGQlFVRXNRMEZCVVVvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpCR0xHVkJRVUZCTEVOQlFXZENMRlZCUVVFc1EwRkJRU3hEUVVGQkxFbEJTV3hDTEdOQlFVRXNSVUZCZWtKcVJTeExRVUZCUVN4RFFVRk5WeXhOUVVGQlFTeERRVUZQTTBNc1VVRkJRVUVzUTBGRGJFSnNRaXhKUVVGQlFTeERRVUZMZDBNc1dVRkJRVUVzUTBGQllTeFBRVUZCTEVOQlFWTjRReXhKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlFVRXNRMEZGUml4blFrRkJRU3hGUVVGNlFtTXNTMEZCUVVFc1EwRkJUVmNzVFVGQlFVRXNRMEZCVHpORExGRkJRVUZCTEVOQlEyeENiRUlzU1VGQlFVRXNRMEZCUzNkRExGbEJRVUZCTEVOQlFXRXNUMEZCUVN4RFFVRlRlRU1zU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVRkJMRU5CUjJoRGNFTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVZGd1F5eEpRVUZCUVN4RFFVRkxNa2dzVjBGQlFVRXNRMEZIYkVKcVNDeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFdsSkxGRkJRVUZCTEVOQlFVRkJMRVZCUVd0RExFMUJRVUVzUlVGQmNrSXZSeXhMUVVGQlFTeERRVUZOVnl4TlFVRkJRU3hEUVVGUGEwY3NTVUZCUVVFc1JVRkRja05GTEZGQlFVRkJMRU5CUVZOcVN5eEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCVDJNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxOMEpzUkN4SlFVRkJRU3hEUVVGTGFVUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVlVNc1MwRkJRVUVzUlVGQlFVRXNRMEZETlVKblNDeFJRVUZCUVN4RFFVRlRhRWdzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKWW14RUxFbEJRVUZCTEVOQlFVdHBSQ3huUWtGQlFVRXNRMEZCYVVJc1VVRkJRU3hEUVVGWFF5eExRVUZCUVN4RlFVRkJRU3hEUVVNM1FtZElMRkZCUVVGQkxFTkJRVk5vU0N4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXRxUWk5RExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlUyUnl4TlFVRkJRU3hEUVVGVExGTkJRVlV4Uml4TlFVRkJRU3hEUVVGVExFTkJRVVZrTEU5QlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGSlNTeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJRU3hEUVVGTmMwb3NUVUZCUVVFc1EwRkJRVUVzUTBGRGRrVm9TeXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRUQkpMRTFCUVVGQkxFTkJRVUZCTEVOQlFWTXhTeXhKUVVGQlFTeERRVUZMTWtzc1kwRkJRVUVzUTBGQlpVUXNUVUZCUVVFc1EwRkJRVUVzUTBGRGRrTXhTeXhKUVVGQlFTeERRVUZMTWtzc1kwRkJRVUVzUlVGQlFVRXNRMEZEVmpOTExFbEJRVUZCTEVOQlFVdHpReXhYUVVGQlFTeERRVUZaVWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbHlRak5DTEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVnBTeXh0UWtGQlFVRXNRMEZCYzBJc1ZVRkJRU3hEUVVOd1F5eEpRVU5KUXl4UlFVRkJRU3hEUVV0QlF5eFpRVUZCUVN4RFFVNUJReXhYUVVGQlFTeERRVUZqZWtVc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTek5ETEZGQlFVRkJMRU5CUVZOdFNDeFhRVUZCUVN4RFFVRkJRU3hEUVVWc1F6VkdMRVZCUVVGQkxFTkJRVXR1Uml4SlFVRkJRU3hEUVVGTGJVWXNSVUZCUVVFc1EwRkRWbXBGTEZGQlFVRkJMRU5CUVZkc1FpeEpRVUZCUVN4RFFVRkxhMElzVVVGQlFVRXNRMEZEYUVKNVJTeFRRVUZCUVN4RFFVRlpWeXhMUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGTGRrY3NTVUZCUVVFc1EwRkJTekpHTEZOQlFVRkJMRU5CUVVGQkxFTkJRelZDY1VZc1ZVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlIycENMRWxCUVVzc1NVRkJTWFpLTEVOQlFVRkJMRWxCUVV0clJTeFRRVUZCUVN4RFFVRlhRU3hUUVVGQlFTeERRVUZWYkVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVTJ0RkxGTkJRVUZCTEVOQlFWVnNSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVYwUkN4SlFVRlRRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYTktMRmRCUVVGQkxFTkJRVmx5U2l4TlFVRkJRU3hEUVVGUlJDeERRVUZCUVN4RlFVRkJRU3hEUVVGTExFTkJRM3BEYjBvc1VVRkJRVUVzUTBGQlYwVXNWMEZCUVVFc1EwRkJXWFJLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWR2U2l4UlFVRkJRU3hEUVVNeFFpeEpRVUZMTEVsQlFVbEpMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNpeFJRVUZCUVN4RFFVRlRia29zVFVGQlFVRXNRMEZCVVhWS0xFTkJRVUZCTEVWQlFVRkJMRU5CUldwRExFZEJRVUVzUTBGRVFVZ3NXVUZCUVVFc1EwRkJaVVFzVVVGQlFVRXNRMEZCVTBrc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBnc1dVRkJRVUVzUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGRFNETkdMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUVZFeVJpeFpRVUZCUVN4RlFVRm5RalZLTEZGQlFVRkJMRVZCUVVGQkxFTkJRV2RFTEVOQlFVRXNSVUZCY0VONVJTeFRRVUZCUVN4RFFVRlZORVVzVDBGQlFVRXNRMEZCVVU4c1dVRkJRVUVzUTBGQlFVRXNRMEZCY1VJc1EwRkRMMFpGTEZWQlFVRkJMRU5CUVZkR0xGbEJRVUZCTEVOQlFVRkJMRU5CUVdkQ0xFVkJRVUVzUTBGRE0wSXNTVUZCU1hoS0xFdEJRVUZCTEVOQlFWRjFTaXhSUVVGQlFTeERRVUZUU1N4RFFVRkJRU3hEUVVGQlFTeERRVUZITTBvc1MwRkJRVUVzUTBGRGVFSXNTVUZCU3l4SlFVRkpORW9zUTBGQlFVRXNTVUZCU3pWS0xFdEJRVUZCTEVOQlEwOHNSVUZCUVN4SFFVRmlRU3hMUVVGQlFTeERRVUZOTkVvc1EwRkJRVUVzUTBGQlFVRXNSMEZEVGtZc1ZVRkJRVUVzUTBGQlYwWXNXVUZCUVVFc1EwRkJRVUVzUTBGQlkwa3NRMEZCUVVFc1EwRkJRVUVzUTBGQlN6VktMRXRCUVVGQkxFTkJRVTAwU2l4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVZONFJDeFBRVVJCUml4VlFVRkJRU3hEUVVGclFpeExRVUZCTEVOQlFVbG9UQ3hKUVVGQlFTeERRVUZMZFVJc1IwRkJRVUVzUlVGQlFVRXNRMEZEY0VKNVNpeFZRVUZCUVN4RFFVRkJRU3hEUVVsWU4wc3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlhkTExHZENRVUZCUVN4RFFVRnRRaXhUUVVGVlF5eFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVOMFJDeEpRVUZKUXl4aFFVRkJRU3hEUVVGblFuSk1MRWxCUVVGQkxFTkJRVXMwU3l4dFFrRkJRVUVzUlVGQlFVRXNRMEZEY2tKSkxGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVTnFRaXhKUVVGTExFbEJRVWx1U3l4SlFVRkJRU3hKUVVGUmQwc3NZVUZCUVVFc1EwRkJaU3hEUVVNMVFrd3NWVUZCUVVFc1EwRkJWMjVMTEVsQlFVRkJMRU5CUVVGQkxFTkJRVkVzUlVGQlFTeERRVU51UWl4SlFVRkxMRWxCUVVsclJTeERRVUZCUVN4SlFVRkxjMGNzWVVGQlFVRXNRMEZCWTNoTExFbEJRVUZCTEVOQlFVRkJMRU5CUTNCQ2RVc3NVVUZCUVVFc1JVRkJXWEpITEVOQlFVRkJMRWRCUVVkcFJ5eFZRVUZCUVN4RFFVRlhia3NzU1VGQlFVRXNRMEZCUVVFc1EwRkJUV3RGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXR6Unl4aFFVRkJRU3hEUVVGamVFc3NTVUZCUVVFc1EwRkJRVUVzUTBGQlRXdEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hKRkxFOUJRVTlwUnl4VlFVRkJRU3hEUVVGQlFTeERRVWxZTjBzc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWVEpMTEdOQlFVRkJMRU5CUVdsQ0xGTkJRVlZHTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRM0JFTEVsQlFVbEtMRlZCUVVGQkxFTkJRV0ZvVEN4SlFVRkJRU3hEUVVGTGJVd3NaMEpCUVVGQkxFTkJRV2xDUXl4UlFVRkJRU3hEUVVGQlFTeERRVU4yUXl4SlFVRkxMRWxCUVVrelNpeERRVUZCUVN4SlFVRkxkVW9zVlVGQlFVRXNRMEZEVml4SFFVRkpkRXNzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMW5TaXhWUVVGQlFTeERRVUZYZGtvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJkMElzUlVGQlFTeEZRVUZxUW5WS0xGVkJRVUZCTEVOQlFWZDJTaXhEUVVGQlFTeERRVUZCUVN4RFFVTjRReXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVWRtTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRkpXSFJDTEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVTBTeXhuUWtGQlFVRXNRMEZCYlVJc1UwRkJWVWdzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkZkRVFzU1VGQlNVb3NWVUZCUVVFc1EwRkJZV2hNTEVsQlFVRkJMRU5CUVV0dFRDeG5Ra0ZCUVVFc1EwRkJhVUpETEZGQlFVRkJMRU5CUVVGQkxFTkJRMjVEYWtjc1JVRkJRVUVzUTBGQlMyNUdMRWxCUVVGQkxFTkJRVXR0Uml4RlFVRkJRU3hEUVVOV1VTeFRRVUZCUVN4RFFVRlpWeXhMUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGTGRrY3NTVUZCUVVFc1EwRkJTekpHTEZOQlFVRkJMRU5CUVVGQkxFTkJSV2hETEVkQlFVbHFSaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRXZEtMRlZCUVVGQkxFTkJRV3RDTEV0QlFVRXNRMEZCUVN4RlFVRTJRaXhGUVVGQkxFVkJRWFpDUVN4VlFVRkJRU3hEUVVGclFpeExRVUZCTEVOQlFWTXNUMEZCVDBFc1ZVRkJRVUVzUTBGQmEwSXNTMEZCUVN4RFFVTXpSaXhIUVVGSmRFc3NTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxdFJDeEZRVUZCUVN4RFFVRkJRU3hGUVVGUGVrVXNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxblNpeFZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRmxOMFlzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJhME1zUlVGQlFTeEZRVUY0UWpaR0xGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXVTNSaXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZoTEU5QlFVODJSaXhWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZsTjBZc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRE5VY3NTVUZCU3l4SlFVRkpNVVFzUTBGQlFVRXNTVUZCUzJ0RkxGTkJRVUZCTEVOQlExWXNSMEZCU1dwR0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOWjBvc1ZVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlpYWktMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXZERMRVZCUVVFc1JVRkJka0oxU2l4VlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGbGRrb3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJXU3hQUVVGUGRVb3NWVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJaWFpLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpWR0xFOUJRVWxtTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5aMG9zVlVGQlFVRXNRMEZCVjJoTUxFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVFeVF5eEZRVUZCTEVWQlFUZENPRW9zVlVGQlFVRXNRMEZCVjJoTUxFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZCUVN4RFFVRjNRamhLTEZWQlFVRkJMRU5CUVZkb1RDeEpRVUZCUVN4RFFVRkxhMElzVVVGQlFVRXNRMEZCUVVFc1EwRkRPVVlzUlVGQlFTeERRVUZCTEVOQlNWaG1MRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWWkxFZEJRVUZCTEVOQlFVMHNVMEZCVldsTExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CVVhaRExFOUJUa2s1U3l4SlFVRkJRU3hEUVVGTGMwSXNTMEZCUVVFc1EwRkJUWGRLTEUxQlFVRkJMRU5CUVVGQkxFVkJRMWhzU0N4TlFVRkJRU3hEUVVGUFF5eEpRVUZCUVN4RFFVRkxhVWdzVFVGQlFVRXNRMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCUzNaRUxFZEJRVUZCTEVWQlFVRkJMRU5CUTNKQ2JFa3NTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUwMFJ5eEhRVUZCUVN4RFFVRkJRU3hEUVVGUGMwUXNUVUZCUVVFc1EwRkJUM1JFTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1RGQ2VFZ3NTVUZCUVVFc1EwRkJTMmRNTEZWQlFVRkJMRU5CUVZjeFRDeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWt6UWtjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWU3RFTEZOQlFVRkJMRU5CUVZrc1UwRkJWVGhITEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJSVGRETEVkQlFVbHNSaXhMUVVGQlFTeERRVUZOY1VZc1QwRkJRVUVzUTBGQlVVZ3NUVUZCUVVFc1EwRkJRVUVzUTBGRFpDeEpRVUZMTEVsQlFVa3ZTaXhEUVVGQlFTeEpRVUZMSzBvc1RVRkJRVUVzUTBGRFZuaE1MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTmMwc3NZMEZCUVVFc1EwRkJaVzVMTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlNUbENla0lzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMXpTeXhqUVVGQlFTeERRVUZsU2l4TlFVRkJRU3hEUVVGQlFTeERRVVU1UWl4UFFVRlBlRXdzU1VGQlFVRXNRMEZCUzNWQ0xFZEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJTV2hDY0VJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV3RNTEZkQlFVRkJMRU5CUVdNc1UwRkJWWGhHTEV0QlFVRkJMRU5CUVVGQkxFTkJSWFJETEVsQlFVbDRSaXhKUVVGQlFTeERRVUZOYVV3c1VVRkJRVUVzUTBGQlZUTkhMRVZCUVVGQkxFTkJRVWswUnl4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZEYUVORExFOUJRVUZCTEVOQlFWRkRMRWRCUVVGQkxFTkJRVWsxUml4TFFVRkJRU3hEUVVGQlFTeERRVVZhY2tjc1NVRkJRVUVzUTBGQlMzZENMRkZCUVVGQkxFTkJRVk56UkN4UFFVRkJRU3hEUVVGUmIwZ3NTVUZCUVVFc1JVRkJRVUVzUTBGRGJFSnlUQ3hKUVVGQlFTeERRVUZQY1V3c1NVRkJRVUVzUTBGQlMyaE1MRkZCUVVGQkxFTkJRMW8wU3l4UlFVRkJRU3hEUVVGWFNTeEpRVUZCUVN4RFFVRkxka2NzVTBGQlFVRXNRMEZEYUVKU0xFVkJRVUZCTEVOQlFVc3JSeXhKUVVGQlFTeERRVUZMTDBjc1JVRkJRVUVzUTBGRFRuUkZMRWxCUVVGQkxFVkJRVkYzUml4TFFVRkJRU3hEUVVGTmJrWXNVVUZCUVVFc1JVRkJXV2xGTEVWQlFVRkJMRVZCUVUxclFpeExRVUZCUVN4RFFVRk5iRUlzUlVGQlFVRXNSVUZCVFRKSExGRkJRVUZCTEVOQlFWTjJTaXhSUVVGQlFTeEZRVUZCUVN4RlFVRmpPRVFzUzBGQlFVRXNRMEZCVFZZc1UwRkJRVUVzUTBGQlZYQkVMRkZCUVVGQkxFVkJRVUZCTEVkQlEyNUdNa29zU1VGQlFVRXNRMEZCUzJoR0xFMUJRVUZCTEVWQlFVRkJMRU5CUTB3MlJTeExRVUZCUVN4RFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZIV0VFc1MwRkJRVUVzUlVGQlR5OU1MRWxCUVVGQkxFTkJRVXN3U1N4TlFVRkJRU3hEUVVGUGNrTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKTlVKc1J5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWZDB3c1dVRkJRVUVzUTBGQlpTeFRRVUZWZWtJc1RVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZEYUVSQkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVTl1U0N4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVU4wUWl4SlFVRkxMRWxCUVVrd1NDeERRVUZCUVN4SlFVRkxVQ3hOUVVGQlFTeERRVU5XUVN4TlFVRkJRU3hEUVVGUFR5eERRVUZCUVN4RFFVRkJRU3hEUVVGTFVDeE5RVUZCUVN4RFFVRlBUeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhlRWdzU1VGQlFVRXNSVUZCUVVFc1EwRkZNVUlzU1VGQlN5eEpRVUZKYUVNc1EwRkJRVUVzU1VGQlMzcENMRWxCUVVGQkxFTkJRVXN5Uml4VFFVRkJRU3hEUVVOWWFrWXNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUwd1NTeE5RVUZCUVN4RFFVRkJRU3hGUVVGWFFTeE5RVUZCUVN4RFFVRlBiRVVzVVVGQlFVRXNRMEZCVXk5RkxFTkJRVUZCTEVOQlFVRkJMRVZCUXpGRGVrSXNTVUZCUVVFc1EwRkJTekpHTEZOQlFVRkJMRU5CUVZWMVFpeE5RVUZCUVN4RFFVRlBla1lzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTE9VSjBRaXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmVVd3NZVUZCUVVFc1EwRkJaMElzVTBGQlZTOUhMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZCTEVOQlEyeEVRU3hQUVVGQlFTeERRVUZWUVN4UFFVRkJRU3hEUVVGUk9VSXNTMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGRGVFSXNTVUZCU3l4SlFVRkpPVUlzUTBGQlFVRXNTVUZCU3pSRUxFOUJRVUZCTEVOQlJVUXNSVUZCUVN4SFFVUlVOVVFzUTBGQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlJXZERMRWxCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRVZCUlVaNlJDeEpRVUZCUVN4RFFVRkxNa1lzVTBGQlFVRXNRMEZCVlhWQ0xFMUJRVUZCTEVOQlFVOTZSaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUxc1EzUkNMRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZVd1RDeFZRVUZCUVN4RFFVRmhMRk5CUVZWb1NDeFBRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJRU3hEUVVNdlEwRXNUMEZCUVVFc1EwRkJWVUVzVDBGQlFVRXNRMEZCVVRsQ0xFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUTNoQ0xFbEJRVXNzU1VGQlNUbENMRU5CUVVGQkxFbEJRVXMwUkN4UFFVRkJRU3hEUVVWRUxFVkJRVUVzUjBGRVZEVkVMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVWblF5eEpRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeEZRVVZHZWtRc1NVRkJRVUVzUTBGQlN6SkdMRk5CUVVGQkxFTkJRVlV5Unl4SFFVRkJRU3hEUVVGSk4wc3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZOTDBKMFFpeFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWTkV3c1lVRkJRVUVzUTBGQlowSXNVMEZCVld4SUxFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkJMRU5CUTJ4RVFTeFBRVUZCUVN4RFFVRlZRU3hQUVVGQlFTeERRVUZST1VJc1MwRkJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVRXNRMEZEZUVJc1NVRkJTeXhKUVVGSk9VSXNRMEZCUVVFc1NVRkJTelJFTEU5QlFVRkJMRU5CUlVRc1JVRkJRU3hIUVVSVU5VUXNRMEZCUVVFc1EwRkJTVUVzUTBGQlFVRXNRMEZCUldkRExFbEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFVkJSVVo2UkN4SlFVRkJRU3hEUVVGTE1rWXNVMEZCUVVFc1EwRkJWVFpITEUxQlFVRkJMRU5CUVU4dlN5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTFzUTNSQ0xFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlU0VEN4WFFVRkJRU3hEUVVGakxGTkJRVlZETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJSUzlETEU5QlJFRXhUU3hKUVVGQlFTeERRVUZMTWtZc1UwRkJRVUVzUTBGQlZYVkNMRTFCUVVGQkxFTkJRVTkzUml4TlFVRkJRU3hEUVVGQlFTeERRVU5tTVUwc1NVRkJRVUVzUTBGQlFVRXNRMEZKV0Vjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV3RHTEZWQlFVRkJMRU5CUVdFc1UwRkJWVVlzVTBGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUVVFc1EwRkRha1FzU1VGQlN5eEpRVUZKWjBnc1RVRkJRVUVzU1VGQlZXaElMRk5CUVVGQkxFTkJRMllzUjBGQlFTeERRVUZMTTBZc1NVRkJRVUVzUTBGQlN6SkdMRk5CUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVZNclJ5eE5RVUZCUVN4RFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlJXcEVMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVUVzUTBGSldIaE5MRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWcFRTeFJRVUZCUVN4RFFVRlhMRk5CUVZWR0xFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUlRWRExFOUJSRUV4VFN4SlFVRkJRU3hEUVVGTE1rWXNVMEZCUVVFc1EwRkJWVEpITEVkQlFVRkJMRU5CUVVsSkxFMUJRVUZCTEVOQlFVRkJMRU5CUTFveFRTeEpRVUZCUVN4RFFVRkJRU3hEUVVsWVJ5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWYTAwc1YwRkJRVUVzUTBGQll5eFRRVUZWU0N4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVWN2UXl4UFFVUkJNVTBzU1VGQlFVRXNRMEZCU3pKR0xGTkJRVUZCTEVOQlFWVTJSeXhOUVVGQlFTeERRVUZQUlN4TlFVRkJRU3hEUVVGQlFTeERRVU5tTVUwc1NVRkJRVUVzUTBGQlFVRXNRMEZKV0Vjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV2xGTEZGQlFVRkJMRU5CUVZjc1UwRkJWVGxETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJVelZETEU5QlVrbHdRaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJRVUVzUjBGRFdIZERMRTFCUVVGQkxFTkJRVTlETEVsQlFVRkJMRU5CUVV0NlF5eE5RVUZCUVN4RFFVRkJRU3hEUVVGUk1rb3NSMEZCUVVFc1EwRkJTWFpFTEVkQlFVRkJMRVZCUVVGQkxFTkJRM0JDY0Vjc1RVRkJRVUVzUTBGQlQyOUhMRWRCUVVGQkxFTkJRVUZCTEVOQlFXbEZMRWxCUVVFc1JVRkJla1FzU1VGQlNUUkZMRTFCUVVGQkxFTkJRVTlvVEN4TlFVRkJRU3hEUVVGUGIwY3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFVzc1MwRkJRVUVzUTBGQlRYcEhMRTFCUVVGQkxFTkJRVTl2Unl4SFFVRkJRU3hEUVVGQlFTeERRVUZMZUVjc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVRXNRMEZCWTBrc1RVRkJRVUVzUTBGQlQyOUhMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVlZ3Unl4TlFVRkJRU3hEUVVGUGIwY3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZOVWRzU1N4SlFVRkJRU3hEUVVGTGRVSXNSMEZCUVVFc1EwRkJTVThzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRlJUbENMRWxCUVVGQkxFTkJRVXNyVFN4eFFrRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRk5lRUkxVFN4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjVTBzVFVGQlFVRXNRMEZCVXl4VFFVRlZReXhuUWtGQlFVRXNRMEZCYlVJc1JVRkJRU3hEUVVGQkxFTkJRM0JFTEVsQlFVbERMRTFCUVVGQkxFTkJRVk5zVGl4SlFVRkJRU3hEUVVGTGJVNHNWVUZCUVVFc1EwRkJWMFlzWjBKQlFVRkJMRU5CUVVGQkxFTkJRM3BDUnl4SFFVRkJRU3hEUVVGTmNFNHNTVUZCUVVFc1EwRkJTelJGTEZGQlFVRkJMRVZCUVVGQkxFTkJRVmQzU1N4SFFVRkJRU3hEUVVOMFFtNU1MRWxCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVdFlMRTlCU0V0MlFpeEpRVUZCUVN4RFFVRkxaMFlzVFVGQlFVRXNRMEZCVDNkSUxFMUJRVUZCTEVOQlFVRkJMRWRCUTJKcVRDeEpRVUZCUVN4RFFVRlBiVXdzUjBGQlFVRXNSVUZCVHl4RFFVRkJMRVZCUVV0QkxFZEJRVUZCTEVWQlFVOUdMRTFCUVVGQkxFTkJRVTlITEZsQlFVRkJMRU5CUVVGQkxFTkJSVGxDY0V3c1NVRkJRVUVzUTBGQlFVRXNRMEZKV0RsQ0xFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlV5VFN4UlFVRkJRU3hEUVVGWExGTkJRVlZhTEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRelZETEU5QlFVOHhUU3hKUVVGQlFTeERRVUZMTWtZc1UwRkJRVUVzUTBGQlZVTXNVVUZCUVVFc1EwRkJVemhITEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXNURkazBzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZUUk5MR0ZCUVVGQkxFTkJRV2RDTEZOQlFWVjJReXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTnlSQ3hKUVVGTExFbEJRVWwyU2l4RFFVRkJRU3hKUVVGTGRVb3NWVUZCUVVFc1EwRkRWbWhNTEVsQlFVRkJMRU5CUVV0NVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTGRVb3NWVUZCUVVFc1EwRkJWM1pLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlN6ZENkRUlzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZTdEhMR0ZCUVVGQkxFTkJRV2RDTEZOQlFWVjBSeXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTnlSQ3hKUVVGTExFbEJRVWxMTEVOQlFVRkJMRWxCUVV0TUxGVkJRVUZCTEVOQlEwUXNUMEZCUVN4RlFVRk1TeXhEUVVGQlFTeERRVU5CZWtJc1NVRkJRVUVzUTBGQlMzVkNMRWRCUVVGQkxFTkJRVWxJTEZWQlFVRkJMRU5CUVZkTExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0JDZWtJc1NVRkJRVUVzUTBGQlMzZERMRmxCUVVGQkxFTkJRV0ZtTEVOQlFVRkJMRU5CUVVkTUxGVkJRVUZCTEVOQlFWZExMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUVFZEZEVJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWVlVzWVVGQlFVRXNRMEZCWjBJc1UwRkJWVFJGTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGQkxFTkJRelZDTEVOQlFVRXNSVUZCYUVKQkxFdEJRVUZCTEVOQlFVMTJSU3hOUVVGQlFTeEhRVUZoZFVVc1MwRkJRVUVzUTBGQlVXcEhMRWxCUVVGQkxFTkJRVXQzVGl4cFFrRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkRjRU1zU1VGQlNYQk5MRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVVZxUWl4SlFVRkxMRWxCUVVsUUxFbEJRVUZCTEVsQlFWRnZSaXhMUVVGQlFTeERRVU5pTjBVc1ZVRkJRVUVzUTBGQlYxQXNTVUZCUVVFc1EwRkJRVUVzUTBGQlVXSXNTVUZCUVVFc1EwRkJTM2xHTEZsQlFVRkJMRU5CUVdFMVJTeEpRVUZCUVN4RFFVRkJRU3hEUVVWNlF5eFBRVUZQVHl4VlFVRkJRU3hEUVVGQlFTeERRVWxZYWtJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWVEpDTEZkQlFVRkJMRU5CUVdNc1UwRkJWVklzVFVGQlFVRXNRMEZCVXl4RFFVRkZaQ3hQUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCU1Vrc1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVa3hSU3hQUVVoQmNFSXNTVUZCUVVFc1EwRkJTMmRKTEZkQlFVRkJMRVZCUVVGQkxFTkJSVk4wU0N4SlFVRkJRU3hEUVVGTFR5eGhRVUZCUVN4RFFVRmpZU3hOUVVGQlFTeERRVUZST1VJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxOME5ITEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVjNUU3hWUVVGQlFTeERRVUZoTEZOQlFWVjBUU3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1hWQ0xFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVRkJMRU5CUTNoRUxFbEJRVWtyUnl4VFFVRkJRU3hEUVVGWmRFa3NTVUZCUVVFc1EwRkJTekJJTEV0QlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVU14UWpKRkxFMUJRVUZCTEVOQlFWTnNUaXhKUVVGQlFTeERRVUZMTUVjc1ZVRkJRVUVzUTBGRGJFSXNSMEZCYVVJc1IwRkJRU3hGUVVGaWVVTXNVMEZCUVVFc1EwRkRRU3hMUVVGUEswUXNUVUZCUVVFc1IwRkJRVUVzUTBGRFEzaE5MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTmEwd3NUVUZCUVVFc1EwRkJUM1pJTEZOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVOQlFXTjFTQ3hOUVVGQlFTeERRVUZQZGtnc1UwRkJRVUVzUTBGQlZVTXNVVUZCUVVFc1EwRkJVeTlGTEVsQlFVRkJMRU5CUVVzd1NDeExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUlVGSGVrVXlSU3hOUVVGQlFTeERRVUZUUVN4TlFVRkJRU3hEUVVGUGVFY3NWVUZCUVVFc1EwRkJRVUVzUzBGSGJrSXNSMEZCYVVJc1IwRkJRU3hGUVVGaWVVTXNVMEZCUVVFc1EwRkRUQ3hMUVVGUEswUXNUVUZCUVVFc1IwRkJRVUVzUTBGRFEzaE5MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTmEwd3NUVUZCUVVFc1EwRkJUeTlJTEVWQlFVRkJMRU5CUVVGQkxFVkJRVThyU0N4TlFVRkJRU3hEUVVGUEwwZ3NSVUZCUVVFc1JVRkJUWFJGTEVsQlFVRkJMRU5CUVVzd1NDeExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVGQkxFVkJSM0pFTWtVc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUM2hITEZWQlFVRkJMRU5CUVVGQkxFdEJTWEJDTEV0QlFVOTNSeXhOUVVGQlFTeEhRVUZCUVN4RFFVTkRlRTBzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMXJUQ3hOUVVGQlFTeERRVUZQYUUwc1VVRkJRVUVzUTBGQlFVRXNSVUZCWVdkTkxFMUJRVUZCTEVOQlFVOW9UU3hSUVVGQlFTeERRVUZUUXl4WFFVRkJRU3hGUVVGQlFTeEZRVUZwUWs0c1NVRkJRVUVzUTBGQlMwMHNWMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNSVUZFT1VRc1EwRkpUaXhIUVVGSlZDeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFd0TUxFMUJRVUZCTEVOQlFVOVBMRmxCUVVGQkxFTkJRVUZCTEVWQlFXbENVQ3hOUVVGQlFTeERRVUZQVHl4WlFVRkJRU3hEUVVGaE5VMHNTVUZCUVVFc1EwRkJRVUVzUTBGQlR5eERRVU51UlN4SFFVRkpTQ3hKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVa3NTMEZCUVVFc1EwRkJRVUVzUlVGQlZUaExMRTFCUVVGQkxFTkJRVTk2U0N4WlFVRkJRU3hEUVVGaE5VVXNTVUZCUVVFc1EwRkJRVUVzUlVGQlUzVkNMRXRCUVVGQkxFTkJRMnhFTEUxQlJVTXNTMEZCUVN4RFFVVlVPRXNzVFVGQlFVRXNRMEZCVTBFc1RVRkJRVUVzUTBGQlQzaEhMRlZCUVVGQkxFTkJSM2hDTEU5QlFVOTNSeXhOUVVGQlFTeERRVUZCUVN4RFFVbFlMMDBzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZUWk1MRTFCUVVGQkxFTkJRVk1zVlVGQlFTeERRVU5ITEUxQlFVRXNSVUZCZEVKNFRTeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFc5TkxFOUJRVUZCTEVWQlFUaERMRkZCUVVFc1JVRkJla0l4VGl4SlFVRkJRU3hEUVVGTGMwSXNTMEZCUVVFc1EwRkJUWEZOTEZWQlFVRkJMRU5CUVhkQ00wNHNTVUZCUVVFc1EwRkJTelJPTEVsQlFVRkJMRVZCUVVGQkxFTkJRM1pGTlU0c1NVRkJRVUVzUTBGQlN6Wk9MRWxCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CU1dReFRpeFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWYTA0c1NVRkJRVUVzUTBGQlR5eFZRVUZCTEVOQlRYSkNMRTlCUmtFM1RpeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFc5TkxFOUJRVUZCTEVOQlFWVXNUVUZCUVN4RFFVVmtNVTRzU1VGQlFVRXNRMEZCUVVFc1EwRkpXRWNzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZXbE9MRWxCUVVGQkxFTkJRVThzVlVGQlFTeERRVkZ5UWl4UFFVUkJOVTRzU1VGQlFVRXNRMEZCU3pCRkxGTkJRVUZCTEVOQlFWVXNRMEZCUXl4VFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOVU1VVXNTVUZCUVVFc1EwRkJRVUVzUTBGSldFY3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVldkTExHTkJRVUZCTEVOQlFXbENMRk5CUVZVM1NTeE5RVUZCUVN4RFFVRlRMRU5CUVVVMFNTeE5RVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRelZFTEVsQlFVbHZSQ3hWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTnFRbWhOTEUxQlFVRkJMRU5CUVZOQkxFMUJRVUZCTEVWQlFWVXNSVUZCUVN4RlFVTmFORWtzVFVGQlFVRXNRMEZCVXpWSkxFMUJRVUZCTEVOQlFVODBTU3hOUVVGQlFTeEZRVUZWTEVWQlFVRXNRMEZEYWtNc1NVRkJTVUVzVFVGQlFVRXNRMEZCVXpWSkxFMUJRVUZCTEVOQlFVODBTU3hOUVVGQlFTeERRVU53UWl4SlFVRkxMRWxCUVVscVNpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1dsS0xFMUJRVUZCTEVOQlFVOW9TaXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlEzQkRMRWxCUVVselRTeEhRVUZCUVN4RFFVRk5MMDRzU1VGQlFVRXNRMEZCUzJsR0xFOUJRVUZCTEVOQlFWRjVSaXhOUVVGQlFTeERRVUZQYWtvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRPVUlzU1VGQlN5eEpRVUZKZDBvc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWs0UXl4SFFVRkJRU3hEUVVGSmNrMHNUVUZCUVVFc1EwRkJVWFZLTEVOQlFVRkJMRVZCUVVGQkxFTkJRM1pDTmtNc1ZVRkJRVUVzUTBGQlYzUklMRkZCUVVGQkxFTkJRVk4xU0N4SFFVRkJRU3hEUVVGSk9VTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCU3paRExGVkJRVUZCTEVOQlFWZHVUU3hKUVVGQlFTeERRVUZMYjAwc1IwRkJRVUVzUTBGQlNUbERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVVRsRUxFOUJTa0ZxVEN4SlFVRkJRU3hEUVVGTGQwSXNVVUZCUVVFc1EwRkJVM05FTEU5QlFVRkJMRU5CUVZGdlNDeEpRVUZCUVN4RlFVRkJRU3hEUVVOaU5FSXNWVUZCUVVFc1EwRkJWM1JJTEZGQlFVRkJMRU5CUVZNd1JpeEpRVUZCUVN4RFFVRkJRU3hGUVVGUFFTeEpRVUZCUVN4RFFVRkxhRVlzVFVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVOc1NDeEpRVUZCUVN4RFFVRkJRU3hEUVVsWVJ5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWY1U0c1RVRkJRVUVzUTBGQlV5eFZRVUZCTEVOQlEyNUNkRTRzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMW9ReXhKUVVGQlFTeERRVUZMWjBnc1QwRkJRVUVzUTBGQlVVTXNUVUZCUVVFc1EwRkJRVUVzUlVGQlFVRXNUMEZEYWtKMlJ5eEpRVUZCUVN4RFFVRkxWQ3hQUVVGQlFTeERRVUZSUkN4SlFVRkJRU3hEUVVGTFowZ3NUMEZCUVVFc1EwRkJVVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkZja05xU0N4SlFVRkJRU3hEUVVGTGEwZ3NUVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZKVkM5SExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ6VGl4WFFVRkJRU3hEUVVGakxGTkJRVlUxU0N4TFFVRkJRU3hEUVVGQlFTeERRVVYwUXl4UFFVUkJRU3hMUVVGQlFTeERRVUZOTWtnc1RVRkJRVUVzUlVGQlFVRXNRMEZEUTJoUExFbEJRVUZCTEVOQlFVRkJMRU5CU1ZoSExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlYxVGl4alFVRkJRU3hEUVVGcFFpeFRRVUZWY0Uwc1RVRkJRVUVzUTBGQlV5eERRVUZGYWtJc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVbDFSU3hMUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1VRc1JVRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTNSVzFDTEV0QlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVdDJSeXhKUVVGQlFTeERRVUZMZDBJc1VVRkJRVUVzUTBGQlFVRXNRMEZCVlhORUxFOUJRVUZCTEVOQlFWRnZTQ3hKUVVGQlFTeEZRVUZCUVN4RFFVTjJRbmhNTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5SaXhOUVVGQlFTeERRVUZQYWtJc1NVRkJRVUVzUTBGQlFVRXNSVUZCVTJsQ0xFMUJRVUZCTEVOQlFVOXFRaXhKUVVGQlFTeEZRVUZSY1V3c1NVRkJRVUVzUTBGQlMyaE1MRkZCUVVGQkxFVkJRV0ZTTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5SaXhOUVVGQlFTeERRVUZQYzBRc1MwRkJRVUVzUTBGQlFVRXNSVUZCVlRGRkxFbEJRVUZCTEVOQlFVdDVUaXhsUVVGQlFTeERRVUZuUWpkSUxFdEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVXN5Uml4SlFVRkJRU3hEUVVGTGRrY3NVMEZCUVVFc1EwRkJRVUVzUTBGQldUZEVMRTFCUVVGQkxFTkJRVTl6UkN4TFFVRkJRU3hEUVVGTk4wSXNTMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGQlFTeEZRVUZWTjBNc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVU5eFJDeEZRVUZCUVN4RFFVRkJRU3hIUVVGUGNrUXNUVUZCUVVFc1EwRkJUM0ZFTEVWQlFVRkJMRU5CUVUwclJ5eEpRVUZCUVN4RFFVRkxMMGNzUlVGQlFVRXNRMEZCUVVFc1EwRkpjRTRyUnl4SlFVRkJRU3hEUVVGTFRTeE5RVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUxcVFuSk5MRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWNVRpeGhRVUZCUVN4RFFVRm5RaXhUUVVGVmNFNHNUMEZCUVVFc1EwRkJVelJITEZWQlFVRkJMRU5CUVdFc1VVRkJRU3hEUVVGQkxFTkJRemxFTlVnc1NVRkJRVUVzUTBGQlN6UklMRlZCUVVGQkxFTkJRVUZCTEVOQlFWazFSeXhQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkeVFtSXNUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlRCT0xFOUJRVUZCTEVOQlFWVXNVMEZCVlhKTUxGRkJRVUZCTEVWQlFWY3NTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNM1F5eEpRVUZKYzB3c1UwRkJRVUVzUTBGQldTeERRVUZCTEVOQlFVZERMRTlCUVVGQkxFTkJRVlVzUTBGQlFTeERRVU0zUW5aUExFbEJRVUZCTEVOQlFVc3JSQ3gzUWtGQlFVRXNRMEZCZVVJc2RVSkJRVUVzUTBGQmVVSmlMRXRCUVVGQkxFVkJRVUZCTEVOQlEyNUViMHdzVTBGQlFVRXNRMEZCV1hCTUxFdEJRVUZCTEVOQlFVMXpUQ3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkMFFuaFBMRWxCUVVGQkxFTkJRVXNyUkN4M1FrRkJRVUVzUTBGQmVVSXNiVUpCUVVFc1EwRkJjVUppTEV0QlFVRkJMRVZCUVVGQkxFTkJReTlEY1V3c1QwRkJRVUVzUTBGQlZYSk1MRXRCUVVGQkxFTkJRVTF6VEN4VFFVRkJRU3hEUVVOb1FuUk1MRXRCUVVGQkxFTkJRVTExVEN4UlFVRkJRU3hEUVVGWFJpeFBRVUZCUVN4RFFVRlZSQ3hUUVVGQlFTeERRVVV6UW5STUxGRkJRVUZCTEVOQlFWTkZMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzSkNja1FzY1VKQlFVRkJMRU5CUVhOQ1VTeGpRVUZCUVN4RFFVRnBRbG9zVTBGQlFVRXNRMEZCUVVFc1EwRkRia01zU1VGQlNXbENMRWxCUVVGQkxFTkJRVTlXTEVsQlFVRkJMRU5CUlZoTExHTkJRVUZCTEVOQlFXVk5MRk5CUVVGQkxFTkJRVlVyVGl4UlFVRkJRU3hEUVVGWExGTkJRVlU1U2l4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVU55UkN4SlFVRkpLMG9zVlVGQlFVRXNRMEZCWVdwUExFbEJRVUZCTEVOQlFVdFBMR0ZCUVVGQkxFTkJRV01zUTBGQlJVUXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZaVVN4UlFVRkJRU3hEUVVWMlJHOU9MRWxCUVVGQkxFTkJRVTkwU1N4TFFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRkxka2NzU1VGQlFVRXNRMEZCUVVFc1EwRkZkRUlzU1VGQlN5eEpRVUZKZVVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWx0VGl4SlFVRkJRU3hEUVVGTGJFNHNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRla0pCTEVOQlFVRkJMRVZCUVV0dFJDeFJRVUZCUVN4SFFVTlVLMG9zVlVGQlFVRXNRMEZCVjJ4T0xFTkJRVUZCTEVOQlFVRkJMRU5CUVV0NlFpeEpRVUZCUVN4RFFVRkxOazhzU1VGQlFVRXNRMEZCUzNCT0xFTkJRVUZCTEVOQlFVRkJMRU5CUXpGQ2RVc3NUMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCU1RCRExGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV2hDTEU5QlFVOUJMRlZCUVVGQkxFTkJRVUZCTEVOQlIxaDBUeXhqUVVGQlFTeERRVUZsVFN4VFFVRkJRU3hEUVVGVmJVVXNUMEZCUVVFc1EwRkJWU3hUUVVGVk9VSXNVVUZCUVVFc1JVRkJWeXhKUVVGQkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzQkVMRWxCUVVrMFRDeEpRVUZCUVN4RFFVRlBkRWtzUzBGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlMzWkhMRWxCUVVGQkxFTkJRVUZCTEVOQlEzUkNMRWxCUVVzc1NVRkJTWGxDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpiVTRzU1VGQlFVRXNRMEZCUzJ4T0xFMUJRVUZCTEVOQlFWRkVMRU5CUVVGQkxFVkJRVUZCTEVOQlF6ZENkVUlzVVVGQlFVRXNRMEZCVXpSTUxFbEJRVUZCTEVOQlFVdHVUaXhEUVVGQlFTeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVreFFuQkNMR05CUVVGQkxFTkJRV1ZOTEZOQlFVRkJMRU5CUVZVd1JDeEpRVUZCUVN4RFFVRlBMRk5CUVZWeVFpeFJRVUZCUVN4RlFVRlhMRWxCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGFrUXNTVUZCU1RSTUxFbEJRVUZCTEVOQlFVOTBTU3hMUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGTGRrY3NTVUZCUVVFc1EwRkJRVUVzUTBGRGRFSXNTVUZCU3l4SlFVRkplVUlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHRUaXhKUVVGQlFTeERRVUZMYkU0c1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRE4wSjFRaXhSUVVGQlFTeERRVUZUTkV3c1NVRkJRVUVzUTBGQlMyNU9MRU5CUVVGQkxFTkJRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU3pGQ2NFSXNZMEZCUVVFc1EwRkJaVTBzVTBGQlFVRXNRMEZCYlVJc1QwRkJRU3hEUVVGSkxGTkJRVlZMTEU5QlFVRkJMRU5CUVVGQkxFTkJRelZETEVsQlFVazBUaXhKUVVGQlFTeERRVUZQZEVrc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTM1pITEVsQlFVRkJMRU5CUVVGQkxFTkJRM1JDTEVsQlFVc3NTVUZCU1hsQ0xFTkJRVUZCTEVsQlFVdHRUaXhKUVVGQlFTeERRVU5XTEVkQlFVbEJMRWxCUVVGQkxFVkJRVkUxVGl4UFFVRkJRU3hEUVVGVExFOUJRVTlUTEVOQlFVRkJMRU5CUldoRExFMUJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZIV25CQ0xHTkJRVUZCTEVOQlFXVk5MRk5CUVVGQkxFTkJRVzlDTEZGQlFVRXNRMEZCU1N4VFFVRlZTeXhQUVVGQlFTeERRVUZCUVN4RFFVTTNReXhOUVVGQkxFTkJRV2xETEVOQlFVRXNSVUZCTVVKb1FpeEpRVUZCUVN4RFFVRkxkVXNzVDBGQlFVRXNRMEZCVVhaS0xFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM2hDV0N4alFVRkJRU3hEUVVGbFRTeFRRVUZCUVN4RFFVRjNRaXhaUVVGQkxFTkJRVWtzVTBGQlZTdENMRkZCUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVVGQkxFTkJRek5FTEVsQlFVbDVSQ3hqUVVGQlFTeERRVUZwUWl4RlFVRkJMRU5CUTJwQ2Qwa3NTVUZCUVVFc1EwRkJUM1JKTEV0QlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVdDJSeXhKUVVGQlFTeERRVUZCUVN4RFFVVjBRaXhKUVVGTExFbEJRVWs0VHl4UFFVRkJRU3hKUVVGWFJpeEpRVUZCUVN4RFFVRkJRU3hEUVVOYVJTeFBRVUZCUVN4RlFVRlhjRTBzVVVGQlFVRXNSVUZCV1c5TkxFOUJRVUZCTEVWQlFWZHVUU3hSUVVGQlFTeEZRVUZaYlUwc1QwRkJRVUVzUTBGQlVXaE1MRlZCUVVGQkxFTkJRVmR3UWl4UlFVRkJRU3hEUVVGQlFTeEZRVUZoYjAwc1QwRkJRVUVzUTBGQlVXaE1MRlZCUVVGQkxFTkJRVmR1UWl4UlFVRkJRU3hEUVVGQlFTeEhRVU5xUjNsRUxHTkJRVUZCTEVOQlFXVjZSU3hKUVVGQlFTeERRVUZMYlU0c1QwRkJRVUVzUTBGQlFVRXNRMEZKTlVJc1QwRkJUekZKTEdOQlFVRkJMRU5CUVVGQkxFTkJTV1oyUnl4WFFVRkJRU3hEUVVGWlZTeEpRVUZCUVN4RFFVRlBaQ3hUUVVGQlFTeERRVUZCUVN4RFFVZG1ZeXhKUVVGQlFTeERRVUZMU1N4VFFVRkJRU3hEUVVGVmQwTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJSelZDZEVRc1pVRkJRVUVzUTBGQlowSlpMRkZCUVVGQkxFTkJRVmRvUWl4VFFVRkJRU3hEUVVGQlFTeERRVWQyUW1kQ0xGRkJRVUZCTEVOQlFWTkZMRk5CUVVGQkxFTkJRV2RDTEVsQlFVRXNRMEZCU1N4VFFVRlZjVU1zVVVGQlFVRXNSVUZCVnl4SlFVRkJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRemxETEVsQlFVc3NTVUZCU1haQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKZWtJc1NVRkJRVUVzUTBGQlN6QkNMRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRemRDZFVJc1VVRkJRVUVzUTBGQlUyaEVMRWxCUVVGQkxFTkJRVXQ1UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVa3hRbWhDTEZGQlFVRkJMRU5CUVZORkxGTkJRVUZCTEVOQlFXMUNMRTlCUVVFc1EwRkJTU3hUUVVGVlN5eFBRVUZCUVN4RFFVRkJRU3hEUVVOMFF5eEpRVUZMTEVsQlFVbFRMRU5CUVVGQkxFbEJRVXQ2UWl4SlFVRkJRU3hEUVVOV0xFZEJRVWxCTEVsQlFVRkJMRU5CUVV0NVFpeERRVUZCUVN4RFFVRkJRU3hGUVVGTlZDeFBRVUZCUVN4RFFVRlRMRTlCUVU5VExFTkJRVUZCTEVOQlJXNURMRTFCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGSFdtaENMRkZCUVVGQkxFTkJRVk5GTEZOQlFVRkJMRU5CUVc5Q0xGRkJRVUVzUTBGQlNTeFRRVUZWU3l4UFFVRkJRU3hEUVVGQlFTeERRVU4yUXl4TlFVRkJMRU5CUVdsRExFTkJRVUVzUlVGQk1VSm9RaXhKUVVGQlFTeERRVUZMZFVzc1QwRkJRVUVzUTBGQlVYWktMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNoQ1VDeFJRVUZCUVN4RFFVRlRSU3hUUVVGQlFTeERRVUYzUWl4WlFVRkJMRU5CUVVrc1UwRkJWU3RDTEZGQlFVRkJMRU5CUVZWRExGRkJRVUZCTEVOQlFVRkJMRU5CUTNKRUxFbEJRVWw1UkN4alFVRkJRU3hEUVVGcFFpeEZRVUZCTEVOQlEzSkNMRWxCUVVzc1NVRkJTVEJKTEU5QlFVRkJMRWxCUVZjNVR5eEpRVUZCUVN4RFFVRkJRU3hEUVVOYU9FOHNUMEZCUVVFc1JVRkJWM0JOTEZGQlFVRkJMRVZCUVZsdlRTeFBRVUZCUVN4RlFVRlhiazBzVVVGQlFVRXNSVUZCV1cxTkxFOUJRVUZCTEVOQlFWRm9UQ3hWUVVGQlFTeERRVUZYY0VJc1VVRkJRVUVzUTBGQlFVRXNSVUZCWVc5TkxFOUJRVUZCTEVOQlFWRm9UQ3hWUVVGQlFTeERRVUZYYmtJc1VVRkJRVUVzUTBGQlFVRXNSMEZEYWtkNVJDeGpRVUZCUVN4RFFVRmxla1VzU1VGQlFVRXNRMEZCUzIxT0xFOUJRVUZCTEVOQlFVRkJMRU5CU1RWQ0xFOUJRVTh4U1N4alFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kVGVtcGxhdGVfOT1yZXF1aXJlKFwiLi9UZW1wbGF0ZVwiKTsgKi87Y2xhc3MgX19FbXB0eV8ze312YXIgXyRDb21wb25lbnRzXzM9Y2xhc3MgZXh0ZW5kcyBfJFRlbXBsYXRlXzl7Y29uc3RydWN0b3IodGhlV2luZG93PV9fRW1wdHlfMyl7c3VwZXIodGhlV2luZG93KX1jcmVhdGVUYWIocGFyYW1zPXt0aXRsZXM6W119KXt2YXIgdGFiVGl0bGU9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwidWxcIixhdHRyaWJ1dGVzOntjbGFzczpcInRhYlwifX0pO2Zvcih2YXIgaSBvZihwYXJhbXMudmlldy5hcHBlbmQodGFiVGl0bGUpLHBhcmFtcy50aXRsZXMpKXRhYlRpdGxlLmFwcGVuZCh0aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJsaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwidGFiLXRpdGxlXCJ9LHRleHQ6aX0pKTt0YWJUaXRsZS5maW5kQWxsKFwibGlcIikuZm9yRWFjaChub2RlPT57bm9kZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e3ZhciB1cmw9dGhpcy51cmxTcGxpdHRlcihsb2NhdGlvbi5ocmVmKTt1cmwudmFycy50YWI9bm9kZS50ZXh0Q29udGVudC50b0xvd2VyQ2FzZSgpLHJvdXRlci5yZW5kZXIoe3VybDpcIj9cIit0aGlzLnVybFNwbGl0dGVyKHRoaXMudXJsTWVyZ2VyKHVybCxcInRhYlwiKSkucXVlcmllc30pfSl9KX1jZWxsKHBhcmFtcz17ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7fSxuYW1lOlwiXCIsZGF0YUF0dHJpYnV0ZXM6e30sdmFsdWU6XCJcIix0ZXh0OlwiXCIsaHRtbDpcIlwiLGVkaXQ6XCJcIn0pe3ZhciBjb21wb25lbnRzLGlkPXRoaXMuc3RyaW5nUmVwbGFjZShwYXJhbXMubmFtZSxcIiBcIixcIi1cIikrXCItY2VsbFwiLGxhYmVsPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImxhYmVsXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjZWxsLWxhYmVsXCJ9LHRleHQ6cGFyYW1zLm5hbWV9KTtsZXQgZGF0YTtwYXJhbXMuYXR0cmlidXRlcz10aGlzLmlzc2V0KHBhcmFtcy5hdHRyaWJ1dGVzKT9wYXJhbXMuYXR0cmlidXRlczp7fSxwYXJhbXMuZGF0YUF0dHJpYnV0ZXM9dGhpcy5pc3NldChwYXJhbXMuZGF0YUF0dHJpYnV0ZXMpP3BhcmFtcy5kYXRhQXR0cmlidXRlczp7fSxwYXJhbXMuZGF0YUF0dHJpYnV0ZXMuaWQ9aWQsY29tcG9uZW50cz1cInNlbGVjdFwiPT1wYXJhbXMuZWxlbWVudD97ZWxlbWVudDpwYXJhbXMuZWxlbWVudCxhdHRyaWJ1dGVzOnBhcmFtcy5kYXRhQXR0cmlidXRlcyxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJvcHRpb25cIixhdHRyaWJ1dGVzOntkaXNhYmxlZDpcIlwiLHNlbGVjdGVkOlwiXCJ9LHRleHQ6YFNlbGVjdCAke3BhcmFtcy5uYW1lfWAsdmFsdWU6XCJcIn1dfTp7ZWxlbWVudDpwYXJhbXMuZWxlbWVudCxhdHRyaWJ1dGVzOnBhcmFtcy5kYXRhQXR0cmlidXRlcyx0ZXh0OnBhcmFtcy52YWx1ZX0sdGhpcy5pc3NldChwYXJhbXMudmFsdWUpJiYoY29tcG9uZW50cy5hdHRyaWJ1dGVzLnZhbHVlPXBhcmFtcy52YWx1ZSksdGhpcy5pc3NldChwYXJhbXMub3B0aW9ucykmJihjb21wb25lbnRzLm9wdGlvbnM9cGFyYW1zLm9wdGlvbnMpLChkYXRhPXBhcmFtcy5lbGVtZW50IGluc3RhbmNlb2YgRWxlbWVudD9wYXJhbXMuZWxlbWVudDp0aGlzLmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cykpLmNsYXNzTGlzdC5hZGQoXCJjZWxsLWRhdGFcIiksdGhpcy5pc3NldChwYXJhbXMudmFsdWUpJiYoZGF0YS52YWx1ZT1wYXJhbXMudmFsdWUpO2xldCBlZGl0LGNlbGw9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczpwYXJhbXMuYXR0cmlidXRlcyxjaGlsZHJlbjpbbGFiZWwsZGF0YV19KTtyZXR1cm4gY2VsbC5jbGFzc0xpc3QuYWRkKFwiY2VsbFwiKSx0aGlzLmlzc2V0KHBhcmFtcy50ZXh0KSYmKGRhdGEudGV4dENvbnRlbnQ9cGFyYW1zLnRleHQpLHRoaXMuaXNzZXQocGFyYW1zLmh0bWwpJiYoZGF0YS5pbm5lckhUTUw9cGFyYW1zLmh0bWwpLHRoaXMuaXNzZXQocGFyYW1zLmxpc3QpJiYoY2VsbC5tYWtlRWxlbWVudCh7ZWxlbWVudDpcImRhdGFsaXN0XCIsYXR0cmlidXRlczp7aWQ6YCR7aWR9LWxpc3RgfSxvcHRpb25zOnBhcmFtcy5saXN0LnNvcnQoKX0pLGRhdGEuc2V0QXR0cmlidXRlKFwibGlzdFwiLGAke2lkfS1saXN0YCkpLHRoaXMuaXNzZXQocGFyYW1zLmVkaXQpJiYoZWRpdD1jZWxsLm1ha2VFbGVtZW50KHtlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOmAke3BhcmFtcy5lZGl0fWAsXCJkYXRhLWljb25cIjpcImZhcywgZmEtcGVuXCIsc3R5bGU6e2N1cnNvcjpcInBvaW50ZXJcIixiYWNrZ3JvdW5kQ29sb3I6XCJ2YXIoLS1wcmltYXJ5LWNvbG9yKVwiLHdpZHRoOlwiMWVtXCIsaGVpZ2h0OlwiYXV0b1wiLHBvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6XCIwcHhcIixyaWdodDpcIjBweFwiLHBhZGRpbmc6XCIuMTVlbVwifX19KSxjZWxsLmNzcyh7cG9zaXRpb246XCJyZWxhdGl2ZVwifSkpLGNlbGx9bWVzc2FnZShwYXJhbXM9e2xpbms6XCJcIix0ZXh0OlwiXCIsdGVtcDowfSl7dmFyIG1lPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImFsZXJ0XCJ9LGNoaWxkcmVuOlt0aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJhXCIsdGV4dDpwYXJhbXMudGV4dCxhdHRyaWJ1dGVzOntjbGFzczpcInRleHRcIixocmVmOnBhcmFtcy5saW5rfX0pLHRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNsb3NlXCJ9fSldfSk7aWYodGhpcy5pc3NldChwYXJhbXMudGVtcCkpdmFyIHRpbWU9c2V0VGltZW91dCgoKT0+e21lLnJlbW92ZSgpLGNsZWFyVGltZW91dCh0aW1lKX0sXCJcIiE9cGFyYW1zLnRlbXA/MWUzKnBhcmFtcy50aW1lOjVlMyk7bWUuZmluZChcIi5jbG9zZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e21lLnJlbW92ZSgpfSksYm9keS5maW5kKFwiI25vdGlmaWNhdGlvbi1ibG9ja1wiKS5hcHBlbmQobWUpfWNyZWF0ZVRhYmxlKHBhcmFtcz17dGl0bGU6XCJcIixjb250ZW50czp7fSxwcm9qZWN0aW9uOnt9LHJlbmFtZTp7fSxzb3J0OiExLHNlYXJjaDohMSxmaWx0ZXI6W119KXtsZXQgaSxoZWFkZXJzPVtdLGNvbHVtbnM9e30sY29sdW1uQ291bnQ9MCx0YWJsZT10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOnBhcmFtcy5hdHRyaWJ1dGVzfSk7dGFibGUuY2xhc3NMaXN0LmFkZChcImtlcmR4LXRhYmxlXCIpO2ZvcihsZXQgY29udGVudCBvZiBwYXJhbXMuY29udGVudHMpe2k9cGFyYW1zLmNvbnRlbnRzLmluZGV4T2YoY29udGVudCk7Zm9yKGxldCBuYW1lIGluIGNvbnRlbnQpLTE9PWhlYWRlcnMuaW5kZXhPZihuYW1lKSYmKGhlYWRlcnMucHVzaChuYW1lKSxjb2x1bW5zW25hbWVdPXRhYmxlLm1ha2VFbGVtZW50KHtlbGVtZW50OlwiY29sdW1uXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1jb2x1bW5cIixcImRhdGEtbmFtZVwiOm5hbWV9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLWNvbHVtbi10aXRsZVwiLFwiZGF0YS1uYW1lXCI6bmFtZX0sY2hpbGRyZW46W3tlbGVtZW50OlwicFwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXRleHRcIn0sdGV4dDpuYW1lfV19LHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1jb2x1bW4tY29udGVudHNcIn19XX0pLHRoaXMuaXNzZXQocGFyYW1zLnNvcnQpJiZjb2x1bW5zW25hbWVdLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlXCIpLm1ha2VFbGVtZW50KHtlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIixcImRhdGEtaWNvblwiOlwiZmFzLCBmYS1hcnJvdy1kb3duXCJ9fSkpfXBhcmFtcy5wcm9qZWN0aW9uPXBhcmFtcy5wcm9qZWN0aW9ufHx7fTtsZXQgaGlkZT1PYmplY3QudmFsdWVzKHBhcmFtcy5wcm9qZWN0aW9uKS5pbmNsdWRlcygxKTtmb3IobGV0IG5hbWUgb2YgaGVhZGVycyl7Zm9yKGxldCBjb250ZW50IG9mIHBhcmFtcy5jb250ZW50cylpPXBhcmFtcy5jb250ZW50cy5pbmRleE9mKGNvbnRlbnQpLGNvbHVtbnNbbmFtZV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tY29udGVudHNcIikubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiLFwiZGF0YS1uYW1lXCI6bmFtZSxcImRhdGEtdmFsdWVcIjpjb250ZW50W25hbWVdfHxcIlwiLFwiZGF0YS1yb3dcIjppfSxodG1sOmNvbnRlbnRbbmFtZV18fFwiXCJ9KTstMT09cGFyYW1zLnByb2plY3Rpb25bbmFtZV18fGhpZGUmJiF0aGlzLmlzc2V0KHBhcmFtcy5wcm9qZWN0aW9uW25hbWVdKT9jb2x1bW5zW25hbWVdLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pOmNvbHVtbkNvdW50Kyt9dGFibGUuY3NzKHtncmlkVGVtcGxhdGVDb2x1bW5zOmByZXBlYXQoJHtjb2x1bW5Db3VudH0sIDFmcilgfSk7bGV0IHRhYmxlQ29udGFpbmVyPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtY29udGFpbmVyXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLXRpdGxlYW5kc2VhcmNoXCJ9fSx0YWJsZV19KSx0aXRsZUNvdW50PTA7cmV0dXJuIHRoaXMuaXNzZXQocGFyYW1zLnRpdGxlKSYmKHRhYmxlQ29udGFpbmVyLmZpbmQoXCIua2VyZHgtdGFibGUtdGl0bGVhbmRzZWFyY2hcIikubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJoNVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtdGl0bGVcIn0sdGV4dDpwYXJhbXMudGl0bGV9KSx0aXRsZUNvdW50KyspLHRoaXMuaXNzZXQocGFyYW1zLnNvcnQpJiYodGFibGUuZGF0YXNldC5zb3J0PSEwKSx0aGlzLmlzc2V0KHBhcmFtcy5zZWFyY2gpJiYodGFibGVDb250YWluZXIuZmluZChcIi5rZXJkeC10YWJsZS10aXRsZWFuZHNlYXJjaFwiKS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1zZWFyY2hcIixwbGFjZUhvbGRlcjpcIlNlYXJjaCB0YWJsZS4uLlwifX0pLHRpdGxlQ291bnQrKyksdGhpcy5pc3NldChwYXJhbXMuZmlsdGVyKSYmKHRhYmxlQ29udGFpbmVyLmZpbmQoXCIua2VyZHgtdGFibGUtdGl0bGVhbmRzZWFyY2hcIikubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJzZWxlY3RcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLWZpbHRlclwifSxvcHRpb25zOnBhcmFtcy5maWx0ZXJ9KSx0aXRsZUNvdW50KyspLDA9PXBhcmFtcy5jb250ZW50cy5sZW5ndGgmJih0YWJsZS50ZXh0Q29udGVudD1cIkVtcHR5IFRhYmxlXCIpLHRhYmxlQ29udGFpbmVyLm1ha2VFbGVtZW50KHtlbGVtZW50Olwic3R5bGVcIix0ZXh0OmBcXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiA3MDBweCkge1xcbiAgICAgICAgICAgICAgICAua2VyZHgtdGFibGUtdGl0bGVhbmRzZWFyY2gge1xcbiAgICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7dGl0bGVDb3VudH0sIDFmcik7XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgIGB9KSx0YWJsZUNvbnRhaW5lcn1nZXRUYWJsZURhdGEodGFibGUpe2xldCBkYXRhPVtdLGNlbGxzPXRhYmxlLmZpbmRBbGwoXCIua2VyZHgtdGFibGUtY29sdW1uLWNlbGxcIik7Zm9yKGxldCBpPTA7aTxjZWxscy5sZW5ndGg7aSsrKXtsZXR7bmFtZTpuYW1lLHZhbHVlOnZhbHVlLHJvdzpyb3d9PWNlbGxzW2ldLmRhdGFzZXQ7ZGF0YVtyb3ddPWRhdGFbcm93XXx8e30sZGF0YVtyb3ddW25hbWVdPXZhbHVlfXJldHVybiBkYXRhfXNvcnRUYWJsZSh0YWJsZSxieT1cIlwiLGRpcmVjdGlvbj0xKXtsZXQgZGF0YT10aGlzLmdldFRhYmxlRGF0YSh0YWJsZSk7cmV0dXJuIGRhdGEuc29ydCgoYSxiKT0+KGE9YVtieV0sYj1iW2J5XSx0aGlzLmlzTnVtYmVyKGEpJiZ0aGlzLmlzTnVtYmVyKGIpJiYoYS89MSxiLz0xKSxkaXJlY3Rpb24+LTE/YT5iPzE6LTE6YT5iPy0xOjEpKSxkYXRhfWxpc3RlblRhYmxlKHBhcmFtcz17dGFibGU6e30sb3B0aW9uczpbXX0sY2FsbGJhY2tzPXtjbGljazooKT0+e30sZmlsdGVyOigpPT57fX0pe3BhcmFtcy5vcHRpb25zPXBhcmFtcy5vcHRpb25zfHxbXSxjYWxsYmFja3M9Y2FsbGJhY2tzfHxbXTtsZXQgb3B0aW9uQ2xhc3MsdGFibGU9cGFyYW1zLnRhYmxlLmZpbmQoXCIua2VyZHgtdGFibGVcIiksb3B0aW9ucz10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1vcHRpb25zXCJ9fSksbGlzdD17dmlldzpcImZhcyBmYS1leWVcIixkZWxldGU6XCJmYXMgZmEtdHJhc2hcIixlZGl0OlwiZmFzIGZhLXBlblwiLHJldmVydDpcImZhcyBmYS1oaXN0b3J5XCJ9O2ZvcihsZXQgb3B0aW9uIG9mIHBhcmFtcy5vcHRpb25zKW9wdGlvbkNsYXNzPWxpc3Rbb3B0aW9uXXx8YGZhcyBmYS0ke29wdGlvbn1gLG9wdGlvbnMubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6b3B0aW9uQ2xhc3MrXCIga2VyZHgtdGFibGUtb3B0aW9uXCIsaWQ6XCJrZXJkeC10YWJsZS1vcHRpb24tXCIrb3B0aW9ufX0pO2xldCBmaXJzdFZpc2libGVDb2x1bW4sdGFibGVUaXRsZXM9dGFibGUuZmluZEFsbChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGVcIiksdGFibGVDb2x1bW5zPXRhYmxlLmZpbmRBbGwoXCIua2VyZHgtdGFibGUtY29sdW1uXCIpLHJvd3M9W10sZmlyc3RDb2x1bW49dGFibGVDb2x1bW5zWzBdO2lmKHRoaXMuaXNudWxsKGZpcnN0Q29sdW1uKSlyZXR1cm47Zm9yKGxldCBpPTA7aTx0YWJsZUNvbHVtbnMubGVuZ3RoO2krKylpZihcIm5vbmVcIiE9dGFibGVDb2x1bW5zW2ldLmNzcygpLmRpc3BsYXkpe2ZpcnN0VmlzaWJsZUNvbHVtbj10YWJsZUNvbHVtbnNbaV07YnJlYWt9bGV0IHRhYmxlUm93LHNlYXJjaFZhbHVlLGZpbHRlclZhbHVlLGZpcnN0Q2VsbHM9Zmlyc3RDb2x1bW4uZmluZEFsbChcIi5rZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKSxmaXJzdFZpc2libGVDZWxscz1maXJzdFZpc2libGVDb2x1bW4uZmluZEFsbChcIi5rZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKTtmb3IobGV0IGk9MDtpPGZpcnN0Q2VsbHMubGVuZ3RoO2krKylyb3dzLnB1c2goZmlyc3RDZWxsc1tpXS5kYXRhc2V0LnJvdyk7aWYoXCJ0cnVlXCI9PXBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlXCIpLmRhdGFzZXQuc29ydClmb3IobGV0IGk9MDtpPHRhYmxlVGl0bGVzLmxlbmd0aDtpKyspdGFibGVUaXRsZXNbaV0uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIixldmVudD0+e3RhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikuY3NzKHtkaXNwbGF5OlwidW5zZXRcIn0pfSksdGFibGVUaXRsZXNbaV0uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIixldmVudD0+e3RhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikuY3NzKHtkaXNwbGF5Olwibm9uZVwifSl9KSx0YWJsZVRpdGxlc1tpXS5maW5kKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi10aXRsZS1zb3J0XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bGV0IGRpcmVjdGlvbjt0YWJsZVRpdGxlc1tpXS5maW5kKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi10aXRsZS1zb3J0XCIpLnRvZ2dsZUNsYXNzZXMoXCJmYXMsIGZhLWFycm93LXVwXCIpLHRhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikudG9nZ2xlQ2xhc3NlcyhcImZhcywgZmEtYXJyb3ctZG93blwiKSxcInVwXCI9PXRhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikuZGF0YXNldC5kaXJlY3Rpb24/KHRhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikuZGF0YXNldC5kaXJlY3Rpb249XCJkb3duXCIsZGlyZWN0aW9uPTEpOih0YWJsZVRpdGxlc1tpXS5maW5kKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi10aXRsZS1zb3J0XCIpLmRhdGFzZXQuZGlyZWN0aW9uPVwidXBcIixkaXJlY3Rpb249LTEpO2xldCB0ZXh0PXRhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXRleHRcIikudGV4dENvbnRlbnQsZGF0YT10aGlzLnNvcnRUYWJsZShwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZVwiKSx0ZXh0LGRpcmVjdGlvbiksbmV3VGFibGVDb2x1bW5zPXRoaXMuY3JlYXRlVGFibGUoe2NvbnRlbnRzOmRhdGF9KS5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLWNvbHVtblwiKTtmb3IobGV0IGo9MDtqPG5ld1RhYmxlQ29sdW1ucy5sZW5ndGg7aisrKXRhYmxlQ29sdW1uc1tqXS5maW5kKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jb250ZW50c1wiKS5pbm5lckhUTUw9bmV3VGFibGVDb2x1bW5zW2pdLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLWNvbnRlbnRzXCIpLmlubmVySFRNTDt0YWJsZUNvbHVtbnM9dGFibGUuZmluZEFsbChcIi5rZXJkeC10YWJsZS1jb2x1bW5cIiksZmlsdGVyKCl9KTt0aGlzLmlzbnVsbChwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZS1zZWFyY2hcIikpfHxwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZS1zZWFyY2hcIikub25DaGFuZ2VkKHZhbHVlPT57ZmlsdGVyKCl9KSx0aGlzLmlzbnVsbChwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZS1maWx0ZXJcIikpfHxwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZS1maWx0ZXJcIikub25DaGFuZ2VkKHZhbHVlPT57ZmlsdGVyKCl9KTtsZXQgZmlsdGVyPSgpPT57dGhpcy5pc251bGwocGFyYW1zLnRhYmxlLmZpbmQoXCIua2VyZHgtdGFibGUtc2VhcmNoXCIpKXx8KHNlYXJjaFZhbHVlPXBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlLXNlYXJjaFwiKS52YWx1ZSksdGhpcy5pc251bGwocGFyYW1zLnRhYmxlLmZpbmQoXCIua2VyZHgtdGFibGUtZmlsdGVyXCIpKXx8KGZpbHRlclZhbHVlPXBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlLWZpbHRlclwiKS52YWx1ZSk7Zm9yKGxldCBpPTA7aTxyb3dzLmxlbmd0aDtpKyspe2xldCBoaWRlPSExO3RhYmxlUm93PXRhYmxlLmZpbmRBbGwoYC5rZXJkeC10YWJsZS1jb2x1bW4tY2VsbFtkYXRhLXJvdz1cIiR7aX1cIl1gKTtmb3IobGV0IGo9MDtqPHRhYmxlUm93Lmxlbmd0aDtqKyspdGFibGVSb3dbal0uY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pO2lmKHRoaXMuaXNzZXQoZmlsdGVyVmFsdWUpJiYwPT1oaWRlJiZ0aGlzLmlzc2V0KGNhbGxiYWNrcy5maWx0ZXIpJiYoaGlkZT1jYWxsYmFja3MuZmlsdGVyKGZpbHRlclZhbHVlLHRhYmxlUm93KSksdGhpcy5pc3NldChzZWFyY2hWYWx1ZSkmJjA9PWhpZGUpe2hpZGU9ITA7Zm9yKGxldCBqPTA7ajx0YWJsZVJvdy5sZW5ndGg7aisrKWlmKHRhYmxlUm93W2pdLnRleHRDb250ZW50LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoVmFsdWUudG9Mb3dlckNhc2UoKSkpe2hpZGU9ITE7YnJlYWt9fWlmKGhpZGUpZm9yKGxldCBqPTA7ajx0YWJsZVJvdy5sZW5ndGg7aisrKXRhYmxlUm93W2pdLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pfX07dGhpcy5pc3NldChjYWxsYmFja3MuY2xpY2spJiYodGFibGUuYWRkTXVsdGlwbGVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duLCB0b3VjaHN0YXJ0XCIsZXZlbnQ9PntsZXQgdGFyZ2V0PWV2ZW50LnRhcmdldDtpZih0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwia2VyZHgtdGFibGUtb3B0aW9uXCIpKXRoaXMuaXNzZXQoY2FsbGJhY2tzLmNsaWNrKSYmY2FsbGJhY2tzLmNsaWNrKGV2ZW50KTtlbHNlIGlmKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKXx8IXRoaXMuaXNudWxsKHRhcmdldC5nZXRQYXJlbnRzKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpKSl7dGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpfHwodGFyZ2V0PXRhcmdldC5nZXRQYXJlbnRzKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpKTtsZXQgcG9zaXRpb249dGFyZ2V0LmRhdGFzZXQucm93O2lmKG9wdGlvbnMucmVtb3ZlKCksZmlyc3RWaXNpYmxlQ2VsbHNbcG9zaXRpb25dLmNzcyh7cG9zaXRpb246XCJyZWxhdGl2ZVwifSksZmlyc3RWaXNpYmxlQ2VsbHNbcG9zaXRpb25dLmFwcGVuZChvcHRpb25zKSxwYXJhbXMudGFibGUuY2xhc3NMaXN0LmNvbnRhaW5zKFwia2VyZHgtc2VsZWN0YWJsZVwiKSl7bGV0IHJvdz10YWJsZS5maW5kQWxsKGAua2VyZHgtdGFibGUtY29sdW1uLWNlbGxbZGF0YS1yb3c9XCIke3Bvc2l0aW9ufVwiXWApO2ZvcihsZXQgaT0wO2k8cm93Lmxlbmd0aDtpKyspcm93W2ldLmNsYXNzTGlzdC50b2dnbGUoXCJrZXJkeC10YWJsZS1zZWxlY3RlZC1yb3dcIik7b3B0aW9ucy5yZW1vdmUoKSx0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwia2VyZHgtdGFibGUtc2VsZWN0ZWQtcm93XCIpfHwwPT1maXJzdENvbHVtbi5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLXNlbGVjdGVkLXJvd1wiKS5sZW5ndGgmJnBhcmFtcy50YWJsZS5jbGFzc0xpc3QucmVtb3ZlKFwia2VyZHgtc2VsZWN0YWJsZVwiKX19fSksdGFibGUucHJlc3NlZChldmVudD0+e2xldCB0YXJnZXQ9ZXZlbnQudGFyZ2V0O2lmKGV2ZW50LmR1cmF0aW9uPjMwMCYmKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKXx8IXRoaXMuaXNudWxsKHRhcmdldC5nZXRQYXJlbnRzKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpKSkpe3RhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKXx8KHRhcmdldD10YXJnZXQuZ2V0UGFyZW50cyhcIi5rZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKSk7bGV0IHBvc2l0aW9uPXRhcmdldC5kYXRhc2V0LnJvdztpZigwPT1maXJzdENvbHVtbi5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLXNlbGVjdGVkLXJvd1wiKS5sZW5ndGgmJiFwYXJhbXMudGFibGUuY2xhc3NMaXN0LmNvbnRhaW5zKFwia2VyZHgtc2VsZWN0YWJsZVwiKSl7cGFyYW1zLnRhYmxlLmNsYXNzTGlzdC5hZGQoXCJrZXJkeC1zZWxlY3RhYmxlXCIpO2xldCByb3c9dGFibGUuZmluZEFsbChgLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsW2RhdGEtcm93PVwiJHtwb3NpdGlvbn1cIl1gKTtmb3IobGV0IGk9MDtpPHJvdy5sZW5ndGg7aSsrKXJvd1tpXS5jbGFzc0xpc3QuYWRkKFwia2VyZHgtdGFibGUtc2VsZWN0ZWQtcm93XCIpO29wdGlvbnMucmVtb3ZlKCl9fX0pKX1jcmVhdGVGb3JtKHBhcmFtcz17ZWxlbWVudDpcIlwiLHRpdGxlOlwiXCIsY29sdW1uczoxLGNvbnRlbnRzOnt9LHJlcXVpcmVkOltdLGJ1dHRvbnM6e319KXtsZXQgbm90ZSxmb3JtPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpwYXJhbXMuZWxlbWVudHx8XCJmb3JtXCIsYXR0cmlidXRlczpwYXJhbXMuYXR0cmlidXRlcyxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJoM1wiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZm9ybS10aXRsZVwifSx0ZXh0OnBhcmFtcy50aXRsZX0se2VsZW1lbnQ6XCJzZWN0aW9uXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1mb3JtLWNvbnRlbnRzXCIsc3R5bGU6e2dyaWRUZW1wbGF0ZUNvbHVtbnM6YHJlcGVhdCgke3BhcmFtcy5jb2x1bW5zfSwgMWZyKWB9fX0se2VsZW1lbnQ6XCJzZWN0aW9uXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1mb3JtLWJ1dHRvbnNcIn19XX0pO2Zvcm0uY2xhc3NMaXN0LmFkZChcImtlcmR4LWZvcm1cIiksdGhpcy5pc3NldChwYXJhbXMucGFyZW50KSYmcGFyYW1zLnBhcmVudC5hcHBlbmQoZm9ybSk7bGV0IGZvcm1Db250ZW50cz1mb3JtLmZpbmQoXCIua2VyZHgtZm9ybS1jb250ZW50c1wiKTtmb3IobGV0IGtleSBpbiBwYXJhbXMuY29udGVudHMpe25vdGU9dGhpcy5pc3NldChwYXJhbXMuY29udGVudHNba2V5XS5ub3RlKT9gKCR7cGFyYW1zLmNvbnRlbnRzW2tleV0ubm90ZX0pYDpcIlwiO2xldCBsYWJsZVRleHQ9cGFyYW1zLmNvbnRlbnRzW2tleV0ubGFiZWx8fHRoaXMuY2FtZWxDYXNlZFRvVGV4dChrZXkpLnRvTG93ZXJDYXNlKCksYmxvY2s9Zm9ybUNvbnRlbnRzLm1ha2VFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1mb3JtLXNpbmdsZS1jb250ZW50XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImxhYmVsXCIsaHRtbDpsYWJsZVRleHQsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1mb3JtLWxhYmVsXCIsZm9yOmtleS50b0xvd2VyQ2FzZSgpfX1dfSksZGF0YT1ibG9jay5tYWtlRWxlbWVudChwYXJhbXMuY29udGVudHNba2V5XSk7ZGF0YS5jbGFzc0xpc3QuYWRkKFwia2VyZHgtZm9ybS1kYXRhXCIpLHRoaXMuaXNzZXQocGFyYW1zLmNvbnRlbnRzW2tleV0ubm90ZSkmJmJsb2NrLm1ha2VFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLHRleHQ6cGFyYW1zLmNvbnRlbnRzW2tleV0ubm90ZSxhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWZvcm0tbm90ZVwifX0pLHRoaXMuaXNzZXQocGFyYW1zLnJlcXVpcmVkKSYmcGFyYW1zLnJlcXVpcmVkLmluY2x1ZGVzKGtleSkmJihkYXRhLnJlcXVpcmVkPSEwKX1mb3IobGV0IGtleSBpbiBwYXJhbXMuYnV0dG9ucylmb3JtLmZpbmQoXCIua2VyZHgtZm9ybS1idXR0b25zXCIpLm1ha2VFbGVtZW50KHBhcmFtcy5idXR0b25zW2tleV0pO3JldHVybiBmb3JtLm1ha2VFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZm9ybS1lcnJvclwifSxzdGF0ZTp7bmFtZTpcImVycm9yXCIsb3duZXI6YCMke2Zvcm0uaWR9YH19KSxmb3JtfXBpY2tlcihwYXJhbXM9e3RpdGxlOlwiXCIsY29udGVudHM6W119LGNhbGxiYWNrPShldmVudD0+e30pKXtsZXQgcGlja2VyPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtcGlja2VyXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImgzXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1waWNrZXItdGl0bGVcIn0sdGV4dDpwYXJhbXMudGl0bGV8fFwiXCJ9LHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1waWNrZXItY29udGVudHNcIn19XX0pO2ZvcihsZXQgY29udGVudCBvZiBwYXJhbXMuY29udGVudHMpcGlja2VyLmZpbmQoXCIua2VyZHgtcGlja2VyLWNvbnRlbnRzXCIpLm1ha2VFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtcGlja2VyLXNpbmdsZVwiLFwiZGF0YS1uYW1lXCI6Y29udGVudH0sdGV4dDpjb250ZW50fSk7cmV0dXJuIHBpY2tlci5hZGRFdmVudExpc3RlbmVyKFwiZGJsY2xpY2tcIixldmVudD0+e2V2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1waWNrZXItc2luZ2xlXCIpJiZjYWxsYmFjayhldmVudC50YXJnZXQuZGF0YXNldC5uYW1lKX0pLHBpY2tlcn1wb3BVcChjb250ZW50LHBhcmFtcz17dGl0bGU6XCJcIixhdHRyaWJ1dGVzOnt9fSl7bGV0IGNvbnRhaW5lcj1wYXJhbXMuY29udGFpbmVyfHxkb2N1bWVudC5ib2R5LHRpdGxlPXBhcmFtcy50aXRsZXx8XCJcIjtwYXJhbXMuYXR0cmlidXRlcz1wYXJhbXMuYXR0cmlidXRlc3x8e30scGFyYW1zLmF0dHJpYnV0ZXMuc3R5bGU9cGFyYW1zLmF0dHJpYnV0ZXMuc3R5bGV8fHt9LHBhcmFtcy5hdHRyaWJ1dGVzLnN0eWxlLndpZHRoPXBhcmFtcy5hdHRyaWJ1dGVzLnN0eWxlLndpZHRofHxcIjUwdndcIixwYXJhbXMuYXR0cmlidXRlcy5zdHlsZS5oZWlnaHQ9cGFyYW1zLmF0dHJpYnV0ZXMuc3R5bGUuaGVpZ2h0fHxcIjUwdmhcIjtsZXQgcG9wVXA9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1wb3AtdXBcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJwb3AtdXAtd2luZG93XCIsY2xhc3M6XCJrZXJkeC1wb3AtdXAtd2luZG93XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2lkOlwicG9wLXVwLW1lbnVcIixjbGFzczpcImtlcmR4LXBvcC11cC1tZW51XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInBcIixhdHRyaWJ1dGVzOntpZDpcIlwiLHN0eWxlOntjb2xvcjpcImluaGVyaXRcIixwYWRkaW5nOlwiMWVtXCJ9fSx0ZXh0OnRpdGxlfSx7ZWxlbWVudDpcImlcIixhdHRyaWJ1dGVzOntpZDpcInRvZ2dsZS13aW5kb3dcIixjbGFzczpcImtlcmR4LXBvcC11cC1jb250cm9sIGZhcyBmYS1leHBhbmQtYWx0XCJ9fSx7ZWxlbWVudDpcImlcIixhdHRyaWJ1dGVzOntpZDpcImNsb3NlLXdpbmRvd1wiLGNsYXNzOlwia2VyZHgtcG9wLXVwLWNvbnRyb2wgZmFzIGZhLXRpbWVzXCJ9fV19LHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJwb3AtdXAtY29udGVudFwiLGNsYXNzOlwia2VyZHgtcG9wLXVwLWNvbnRlbnRcIn0sY2hpbGRyZW46W2NvbnRlbnRdfV19XX0pO3JldHVybiBwb3BVcC5maW5kKFwiI3BvcC11cC13aW5kb3dcIikuc2V0QXR0cmlidXRlcyhwYXJhbXMuYXR0cmlidXRlcykscG9wVXAuZmluZChcIiN0b2dnbGUtd2luZG93XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57cG9wVXAuZmluZChcIiN0b2dnbGUtd2luZG93XCIpLmNsYXNzTGlzdC50b2dnbGUoXCJmYS1leHBhbmQtYWx0XCIpLHBvcFVwLmZpbmQoXCIjdG9nZ2xlLXdpbmRvd1wiKS5jbGFzc0xpc3QudG9nZ2xlKFwiZmEtY29tcHJlc3MtYWx0XCIpLHBvcFVwLmZpbmQoXCIjdG9nZ2xlLXdpbmRvd1wiKS5jbGFzc0xpc3QuY29udGFpbnMoXCJmYS1leHBhbmQtYWx0XCIpP3BvcFVwLmZpbmQoXCIjcG9wLXVwLXdpbmRvd1wiKS5jc3Moe2hlaWdodDpwYXJhbXMuYXR0cmlidXRlcy5zdHlsZS5oZWlnaHQsd2lkdGg6cGFyYW1zLmF0dHJpYnV0ZXMuc3R5bGUud2lkdGh9KTpwb3BVcC5maW5kKFwiI3BvcC11cC13aW5kb3dcIikuY3NzKHtoZWlnaHQ6XCJ2YXIoLS1maWxsLXBhcmVudClcIix3aWR0aDpcInZhcigtLWZpbGwtcGFyZW50KVwifSl9KSxwb3BVcC5maW5kKFwiI2Nsb3NlLXdpbmRvd1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e3BvcFVwLnJlbW92ZSgpfSksY29udGFpbmVyLmFwcGVuZChwb3BVcCkscG9wVXB9Y3JlYXRlU2VsZWN0KHBhcmFtcz17dmFsdWU6XCJcIixjb250ZW50czp7fSxtdWx0aXBsZTohMX0pe2xldCBhY3RpdmUsc2VsZWN0ZWQ9W10sYWxsb3dOYXZpZ2F0ZT0hMSxzY3JvbGxQb3NpdGlvbj0tMSxzZWxlY3Q9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczpwYXJhbXMuYXR0cmlidXRlcyxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1zZWxlY3QtY29udHJvbFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJpbnB1dFwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtc2VsZWN0LWlucHV0XCIsdmFsdWU6cGFyYW1zLnZhbHVlfHxcIlwiLGlnbm9yZTohMH19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtc2VsZWN0LXRvZ2dsZVwifX1dfSx7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1zZWxlY3Qtc2VhcmNoXCIscGxhY2VIb2xkZXI6XCJTZWFyY2ggbWUuLi5cIixpZ25vcmU6ITB9fSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXNlbGVjdC1jb250ZW50c1wifX1dfSk7c2VsZWN0LmNsYXNzTGlzdC5hZGQoXCJrZXJkeC1zZWxlY3RcIik7bGV0IHNldFZhbHVlPXNlbGVjdC5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtzZWxlY3QudmFsdWU9W10sdGhpcy5pc251bGwoc2V0VmFsdWUpfHwoc2VsZWN0LnZhbHVlPXRoaXMuYXJyYXkuZmluZEFsbChzZXRWYWx1ZS5zcGxpdChcIixcIiksdj0+XCJcIiE9di50cmltKCkpKSxzZWxlY3QuZGF0YXNldC5hY3RpdmU9XCJmYWxzZVwiO2xldCBjb250ZW50cz1zZWxlY3QuZmluZChcIi5rZXJkeC1zZWxlY3QtY29udGVudHNcIiksaW5wdXQ9c2VsZWN0LmZpbmQoXCIua2VyZHgtc2VsZWN0LWlucHV0XCIpLHNlYXJjaD1zZWxlY3QuZmluZChcIi5rZXJkeC1zZWxlY3Qtc2VhcmNoXCIpLHRvZ2dsZT1zZWxlY3QuZmluZChcIi5rZXJkeC1zZWxlY3QtdG9nZ2xlXCIpO2lmKHBhcmFtcy5jb250ZW50cz1wYXJhbXMuY29udGVudHN8fHt9LEFycmF5LmlzQXJyYXkocGFyYW1zLmNvbnRlbnRzKSl7bGV0IGl0ZW1zPXBhcmFtcy5jb250ZW50cztwYXJhbXMuY29udGVudHM9e307Zm9yKGxldCBpPTA7aTxpdGVtcy5sZW5ndGg7aSsrKXBhcmFtcy5jb250ZW50c1tpdGVtc1tpXV09aXRlbXNbaV19Zm9yKGxldCBpIGluIHBhcmFtcy5jb250ZW50cyl7bGV0IG9wdGlvbj1jb250ZW50cy5tYWtlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXNlbGVjdC1vcHRpb25cIix2YWx1ZTppfX0pO29wdGlvbi5pbm5lckhUTUw9cGFyYW1zLmNvbnRlbnRzW2ldLG9wdGlvbi52YWx1ZT1pfWZvcihsZXQgdiBvZiBzZWxlY3QudmFsdWUpaW5wdXQudmFsdWUrPXBhcmFtcy5jb250ZW50c1t2XSxpbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChcImNoYW5nZVwiKSk7bGV0IHNpbmdsZT0hdGhpcy5pc3NldChwYXJhbXMubXVsdGlwbGUpfHwwPT1wYXJhbXMubXVsdGlwbGUsb3B0aW9ucz1zZWxlY3QuZmluZEFsbChcIi5rZXJkeC1zZWxlY3Qtb3B0aW9uXCIpO3NlYXJjaC5vbkNoYW5nZWQodmFsdWU9Pntmb3IobGV0IGk9MDtpPG9wdGlvbnMubGVuZ3RoO2krKylvcHRpb25zW2ldLnRleHRDb250ZW50LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModmFsdWUudG9Mb3dlckNhc2UoKSk/b3B0aW9uc1tpXS5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSk6b3B0aW9uc1tpXS5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KX0pO2xldCB0b3AsYm90dG9tLG5hdmlnYXRlPWV2ZW50PT57YWxsb3dOYXZpZ2F0ZT0hMSxcIkFycm93RG93blwiPT1ldmVudC5rZXkmJnNjcm9sbFBvc2l0aW9uPG9wdGlvbnMubGVuZ3RoLTE/KHNjcm9sbFBvc2l0aW9uKyssYWxsb3dOYXZpZ2F0ZT0hMCk6XCJBcnJvd1VwXCI9PWV2ZW50LmtleSYmc2Nyb2xsUG9zaXRpb24+MD8oc2Nyb2xsUG9zaXRpb24tLSxhbGxvd05hdmlnYXRlPSEwKTpldmVudC5rZXksYWxsb3dOYXZpZ2F0ZSYmKGFjdGl2ZT1jb250ZW50cy5maW5kKFwiLmtlcmR4LXNlbGVjdC1hY3RpdmUtb3B0aW9uXCIpLHRoaXMuaXNudWxsKGFjdGl2ZSl8fGFjdGl2ZS5jbGFzc0xpc3QucmVtb3ZlKFwia2VyZHgtc2VsZWN0LWFjdGl2ZS1vcHRpb25cIiksb3B0aW9uc1tzY3JvbGxQb3NpdGlvbl0uY2xhc3NMaXN0LmFkZChcImtlcmR4LXNlbGVjdC1hY3RpdmUtb3B0aW9uXCIpKX07dG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bGV0IGFjdGl2ZT1cInRydWVcIj09c2VsZWN0LmRhdGFzZXQuYWN0aXZlO2FjdGl2ZT9kZWFjdGl2YXRlKGFjdGl2ZSk6YWN0aXZhdGUoYWN0aXZlKX0pLGRvY3VtZW50LmJvZHkuY3NzKHtvdmVyZmxvdzpcImF1dG9cIn0pO2xldCBwbGFjZUNvbnRlbnRzPSgpPT57dG9wPXNlbGVjdC5wb3NpdGlvbigpLnRvcCxib3R0b209ZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQtc2VsZWN0LnBvc2l0aW9uKCkudG9wLHRvcD5ib3R0b20/Y29udGVudHMuY3NzKHt0b3A6LWNvbnRlbnRzLnBvc2l0aW9uKCkuaGVpZ2h0K1wicHhcIn0pOmNvbnRlbnRzLmNzcyh7dG9wOnNlbGVjdC5wb3NpdGlvbigpLmhlaWdodCtcInB4XCJ9KX0sYWN0aXZhdGU9KCk9PntzZWxlY3QuaW5WaWV3KFwiYm9keVwiKSYmKGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsbmF2aWdhdGUsITEpLHNlYXJjaC5jc3Moe2Rpc3BsYXk6XCJmbGV4XCJ9KSxjb250ZW50cy5jc3Moe2Rpc3BsYXk6XCJmbGV4XCJ9KSxwbGFjZUNvbnRlbnRzKCksc2VsZWN0LmRhdGFzZXQuYWN0aXZlPVwidHJ1ZVwiKX0sZGVhY3RpdmF0ZT0oKT0+e2lucHV0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsbmF2aWdhdGUsITEpLHNlYXJjaC5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSksY29udGVudHMuY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pLHNlbGVjdC5kYXRhc2V0LmFjdGl2ZT1cImZhbHNlXCJ9O3JldHVybiBzZWxlY3QuYnViYmxlZEV2ZW50KFwiY2xpY2tcIixldmVudD0+e2lmKGV2ZW50LnRhcmdldCE9dG9nZ2xlJiZcImZhbHNlXCI9PXNlbGVjdC5kYXRhc2V0LmFjdGl2ZSYmYWN0aXZhdGUoKSxldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwia2VyZHgtc2VsZWN0LW9wdGlvblwiKSl7bGV0IHRleHQ9cGFyYW1zLmNvbnRlbnRzW2V2ZW50LnRhcmdldC52YWx1ZV07XCJzaW5nbGVcIj09cGFyYW1zLm11bHRpcGxlJiZpbnB1dC52YWx1ZS5pbmNsdWRlcyh0ZXh0KT9pbnB1dC52YWx1ZT1pbnB1dC52YWx1ZS5yZXBsYWNlKHRleHQsXCJcIik6aW5wdXQudmFsdWUrPWAsICR7dGV4dH1gLGlucHV0LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiY2hhbmdlXCIpKSxzaW5nbGUmJmRlYWN0aXZhdGUoKX19KSxzZWxlY3Qubm90QnViYmxlZEV2ZW50KFwiY2xpY2tcIixldmVudD0+e1widHJ1ZVwiPT1zZWxlY3QuZGF0YXNldC5hY3RpdmUmJmRlYWN0aXZhdGUoKX0pLGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixldmVudD0+e2xldCB2YWx1ZXM9aW5wdXQudmFsdWUuc3BsaXQoXCIsXCIpO3ZhbHVlcz10aGlzLmFycmF5LmZpbmRBbGwodmFsdWVzLHZhbHVlPT5cIlwiIT12YWx1ZS50cmltKCkpLHZhbHVlcz10aGlzLmFycmF5LmVhY2godmFsdWVzLHZhbHVlPT52YWx1ZS50cmltKCkpLHNpbmdsZXx8XCJzaW5nbGVcIj09cGFyYW1zLm11bHRpcGxlJiYodmFsdWVzPXRoaXMuYXJyYXkudG9TZXQodmFsdWVzKSksKHZhbHVlcz0+e3NlbGVjdGVkPVtdLHZhbHVlcz12YWx1ZXMuc3BsaXQoXCIsXCIpO2ZvcihsZXQgdmFsdWUgb2YgdmFsdWVzKXt2YWx1ZT12YWx1ZS50cmltKCk7Zm9yKGxldCBpIGluIHBhcmFtcy5jb250ZW50cylwYXJhbXMuY29udGVudHNbaV09PXZhbHVlJiYodmFsdWU9aSk7c2VsZWN0ZWQucHVzaCh2YWx1ZSl9c2VsZWN0LnZhbHVlPXNlbGVjdGVkLGlucHV0LnZhbHVlPXZhbHVlc30pKHZhbHVlcz12YWx1ZXMuam9pbihcIiwgXCIpKX0pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsZXZlbnQ9PntzZWxlY3QuaW5WaWV3KFwiYm9keVwiKSYmcGxhY2VDb250ZW50cygpfSksc2VsZWN0fWNob29zZShwYXJhbXM9e25vdGU6XCJcIixvcHRpb25zOltdfSl7bGV0IGNob29zZVdpbmRvdz10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjcmF0ZXItY2hvb3NlXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInBcIixhdHRyaWJ1dGVzOntjbGFzczpcImNyYXRlci1jaG9vc2Utbm90ZVwifSx0ZXh0OnBhcmFtcy5ub3RlfSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNyYXRlci1jaG9vc2UtY29udHJvbFwifX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImNyYXRlci1jaG9vc2UtY2xvc2VcIixjbGFzczpcImJ0blwifSx0ZXh0OlwiQ2xvc2VcIn1dfSksY2hvb3NlQ29udHJvbD1jaG9vc2VXaW5kb3cucXVlcnlTZWxlY3RvcihcIi5jcmF0ZXItY2hvb3NlLWNvbnRyb2xcIik7Y2hvb3NlV2luZG93LnF1ZXJ5U2VsZWN0b3IoXCIjY3JhdGVyLWNob29zZS1jbG9zZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e2Nob29zZVdpbmRvdy5yZW1vdmUoKX0pO2ZvcihsZXQgb3B0aW9uIG9mIHBhcmFtcy5vcHRpb25zKWNob29zZUNvbnRyb2wubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntjbGFzczpcImJ0biBjaG9vc2Utb3B0aW9uXCJ9LHRleHQ6b3B0aW9ufSk7cmV0dXJue2Rpc3BsYXk6Y2hvb3NlV2luZG93LGNob2ljZTpuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57Y2hvb3NlQ29udHJvbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e2V2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJjaG9vc2Utb3B0aW9uXCIpJiYocmVzb2x2ZShldmVudC50YXJnZXQudGV4dENvbnRlbnQpLGNob29zZVdpbmRvdy5yZW1vdmUoKSl9KX0pfX10ZXh0RWRpdG9yKHBhcmFtcz17aWQ6XCJcIix3aWR0aDpcIm1heC13aWR0aFwifSl7KHBhcmFtcz1wYXJhbXN8fHt9KS5pZD1wYXJhbXMuaWR8fFwidGV4dC1lZGl0b3JcIjtsZXQgdGV4dEVkaXRvcj10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpwYXJhbXMuaWR9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInN0eWxlXCIsdGV4dDpgXFxuXFxuICAgICAgICAgICAgICAgICAgICBkaXYjY3JhdGVyLXRleHQtZWRpdG9ye1xcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICR7cGFyYW1zLndpZHRofHxcIm1heC1jb250ZW50XCJ9O1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogbWF4LWNvbnRlbnQ7XFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgcmdiKDQwLCAxMTAsIDg5KTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDBweCAwcHg7XFxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICBcXG4gICAgICAgICAgICAgICAgICAgIGRpdiNjcmF0ZXItcmljaC10ZXh0LWFyZWF7XFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAgICAgZGl2I2NyYXRlci10aGUtcmliYm9ue1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogLjVlbSAwO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBtYXgtY29udGVudCBtYXgtY29udGVudDtcXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDAsIDExMCwgODkpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgICAgICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAgICAgaWZyYW1lI2NyYXRlci10aGUtV1lTSVdZR3tcXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICBkaXYjY3JhdGVyLXRoZS1yaWJib24gYnV0dG9ue1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogLjNlbTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IC41ZW07XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICBkaXYjY3JhdGVyLXRoZS1yaWJib24gYnV0dG9uOmhvdmVye1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMCwgOTAsIDcwKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBsaW5lYXIgMHM7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICBkaXYjY3JhdGVyLXRoZS1yaWJib24gaW5wdXQsICBkaXYjY3JhdGVyLXRoZS1yaWJib24gc2VsZWN0e1xcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogLjVlbTtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgIGRpdiNjcmF0ZXItdGhlLXJpYmJvbiBpbnB1dFt0eXBlPVwiY29sb3JcIl17XFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIGB9LHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJjcmF0ZXItdGhlLXJpYmJvblwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsY2hpbGRyZW46W3tlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJ1bmRvQnV0dG9uXCIsdGl0bGU6XCJVbmRvXCJ9LHRleHQ6XCImbGFycjtcIn0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInJlZG9CdXR0b25cIix0aXRsZTpcIlJlZG9cIn0sdGV4dDpcIiZyYXJyO1wifSx7ZWxlbWVudDpcInNlbGVjdFwiLGF0dHJpYnV0ZXM6e2lkOlwiZm9udENoYW5nZXJcIn0sb3B0aW9uczp0aGlzLmZvbnRTdHlsZXN9LHtlbGVtZW50Olwic2VsZWN0XCIsYXR0cmlidXRlczp7aWQ6XCJmb250U2l6ZUNoYW5nZXJcIn0sb3B0aW9uczp0aGlzLnJhbmdlKDEsMjApfSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwib3JkZXJlZExpc3RCdXR0b25cIix0aXRsZTpcIk51bWJlcmVkIExpc3RcIn0sdGV4dDpcIihpKVwifSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwidW5vcmRlcmVkTGlzdEJ1dHRvblwiLHRpdGxlOlwiQnVsbGV0dGVkIExpc3RcIn0sdGV4dDpcIiZidWxsO1wifSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwibGlua0J1dHRvblwiLHRpdGxlOlwiQ3JlYXRlIExpbmtcIn0sdGV4dDpcIkxpbmtcIn0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInVuTGlua0J1dHRvblwiLHRpdGxlOlwiUmVtb3ZlIExpbmtcIn0sdGV4dDpcIlVubGlua1wifV19LHtlbGVtZW50Olwic3BhblwiLGNoaWxkcmVuOlt7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiYm9sZEJ1dHRvblwiLHRpdGxlOlwiQm9sZFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJiXCIsdGV4dDpcIkJcIn1dfSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiaXRhbGljQnV0dG9uXCIsdGl0bGU6XCJJdGFsaWNcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiZW1cIix0ZXh0OlwiSVwifV19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJ1bmRlcmxpbmVCdXR0b25cIix0aXRsZTpcIlVuZGVybGluZVwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJ1XCIsdGV4dDpcIlVcIn1dfSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwic3VwQnV0dG9uXCIsdGl0bGU6XCJTdXBlcnNjcmlwdFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzdXBcIix0ZXh0OlwiMlwifV19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJzdWJCdXR0b25cIix0aXRsZTpcIlN1YnNjcmlwdFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzdWJcIix0ZXh0OlwiMlwifV19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJzdHJpa2VCdXR0b25cIix0aXRsZTpcIlN0cmlrZXRocm91Z2hcIn0sY2hpbGRyZW46W3tlbGVtZW50Olwic1wiLHRleHQ6XCJhYmNcIn1dfSx7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7dHlwZTpcImNvbG9yXCIsaWQ6XCJmb250Q29sb3JCdXR0b25cIix0aXRsZTpcIkNoYW5nZSBGb250IENvbG9yXCIsdmFsdWU6XCIjMDAwMDAwXCJ9fSx7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7dHlwZTpcImNvbG9yXCIsaWQ6XCJoaWdobGlnaHRCdXR0b25cIix0aXRsZTpcIkhpZ2h0bGlnaHQgVGV4dFwiLHZhbHVlOlwiI2ZmZmZmZlwifX0se2VsZW1lbnQ6XCJpbnB1dFwiLGF0dHJpYnV0ZXM6e3R5cGU6XCJjb2xvclwiLGlkOlwiYmFja2dyb3VuZEJ1dHRvblwiLHRpdGxlOlwiQ2hhbmdlIEJhY2tncm91bmRcIix2YWx1ZTpcIiNmZmZmZmZcIn19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJhbGlnbkxlZnRCdXR0b25cIix0aXRsZTpcIkFsaWduIExlZnRcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiYVwiLHRleHQ6XCJMXCJ9XX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImFsaWduQ2VudGVyQnV0dG9uXCIsdGl0bGU6XCJBbGlnbiBDZW50ZXJcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiYVwiLHRleHQ6XCJDXCJ9XX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImFsaWduSnVzdGlmeUJ1dHRvblwiLHRpdGxlOlwiQWxpZ24gSnVzdGlmeVwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsdGV4dDpcIkpcIn1dfSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiYWxpZ25SaWdodEJ1dHRvblwiLHRpdGxlOlwiQWxpZ24gUmlnaHRcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiYVwiLHRleHQ6XCJSXCJ9XX1dfV19LHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJjcmF0ZXItcmljaC10ZXh0LWFyZWFcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiaWZyYW1lXCIsYXR0cmlidXRlczp7aWQ6XCJjcmF0ZXItdGhlLVdZU0lXWUdcIixmcmFtZUJvcmRlcjowLG5hbWU6XCJ0aGVXWVNJV1lHXCJ9fV19XX0pO3RleHRFZGl0b3IuZmluZEFsbChcInNlbGVjdCNmb250LWNoYW5nZXIgPiBvcHRpb25cIikuZm9yRWFjaChmb250PT57Zm9udC5jc3Moe2ZvbnRGYW1pbHk6Zm9udC52YWx1ZX0pfSksdGV4dEVkaXRvci5maW5kKFwiI3Vub3JkZXJlZExpc3RCdXR0b25cIikuaW5uZXJIVE1MPVwiJmJ1bGw7XCIsdGV4dEVkaXRvci5maW5kKFwiI3JlZG9CdXR0b25cIikuaW5uZXJIVE1MPVwiJnJhcnI7XCIsdGV4dEVkaXRvci5maW5kKFwiI3VuZG9CdXR0b25cIikuaW5uZXJIVE1MPVwiJmxhcnI7XCI7bGV0IHNlbGY9dGhpcyxlZGl0b3JXaW5kb3c9dGV4dEVkaXRvci5maW5kKFwiI2NyYXRlci10aGUtV1lTSVdZR1wiKTtyZXR1cm4gZWRpdG9yV2luZG93Lm9uQWRkZWQoKCk9PntsZXQgZWRpdG9yPWVkaXRvcldpbmRvdy5jb250ZW50V2luZG93LmRvY3VtZW50O2VkaXRvci5ib2R5LmlubmVySFRNTD1cIlwiLHNlbGYuaXNzZXQocGFyYW1zLmNvbnRlbnQpJiYoZWRpdG9yLmJvZHkuaW5uZXJIVE1MPXBhcmFtcy5jb250ZW50LmlubmVySFRNTCksZWRpdG9yLmRlc2lnbk1vZGU9XCJvblwiLHRleHRFZGl0b3IuZmluZChcIiNib2xkQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiQm9sZFwiLCExLG51bGwpfSwhMSksdGV4dEVkaXRvci5maW5kKFwiI2l0YWxpY0J1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcIkl0YWxpY1wiLCExLG51bGwpfSwhMSksdGV4dEVkaXRvci5maW5kKFwiI3VuZGVybGluZUJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcIlVuZGVybGluZVwiLCExLG51bGwpfSwhMSksdGV4dEVkaXRvci5maW5kKFwiI3N1cEJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcIlN1cGVyc2NyaXB0XCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjc3ViQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiU3Vic2NyaXB0XCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjc3RyaWtlQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiU3RyaWtldGhyb3VnaFwiLCExLG51bGwpfSwhMSksdGV4dEVkaXRvci5maW5kKFwiI29yZGVyZWRMaXN0QnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiSW5zZXJ0T3JkZXJlZExpc3RcIiwhMSxgbmV3T0wke3NlbGYucmFuZG9tKCl9YCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjdW5vcmRlcmVkTGlzdEJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcIkluc2VydFVub3JkZXJlZExpc3RcIiwhMSxgbmV3VUwke3NlbGYucmFuZG9tKCl9YCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjZm9udENvbG9yQnV0dG9uXCIpLm9uQ2hhbmdlZCh2YWx1ZT0+e2VkaXRvci5leGVjQ29tbWFuZChcIkZvcmVDb2xvclwiLCExLHZhbHVlKX0pLHRleHRFZGl0b3IuZmluZChcIiNoaWdobGlnaHRCdXR0b25cIikub25DaGFuZ2VkKHZhbHVlPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiQmFja0NvbG9yXCIsITEsdmFsdWUpfSksdGV4dEVkaXRvci5maW5kKFwiI2JhY2tncm91bmRCdXR0b25cIikub25DaGFuZ2VkKHZhbHVlPT57ZWRpdG9yLmJvZHkuc3R5bGUuYmFja2dyb3VuZD12YWx1ZX0pLHRleHRFZGl0b3IuZmluZChcIiNmb250Q2hhbmdlclwiKS5vbkNoYW5nZWQodmFsdWU9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJGb250TmFtZVwiLCExLHZhbHVlKX0pLHRleHRFZGl0b3IuZmluZChcIiNmb250U2l6ZUNoYW5nZXJcIikub25DaGFuZ2VkKHZhbHVlPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiRm9udFNpemVcIiwhMSx2YWx1ZSl9KSx0ZXh0RWRpdG9yLmZpbmQoXCIjbGlua0J1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2xldCB1cmw9cHJvbXB0KFwiRW50ZXIgYSBVUkxcIixcImh0dHA6Ly9cIik7c2VsZi5pc251bGwodXJsKXx8ZWRpdG9yLmV4ZWNDb21tYW5kKFwiQ3JlYXRlTGlua1wiLCExLHVybCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjdW5MaW5rQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiVW5MaW5rXCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjdW5kb0J1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcIlVuZG9cIiwhMSxudWxsKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiNyZWRvQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwicmVkb1wiLCExLG51bGwpfSwhMSksdGV4dEVkaXRvci5maW5kKFwiI2FsaWduTGVmdEJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcImp1c3RpZnlMZWZ0XCIsITEsbnVsbCl9KSx0ZXh0RWRpdG9yLmZpbmQoXCIjYWxpZ25DZW50ZXJCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJqdXN0aWZ5Q2VudGVyXCIsITEsbnVsbCl9KSx0ZXh0RWRpdG9yLmZpbmQoXCIjYWxpZ25KdXN0aWZ5QnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwianVzdGlmeUZ1bGxcIiwhMSxudWxsKX0pLHRleHRFZGl0b3IuZmluZChcIiNhbGlnblJpZ2h0QnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwianVzdGlmeVJpZ2h0XCIsITEsbnVsbCl9KX0sITEpLHRleHRFZGl0b3J9ZGlzcGxheURhdGEoZGF0YT17fSxjb250YWluZXIpe2xldCBsaW5lTnVtYmVycz1bXSxkaXNwbGF5U3RyaW5nPXZhbHVlPT50aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLXN0clwifSx0ZXh0OmBcIiR7dmFsdWV9XCJgfSksZGlzcGxheUxpdGVyYWw9dmFsdWU9PnRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtbGl0XCJ9LHRleHQ6YCR7dmFsdWV9YH0pLGRpc3BsYXlQdW5jdHVhdGlvbj12YWx1ZT0+dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS1wdW5cIn0sdGV4dDpgJHt2YWx1ZX1gfSksZGlzcGxheUl0ZW09KHZhbHVlLHBhcmFtcyk9PntwYXJhbXM9cGFyYW1zfHx7fTtsZXQgaXRlbT10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLWl0ZW1cIn19KTtyZXR1cm4gbGluZU51bWJlcnMucHVzaChpdGVtKSx0aGlzLmlzc2V0KHBhcmFtcy5rZXkpP2l0ZW0ubWFrZUVsZW1lbnQoW2Rpc3BsYXlTdHJpbmcocGFyYW1zLmtleSksZGlzcGxheVB1bmN0dWF0aW9uKFwiIDogXCIpLGNob29zZURpc3BsYXkodmFsdWUpXSk6aXRlbS5tYWtlRWxlbWVudChbY2hvb3NlRGlzcGxheSh2YWx1ZSldKSxpdGVtfSxkaXNwbGF5QXJyYXk9dmFsdWU9PntsZXQgaXRlbSxhcnJheT10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLWJsb2NrXCJ9fSk7bGluZU51bWJlcnMucHVzaChhcnJheSksYXJyYXkubWFrZUVsZW1lbnQoZGlzcGxheVB1bmN0dWF0aW9uKFwiW1wiKSk7Zm9yKGxldCBpPTA7aTx2YWx1ZS5sZW5ndGg7aSsrKWl0ZW09YXJyYXkubWFrZUVsZW1lbnQoZGlzcGxheUl0ZW0odmFsdWVbaV0pKSxpIT12YWx1ZS5sZW5ndGgtMSYmaXRlbS5tYWtlRWxlbWVudChkaXNwbGF5UHVuY3R1YXRpb24oXCIsXCIpKTtyZXR1cm4gYXJyYXkubWFrZUVsZW1lbnQoZGlzcGxheVB1bmN0dWF0aW9uKFwiXVwiKSksYXJyYXl9LGRpc3BsYXlPYmplY3Q9dmFsdWU9PntsZXQgaXRlbSxvYmplY3Q9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS1ibG9ja1wifX0pO2xpbmVOdW1iZXJzLnB1c2gob2JqZWN0KSxvYmplY3QubWFrZUVsZW1lbnQoZGlzcGxheVB1bmN0dWF0aW9uKFwie1wiKSk7bGV0IGk9MDtmb3IobGV0IGtleSBpbiB2YWx1ZSlpdGVtPW9iamVjdC5tYWtlRWxlbWVudChkaXNwbGF5SXRlbSh2YWx1ZVtrZXldLHtrZXk6a2V5fSkpLGkhPU9iamVjdC5rZXlzKHZhbHVlKS5sZW5ndGgtMSYmaXRlbS5tYWtlRWxlbWVudChkaXNwbGF5UHVuY3R1YXRpb24oXCIsXCIpKSxpKys7cmV0dXJuIG9iamVjdC5tYWtlRWxlbWVudChkaXNwbGF5UHVuY3R1YXRpb24oXCJ9XCIpKSxvYmplY3R9LGNob29zZURpc3BsYXk9dmFsdWU9Plwic3RyaW5nXCI9PXR5cGVvZiB2YWx1ZT9kaXNwbGF5U3RyaW5nKHZhbHVlKTpBcnJheS5pc0FycmF5KHZhbHVlKT9kaXNwbGF5QXJyYXkodmFsdWUpOlwib2JqZWN0XCI9PXR5cGVvZiB2YWx1ZT9kaXNwbGF5T2JqZWN0KHZhbHVlKTpkaXNwbGF5TGl0ZXJhbCh2YWx1ZSksZGlzcGxheWVkPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInByZVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS13aW5kb3dcIn0sY2hpbGRyZW46W3tlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS1saW5lXCIsc3R5bGU6e2xpbmVIZWlnaHQ6XCIyNXB4XCJ9fX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLXRvZ2dsZXNcIn19LHtlbGVtZW50OlwiY29kZVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS1jb2RlXCIsc3R5bGU6e2xpbmVIZWlnaHQ6XCIyNXB4XCJ9fSxjaGlsZHJlbjpbY2hvb3NlRGlzcGxheShkYXRhKV19XX0pO3RoaXMuaXNzZXQoY29udGFpbmVyKSYmY29udGFpbmVyLmFwcGVuZChkaXNwbGF5ZWQpO2xldCBudW1iZXJzLHRvZ2dsZUJ1dHRvbnMsY29kZT1kaXNwbGF5ZWQuZmluZChcIi5rZXJkeC1kYXRhLWNvZGVcIiksbGluZXM9KGNvZGUucG9zaXRpb24oKS5oZWlnaHQsZGlzcGxheWVkLmZpbmQoXCIua2VyZHgtZGF0YS1saW5lXCIpKSx0b2dnbGVzPWRpc3BsYXllZC5maW5kKFwiLmtlcmR4LWRhdGEtdG9nZ2xlc1wiKSxibG9ja3M9KHBhcnNlSW50KFwiMjVweFwiKSxjb2RlLmZpbmRBbGwoXCIua2VyZHgtZGF0YS1pdGVtXCIpLGNvZGUuZmluZEFsbChcIi5rZXJkeC1kYXRhLWJsb2NrXCIpKSxzZXRSYW5nZT1ibG9jaz0+e2xldCBzdGFydD1NYXRoLmZsb29yKChibG9jay5wb3NpdGlvbigpLnRvcC1jb2RlLnBvc2l0aW9uKCkudG9wKS9wYXJzZUludChcIjI1cHhcIikpKzEsZW5kPU1hdGguZmxvb3IoKGJsb2NrLnBvc2l0aW9uKCkuYm90dG9tLWNvZGUucG9zaXRpb24oKS50b3ApL3BhcnNlSW50KFwiMjVweFwiKSkrMTtibG9jay5yYW5nZT10aGlzLnJhbmdlKGVuZCxzdGFydCl9LGhpZGVOdW1iZXJzPWJsb2NrPT57Zm9yKGxldCBpPTA7aTxibG9jay5yYW5nZS5sZW5ndGg7aSsrKXRoaXMuaXNzZXQobnVtYmVyc1tibG9jay5yYW5nZVtpXV0uY29udHJvbGxlcil8fChudW1iZXJzW2Jsb2NrLnJhbmdlW2ldXS5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KSxudW1iZXJzW2Jsb2NrLnJhbmdlW2ldXS5jb250cm9sbGVyPWJsb2NrKX0saGlkZUJsb2NrPWJsb2NrPT57bGV0IGJsb2NrQ29udGVudD1ibG9jay5jaGlsZHJlbjtmb3IobGV0IGk9MDtpPGJsb2NrQ29udGVudC5sZW5ndGg7aSsrKWJsb2NrQ29udGVudFtpXS5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1kYXRhLWl0ZW1cIikmJihibG9ja0NvbnRlbnRbaV0uY3NzKHtkaXNwbGF5Olwibm9uZVwifSksYmxvY2tDb250ZW50W2ldLmZpbmRBbGwoXCIua2VyZHgtZGF0YS1ibG9ja1wiKS5mb3JFYWNoKGI9Pnt0aGlzLmlzc2V0KGIudG9nZ2xlLmNvbnRyb2xsZXIpfHwoYi50b2dnbGUuY29udHJvbGxlcj1ibG9jayxiLnRvZ2dsZS5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KSl9KSl9O3JldHVybiBsaW5lTnVtYmVycy5wdXNoKHZvaWQgMCksZGlzcGxheWVkLm9uQWRkZWQoZXZlbnQ9PnsoKCk9Pntmb3IobGV0IGk9MDtpPGxpbmVOdW1iZXJzLmxlbmd0aDtpKyspbGluZXMubWFrZUVsZW1lbnQoW3tlbGVtZW50OlwiYVwiLGh0bWw6YCR7aS8xKzF9YCxhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtbGluZS1udW1iZXJcIn19XSl9KSgpLCgoKT0+e2ZvcihsZXQgaT0wO2k8YmxvY2tzLmxlbmd0aDtpKyspe2xldCB0b3A9YmxvY2tzW2ldLnBvc2l0aW9uKCkudG9wLWNvZGUucG9zaXRpb24oKS50b3ArNitcInB4XCIsdG9nZ2xlPXRvZ2dsZXMubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLXRvZ2dsZXMtYnV0dG9uIGZhcyBmYS1hcnJvdy1kb3duXCIsc3R5bGU6e3RvcDp0b3B9fX0pO3RvZ2dsZS5ibG9jaz1ibG9ja3NbaV0sYmxvY2tzW2ldLnRvZ2dsZT10b2dnbGV9fSkoKSxudW1iZXJzPWxpbmVzLmZpbmRBbGwoXCIua2VyZHgtZGF0YS1saW5lLW51bWJlclwiKSx0b2dnbGVCdXR0b25zPXRvZ2dsZXMuZmluZEFsbChcIi5rZXJkeC1kYXRhLXRvZ2dsZXMtYnV0dG9uXCIpLGRpc3BsYXllZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e2xldCB0YXJnZXQ9ZXZlbnQudGFyZ2V0O3RhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1kYXRhLXRvZ2dsZXMtYnV0dG9uXCIpJiYodGhpcy5pc3NldCh0YXJnZXQuYmxvY2sucmFuZ2UpfHxzZXRSYW5nZSh0YXJnZXQuYmxvY2spLHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJmYS1hcnJvdy1kb3duXCIpPyhoaWRlTnVtYmVycyh0YXJnZXQuYmxvY2spLGhpZGVCbG9jayh0YXJnZXQuYmxvY2spKTooKGJsb2NrPT57Zm9yKGxldCBpPTA7aTxibG9jay5yYW5nZS5sZW5ndGg7aSsrKW51bWJlcnNbYmxvY2sucmFuZ2VbaV1dLmNvbnRyb2xsZXI9PWJsb2NrJiYobnVtYmVyc1tibG9jay5yYW5nZVtpXV0uY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pLGRlbGV0ZSBudW1iZXJzW2Jsb2NrLnJhbmdlW2ldXS5jb250cm9sbGVyKX0pKHRhcmdldC5ibG9jayksKGJsb2NrPT57bGV0IGJsb2NrQ29udGVudD1ibG9jay5jaGlsZHJlbjtmb3IobGV0IGk9MDtpPGJsb2NrQ29udGVudC5sZW5ndGg7aSsrKWJsb2NrQ29udGVudFtpXS5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1kYXRhLWl0ZW1cIikmJihibG9ja0NvbnRlbnRbaV0uY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pLGJsb2NrQ29udGVudFtpXS5maW5kQWxsKFwiLmtlcmR4LWRhdGEtYmxvY2tcIikuZm9yRWFjaChiPT57Yi50b2dnbGUuY29udHJvbGxlcj09YmxvY2smJihkZWxldGUgYi50b2dnbGUuY29udHJvbGxlcixiLnRvZ2dsZS5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSkpfSkpfSkodGFyZ2V0LmJsb2NrKSksdGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoXCJmYS1hcnJvdy11cFwiKSx0YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcImZhLWFycm93LWRvd25cIiksKCgpPT57Zm9yKGxldCBpPTA7aTx0b2dnbGVCdXR0b25zLmxlbmd0aDtpKyspdG9nZ2xlQnV0dG9uc1tpXS5jc3Moe3RvcDp0b2dnbGVCdXR0b25zW2ldLmJsb2NrLnBvc2l0aW9uKCkudG9wLWNvZGUucG9zaXRpb24oKS50b3ArNitcInB4XCJ9KX0pKCkpfSl9KSxkaXNwbGF5ZWR9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtOdmJYQnZibVZ1ZEhNdWFuTWlYU3dpYm1GdFpYTWlPbHNpUlcxd2RIa2lMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpVkdWdGNHeGhkR1VpTENKYmIySnFaV04wSUU5aWFtVmpkRjBpTENKMGFHVlhhVzVrYjNjaUxDSnpkWEJsY2lJc0luQmhjbUZ0Y3lJc0luUnBkR3hsY3lJc0luUmhZbFJwZEd4bElpd2lkR2hwY3lJc0ltTnlaV0YwWlVWc1pXMWxiblFpTENKbGJHVnRaVzUwSWl3aVlYUjBjbWxpZFhSbGN5SXNJbU5zWVhOeklpd2lhU0lzSW5acFpYY2lMQ0poY0hCbGJtUWlMQ0owWlhoMElpd2labWx1WkVGc2JDSXNJbVp2Y2tWaFkyZ2lMQ0p1YjJSbElpd2lZV1JrUlhabGJuUk1hWE4wWlc1bGNpSXNJbVYyWlc1MElpd2lkWEpzSWl3aWRYSnNVM0JzYVhSMFpYSWlMQ0pzYjJOaGRHbHZiaUlzSW1oeVpXWWlMQ0oyWVhKeklpd2lkR0ZpSWl3aWRHVjRkRU52Ym5SbGJuUWlMQ0owYjB4dmQyVnlRMkZ6WlNJc0luSnZkWFJsY2lJc0luSmxibVJsY2lJc0luVnliRTFsY21kbGNpSXNJbkYxWlhKcFpYTWlMQ0p1WVcxbElpd2laR0YwWVVGMGRISnBZblYwWlhNaUxDSjJZV3gxWlNJc0ltaDBiV3dpTENKbFpHbDBJaXdpWTI5dGNHOXVaVzUwY3lJc0ltbGtJaXdpYzNSeWFXNW5VbVZ3YkdGalpTSXNJbXhoWW1Wc0lpd2laR0YwWVNJc0ltbHpjMlYwSWl3aVkyaHBiR1J5Wlc0aUxDSmthWE5oWW14bFpDSXNJbk5sYkdWamRHVmtJaXdpYjNCMGFXOXVjeUlzSWtWc1pXMWxiblFpTENKamJHRnpjMHhwYzNRaUxDSmhaR1FpTENKalpXeHNJaXdpYVc1dVpYSklWRTFNSWl3aWJHbHpkQ0lzSW0xaGEyVkZiR1Z0Wlc1MElpd2ljMjl5ZENJc0luTmxkRUYwZEhKcFluVjBaU0lzSW1SaGRHRXRhV052YmlJc0luTjBlV3hsSWl3aVkzVnljMjl5SWl3aVltRmphMmR5YjNWdVpFTnZiRzl5SWl3aWQybGtkR2dpTENKb1pXbG5hSFFpTENKd2IzTnBkR2x2YmlJc0luUnZjQ0lzSW5KcFoyaDBJaXdpY0dGa1pHbHVaeUlzSW1OemN5SXNJbXhwYm1zaUxDSjBaVzF3SWl3aWJXVWlMQ0owYVcxbElpd2ljMlYwVkdsdFpXOTFkQ0lzSW5KbGJXOTJaU0lzSW1Oc1pXRnlWR2x0Wlc5MWRDSXNJbVpwYm1RaUxDSmliMlI1SWl3aWRHbDBiR1VpTENKamIyNTBaVzUwY3lJc0luQnliMnBsWTNScGIyNGlMQ0p5Wlc1aGJXVWlMQ0p6WldGeVkyZ2lMQ0ptYVd4MFpYSWlMQ0pvWldGa1pYSnpJaXdpWTI5c2RXMXVjeUlzSW1OdmJIVnRia052ZFc1MElpd2lkR0ZpYkdVaUxDSmpiMjUwWlc1MElpd2lhVzVrWlhoUFppSXNJbkIxYzJnaUxDSmtZWFJoTFc1aGJXVWlMQ0pvYVdSbElpd2lUMkpxWldOMElpd2lkbUZzZFdWeklpd2lhVzVqYkhWa1pYTWlMQ0prWVhSaExYWmhiSFZsSWl3aVpHRjBZUzF5YjNjaUxDSmthWE53YkdGNUlpd2laM0pwWkZSbGJYQnNZWFJsUTI5c2RXMXVjeUlzSW5SaFlteGxRMjl1ZEdGcGJtVnlJaXdpZEdsMGJHVkRiM1Z1ZENJc0ltUmhkR0Z6WlhRaUxDSndiR0ZqWlVodmJHUmxjaUlzSW14bGJtZDBhQ0lzSW1ObGJHeHpJaXdpY205M0lpd2lZbmtpTENKa2FYSmxZM1JwYjI0aUxDSm5aWFJVWVdKc1pVUmhkR0VpTENKaElpd2lZaUlzSW1selRuVnRZbVZ5SWl3aVkyRnNiR0poWTJ0eklpd2lZMnhwWTJzaUxDSnZjSFJwYjI1RGJHRnpjeUlzSW1SbGJHVjBaU0lzSW5KbGRtVnlkQ0lzSW05d2RHbHZiaUlzSW1acGNuTjBWbWx6YVdKc1pVTnZiSFZ0YmlJc0luUmhZbXhsVkdsMGJHVnpJaXdpZEdGaWJHVkRiMngxYlc1eklpd2ljbTkzY3lJc0ltWnBjbk4wUTI5c2RXMXVJaXdpYVhOdWRXeHNJaXdpZEdGaWJHVlNiM2NpTENKelpXRnlZMmhXWVd4MVpTSXNJbVpwYkhSbGNsWmhiSFZsSWl3aVptbHljM1JEWld4c2N5SXNJbVpwY25OMFZtbHphV0pzWlVObGJHeHpJaXdpZEc5bloyeGxRMnhoYzNObGN5SXNJbk52Y25SVVlXSnNaU0lzSW01bGQxUmhZbXhsUTI5c2RXMXVjeUlzSW1OeVpXRjBaVlJoWW14bElpd2lhaUlzSW05dVEyaGhibWRsWkNJc0ltTnpjMUpsYlc5MlpTSXNJbUZrWkUxMWJIUnBjR3hsUlhabGJuUk1hWE4wWlc1bGNpSXNJblJoY21kbGRDSXNJbU52Ym5SaGFXNXpJaXdpWjJWMFVHRnlaVzUwY3lJc0luUnZaMmRzWlNJc0luQnlaWE56WldRaUxDSmtkWEpoZEdsdmJpSXNJbkpsY1hWcGNtVmtJaXdpWW5WMGRHOXVjeUlzSW01dmRHVWlMQ0ptYjNKdElpd2ljR0Z5Wlc1MElpd2labTl5YlVOdmJuUmxiblJ6SWl3aWEyVjVJaXdpYkdGaWJHVlVaWGgwSWl3aVkyRnRaV3hEWVhObFpGUnZWR1Y0ZENJc0ltSnNiMk5ySWl3aVptOXlJaXdpYzNSaGRHVWlMQ0p2ZDI1bGNpSXNJbU5oYkd4aVlXTnJJaXdpY0dsamEyVnlJaXdpWTI5dWRHRnBibVZ5SWl3aVpHOWpkVzFsYm5RaUxDSndiM0JWY0NJc0ltTnZiRzl5SWl3aWMyVjBRWFIwY21saWRYUmxjeUlzSW0xMWJIUnBjR3hsSWl3aVlXTjBhWFpsSWl3aVlXeHNiM2RPWVhacFoyRjBaU0lzSW5OamNtOXNiRkJ2YzJsMGFXOXVJaXdpYzJWc1pXTjBJaXdpYVdkdWIzSmxJaXdpYzJWMFZtRnNkV1VpTENKblpYUkJkSFJ5YVdKMWRHVWlMQ0poY25KaGVTSXNJbk53YkdsMElpd2lkaUlzSW5SeWFXMGlMQ0pwYm5CMWRDSXNJa0Z5Y21GNUlpd2lhWE5CY25KaGVTSXNJbWwwWlcxeklpd2laR2x6Y0dGMFkyaEZkbVZ1ZENJc0lrTjFjM1J2YlVWMlpXNTBJaXdpYzJsdVoyeGxJaXdpWW05MGRHOXRJaXdpYm1GMmFXZGhkR1VpTENKa1pXRmpkR2wyWVhSbElpd2lZV04wYVhaaGRHVWlMQ0p2ZG1WeVpteHZkeUlzSW5Cc1lXTmxRMjl1ZEdWdWRITWlMQ0pqYkdsbGJuUklaV2xuYUhRaUxDSnBibFpwWlhjaUxDSnlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlJaXdpWW5WaVlteGxaRVYyWlc1MElpd2ljbVZ3YkdGalpTSXNJbTV2ZEVKMVltSnNaV1JGZG1WdWRDSXNJbVZoWTJnaUxDSjBiMU5sZENJc0ltcHZhVzRpTENKM2FXNWtiM2NpTENKamFHOXZjMlZYYVc1a2IzY2lMQ0pqYUc5dmMyVkRiMjUwY205c0lpd2ljWFZsY25sVFpXeGxZM1J2Y2lJc0ltTm9iMmxqWlNJc0lsQnliMjFwYzJVaUxDSnlaWE52YkhabElpd2ljbVZxWldOMElpd2lkR1Y0ZEVWa2FYUnZjaUlzSW1admJuUlRkSGxzWlhNaUxDSnlZVzVuWlNJc0luUjVjR1VpTENKbWNtRnRaVUp2Y21SbGNpSXNJbVp2Ym5RaUxDSm1iMjUwUm1GdGFXeDVJaXdpYzJWc1ppSXNJbVZrYVhSdmNsZHBibVJ2ZHlJc0ltOXVRV1JrWldRaUxDSmxaR2wwYjNJaUxDSmpiMjUwWlc1MFYybHVaRzkzSWl3aVpHVnphV2R1VFc5a1pTSXNJbVY0WldORGIyMXRZVzVrSWl3aWNtRnVaRzl0SWl3aVltRmphMmR5YjNWdVpDSXNJbkJ5YjIxd2RDSXNJbXhwYm1WT2RXMWlaWEp6SWl3aVpHbHpjR3hoZVZOMGNtbHVaeUlzSW1ScGMzQnNZWGxNYVhSbGNtRnNJaXdpWkdsemNHeGhlVkIxYm1OMGRXRjBhVzl1SWl3aVpHbHpjR3hoZVVsMFpXMGlMQ0pwZEdWdElpd2lZMmh2YjNObFJHbHpjR3hoZVNJc0ltUnBjM0JzWVhsQmNuSmhlU0lzSW1ScGMzQnNZWGxQWW1wbFkzUWlMQ0p2WW1wbFkzUWlMQ0pyWlhseklpd2laR2x6Y0d4aGVXVmtJaXdpYkdsdVpVaGxhV2RvZENJc0ltNTFiV0psY25NaUxDSjBiMmRuYkdWQ2RYUjBiMjV6SWl3aVkyOWtaU0lzSW14cGJtVnpJaXdpZEc5bloyeGxjeUlzSW1Kc2IyTnJjeUlzSW5CaGNuTmxTVzUwSWl3aWMyVjBVbUZ1WjJVaUxDSnpkR0Z5ZENJc0lrMWhkR2dpTENKbWJHOXZjaUlzSW1WdVpDSXNJbWhwWkdWT2RXMWlaWEp6SWl3aVkyOXVkSEp2Ykd4bGNpSXNJbWhwWkdWQ2JHOWpheUlzSW1Kc2IyTnJRMjl1ZEdWdWRDSXNJblZ1WkdWbWFXNWxaQ0lzSW5ObGRFNTFiV0psY25NaUxDSnpaWFJVYjJkbmJHVnpJaXdpWVd4cFoyNVViMmRuYkdWeklsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeDVSRUZEUVN4TlFVRk5RU3hUUVVGQlFTeEZRWFY0UTA1RExHdENRVUZQUXl4RFFYQjRRMUFzWTBGQmVVSkRMRmxCUVVGQkxFTkJRM0pDUXl4WFFVRkJRU3hEUVVGWlF5eFRRVUZCUVN4RFFVRlpUQ3hUUVVGQlFTeERRVUZCUVN4RFFVTndRazBzUzBGQlFVRXNRMEZCVFVRc1UwRkJRVUVzUTBGQlFVRXNRMEZIVmtRc1UwRkJRVUVzUTBGQlZVY3NUVUZCUVVFc1EwRkJVeXhEUVVGRlF5eE5RVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRM3BDTEVsQlFVbERMRkZCUVVGQkxFTkJRVmRETEVsQlFVRkJMRU5CUVV0RExHRkJRVUZCTEVOQlFXTXNRMEZCUlVNc1QwRkJRVUVzUTBGQlV5eEpRVUZCTEVOQlFVMURMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhMUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlIzaEZMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNTVUZHVkZJc1RVRkJRVUVzUTBGQlQxTXNTVUZCUVVFc1EwRkJTME1zVFVGQlFVRXNRMEZCVDFJc1VVRkJRVUVzUTBGQlFVRXNRMEZGVEVZc1RVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1JVRkRha0pETEZGQlFVRkJMRU5CUVZOUkxFMUJRVUZCTEVOQlEweFFMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUVdNc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUVUxRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eFhRVUZCTEVOQlFVRXNRMEZCWlVrc1NVRkJRVUVzUTBGQlRVZ3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpkRVpPTEZGQlFVRkJMRU5CUVZOVkxFOUJRVUZCTEVOQlFWRXNTVUZCUVN4RFFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFVkJRVUZCTEVOQlF6TkNRU3hKUVVGQlFTeERRVUZMUXl4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRReXhMUVVGQlFTeEZRVUZCUVN4RFFVTXpRaXhKUVVGSlF5eEhRVUZCUVN4RFFVRk5aQ3hKUVVGQlFTeERRVUZMWlN4WFFVRkJRU3hEUVVGWlF5eFJRVUZCUVN4RFFVRlRReXhKUVVGQlFTeERRVUZCUVN4RFFVTndRMGdzUjBGQlFVRXNRMEZCU1Vrc1NVRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1EwRkJUVklzU1VGQlFVRXNRMEZCUzFNc1YwRkJRVUVzUTBGQldVTXNWMEZCUVVFc1JVRkJRVUVzUTBGRGFFTkRMRTFCUVVGQkxFTkJRVTlETEUxQlFVRkJMRU5CUVU4c1EwRkJSVlFzUjBGQlFVRXNRMEZCU3l4SFFVRkJMRU5CUVUxa0xFbEJRVUZCTEVOQlFVdGxMRmRCUVVGQkxFTkJRVmxtTEVsQlFVRkJMRU5CUVV0M1FpeFRRVUZCUVN4RFFVRlZWaXhIUVVGQlFTeERRVUZMTEV0QlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZGWExFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzQkdMMElzU1VGQlFVRXNRMEZCUzBjc1RVRkJRVUVzUTBGQlV5eERRVUZGU3l4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwTXNWVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVWwxUWl4SlFVRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlNVTXNZMEZCUVVFc1EwRkJaMElzUlVGQlFTeERRVUZKUXl4TFFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlNYQkNMRWxCUVVGQkxFTkJRVTBzUlVGQlFTeERRVUZKY1VJc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVbERMRWxCUVVGQkxFTkJRVTBzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZGYWtnc1NVRlpTVU1zVlVGQlFVRXNRMEZhUVVNc1JVRkJRVUVzUTBGQlMyaERMRWxCUVVGQkxFTkJRVXRwUXl4aFFVRkJRU3hEUVVGamNFTXNUVUZCUVVFc1EwRkJUelpDTEVsQlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGTExFZEJRVUVzUTBGQlFTeERRVUZQTEU5QlFVRXNRMEZIYWtSUkxFdEJRVUZCTEVOQlFWRnNReXhKUVVGQlFTeERRVUZMUXl4aFFVRkJRU3hEUVVGakxFTkJRVVZETEU5QlFVRkJMRU5CUVZNc1QwRkJRU3hEUVVGVFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNXVUZCUVN4RFFVRkJMRU5CUVdkQ1NTeEpRVUZCUVN4RFFVRk5XQ3hOUVVGQlFTeERRVUZQTmtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRXdRbkpITEVsQlFVbFRMRWxCUVVGQkxFTkJka0pLZEVNc1RVRkJRVUVzUTBGQlQwMHNWVUZCUVVFc1EwRkJZMGdzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMTJReXhOUVVGQlFTeERRVUZQVFN4VlFVRkJRU3hEUVVGQlFTeERRVUZsVGl4TlFVRkJRU3hEUVVGUFRTeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkhNVVZPTEUxQlFVRkJMRU5CUVU4NFFpeGpRVUZCUVN4RFFVRnJRak5DTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5ka01zVFVGQlFVRXNRMEZCVHpoQ0xHTkJRVUZCTEVOQlFVRkJMRU5CUVcxQ09VSXNUVUZCUVVFc1EwRkJUemhDTEdOQlFVRkJMRU5CUVdsQ0xFVkJRVUVzUTBGRGRFWTVRaXhOUVVGQlFTeERRVUZQT0VJc1kwRkJRVUVzUTBGQlpVc3NSVUZCUVVFc1EwRkJTMEVzUlVGQlFVRXNRMEZOZGtKRUxGVkJRVUZCTEVOQlJHdENMRkZCUVVFc1JVRkJiRUpzUXl4TlFVRkJRU3hEUVVGUFN5eFBRVUZCUVN4RFFVTk5MRU5CUTFSQkxFOUJRVUZCTEVOQlFWTk1MRTFCUVVGQkxFTkJRVTlMTEU5QlFVRkJMRU5CUVZORExGVkJRVUZCTEVOQlFWbE9MRTFCUVVGQkxFTkJRVTg0UWl4alFVRkJRU3hEUVVGblFsVXNVVUZCUVVFc1EwRkJWU3hEUVVOc1JTeERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJXMURMRkZCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZKUXl4UlFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGQlFTeERRVUZOTDBJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1QwRkJRVUVzUlVGQlowSllMRTFCUVVGQkxFTkJRVTgyUWl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRlJSU3hMUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkxiRWNzUTBGQlJURkNMRTlCUVVGQkxFTkJRVk5NTEUxQlFVRkJMRU5CUVU5TExFOUJRVUZCTEVOQlFWTkRMRlZCUVVGQkxFTkJRVmxPTEUxQlFVRkJMRU5CUVU4NFFpeGpRVUZCUVN4RFFVRm5RbTVDTEVsQlFVRkJMRU5CUVUxWUxFMUJRVUZCTEVOQlFVOHJRaXhMUVVGQlFTeERRVUZCUVN4RFFVZDRSalZDTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5ka01zVFVGQlFVRXNRMEZCVHl0Q0xFdEJRVUZCTEVOQlFVRkJMRWRCUVZGSExGVkJRVUZCTEVOQlFWYzFRaXhWUVVGQlFTeERRVUZYZVVJc1MwRkJRVUVzUTBGQlVTOUNMRTFCUVVGQkxFTkJRVThyUWl4TFFVRkJRU3hEUVVGQlFTeERRVU12UkRWQ0xFbEJRVUZCTEVOQlFVdHZReXhMUVVGQlFTeERRVUZOZGtNc1RVRkJRVUVzUTBGQlR6SkRMRTlCUVVGQkxFTkJRVUZCTEVkQlFWVlVMRlZCUVVGQkxFTkJRVmRUTEU5QlFVRkJMRU5CUVZVelF5eE5RVUZCUVN4RFFVRlBNa01zVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSmVFUk1MRWxCUVVGQkxFTkJSRUYwUXl4TlFVRkJRU3hEUVVGUFN5eFBRVUZCUVN4WlFVRnRRblZETEU5QlFVRkJMRU5CUTI1Q05VTXNUVUZCUVVFc1EwRkJUMHNzVDBGQlFVRXNRMEZIVUVZc1NVRkJRVUVzUTBGQlMwTXNZVUZCUVVFc1EwRkJZemhDTEZWQlFVRkJMRU5CUVVGQkxFVkJSM3BDVnl4VFFVRkJRU3hEUVVGVlF5eEhRVUZCUVN4RFFVRkpMRmRCUVVFc1EwRkJRU3hEUVVWbU0wTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBLMElzUzBGQlFVRXNRMEZCUVVFc1IwRkJVVThzU1VGQlFVRXNRMEZCUzFBc1MwRkJRVUVzUTBGQlVTOUNMRTFCUVVGQkxFTkJRVThyUWl4TFFVRkJRU3hEUVVGQlFTeERRVWRzUkN4SlFXbENTVVVzU1VGQlFVRXNRMEZxUWtGakxFbEJRVUZCTEVOQlFVODFReXhKUVVGQlFTeERRVUZMUXl4aFFVRkJRU3hEUVVGakxFTkJRVVZETEU5QlFVRkJMRU5CUVZNc1MwRkJRU3hEUVVGUFF5eFZRVUZCUVN4RFFVRlpUaXhOUVVGQlFTeERRVUZQVFN4VlFVRkJRU3hEUVVGWmEwTXNVVUZCUVVFc1EwRkJWU3hEUVVGRFNDeExRVUZCUVN4RFFVRlBReXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVEJDYWtjc1QwRjRRa0ZUTEVsQlFVRkJMRU5CUVV0R0xGTkJRVUZCTEVOQlFWVkRMRWRCUVVGQkxFTkJRVWtzVFVGQlFTeERRVUZCTEVOQlJXWXpReXhKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlRYWkRMRTFCUVVGQkxFTkJRVTlYTEVsQlFVRkJMRU5CUVVGQkxFZEJRVTh5UWl4SlFVRkJRU3hEUVVGTFppeFhRVUZCUVN4RFFVRmpka0lzVFVGQlFVRXNRMEZCVDFjc1NVRkJRVUVzUTBGQlFVRXNRMEZGYmtSU0xFbEJRVUZCTEVOQlFVdHZReXhMUVVGQlFTeERRVUZOZGtNc1RVRkJRVUVzUTBGQlQyZERMRWxCUVVGQkxFTkJRVUZCTEVkQlFVOU5MRWxCUVVGQkxFTkJRVXRWTEZOQlFVRkJMRU5CUVZsb1JDeE5RVUZCUVN4RFFVRlBaME1zU1VGQlFVRXNRMEZCUVVFc1EwRkhha1EzUWl4SlFVRkJRU3hEUVVGTGIwTXNTMEZCUVVFc1EwRkJUWFpETEUxQlFVRkJMRU5CUVU5cFJDeEpRVUZCUVN4RFFVRkJRU3hIUVVOc1FrWXNTVUZCUVVFc1EwRkJTMGNzVjBGQlFVRXNRMEZCV1N4RFFVTmlOME1zVDBGQlFVRXNRMEZCVXl4VlFVRkJMRU5CUVZsRExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTlCTEVWQlFVRkJMRU5CUVVGQkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRV0ZSTEU5QlFVRkJMRU5CUVZNelF5eE5RVUZCUVN4RFFVRlBhVVFzU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGFFWmlMRWxCUVVGQkxFTkJRVXRqTEZsQlFVRkJMRU5CUVdFc1RVRkJRU3hEUVVGQkxFTkJRVUVzUlVGQlYycENMRVZCUVVGQkxFTkJRVUZCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1RkQ2FFTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBhVU1zU1VGQlFVRXNRMEZCUVVFc1IwRkRiRUpCTEVsQlFVRkJMRU5CUVU5akxFbEJRVUZCTEVOQlFVdEhMRmRCUVVGQkxFTkJRVmtzUTBGRGNFSTNReXhQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVU4wUWtNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJWVkFzVFVGQlFVRXNRMEZCVDJsRExFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVkZ2UWl4WFFVRkJRU3hEUVVGaExHRkJRVUVzUTBGQlpVTXNTMEZCUVVFc1EwRkJUeXhEUVVGRlF5eE5RVUZCUVN4RFFVRlJMRk5CUVVFc1EwRkJWME1zWlVGQlFVRXNRMEZCYVVJc2MwSkJRVUVzUTBGQmQwSkRMRXRCUVVGQkxFTkJRVThzUzBGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGUkxFMUJRVUVzUTBGQlVVTXNVVUZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRVmxETEVkQlFVRkJMRU5CUVVzc1MwRkJRU3hEUVVGUFF5eExRVUZCUVN4RFFVRlBMRXRCUVVFc1EwRkJUME1zVDBGQlFVRXNRMEZCVXl4UFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSGVrNW1MRWxCUVVGQkxFTkJRVXRuUWl4SFFVRkJRU3hEUVVGSkxFTkJRVVZLTEZGQlFVRkJMRU5CUVZVc1ZVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVZzUWxvc1NVRkJRVUVzUTBGSFdHeEVMRTlCUVVGQkxFTkJRVkZITEUxQlFVRkJMRU5CUVZNc1EwRkJSV2RGTEVsQlFVRkJMRU5CUVUwc1JVRkJRU3hEUVVGSmNrUXNTVUZCUVVFc1EwRkJUU3hGUVVGQkxFTkJRVWx6UkN4SlFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzcERMRWxCUVVsRExFVkJRVUZCTEVOQlFVc3ZSQ3hKUVVGQlFTeERRVUZMUXl4aFFVRkJRU3hEUVVGakxFTkJRM2hDUXl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRTlCUVVFc1EwRkJRU3hEUVVGWGFVTXNVVUZCUVVFc1EwRkJWU3hEUVVOMlJISkRMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUVdNc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0TkxFbEJRVUZCTEVOQlFVMVlMRTFCUVVGQkxFTkJRVTlYTEVsQlFVRkJMRU5CUVUxTUxGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eE5RVUZCTEVOQlFWRmhMRWxCUVVGQkxFTkJRVTF3UWl4TlFVRkJRU3hEUVVGUFowVXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRhRWMzUkN4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUVVWRExFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzVDBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVsdVJTeEhRVUZKU2l4SlFVRkJRU3hEUVVGTGIwTXNTMEZCUVVFc1EwRkJUWFpETEUxQlFVRkJMRU5CUVU5cFJTeEpRVUZCUVN4RFFVRkJRU3hEUVVOc1FpeEpRVUZKUlN4SlFVRkJRU3hEUVVGUFF5eFZRVUZCUVN4RFFVRlhMRWxCUVVFc1EwRkRiRUpHTEVWQlFVRkJMRU5CUVVkSExFMUJRVUZCTEVWQlFVRkJMRU5CUTBoRExGbEJRVUZCTEVOQlFXRklMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUTBVc1JVRkJRU3hGUVVGbWJrVXNUVUZCUVVFc1EwRkJUMmxGTEVsQlFVRkJMRU5CUVRSQ0xFZEJRVUVzUTBGQlpHcEZMRTFCUVVGQkxFTkJRVTl0UlN4SlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlFTeERRVWRzUkVRc1JVRkJRVUVzUTBGQlIwc3NTVUZCUVVFc1EwRkJTeXhSUVVGQkxFTkJRVUVzUTBGQlZYaEVMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZORExFdEJRVUZCTEVWQlFVRkJMRU5CUTNoRGEwUXNSVUZCUVVFc1EwRkJSMGNzVFVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIVUVjc1NVRkJRVUVzUTBGQlMwUXNTVUZCUVVFc1EwRkJTeXh4UWtGQlFTeERRVUZCTEVOQlFYVkNOMFFzVFVGQlFVRXNRMEZCVDNkRUxFVkJRVUZCTEVOQlFVRkJMRU5CUnpWRGNrVXNWMEZCUVVFc1EwRkJXVWNzVFVGQlFVRXNRMEZCVXl4RFFVRkZlVVVzUzBGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsRExGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkpReXhWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCU1VNc1RVRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVbDZRaXhKUVVGQlFTeERRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJUekJDTEUxQlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlJUVkhMRWxCUjBsMFJTeERRVUZCUVN4RFFVaEJkVVVzVDBGQlFVRXNRMEZCVlN4RlFVRkJMRU5CUTFaRExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTldReXhYUVVGQlFTeERRVUZqTEVOQlFVRXNRMEZGWkVNc1MwRkJRVUVzUTBGQlVTOUZMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUTFRc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWbE9MRTFCUVVGQkxFTkJRVTlOTEZWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6ZERORVVzUzBGQlFVRXNRMEZCVFhKRExGTkJRVUZCTEVOQlFWVkRMRWRCUVVGQkxFTkJRVWtzWVVGQlFTeERRVUZCTEVOQlJYQkNMRWxCUVVzc1NVRkJTWEZETEU5QlFVRkJMRWxCUVZkdVJpeE5RVUZCUVN4RFFVRlBNRVVzVVVGQlFVRXNRMEZCVlN4RFFVTnFRMnhGTEVOQlFVRkJMRU5CUVVsU0xFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVUZUVlN4UFFVRkJRU3hEUVVGUlJDeFBRVUZCUVN4RFFVRkJRU3hEUVVNMVFpeEpRVUZMTEVsQlFVbDBSQ3hKUVVGQlFTeEpRVUZSYzBRc1QwRkJRVUVzUTBGQlFVRXNRMEZEYVVJc1EwRkJRU3hGUVVFeFFrb3NUMEZCUVVFc1EwRkJVVXNzVDBGQlFVRXNRMEZCVVhaRUxFbEJRVUZCTEVOQlFVRkJMRWRCUTJoQ2EwUXNUMEZCUVVFc1EwRkJVVTBzU1VGQlFVRXNRMEZCUzNoRUxFbEJRVUZCTEVOQlFVRkJMRU5CUTJKdFJDeFBRVUZCUVN4RFFVRlJia1FzU1VGQlFVRXNRMEZCUVVFc1EwRkJVWEZFTEV0QlFVRkJMRU5CUVUxb1F5eFhRVUZCUVN4RFFVRlpMRU5CUXpsQ04wTXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4dlFrRkJRU3hEUVVGelFpdEZMRmRCUVVGQkxFTkJRV0Y2UkN4SlFVRkJRU3hEUVVGQlFTeERRVUZSVnl4UlFVRkJRU3hEUVVGVkxFTkJRM3BHTEVOQlEwbHVReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExEQkNRVUZCTEVOQlFUUkNLMFVzVjBGQlFVRXNRMEZCWVhwRUxFbEJRVUZCTEVOQlFVRkJMRU5CUVZGWExGRkJRVUZCTEVOQlFWVXNRMEZETjBZc1EwRkJSVzVETEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNLMEpCUVVFc1EwRkJRU3hEUVVGdFEwa3NTVUZCUVVFc1EwRkJUV3RDTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNSR0xFTkJRVVY0UWl4UFFVRkJRU3hEUVVGVExFdEJRVUVzUTBGQlQwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRFpDUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVa3pRMG9zU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMTJReXhOUVVGQlFTeERRVUZQYlVRc1NVRkJRVUVzUTBGQlFVRXNSVUZEYkVJMlFpeFBRVUZCUVN4RFFVRlJia1FzU1VGQlFVRXNRMEZCUVVFc1EwRkJUVEJETEVsQlFVRkJMRU5CUVVzc01rSkJRVUVzUTBGQlFTeERRVUUyUW5KQ0xGZEJRVUZCTEVOQlFWa3NRMEZCUlRkRExFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzSzBKQlFVRXNRMEZCYVVNNFF5eFhRVUZCUVN4RFFVRmhMRzlDUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZOTDBweVJDeE5RVUZCUVN4RFFVRlBNa1VzVlVGQlFVRXNRMEZCWVRORkxFMUJRVUZCTEVOQlFVOHlSU3hWUVVGQlFTeEZRVUZqTEVWQlFVRXNRMEZGZWtNc1NVRkJTVmtzU1VGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkJUM3BHTEUxQlFVRkJMRU5CUVU4eVJTeFZRVUZCUVN4RFFVRkJRU3hEUVVGWlpTeFJRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVkeVJDeEpRVUZMTEVsQlFVazNSQ3hKUVVGQlFTeEpRVUZSYTBRc1QwRkJRVUVzUTBGQlV5eERRVU4wUWl4SlFVRkxMRWxCUVVsSkxFOUJRVUZCTEVsQlFWZHVSaXhOUVVGQlFTeERRVUZQTUVVc1VVRkJRVUVzUTBGRGRrSnNSU3hEUVVGQlFTeERRVUZKVWl4TlFVRkJRU3hEUVVGUE1FVXNVVUZCUVVFc1EwRkJVMVVzVDBGQlFVRXNRMEZCVVVRc1QwRkJRVUVzUTBGQlFVRXNRMEZETlVKSUxFOUJRVUZCTEVOQlFWRnVSQ3hKUVVGQlFTeERRVUZCUVN4RFFVRk5NRU1zU1VGQlFVRXNRMEZCU3l3NFFrRkJRU3hEUVVGQkxFTkJRV2REY2tJc1YwRkJRVUVzUTBGQldTeERRVUZGTjBNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXg1UWtGQlFTeERRVUV5UWl0RkxGZEJRVUZCTEVOQlFXRjZSQ3hKUVVGQlFTeERRVUZOT0VRc1dVRkJRVUVzUTBGQlkxSXNUMEZCUVVFc1EwRkJVWFJFTEVsQlFVRkJMRU5CUVVGQkxFVkJRVk1zUlVGQlFTeERRVUZKSzBRc1ZVRkJRVUVzUTBGQldYQkdMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdDNRaXhKUVVGQlFTeERRVUZOYlVRc1QwRkJRVUVzUTBGQlVYUkVMRWxCUVVGQkxFTkJRVUZCTEVWQlFWTXNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVkd1RTeERRVUZCTEVWQlFUVkNOMElzVFVGQlFVRXNRMEZCVHpKRkxGVkJRVUZCTEVOQlFWYzVReXhKUVVGQlFTeERRVUZCUVN4RlFVRm5RakJFTEVsQlFVRkJMRVZCUVVGQkxFTkJRVk53Uml4SlFVRkJRU3hEUVVGTGIwTXNTMEZCUVVFc1EwRkJUWFpETEUxQlFVRkJMRU5CUVU4eVJTeFZRVUZCUVN4RFFVRlhPVU1zU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGVFVnRSQ3hQUVVGQlFTeERRVUZSYmtRc1NVRkJRVUVzUTBGQlFVRXNRMEZCVFd0RExFZEJRVUZCTEVOQlFVa3NRMEZCUlRoQ0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkpha05hTEZkQlFVRkJMRVZCUVVGQkxFTkJSMHBETEV0QlFVRkJMRU5CUVUxdVFpeEhRVUZCUVN4RFFVRkpMRU5CUVVVclFpeHRRa0ZCUVVFc1EwRkJRVUVzUTBGQlFVRXNUMEZCUVVFc1JVRkJLMEppTEZkQlFVRkJMRU5CUVVGQkxFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJUTkRMRWxCUVVsakxHTkJRVUZCTEVOQlFXbENOVVlzU1VGQlFVRXNRMEZCUzBNc1lVRkJRVUVzUTBGQll5eERRVU53UTBNc1QwRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOURMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXgxUWtGQlFTeERRVUZCTEVOQlFUSkNhVU1zVVVGQlFVRXNRMEZCVlN4RFFVTjBSU3hEUVVOSmJrTXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl3MFFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGRk1VTXlSU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxLWXl4VlFVRkJRU3hEUVVGaExFTkJRVUVzUTBGclEycENMRTlCYUVOSk4wWXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBlVVVzUzBGQlFVRXNRMEZCUVVFc1IwRkRiRUp6UWl4alFVRkJRU3hEUVVGbGVFSXNTVUZCUVVFc1EwRkJTeXcyUWtGQlFTeERRVUZCTEVOQlFTdENja0lzVjBGQlFVRXNRMEZCV1N4RFFVRkZOME1zVDBGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUVUxRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eHRRa0ZCUVN4RFFVRkJMRU5CUVhWQ1NTeEpRVUZCUVN4RFFVRk5XQ3hOUVVGQlFTeERRVUZQZVVVc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRla2wxUWl4VlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVZEJOMFlzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMTJReXhOUVVGQlFTeERRVUZQYlVRc1NVRkJRVUVzUTBGQlFVRXNSMEZEYkVJclFpeExRVUZCUVN4RFFVRk5aU3hQUVVGQlFTeERRVUZST1VNc1NVRkJRVUVzUTBGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRkhja0pvUkN4SlFVRkJRU3hEUVVGTGIwTXNTMEZCUVVFc1EwRkJUWFpETEUxQlFVRkJMRU5CUVU4MlJTeE5RVUZCUVN4RFFVRkJRU3hIUVVOc1FtdENMR05CUVVGQkxFTkJRV1Y0UWl4SlFVRkJRU3hEUVVGTExEWkNRVUZCTEVOQlFVRXNRMEZCSzBKeVFpeFhRVUZCUVN4RFFVRlpMRU5CUVVVM1F5eFBRVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEc5Q1FVRkJMRU5CUVhOQ01rWXNWMEZCUVVFc1EwRkJZU3hwUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXpTVVlzVlVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGSFFUZEdMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmRrTXNUVUZCUVVFc1EwRkJUemhGTEUxQlFVRkJMRU5CUVVGQkxFZEJRMnhDYVVJc1kwRkJRVUVzUTBGQlpYaENMRWxCUVVGQkxFTkJRVXNzTmtKQlFVRXNRMEZCUVN4RFFVRXJRbkpDTEZkQlFVRkJMRU5CUVZrc1EwRkJSVGRETEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNiMEpCUVVFc1EwRkJRU3hEUVVGM1FtOURMRTlCUVVGQkxFTkJRVk16UXl4TlFVRkJRU3hEUVVGUE9FVXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEYWtwclFpeFZRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVWN3UWl4RFFVRkJMRVZCUVRGQ2FFY3NUVUZCUVVFc1EwRkJUekJGTEZGQlFVRkJMRU5CUVZONVFpeE5RVUZCUVN4SFFVTm9RbXBDTEV0QlFVRkJMRU5CUVUwelJDeFhRVUZCUVN4RFFVRmpMR0ZCUVVFc1EwRkJRU3hEUVVkNFFuZEZMR05CUVVGQkxFTkJRV1UzUXl4WFFVRkJRU3hEUVVGWkxFTkJRM1pDTjBNc1QwRkJRVUVzUTBGQlV5eFBRVUZCTEVOQlFWTk5MRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMSGxKUVVGQlFTeEZRVWR2UW5GR0xGVkJRVUZCTEVOQlFVRkJMSEZFUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXR1UTBRc1kwRkJRVUVzUTBGSFdHeEhMRmxCUVVGQkxFTkJRV0Z4Uml4TFFVRkJRU3hEUVVGQlFTeERRVU5VTEVsQlFVazFReXhKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZEVURoRUxFdEJRVUZCTEVOQlFWRnNRaXhMUVVGQlFTeERRVUZOZEVVc1QwRkJRVUVzUTBGQlVTd3dRa0ZCUVN4RFFVRkJMRU5CUlRGQ0xFbEJRVXNzU1VGQlNVb3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrMFJpeExRVUZCUVN4RFFVRk5SQ3hOUVVGQlFTeERRVUZSTTBZc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTnVReXhIUVVGQkxFTkJRVWx4UWl4SlFVRkJRU3hEUVVGRlFTeEpRVUZCUVN4RFFVRkpSU3hMUVVGQlFTeERRVUZGUVN4TFFVRkJRU3hEUVVGTGMwVXNSMEZCUVVFc1EwRkJSVUVzUjBGQlFVRXNRMEZCUVVFc1EwRkJVVVFzUzBGQlFVRXNRMEZCVFRWR0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkNVJpeFBRVUZCUVN4RFFVTndRek5FTEVsQlFVRkJMRU5CUVVzclJDeEhRVUZCUVN4RFFVRkJRU3hEUVVGUEwwUXNTVUZCUVVFc1EwRkJTeXRFTEVkQlFVRkJMRU5CUVVGQkxFVkJRVkVzUlVGQlFTeERRVU42UWk5RUxFbEJRVUZCTEVOQlFVc3JSQ3hIUVVGQlFTeERRVUZCUVN4RFFVRkxlRVVzU1VGQlFVRXNRMEZCUVVFc1EwRkJVVVVzUzBGQlFVRXNRMEZIZEVJc1QwRkJUMDhzU1VGQlFVRXNRMEZIV0hwRExGTkJRVUZCTEVOQlFWVnhSaXhMUVVGQlFTeERRVUZQYjBJc1JVRkJRVUVzUTBGQlN5eEZRVUZCTEVOQlFVbERMRk5CUVVGQkxFTkJRVmtzUTBGQlFTeERRVUZCTEVOQlEyeERMRWxCUVVscVJTeEpRVUZCUVN4RFFVRlBia01zU1VGQlFVRXNRMEZCUzNGSExGbEJRVUZCTEVOQlFXRjBRaXhMUVVGQlFTeERRVUZCUVN4RFFXdENOMElzVDBGb1FrRTFReXhKUVVGQlFTeERRVUZMWVN4SlFVRkJRU3hEUVVGTExFTkJRVU56UkN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4SlFVTldSQ3hEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRlNDeEZRVUZCUVN4RFFVRkJRU3hEUVVOT1NTeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGU2l4RlFVRkJRU3hEUVVGQlFTeERRVVZHYmtjc1NVRkJRVUVzUTBGQlMzZEhMRkZCUVVGQkxFTkJRVk5HTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTEwUnl4SlFVRkJRU3hEUVVGTGQwY3NVVUZCUVVFc1EwRkJVMFFzUTBGQlFVRXNRMEZCUVVFc1IwRkRiRU5FTEVOQlFVRkJMRVZCUVZFc1EwRkJRU3hEUVVOU1F5eERRVUZCUVN4RlFVRlJMRU5CUVVFc1EwRkJRU3hEUVVkU1NDeFRRVUZCUVN4RFFVRkJRU3hEUVVGaExFTkJRVUVzUTBGRFRrVXNRMEZCUVVFc1EwRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTeXhEUVVGQkxFTkJSMkpFTEVOQlFVRkJMRU5CUVVsRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlIzSkNjRVVzU1VGQlFVRXNRMEZIV0hwRExGZEJRVUZCTEVOQlFWbEhMRTFCUVVGQkxFTkJRVk1zUTBGQlJXdEdMRXRCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZKZGtNc1QwRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZCVFdsRkxGTkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eEpRVUZCTEVWQlFVRXNRMEZCVnk5Q0xFMUJRVUZCTEVOQlFWRXNTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOeVJqbEZMRTFCUVVGQkxFTkJRVTh5UXl4UFFVRkJRU3hEUVVGVk0wTXNUVUZCUVVFc1EwRkJUekpETEU5QlFVRkJMRVZCUVZjc1JVRkJRU3hEUVVOdVEybEZMRk5CUVVGQkxFTkJRVmxCTEZOQlFVRkJMRVZCUVdFc1JVRkJRU3hEUVVONlFpeEpRV0ZKUlN4WFFVRkJRU3hEUVdKQk5VSXNTMEZCUVVFc1EwRkJVV3hHTEUxQlFVRkJMRU5CUVU5clJpeExRVUZCUVN4RFFVRk5XQ3hKUVVGQlFTeERRVUZMTEdOQlFVRXNRMEZCUVN4RFFVVXhRalZDTEU5QlFVRkJMRU5CUVZWNFF5eEpRVUZCUVN4RFFVRkxReXhoUVVGQlFTeERRVUZqTEVOQlF6ZENReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExIRkNRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjNSRE1FTXNTVUZCUVVFc1EwRkJUeXhEUVVOUWVFTXNTVUZCUVVFc1EwRkJUU3haUVVGQkxFTkJRMDV6Unl4TlFVRkJRU3hEUVVGUkxHTkJRVUVzUTBGRFVqbEZMRWxCUVVGQkxFTkJRVTBzV1VGQlFTeERRVU5PSzBVc1RVRkJRVUVzUTBGQlVTeG5Ra0ZCUVN4RFFVRkJMRU5CU1Zvc1NVRkJTeXhKUVVGSlF5eE5RVUZCUVN4SlFVRlZha2dzVFVGQlFVRXNRMEZCVHpKRExFOUJRVUZCTEVOQlEzUkNiVVVzVjBGQlFVRXNRMEZCWXpkRUxFbEJRVUZCTEVOQlFVdG5SU3hOUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeFBRVUZCUVN4RlFVRnhRa0VzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGVrSjBSU3hQUVVGQlFTeERRVUZSVHl4WFFVRkJRU3hEUVVGWkxFTkJReTlDTjBNc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdERMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUM1ZITEZkQlFVRkJMRU5CUVdNc2NVSkJRVUVzUTBGQmRVSXpSU3hGUVVGQlFTeERRVUZKTEhGQ1FVRkJMRU5CUVhkQ09FVXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpOVWNzU1VGSlNVTXNhMEpCUVVGQkxFTkJTa0ZETEZkQlFVRkJMRU5CUVdOcVF5eExRVUZCUVN4RFFVRk5kRVVzVDBGQlFVRXNRMEZCVVN3eVFrRkJRU3hEUVVGQkxFTkJRelZDZDBjc1dVRkJRVUVzUTBGQlpXeERMRXRCUVVGQkxFTkJRVTEwUlN4UFFVRkJRU3hEUVVGUkxIRkNRVUZCTEVOQlFVRXNRMEZETjBKNVJ5eEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWTBZc1dVRkJRVUVzUTBGQllTeERRVUZCTEVOQlFVRXNRMEZITDBJc1IwRkJTV3BJTEVsQlFVRkJMRU5CUVV0dlNDeE5RVUZCUVN4RFFVRlBSQ3hYUVVGQlFTeERRVUZCUVN4RFFVTmFMRTlCUjBvc1NVRkJTeXhKUVVGSk9VY3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrMFJ5eFpRVUZCUVN4RFFVRmhha0lzVFVGQlFVRXNRMEZCVVROR0xFTkJRVUZCTEVWQlFVRkJMRU5CUTNKRExFZEJRWEZETEUxQlFVRXNSVUZCYWtNMFJ5eFpRVUZCUVN4RFFVRmhOVWNzUTBGQlFVRXNRMEZCUVVFc1EwRkJSM1ZFTEVkQlFVRkJMRVZCUVVGQkxFTkJRVTA0UWl4UFFVRkJRU3hEUVVGdFFpeERRVU42UTNGQ0xHdENRVUZCUVN4RFFVRnhRa1VzV1VGQlFVRXNRMEZCWVRWSExFTkJRVUZCTEVOQlFVRkJMRU5CUTJ4RExFdEJRVUVzUTBGSlVpeEpRVWRKWjBnc1VVRkJRVUVzUTBGNVJFRkRMRmRCUVVGQkxFTkJRV0ZETEZkQlFVRkJMRU5CTlVSaVF5eFZRVUZCUVN4RFFVRmhUQ3hYUVVGQlFTeERRVUZaTVVjc1QwRkJRVUVzUTBGQlVTd3dRa0ZCUVN4RFFVRkJMRU5CUTJwRFowZ3NhVUpCUVVGQkxFTkJRVzlDVml4clFrRkJRVUVzUTBGQmJVSjBSeXhQUVVGQlFTeERRVUZSTERCQ1FVRkJMRU5CUVVFc1EwRkpia1FzU1VGQlN5eEpRVUZKU2l4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVzFJTEZWQlFVRkJMRU5CUVZkNFFpeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkRia00yUnl4SlFVRkJRU3hEUVVGTGFFTXNTVUZCUVVFc1EwRkJTM05ETEZWQlFVRkJMRU5CUVZkdVNDeERRVUZCUVN4RFFVRkJRU3hEUVVGSGVVWXNUMEZCUVVFc1EwRkJVVWtzUjBGQlFVRXNRMEZCUVVFc1EwRkhjRU1zUjBGQmMwUXNUVUZCUVN4RlFVRnNSSEpITEUxQlFVRkJMRU5CUVU5clJpeExRVUZCUVN4RFFVRk5XQ3hKUVVGQlFTeERRVUZMTEdOQlFVRXNRMEZCUVN4RFFVRm5RakJDTEU5QlFVRkJMRU5CUVZFNVF5eEpRVUZCUVN4RFFVTXhReXhKUVVGTExFbEJRVWt6UXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVEpITEZkQlFVRkJMRU5CUVZsb1FpeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkRjRU15Unl4WFFVRkJRU3hEUVVGWk0wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIwOHNaMEpCUVVGQkxFTkJRV2xDTEZsQlFVRXNRMEZCWTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZETVVOdFJ5eFhRVUZCUVN4RFFVRlpNMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXRFTEVsQlFVRkJMRU5CUVVzc1owTkJRVUVzUTBGQlFTeERRVUZyUTFJc1IwRkJRVUVzUTBGQlNTeERRVUZGT0VJc1QwRkJRVUVzUTBGQlV5eFBRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkhla1Z6UWl4WFFVRkJRU3hEUVVGWk0wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIwOHNaMEpCUVVGQkxFTkJRV2xDTEZsQlFVRXNRMEZCWTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZETVVOdFJ5eFhRVUZCUVN4RFFVRlpNMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXRFTEVsQlFVRkJMRU5CUVVzc1owTkJRVUVzUTBGQlFTeERRVUZyUTFJc1IwRkJRVUVzUTBGQlNTeERRVUZGT0VJc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkhla1Z6UWl4WFFVRkJRU3hEUVVGWk0wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5dEVMRWxCUVVGQkxFTkJRVXNzWjBOQlFVRXNRMEZCUVN4RFFVRnJRM2hFTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTkRMRXRCUVVGQkxFVkJRVUZCTEVOQlF6VkZMRWxCUVVsMVJpeFRRVUZCUVN4RFFVTktXU3hYUVVGQlFTeERRVUZaTTBjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl0RUxFbEJRVUZCTEVOQlFVc3NaME5CUVVFc1EwRkJRU3hEUVVGclEzTkVMR0ZCUVVGQkxFTkJRV01zYTBKQlFVRXNRMEZCUVN4RFFVTndSVllzVjBGQlFVRXNRMEZCV1ROSExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjclJDeEpRVUZCUVN4RFFVRkxMR2REUVVGQkxFTkJRVUVzUTBGQmEwTnpSQ3hoUVVGQlFTeERRVUZqTEc5Q1FVRkJMRU5CUVVFc1EwRkRWeXhKUVVGQkxFVkJRVE5GVml4WFFVRkJRU3hEUVVGWk0wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5dEVMRWxCUVVGQkxFTkJRVXNzWjBOQlFVRXNRMEZCUVN4RFFVRnJRekJDTEU5QlFVRkJMRU5CUVZGTkxGTkJRVUZCTEVWQlF6bEVXU3hYUVVGQlFTeERRVUZaTTBjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl0RUxFbEJRVUZCTEVOQlFVc3NaME5CUVVFc1EwRkJRU3hEUVVGclF6QkNMRTlCUVVGQkxFTkJRVkZOTEZOQlFVRkJMRU5CUVZrc1RVRkJRU3hEUVVNeFJVRXNVMEZCUVVFc1EwRkJXU3hEUVVGQkxFZEJSMXBaTEZkQlFVRkJMRU5CUVZrelJ5eERRVUZCUVN4RFFVRkJRU3hEUVVGSEswUXNTVUZCUVVFc1EwRkJTeXhuUTBGQlFTeERRVUZCTEVOQlFXdERNRUlzVDBGQlFVRXNRMEZCVVUwc1UwRkJRVUVzUTBGQldTeEpRVUZCTEVOQlF6RkZRU3hUUVVGQlFTeERRVUZCUVN4RFFVRmhMRU5CUVVFc1EwRkJRU3hEUVVkcVFpeEpRVUZKTlVZc1NVRkJRVUVzUTBGQlQzZEhMRmRCUVVGQkxFTkJRVmt6Unl4RFFVRkJRU3hEUVVGQlFTeERRVUZISzBRc1NVRkJRVUVzUTBGQlN5eG5RMEZCUVN4RFFVRkJMRU5CUVd0RGFFUXNWMEZCUVVFc1EwRkZOMFJsTEVsQlFVRkJMRU5CUVU5dVF5eEpRVUZCUVN4RFFVRkxNa2dzVTBGQlFVRXNRMEZCVlRsSUxFMUJRVUZCTEVOQlFVOXJSaXhMUVVGQlFTeERRVUZOV0N4SlFVRkJRU3hEUVVGTExHTkJRVUVzUTBGQlFTeERRVUZwUWpWRUxFbEJRVUZCTEVOQlFVMDBSaXhUUVVGQlFTeERRVUZCUVN4RFFVY3ZSSGRDTEdWQlFVRkJMRU5CUmxjMVNDeEpRVUZCUVN4RFFVRkxOa2dzVjBGQlFVRXNRMEZCV1N4RFFVRkZkRVFzVVVGQlFVRXNRMEZCVlhCRExFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSV0l4UWl4UFFVRkJRU3hEUVVGUkxIRkNRVUZCTEVOQlFVRXNRMEZEZGtNc1NVRkJTeXhKUVVGSmNVZ3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsR0xHVkJRVUZCTEVOQlFXZENOVUlzVFVGQlFVRXNRMEZCVVRoQ0xFTkJRVUZCTEVWQlFVRkJMRU5CUTNoRFlpeFpRVUZCUVN4RFFVRmhZU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhNVVFzU1VGQlFVRXNRMEZCU3l3NFFrRkJRU3hEUVVGQkxFTkJRV2REZGtJc1UwRkJRVUVzUTBGQldTdEZMR1ZCUVVGQkxFTkJRV2RDUlN4RFFVRkJRU3hEUVVGQlFTeERRVUZITVVRc1NVRkJRVUVzUTBGQlN5dzRRa0ZCUVN4RFFVRkJMRU5CUVdkRGRrSXNVMEZCUVVFc1EwRkhOMGh2UlN4WlFVRkJRU3hEUVVGbGJFTXNTMEZCUVVFc1EwRkJUWFJGTEU5QlFVRkJMRU5CUVZFc2NVSkJRVUVzUTBGQlFTeERRVU0zUW10RkxFMUJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMxQXpSU3hKUVVGQlFTeERRVUZMYjBnc1RVRkJRVUVzUTBGQlQzWklMRTFCUVVGQkxFTkJRVTlyUml4TFFVRkJRU3hEUVVGTldDeEpRVUZCUVN4RFFVRkxMSEZDUVVGQkxFTkJRVUVzUTBGQlFTeEZRVU12UW5aRkxFMUJRVUZCTEVOQlFVOXJSaXhMUVVGQlFTeERRVUZOV0N4SlFVRkJRU3hEUVVGTExIRkNRVUZCTEVOQlFVRXNRMEZCZFVJeVJDeFRRVUZCUVN4RFFVRlZia2NzUzBGQlFVRXNSVUZCUVVFc1EwRkRMME1yUXl4TlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsSU0wVXNTVUZCUVVFc1EwRkJTMjlJTEUxQlFVRkJMRU5CUVU5MlNDeE5RVUZCUVN4RFFVRlBhMFlzUzBGQlFVRXNRMEZCVFZnc1NVRkJRVUVzUTBGQlN5eHhRa0ZCUVN4RFFVRkJMRU5CUVVFc1JVRkRMMEoyUlN4TlFVRkJRU3hEUVVGUGEwWXNTMEZCUVVFc1EwRkJUVmdzU1VGQlFVRXNRMEZCU3l4eFFrRkJRU3hEUVVGQkxFTkJRWFZDTWtRc1UwRkJRVUVzUTBGQlZXNUhMRXRCUVVGQkxFVkJRVUZCTEVOQlF5OURLME1zVFVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZOVWl4SlFVRkpRU3hOUVVGQlFTeERRVUZUTEVsQlFVRXNRMEZEU2pORkxFbEJRVUZCTEVOQlFVdHZTQ3hOUVVGQlFTeERRVUZQZGtnc1RVRkJRVUVzUTBGQlQydEdMRXRCUVVGQkxFTkJRVTFZTEVsQlFVRkJMRU5CUVVzc2NVSkJRVUVzUTBGQlFTeERRVUZCTEVkQlF5OUNhMFFzVjBGQlFVRXNRMEZCWTNwSUxFMUJRVUZCTEVOQlFVOXJSaXhMUVVGQlFTeERRVUZOV0N4SlFVRkJRU3hEUVVGTExIRkNRVUZCTEVOQlFVRXNRMEZCZFVKNFF5eExRVUZCUVN4RFFVRkJRU3hEUVVkMFJEVkNMRWxCUVVGQkxFTkJRVXR2U0N4TlFVRkJRU3hEUVVGUGRrZ3NUVUZCUVVFc1EwRkJUMnRHTEV0QlFVRkJMRU5CUVUxWUxFbEJRVUZCTEVOQlFVc3NjVUpCUVVFc1EwRkJRU3hEUVVGQkxFZEJReTlDYlVRc1YwRkJRVUVzUTBGQll6RklMRTFCUVVGQkxFTkJRVTlyUml4TFFVRkJRU3hEUVVGTldDeEpRVUZCUVN4RFFVRkxMSEZDUVVGQkxFTkJRVUVzUTBGQmRVSjRReXhMUVVGQlFTeERRVUZCUVN4RFFVY3pSQ3hKUVVGTExFbEJRVWwyUWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVFpITEVsQlFVRkJMRU5CUVV0c1FpeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOc1F5eEpRVUZKSzBVc1NVRkJRVUVzUTBGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUTFocFF5eFJRVUZCUVN4RFFVRlhkRU1zUzBGQlFVRXNRMEZCVFhSRkxFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxHMURRVUZCUVN4RlFVRTRRMG9zUTBGQlFVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZMMFFzU1VGQlN5eEpRVUZKZVVnc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxVTEZGQlFVRkJMRU5CUVZOeVFpeE5RVUZCUVN4RFFVRlJPRUlzUTBGQlFVRXNSVUZCUVVFc1EwRkRha05VTEZGQlFVRkJMRU5CUVZOVExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRkxGTkJRVUZCTEVOQlFWVXNRMEZCUXl4VFFVRkJMRU5CUVVFc1EwRkJRU3hEUVU4elFpeEhRVXBKYUVrc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTF0Uml4WFFVRkJRU3hEUVVGQlFTeEZRVUYzUWl4RFFVRkJMRVZCUVZKdVF5eEpRVUZCUVN4RlFVRnBRbkJHTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5jVVVzVTBGQlFVRXNRMEZCVlRsQ0xFMUJRVUZCTEVOQlFVRkJMRWRCUTJwRlV5eEpRVUZCUVN4RFFVRlBjVUlzVTBGQlFVRXNRMEZCVlRsQ0xFMUJRVUZCTEVOQlFVODBReXhYUVVGQlFTeERRVUZoUml4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHlRM0pJTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5hMFlzVjBGQlFVRXNRMEZCUVVFc1JVRkJkMElzUTBGQlFTeEZRVUZTYkVNc1NVRkJRVUVzUTBGQlpTeERRVU14UTBFc1NVRkJRVUVzUTBGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUTFBc1NVRkJTeXhKUVVGSk1FTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsVUxGRkJRVUZCTEVOQlFWTnlRaXhOUVVGQlFTeERRVUZST0VJc1EwRkJRVUVzUlVGQlFVRXNRMEZEYWtNc1IwRkJTVlFzVVVGQlFVRXNRMEZCVTFNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpGSExGZEJRVUZCTEVOQlFWbERMRmRCUVVGQkxFVkJRVUZCTEVOQlFXTnJSU3hSUVVGQlFTeERRVUZUSzBJc1YwRkJRVUVzUTBGQldXcEhMRmRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVdkQ0xFTkJRek5GSzBRc1NVRkJRVUVzUTBGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUTFBc1MwRkJRU3hEUVVGQkxFTkJTMW9zUjBGQlNVRXNTVUZCUVVFc1EwRkRRU3hKUVVGTExFbEJRVWt3UXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVlFzVVVGQlFVRXNRMEZCVTNKQ0xFMUJRVUZCTEVOQlFWRTRRaXhEUVVGQlFTeEZRVUZCUVN4RFFVTnFRMVFzVVVGQlFVRXNRMEZCVTFNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjJ4RkxFZEJRVUZCTEVOQlFVa3NRMEZCUlRoQ0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJUWFpETVVZc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTF4UlN4VFFVRkJRU3hEUVVGVlF5eExRVUZCUVN4RFFVRkJRU3hIUVVOeVFqTkNMRXRCUVVGQkxFTkJRVTFyUkN4M1FrRkJRVUVzUTBGQmVVSXNkVUpCUVVFc1EwRkJlVUp3U0N4TFFVRkJRU3hGUVVGQlFTeERRVU53UkN4SlFVRkpjVWdzVFVGQlFVRXNRMEZCVTNKSUxFdEJRVUZCTEVOQlFVMXhTQ3hOUVVGQlFTeERRVU51UWl4SFFVRkpRU3hOUVVGQlFTeERRVUZQZUVZc1UwRkJRVUVzUTBGQlZYbEdMRkZCUVVGQkxFTkJRVk1zYjBKQlFVRXNRMEZCUVN4RFFVTjBRbTVKTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5jVVVzVTBGQlFVRXNRMEZCVlVNc1MwRkJRVUVzUTBGQlFVRXNSVUZEY2tKRUxGTkJRVUZCTEVOQlFWVkRMRXRCUVVGQkxFTkJRVTAzUml4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4TFFVZHVRaXhIUVVGSmNVZ3NUVUZCUVVFc1EwRkJUM2hHTEZOQlFVRkJMRU5CUVZWNVJpeFJRVUZCUVN4RFFVRlRMSGxDUVVGQkxFTkJRVUVzUlVGQlFTeERRVUVyUW01SkxFbEJRVUZCTEVOQlFVdHZTQ3hOUVVGQlFTeERRVUZQWXl4TlFVRkJRU3hEUVVGUFJTeFZRVUZCUVN4RFFVRlhMREJDUVVGQkxFTkJRVUVzUTBGQlFTeERRVUU0UWl4RFFVTnlTRVlzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVjVSaXhSUVVGQlFTeERRVUZUTEhsQ1FVRkJMRU5CUVVFc1IwRkRNMEpFTEUxQlFVRkJMRU5CUVZOQkxFMUJRVUZCTEVOQlFVOUZMRlZCUVVGQkxFTkJRVmNzTUVKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUlM5Q0xFbEJRVWsxUlN4UlFVRkJRU3hEUVVGWE1FVXNUVUZCUVVFc1EwRkJUM0JETEU5QlFVRkJMRU5CUVZGSkxFZEJRVUZCTEVOQlRUbENMRWRCU2tFeFJDeFBRVUZCUVN4RFFVRlJNRUlzVFVGQlFVRXNSVUZCUVVFc1EwRkRVblZFTEdsQ1FVRkJRU3hEUVVGclFtcEZMRkZCUVVGQkxFTkJRVUZCTEVOQlFWVkpMRWRCUVVGQkxFTkJRVWtzUTBGQlJVb3NVVUZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRVUVzUTBGQlFTeERRVU0xUTJsRkxHbENRVUZCUVN4RFFVRnJRbXBGTEZGQlFVRkJMRU5CUVVGQkxFTkJRVlZxUkN4TlFVRkJRU3hEUVVGUGFVTXNUMEZCUVVFc1EwRkJRVUVzUTBGRkwwSXpReXhOUVVGQlFTeERRVUZQYTBZc1MwRkJRVUVzUTBGQlRYSkRMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExHdENRVUZCTEVOQlFVRXNRMEZCY1VJc1EwRkRja1FzU1VGQlNXcERMRWRCUVVGQkxFTkJRVTF1UWl4TFFVRkJRU3hEUVVGTmRFVXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNiVU5CUVVGQkxFVkJRVGhESzBNc1VVRkJRVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZET1VRc1NVRkJTeXhKUVVGSmJrUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrMlJpeEhRVUZCUVN4RFFVRkpSaXhOUVVGQlFTeERRVUZSTTBZc1EwRkJRVUVzUlVGQlFVRXNRMEZETlVJMlJpeEhRVUZCUVN4RFFVRkpOMFlzUTBGQlFVRXNRMEZCUVVFc1EwRkJSM0ZETEZOQlFVRkJMRU5CUVZVeVJpeE5RVUZCUVN4RFFVRlBMREJDUVVGQkxFTkJRVUVzUTBGRk5VSTNSaXhQUVVGQlFTeERRVUZSTUVJc1RVRkJRVUVzUlVGQlFVRXNRMEZGU0dkRkxFMUJRVUZCTEVOQlFVOTRSaXhUUVVGQlFTeERRVUZWZVVZc1VVRkJRVUVzUTBGQlV5d3dRa0ZCUVN4RFFVRkJMRVZCUTI5RExFTkJRVUVzUlVGQk0wUm9RaXhYUVVGQlFTeERRVUZaTVVjc1QwRkJRVUVzUTBGQlVTd3lRa0ZCUVN4RFFVRkJMRU5CUVRaQ2RVWXNUVUZCUVVFc1JVRkRha1J1Unl4TlFVRkJRU3hEUVVGUGEwWXNTMEZCUVVFc1EwRkJUWEpETEZOQlFVRkJMRU5CUVZWM1FpeE5RVUZCUVN4RFFVRlBMR3RDUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVOXNSR0VzUzBGQlFVRXNRMEZCVFhWRUxFOUJRVUZCTEVOQlFWRjZTQ3hMUVVGQlFTeEZRVUZCUVN4RFFVTldMRWxCUVVseFNDeE5RVUZCUVN4RFFVRlRja2dzUzBGQlFVRXNRMEZCVFhGSUxFMUJRVUZCTEVOQlEyNUNMRWRCUVVseVNDeExRVUZCUVN4RFFVRk5NRWdzVVVGQlFVRXNRMEZCVnl4SFFVRkJMRWRCUTJKTUxFMUJRVUZCTEVOQlFVOTRSaXhUUVVGQlFTeERRVUZWZVVZc1VVRkJRVUVzUTBGQlV5eDVRa0ZCUVN4RFFVRkJMRVZCUVVFc1EwRkJLMEp1U1N4SlFVRkJRU3hEUVVGTGIwZ3NUVUZCUVVFc1EwRkJUMk1zVFVGQlFVRXNRMEZCVDBVc1ZVRkJRVUVzUTBGQlZ5d3dRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVFNFFpeERRVU5vU0VZc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExIbENRVUZCTEVOQlFVRXNSMEZETTBKRUxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVTlGTEZWQlFVRkJMRU5CUVZjc01FSkJRVUVzUTBGQlFTeERRVUZCTEVOQlJTOUNMRWxCUVVrMVJTeFJRVUZCUVN4RFFVRlhNRVVzVFVGQlFVRXNRMEZCVDNCRExFOUJRVUZCTEVOQlFWRkpMRWRCUVVGQkxFTkJSVGxDTEVkQlFTdEVMRU5CUVVFc1JVRkJNMFJwUWl4WFFVRkJRU3hEUVVGWk1VY3NUMEZCUVVFc1EwRkJVU3d5UWtGQlFTeERRVUZCTEVOQlFUWkNkVVlzVFVGQlFVRXNSVUZCUVVFc1EwRkJaMEp1Unl4TlFVRkJRU3hEUVVGUGEwWXNTMEZCUVVFc1EwRkJUWEpETEZOQlFVRkJMRU5CUVZWNVJpeFJRVUZCUVN4RFFVRlRMR3RDUVVGQkxFTkJRVUVzUTBGQmNVSXNRMEZEZEVoMFNTeE5RVUZCUVN4RFFVRlBhMFlzUzBGQlFVRXNRMEZCVFhKRExGTkJRVUZCTEVOQlFWVkRMRWRCUVVGQkxFTkJRVWtzYTBKQlFVRXNRMEZCUVN4RFFVTXpRaXhKUVVGSmRVUXNSMEZCUVVFc1EwRkJUVzVDTEV0QlFVRkJMRU5CUVUxMFJTeFBRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeHRRMEZCUVVFc1JVRkJPRU1yUXl4UlFVRkJRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU01UkN4SlFVRkxMRWxCUVVsdVJDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1RaR0xFZEJRVUZCTEVOQlFVbEdMRTFCUVVGQkxFTkJRVkV6Uml4RFFVRkJRU3hGUVVGQlFTeERRVU0xUWpaR0xFZEJRVUZCTEVOQlFVazNSaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhjVU1zVTBGQlFVRXNRMEZCVlVNc1IwRkJRVUVzUTBGQlNTd3dRa0ZCUVN4RFFVRkJMRU5CUlhwQ1NDeFBRVUZCUVN4RFFVRlJNRUlzVFVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZSYUVONFJTeFZRVUZCUVN4RFFVRlhSeXhOUVVGQlFTeERRVUZUTEVOQlFVVkxMRTlCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZKYjBVc1MwRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbFBMRTlCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZIVGl4UlFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGQlNXbEZMRkZCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZKUXl4UFFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlF6TkdMRWxCVjBsRExFbEJRVUZCTEVOQldFRkRMRWxCUVVGQkxFTkJRVTh6U1N4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUXpGQ1F5eFBRVUZCUVN4RFFVRlRUQ3hOUVVGQlFTeERRVUZQU3l4UFFVRkJRU3hGUVVGWExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXVTRzVFVGQlFVRXNRMEZCVDAwc1ZVRkJRVUVzUTBGQldXdERMRkZCUVVGQkxFTkJRVlVzUTBGRGVFVXNRMEZCUlc1RExFOUJRVUZCTEVOQlFWTXNTVUZCUVN4RFFVRk5ReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzYTBKQlFVRXNRMEZCUVN4RFFVRnpRa2tzU1VGQlFVRXNRMEZCVFZnc1RVRkJRVUVzUTBGQlQzbEZMRXRCUVVGQkxFTkJRVUZCTEVOQlEzcEZMRU5CUVVWd1JTeFBRVUZCUVN4RFFVRlRMRk5CUVVFc1EwRkJWME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEhGQ1FVRkJMRU5CUVhWQ0swTXNTMEZCUVVFc1EwRkJUeXhEUVVGRmQwTXNiVUpCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRTlCUVVGQkxFVkJRU3RDT1VZc1RVRkJRVUVzUTBGQlQyZEdMRTlCUVVGQkxFTkJRVUZCTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRMnBJTEVOQlFVVXpSU3hQUVVGQlFTeERRVUZUTEZOQlFVRXNRMEZCVjBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHOUNRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVsdVJIVkpMRWxCUVVGQkxFTkJRVXRxUnl4VFFVRkJRU3hEUVVGVlF5eEhRVUZCUVN4RFFVRkpMRmxCUVVFc1EwRkJRU3hEUVVWbU0wTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBLMGtzVFVGQlFVRXNRMEZCUVVFc1JVRkJVeTlKTEUxQlFVRkJMRU5CUVU4clNTeE5RVUZCUVN4RFFVRlBja2tzVFVGQlFVRXNRMEZCVDI5SkxFbEJRVUZCTEVOQlFVRkJMRU5CUlhCRUxFbEJRVWxGTEZsQlFVRkJMRU5CUVdWR0xFbEJRVUZCTEVOQlFVdDJSU3hKUVVGQlFTeERRVUZMTEhOQ1FVRkJMRU5CUVVFc1EwRkZOMElzU1VGQlN5eEpRVUZKTUVVc1IwRkJRVUVzU1VGQlQycEtMRTFCUVVGQkxFTkJRVTh3UlN4UlFVRkJRU3hEUVVGVkxFTkJRemRDYlVVc1NVRkJRVUVzUTBGQlVURkpMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmRrTXNUVUZCUVVFc1EwRkJUekJGTEZGQlFVRkJMRU5CUVZOMVJTeEhRVUZCUVN4RFFVRkJRU3hEUVVGTFNpeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGaE4wa3NUVUZCUVVFc1EwRkJUekJGTEZGQlFVRkJMRU5CUVZOMVJTeEhRVUZCUVN4RFFVRkJRU3hEUVVGTFNpeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkRjRVlzU1VGQlNVc3NVMEZCUVVFc1EwRkJXV3hLTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVRlRkVVVzUjBGQlFVRXNRMEZCUVVFc1EwRkJTelZITEV0QlFVRkJMRVZCUVZOc1F5eEpRVUZCUVN4RFFVRkxaMG9zWjBKQlFVRkJMRU5CUVdsQ1JpeEhRVUZCUVN4RFFVRkJRU3hEUVVGTGVrZ3NWMEZCUVVFc1JVRkJRVUVzUTBGRGNrVTBTQ3hMUVVGQlFTeERRVUZSU2l4WlFVRkJRU3hEUVVGaE9VWXNWMEZCUVVFc1EwRkJXU3hEUVVOcVF6ZERMRTlCUVVGQkxFTkJRVk1zUzBGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c01rSkJRVUVzUTBGQlFTeERRVUVyUW1sRExGRkJRVUZCTEVOQlFWVXNRMEZETVVVc1EwRkJSVzVETEU5QlFVRkJMRU5CUVZNc1QwRkJRU3hEUVVGVE1rSXNTVUZCUVVFc1EwRkJUV3RJTEZOQlFVRkJMRU5CUVZjMVNTeFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNhMEpCUVVFc1EwRkJiMEk0U1N4SFFVRkJRU3hEUVVGTFNpeEhRVUZCUVN4RFFVRkpla2dzVjBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKTTBaakxFbEJRVUZCTEVOQlFVODRSeXhMUVVGQlFTeERRVUZOYkVjc1YwRkJRVUVzUTBGQldXeEVMRTFCUVVGQkxFTkJRVTh3UlN4UlFVRkJRU3hEUVVGVGRVVXNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZETjBNelJ5eEpRVUZCUVN4RFFVRkxUeXhUUVVGQlFTeERRVUZWUXl4SFFVRkJRU3hEUVVGSkxHbENRVUZCTEVOQlFVRXNRMEZEWmpORExFbEJRVUZCTEVOQlFVdHZReXhMUVVGQlFTeERRVUZOZGtNc1RVRkJRVUVzUTBGQlR6QkZMRkZCUVVGQkxFTkJRVk4xUlN4SFFVRkJRU3hEUVVGQlFTeERRVUZMU2l4SlFVRkJRU3hEUVVGQlFTeEZRVUZQVHl4TFFVRkJRU3hEUVVGTmJFY3NWMEZCUVVFc1EwRkJXU3hEUVVGRk4wTXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZOTEVsQlFVRkJMRU5CUVUxWUxFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVUZUZFVVc1IwRkJRVUVzUTBGQlFVRXNRMEZCUzBvc1NVRkJRVUVzUTBGQlRYWkpMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhwUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVnNTVW9zU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMTJReXhOUVVGQlFTeERRVUZQTWtrc1VVRkJRVUVzUTBGQlFVRXNSVUZCWVROSkxFMUJRVUZCTEVOQlFVOHlTU3hSUVVGQlFTeERRVUZUYWtRc1VVRkJRVUVzUTBGQlUzVkVMRWRCUVVGQkxFTkJRVUZCTEVkQlEzaEVNMGNzU1VGQlFVRXNRMEZCUzNGSExGRkJRVUZCTEVOQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVGQkxFTkJTWGhDTEVsQlFVc3NTVUZCU1Uwc1IwRkJRVUVzU1VGQlQycEtMRTFCUVVGQkxFTkJRVTgwU1N4UFFVRkJRU3hEUVVOdVFrVXNTVUZCUVVFc1EwRkJTM1pGTEVsQlFVRkJMRU5CUVVzc2NVSkJRVUVzUTBGQlFTeERRVUYxUW5KQ0xGZEJRVUZCTEVOQlFWbHNSQ3hOUVVGQlFTeERRVUZQTkVrc1QwRkJRVUVzUTBGQlVVc3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMYUVVc1QwRkdRVWdzU1VGQlFVRXNRMEZCU3pWR0xGZEJRVUZCTEVOQlFWa3NRMEZCUlRkRExFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzYTBKQlFVRXNRMEZCUVN4RFFVRnpRaXRKTEV0QlFVRkJMRU5CUVU4c1EwRkJSWHBJTEVsQlFVRkJMRU5CUVUwc1QwRkJRU3hEUVVGVE1FZ3NTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJWMVFzU1VGQlFVRXNRMEZCU3pOSExFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSV2hJTWtjc1NVRkJRVUVzUTBGSFdHcEtMRTFCUVVGQkxFTkJRVTlITEUxQlFVRkJMRU5CUVZNc1EwRkJSWGxGTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlF5eFJRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJRU3hEUVVGTk9FVXNVVUZCUVVFc1JVRkJXWGhKTEV0QlFVRkJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRM0pFTEVsQlFVbDVTU3hOUVVGQlFTeERRVUZUZEVvc1NVRkJRVUVzUTBGQlMwTXNZVUZCUVVFc1EwRkJZeXhEUVVNMVFrTXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVTlETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4alFVRkJMRU5CUVVFc1EwRkJhMEpwUXl4UlFVRkJRU3hEUVVGVkxFTkJRemRFTEVOQlFVVnVReXhQUVVGQlFTeERRVUZUTEVsQlFVRXNRMEZCVFVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHOUNRVUZCTEVOQlFVRXNRMEZCZDBKSkxFbEJRVUZCTEVOQlFVMVlMRTFCUVVGQkxFTkJRVTk1UlN4TFFVRkJRU3hGUVVGVExFVkJRVUVzUTBGQlFTeERRVU53Uml4RFFVRkZjRVVzVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eDFRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSkwwTXNTVUZCU3l4SlFVRkpORVVzVDBGQlFVRXNTVUZCVjI1R0xFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVU4yUWl0RkxFMUJRVUZCTEVOQlFVOXNSaXhKUVVGQlFTeERRVUZMTEhkQ1FVRkJMRU5CUVVFc1EwRkJNRUp5UWl4WFFVRkJRU3hEUVVGWkxFTkJRVVUzUXl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMSEZDUVVGQkxFTkJRWFZDSzBVc1YwRkJRVUVzUTBGQllVZ3NUMEZCUVVFc1EwRkJRVUVzUTBGQlYzaEZMRWxCUVVGQkxFTkJRVTEzUlN4UFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFWTnVTaXhQUVU1QmMwVXNUVUZCUVVFc1EwRkJUekZKTEdkQ1FVRkJRU3hEUVVGcFFpeFZRVUZCTEVOQlFWbERMRXRCUVVGQkxFVkJRVUZCTEVOQlF6VkNRU3hMUVVGQlFTeERRVUZOY1Vnc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExIRkNRVUZCTEVOQlFVRXNSVUZEYUVOclFpeFJRVUZCUVN4RFFVRlRlRWtzUzBGQlFVRXNRMEZCVFhGSUxFMUJRVUZCTEVOQlFVOXdReXhQUVVGQlFTeERRVUZSY0VVc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSkwwSTBTQ3hOUVVGQlFTeERRVWRZTlVvc1MwRkJRVUVzUTBGQlRYTkdMRTlCUVVGQkxFTkJRVk51Uml4TlFVRkJRU3hEUVVGVExFTkJRVVY1UlN4TFFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlNXNUZMRlZCUVVGQkxFTkJRVmtzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZETjBNc1NVRkJTVzlLTEZOQlFVRkJMRU5CUVZreFNpeE5RVUZCUVN4RFFVRlBNRW9zVTBGQlFVRXNSVUZCWVVNc1VVRkJRVUVzUTBGQlUyNUdMRWxCUVVGQkxFTkJRM3BEUXl4TFFVRkJRU3hEUVVGUmVrVXNUVUZCUVVFc1EwRkJUM2xGTEV0QlFVRkJMRVZCUVZNc1JVRkJRU3hEUVVVMVFucEZMRTFCUVVGQkxFTkJRVTlOTEZWQlFVRkJMRU5CUVdGT0xFMUJRVUZCTEVOQlFVOU5MRlZCUVVGQkxFVkJRV01zUlVGQlFTeERRVU42UTA0c1RVRkJRVUVzUTBGQlQwMHNWVUZCUVVFc1EwRkJWMmRFTEV0QlFVRkJMRU5CUVZGMFJDeE5RVUZCUVN4RFFVRlBUU3hWUVVGQlFTeERRVUZYWjBRc1MwRkJRVUVzUlVGQlV5eEZRVUZCTEVOQlEzSkVkRVFzVFVGQlFVRXNRMEZCVDAwc1ZVRkJRVUVzUTBGQlYyZEVMRXRCUVVGQkxFTkJRVTFITEV0QlFVRkJMRU5CUVZGNlJDeE5RVUZCUVN4RFFVRlBUU3hWUVVGQlFTeERRVUZYWjBRc1MwRkJRVUVzUTBGQlRVY3NTMEZCUVVFc1JVRkJVeXhOUVVGQkxFTkJRMnBGZWtRc1RVRkJRVUVzUTBGQlQwMHNWVUZCUVVFc1EwRkJWMmRFTEV0QlFVRkJMRU5CUVUxSkxFMUJRVUZCTEVOQlFWTXhSQ3hOUVVGQlFTeERRVUZQVFN4VlFVRkJRU3hEUVVGWFowUXNTMEZCUVVFc1EwRkJUVWtzVFVGQlFVRXNSVUZCVlN4TlFVRkJMRU5CUlc1RkxFbEJRVWxyUnl4TFFVRkJRU3hEUVVGUmVrb3NTVUZCUVVFc1EwRkJTME1zWVVGQlFVRXNRMEZCWXl4RFFVTXpRa01zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eGpRVUZCTEVOQlFVRXNRMEZCYTBKcFF5eFJRVUZCUVN4RFFVRlZMRU5CUXpkRUxFTkJRMGx1UXl4UFFVRkJRU3hEUVVGVExFdEJRVUVzUTBGQlQwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3hsUVVGQkxFTkJRV2xDTlVJc1MwRkJRVUVzUTBGQlR5eHhRa0ZCUVN4RFFVRkJMRU5CUVhsQ2FVTXNVVUZCUVVFc1EwRkJWU3hEUVVONlJpeERRVU5KYmtNc1QwRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOURMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzWVVGQlFTeERRVUZsTlVJc1MwRkJRVUVzUTBGQlR5eHRRa0ZCUVN4RFFVRkJMRU5CUVhWQ2FVTXNVVUZCUVVFc1EwRkJWU3hEUVVOeVJpeERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdERMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKYlVJc1MwRkJRVUVzUTBGQlR5eERRVUZGZFVjc1MwRkJRVUVzUTBGQlR5eFRRVUZCTEVOQlFWY3ZSaXhQUVVGQlFTeERRVUZUTEV0QlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZkdVJDeEpRVUZCUVN4RFFVRk5PRVFzUzBGQlFVRXNRMEZCUVVFc1EwRkRNMFlzUTBGQlJYQkZMRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVUyUWl4RlFVRkJRU3hEUVVGSkxHVkJRVUVzUTBGQmFVSTFRaXhMUVVGQlFTeERRVUZQTEhkRFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNeFJDeERRVUZGUml4UFFVRkJRU3hEUVVGVExFZEJRVUVzUTBGQlMwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3hqUVVGQkxFTkJRV2RDTlVJc1MwRkJRVUVzUTBGQlR5eHRRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSMnBGTEVOQlEwbEdMRTlCUVVGQkxFTkJRVk1zUzBGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVUyUWl4RlFVRkJRU3hEUVVGSkxHZENRVUZCTEVOQlFXdENOVUlzUzBGQlFVRXNRMEZCVHl4elFrRkJRU3hEUVVGQkxFTkJRVEJDYVVNc1VVRkJRVUVzUTBGQlZTeERRVU16UmpKRExFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CTWtKNFFpeFBRVzVDUVhsRkxFdEJRVUZCTEVOQlFVMXlSaXhKUVVGQlFTeERRVUZMTEdkQ1FVRkJMRU5CUVVFc1EwRkJhMEoxUml4aFFVRkJRU3hEUVVGak9Vb3NUVUZCUVVFc1EwRkJUMDBzVlVGQlFVRXNRMEZCUVVFc1EwRkZiRVJ6U2l4TFFVRkJRU3hEUVVGTmNrWXNTVUZCUVVFc1EwRkJTeXhuUWtGQlFTeERRVUZCTEVOQlFXdENlRVFzWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlUwTXNTMEZCUVVFc1JVRkJRVUVzUTBGRGJrUTBTU3hMUVVGQlFTeERRVUZOY2tZc1NVRkJRVUVzUTBGQlN5eG5Ra0ZCUVN4RFFVRkJMRU5CUVd0Q01VSXNVMEZCUVVFc1EwRkJWVEpHTEUxQlFVRkJMRU5CUVU4c1pVRkJRU3hEUVVGQkxFTkJRemxEYjBJc1MwRkJRVUVzUTBGQlRYSkdMRWxCUVVGQkxFTkJRVXNzWjBKQlFVRXNRMEZCUVN4RFFVRnJRakZDTEZOQlFVRkJMRU5CUVZVeVJpeE5RVUZCUVN4RFFVRlBMR2xDUVVGQkxFTkJRVUVzUTBGRk1VTnZRaXhMUVVGQlFTeERRVUZOY2tZc1NVRkJRVUVzUTBGQlN5eG5Ra0ZCUVN4RFFVRkJMRU5CUVd0Q01VSXNVMEZCUVVFc1EwRkJWWGxHTEZGQlFVRkJMRU5CUVZNc1pVRkJRU3hEUVVGQkxFTkJRMmhFYzBJc1MwRkJRVUVzUTBGQlRYSkdMRWxCUVVGQkxFTkJRVXNzWjBKQlFVRXNRMEZCUVN4RFFVRnJRbElzUjBGQlFVRXNRMEZCU1N4RFFVRkZUQ3hOUVVGQlFTeERRVUZSTVVRc1RVRkJRVUVzUTBGQlQwMHNWVUZCUVVFc1EwRkJWMmRFTEV0QlFVRkJMRU5CUVUxSkxFMUJRVUZCTEVOQlFWRkVMRXRCUVVGQkxFTkJRVTk2UkN4TlFVRkJRU3hEUVVGUFRTeFZRVUZCUVN4RFFVRlhaMFFzUzBGQlFVRXNRMEZCVFVjc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhNVWR0Unl4TFFVRkJRU3hEUVVGTmNrWXNTVUZCUVVFc1EwRkJTeXhuUWtGQlFTeERRVUZCTEVOQlFXdENVaXhIUVVGQlFTeERRVUZKTEVOQlFVVk1MRTFCUVVGQkxFTkJRVkVzYjBKQlFVRXNRMEZCYzBKRUxFdEJRVUZCTEVOQlFVOHNiMEpCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWxvUm0xSExFdEJRVUZCTEVOQlFVMXlSaXhKUVVGQlFTeERRVUZMTEdWQlFVRXNRMEZCUVN4RFFVRnBRbmhFTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTkRMRXRCUVVGQkxFVkJRVUZCTEVOQlEyeEVORWtzUzBGQlFVRXNRMEZCVFhaR0xFMUJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIxWnhSaXhUUVVGQlFTeERRVUZWYUVvc1RVRkJRVUVzUTBGQlQydEtMRXRCUVVGQkxFTkJRVUZCTEVOQlExWkJMRXRCUVVGQkxFTkJSMWd2U2l4WlFVRkJRU3hEUVVGaFJ5eE5RVUZCUVN4RFFVRlRMRU5CUVVVclFpeExRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJTVEpETEZGQlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVGSmNVWXNVVUZCUVVFc1EwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjJSQ3hKUVVkSlF5eE5RVUZCUVN4RFFVaEJkRWdzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTFoMVNDeGhRVUZCUVN4RFFVRkJRU3hEUVVGblFpeERRVUZCTEVOQlEyaENReXhqUVVGQlFTeERRVUZCUVN4RFFVRnJRaXhEUVVGQkxFTkJTV3hDUXl4TlFVRkJRU3hEUVVGVGFFc3NTVUZCUVVFc1EwRkJTME1zWVVGQlFVRXNRMEZCWXl4RFFVTTFRa01zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWbE9MRTFCUVVGQkxFTkJRVTlOTEZWQlFVRkJMRU5CUVZsclF5eFJRVUZCUVN4RFFVRlZMRU5CUTNKRUxFTkJRMGx1UXl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMSE5DUVVGQkxFTkJRVUVzUTBGQk1rSnBReXhSUVVGQlFTeERRVUZWTEVOQlEzWkZMRU5CUVVWdVF5eFBRVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEc5Q1FVRkJMRU5CUVhOQ2QwSXNTMEZCUVVFc1EwRkJUeTlDTEUxQlFVRkJMRU5CUVU4clFpeExRVUZCUVN4RlFVRlRMRVZCUVVFc1EwRkJTWEZKTEUxQlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEYkVjc1EwRkRTUzlLTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNjVUpCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWxzUkN4RFFVRkZSaXhQUVVGQlFTeERRVUZUTEU5QlFVRXNRMEZCVTBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExIRkNRVUZCTEVOQlFYVkNNa1lzVjBGQlFVRXNRMEZCWVN4alFVRkJMRU5CUVdkQ2EwVXNUVUZCUVVFc1EwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnlSeXhEUVVOSkwwb3NUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4MVFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZKYkVRMFNpeE5RVUZCUVN4RFFVRlBkRWdzVTBGQlFVRXNRMEZCVlVNc1IwRkJRVUVzUTBGQlNTeGpRVUZCTEVOQlFVRXNRMEZEY2tJc1NVRkJTWFZJTEZGQlFVRkJMRU5CUVZkR0xFMUJRVUZCTEVOQlFVOUhMRmxCUVVGQkxFTkJRV0VzVDBGQlFTeERRVUZCTEVOQlEyNURTQ3hOUVVGQlFTeERRVUZQY0Vrc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlExWTFRaXhKUVVGQlFTeERRVUZMYjBnc1RVRkJRVUVzUTBGQlR6aERMRkZCUVVGQkxFTkJRVUZCTEVkQlEySkdMRTFCUVVGQkxFTkJRVTl3U1N4TFFVRkJRU3hEUVVGUk5VSXNTVUZCUVVFc1EwRkJTMjlMTEV0QlFVRkJMRU5CUVUwelNpeFBRVUZCUVN4RFFVRlJlVW9zVVVGQlFVRXNRMEZCVTBjc1MwRkJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVRXNRMEZCVFVNc1EwRkJRVUVzUlVGRGFFTXNSVUZCUVN4RlFVRmFRU3hEUVVGQlFTeERRVUZGUXl4SlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVscVFsQXNUVUZCUVVFc1EwRkJUMnhGTEU5QlFVRkJMRU5CUVZFclJDeE5RVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkZlRUlzU1VGQlNYUkdMRkZCUVVGQkxFTkJRVmQ1Uml4TlFVRkJRU3hEUVVGUE5VWXNTVUZCUVVFc1EwRkJTeXgzUWtGQlFTeERRVUZCTEVOQlEzWkNiMGNzUzBGQlFVRXNRMEZCVVZJc1RVRkJRVUVzUTBGQlR6VkdMRWxCUVVGQkxFTkJRVXNzY1VKQlFVRXNRMEZCUVN4RFFVTndRazBzVFVGQlFVRXNRMEZCVTNOR0xFMUJRVUZCTEVOQlFVODFSaXhKUVVGQlFTeERRVUZMTEhOQ1FVRkJMRU5CUVVFc1EwRkRja0pwUlN4TlFVRkJRU3hEUVVGVE1rSXNUVUZCUVVFc1EwRkJUelZHTEVsQlFVRkJMRU5CUVVzc2MwSkJRVUVzUTBGQlFTeERRVWQ2UWl4SFFVWkJka1VzVFVGQlFVRXNRMEZCVHpCRkxGRkJRVUZCTEVOQlFWY3hSU3hOUVVGQlFTeERRVUZQTUVVc1VVRkJRVUVzUlVGQldTeEZRVUZCTEVOQlJXcERhMGNzUzBGQlFVRXNRMEZCVFVNc1QwRkJRVUVzUTBGQlVUZExMRTFCUVVGQkxFTkJRVTh3UlN4UlFVRkJRU3hEUVVGQlFTeERRVUZYTEVOQlEyaERMRWxCUVVsdlJ5eExRVUZCUVN4RFFVRlJPVXNzVFVGQlFVRXNRMEZCVHpCRkxGRkJRVUZCTEVOQlEyNUNNVVVzVFVGQlFVRXNRMEZCVHpCRkxGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVTnNRaXhKUVVGTExFbEJRVWxzUlN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWE5MTEV0QlFVRkJMRU5CUVUwelJTeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkRPVUpTTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVRlRiMGNzUzBGQlFVRXNRMEZCVFhSTExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVTF6U3l4TFFVRkJRU3hEUVVGTmRFc3NRMEZCUVVFc1EwRkJRVUVzUTBGSk1VTXNTVUZCU3l4SlFVRkpRU3hEUVVGQlFTeEpRVUZMVWl4TlFVRkJRU3hEUVVGUE1FVXNVVUZCUVVFc1EwRkJWU3hEUVVNelFpeEpRVUZKZFVNc1RVRkJRVUVzUTBGQlUzWkRMRkZCUVVGQkxFTkJRVk40UWl4WFFVRkJRU3hEUVVGWkxFTkJRVVUzUXl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMSEZDUVVGQkxFTkJRWFZDZDBJc1MwRkJRVUVzUTBGQlQzWkNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRM2hIZVVjc1RVRkJRVUVzUTBGQlQycEZMRk5CUVVGQkxFTkJRVmxvUkN4TlFVRkJRU3hEUVVGUE1FVXNVVUZCUVVFc1EwRkJVMnhGTEVOQlFVRkJMRU5CUVVGQkxFTkJRMjVEZVVjc1RVRkJRVUVzUTBGQlQyeEdMRXRCUVVGQkxFTkJRVkYyUWl4RFFVRkJRU3hEUVVkdVFpeEpRVUZMTEVsQlFVbHBTeXhEUVVGQlFTeEpRVUZMVGl4TlFVRkJRU3hEUVVGUGNFa3NTMEZCUVVFc1EwRkRha0kwU1N4TFFVRkJRU3hEUVVGTk5Va3NTMEZCUVVFc1JVRkJVeTlDTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVRlRLMFlzUTBGQlFVRXNRMEZCUVVFc1EwRkRMMEpGTEV0QlFVRkJMRU5CUVUxSkxHRkJRVUZCTEVOQlFXTXNTVUZCU1VNc1YwRkJRVUVzUTBGQldTeFJRVUZCTEVOQlFVRXNRMEZCUVN4RFFVbDRReXhKUVVGSlF5eE5RVUZCUVN4RFFVRkJRU3hEUVVGWE9Vc3NTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBLMG9zVVVGQlFVRXNRMEZCUVVFc1JVRkJaME1zUTBGQlFTeEZRVUZ1UWk5S0xFMUJRVUZCTEVOQlFVOHJTaXhSUVVGQlFTeERRVVZxUkhCSUxFOUJRVUZCTEVOQlFWVjNTQ3hOUVVGQlFTeERRVUZQZGtvc1QwRkJRVUVzUTBGQlVTeHpRa0ZCUVN4RFFVRkJMRU5CUnpkQ2FVVXNUVUZCUVVFc1EwRkJUM0ZFTEZOQlFVRkJMRU5CUVZWdVJ5eExRVUZCUVN4RlFVRkJRU3hEUVVOaUxFbEJRVXNzU1VGQlNYWkNMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmJVTXNUMEZCUVVFc1EwRkJVWGRFTEUxQlFVRkJMRU5CUVZFelJpeERRVUZCUVN4RlFVRkJRU3hEUVVNelFtMURMRTlCUVVGQkxFTkJRVkZ1UXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIWlN4WFFVRkJRU3hEUVVGWlF5eFhRVUZCUVN4RlFVRkJRU3hEUVVGamEwVXNVVUZCUVVFc1EwRkJVek5FTEV0QlFVRkJMRU5CUVUxUUxGZEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJTWEpFYlVJc1QwRkJRVUVzUTBGQlVXNURMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3lTQ3hUUVVGQlFTeERRVUZWTEVOQlFVTXNVMEZCUVN4RFFVRkJMRU5CUVVFc1EwRklkRUo0Uml4UFFVRkJRU3hEUVVGUmJrTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIzVkVMRWRCUVVGQkxFTkJRVWtzUTBGQlJUaENMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CVTNSRExFbEJiME5aYWtNc1IwRkJRVUVzUTBGQlMzTklMRTFCUVVGQkxFTkJjRU5pUXl4UlFVRkJRU3hEUVVGWGJrc3NTMEZCUVVFc1JVRkJRVUVzUTBGRFdHbEtMR0ZCUVVGQkxFTkJRVUZCTEVOQlFXZENMRU5CUVVFc1EwRkRReXhYUVVGQkxFVkJRV0pxU2l4TFFVRkJRU3hEUVVGTmFVa3NSMEZCUVVFc1JVRkJjMEpwUWl4alFVRkJRU3hEUVVGcFFuWklMRTlCUVVGQkxFTkJRVkYzUkN4TlFVRkJRU3hEUVVGVExFTkJRVUVzUlVGRE9VUXJSQ3hqUVVGQlFTeEZRVUZCUVN4RFFVTkJSQ3hoUVVGQlFTeERRVUZCUVN4RFFVRm5RaXhEUVVGQkxFVkJSVVVzVTBGQlFTeEZRVUZpYWtvc1MwRkJRVUVzUTBGQlRXbEpMRWRCUVVGQkxFVkJRVzlDYVVJc1kwRkJRVUVzUTBGQmFVSXNRMEZCUVN4RlFVTm9SRUVzWTBGQlFVRXNSVUZCUVVFc1EwRkRRVVFzWVVGQlFVRXNRMEZCUVVFc1EwRkJaMElzUTBGQlFTeEZRVVZZYWtvc1MwRkJRVUVzUTBGQlRXbEpMRWRCUVVGQkxFTkJTVmhuUWl4aFFVRkJRU3hIUVVOQlJDeE5RVUZCUVN4RFFVRlRkRVlzVVVGQlFVRXNRMEZCVTBnc1NVRkJRVUVzUTBGQlN5dzJRa0ZCUVN4RFFVRkJMRU5CUTJ4Q2NFVXNTVUZCUVVFc1EwRkJTMjlJTEUxQlFVRkJMRU5CUVU5NVF5eE5RVUZCUVN4RFFVRkJRU3hGUVVOaVFTeE5RVUZCUVN4RFFVRlBia2dzVTBGQlFVRXNRMEZCVlhkQ0xFMUJRVUZCTEVOQlFVOHNORUpCUVVFc1EwRkJRU3hEUVVjMVFqRkNMRTlCUVVGQkxFTkJRVkYxU0N4alFVRkJRU3hEUVVGQlFTeERRVUZuUW5KSUxGTkJRVUZCTEVOQlFWVkRMRWRCUVVGQkxFTkJRVWtzTkVKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkxPVU13Uml4TlFVRkJRU3hEUVVGUGVrZ3NaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZETjBJc1NVRkJTV2RLTEUxQlFVRkJMRU5CUVd0RExFMUJRVUVzUlVGQmVrSkhMRTFCUVVGQkxFTkJRVTlzUlN4UFFVRkJRU3hEUVVGUkswUXNUVUZCUVVFc1EwRkRlRUpCTEUxQlFVRkJMRU5CUTBGdlFpeFZRVUZCUVN4RFFVRlhjRUlzVFVGQlFVRXNRMEZCUVVFc1EwRkhXSEZDTEZGQlFVRkJMRU5CUVZOeVFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVMXFRa3dzVVVGQlFVRXNRMEZCVTI1R0xFbEJRVUZCTEVOQlFVdFVMRWRCUVVGQkxFTkJRVWtzUTBGQlJYVklMRkZCUVVGQkxFTkJRVlVzVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZGT1VJc1NVRkJTVU1zWVVGQlFVRXNRMEZCWjBJc1NVRkJRU3hEUVVOb1FqTklMRWRCUVVGQkxFTkJRVTExUnl4TlFVRkJRU3hEUVVGUGVFY3NVVUZCUVVFc1JVRkJRVUVzUTBGQlYwTXNSMEZCUVVFc1EwRkRlRUp6U0N4TlFVRkJRU3hEUVVGVGRrSXNVVUZCUVVFc1EwRkJVMjVHTEVsQlFVRkJMRU5CUVV0blNDeFpRVUZCUVN4RFFVRmxja0lzVFVGQlFVRXNRMEZCVDNoSExGRkJRVUZCTEVWQlFVRkJMRU5CUVZkRExFZEJRVUZCTEVOQlJYQkVRU3hIUVVGQlFTeERRVUZOYzBnc1RVRkJRVUVzUTBGRFRuaEhMRkZCUVVGQkxFTkJRVk5ZTEVkQlFVRkJMRU5CUVVrc1EwRkJSVWdzUjBGQlFVRXNRMEZCUVVFc1EwRkJUV01zVVVGQlFVRXNRMEZCVTJZc1VVRkJRVUVzUlVGQlFVRXNRMEZCVjBRc1RVRkJRVUVzUTBGQlV5eEpRVUZCTEVOQlFVRXNRMEZCUVN4RFFVZHNSR2RDTEZGQlFVRkJMRU5CUVZOWUxFZEJRVUZCTEVOQlFVa3NRMEZCUlVnc1IwRkJRVUVzUTBGQlMzVkhMRTFCUVVGQkxFTkJRVTk0Unl4UlFVRkJRU3hGUVVGQlFTeERRVUZYUkN4TlFVRkJRU3hEUVVGVExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZMYmtReVNDeFJRVUZCUVN4RFFVRlhMRWxCUVVFc1EwRkRVR3hDTEUxQlFVRkJMRU5CUVU5elFpeE5RVUZCUVN4RFFVRlBMRTFCUVVFc1EwRkJRU3hIUVVOa1pDeExRVUZCUVN4RFFVRk5OVW9zWjBKQlFVRkJMRU5CUVdsQ0xGTkJRVUVzUTBGQlYyOUxMRkZCUVVGQkxFTkJRVUZCTEVOQlFWVXNRMEZCUVN4RFFVRkJMRU5CUXpWRGRFY3NUVUZCUVVFc1EwRkJUMlFzUjBGQlFVRXNRMEZCU1N4RFFVRkZPRUlzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOMFFtNUNMRkZCUVVGQkxFTkJRVk5ZTEVkQlFVRkJMRU5CUVVrc1EwRkJSVGhDTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGVFSXdSaXhoUVVGQlFTeEZRVUZCUVN4RFFVTkJjRUlzVFVGQlFVRXNRMEZCVDJ4RkxFOUJRVUZCTEVOQlFWRXJSQ3hOUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCUVN4RFFVRkJMRU5CU3pWQ2IwSXNWVUZCUVVFc1EwRkJZU3hKUVVGQkxFTkJRMkpVTEV0QlFVRkJMRU5CUVUxbExHMUNRVUZCUVN4RFFVRnZRaXhUUVVGQkxFTkJRVmRRTEZGQlFVRkJMRU5CUVVGQkxFTkJRVlVzUTBGQlFTeERRVUZCTEVOQlF5OURkRWNzVFVGQlFVRXNRMEZCVDNORUxGTkJRVUZCTEVOQlFWVXNRMEZCUXl4VFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOc1FucEVMRkZCUVVGQkxFTkJRVk41UkN4VFFVRkJRU3hEUVVGVkxFTkJRVU1zVTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEY0VKblF5eE5RVUZCUVN4RFFVRlBiRVVzVDBGQlFVRXNRMEZCVVN0RUxFMUJRVUZCTEVOQlFWTXNUMEZCUVN4RFFVRkJMRU5CYzBZMVFpeFBRUzlFUVVjc1RVRkJRVUVzUTBGQlQzZENMRmxCUVVGQkxFTkJRV0VzVDBGQlFTeERRVUZUTTBzc1MwRkJRVUVzUlVGQlFVRXNRMEZMZWtJc1IwRktTVUVzUzBGQlFVRXNRMEZCVFhGSUxFMUJRVUZCTEVWQlFWVkhMRTFCUVVGQkxFVkJRVzFETEU5QlFVRXNSVUZCZWtJeVFpeE5RVUZCUVN4RFFVRlBiRVVzVDBGQlFVRXNRMEZCVVN0RUxFMUJRVUZCTEVWQlEzcERjVUlzVVVGQlFVRXNSVUZCUVVFc1EwRkhRWEpMTEV0QlFVRkJMRU5CUVUxeFNDeE5RVUZCUVN4RFFVRlBlRVlzVTBGQlFVRXNRMEZCVlhsR0xGRkJRVUZCTEVOQlFWTXNjVUpCUVVFc1EwRkJRU3hEUVVGM1FpeERRVU40UkN4SlFVRkpNMGdzU1VGQlFVRXNRMEZCVDFnc1RVRkJRVUVzUTBGQlR6QkZMRkZCUVVGQkxFTkJRVk14UkN4TFFVRkJRU3hEUVVGTmNVZ3NUVUZCUVVFc1EwRkJUM1JITEV0QlFVRkJMRU5CUVVGQkxFTkJRMnBDTEZGQlFVRXNSVUZCYmtJdlFpeE5RVUZCUVN4RFFVRlBLMG9zVVVGQlFVRXNSVUZEU0Zrc1MwRkJRVUVzUTBGQlRUVkpMRXRCUVVGQkxFTkJRVTB5UkN4UlFVRkJRU3hEUVVGVEwwVXNTVUZCUVVFc1EwRkJRVUVzUTBGRGNrSm5TeXhMUVVGQlFTeERRVUZOTlVrc1MwRkJRVUVzUTBGQlVUUkpMRXRCUVVGQkxFTkJRVTAxU1N4TFFVRkJRU3hEUVVGTk5rb3NUMEZCUVVFc1EwRkJVV3BNTEVsQlFVRkJMRU5CUVUwc1JVRkJRU3hEUVVGQkxFTkJUelZEWjBzc1MwRkJRVUVzUTBGQlRUVkpMRXRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRV053UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDRRbWRMTEV0QlFVRkJMRU5CUVUxSkxHRkJRVUZCTEVOQlFXTXNTVUZCU1VNc1YwRkJRVUVzUTBGQldTeFJRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVm9RME1zVFVGQlFVRXNSVUZEUVVjc1ZVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZOV21wQ0xFMUJRVUZCTEVOQlFVOHdRaXhsUVVGQlFTeERRVUZuUWl4UFFVRkJMRU5CUVZNM1N5eExRVUZCUVN4RlFVRkJRU3hEUVVORExFMUJRVUVzUlVGQmVrSnRTaXhOUVVGQlFTeERRVUZQYkVVc1QwRkJRVUVzUTBGQlVTdEVMRTFCUVVGQkxFVkJRMlp2UWl4VlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0U1ZDeExRVUZCUVN4RFFVRk5OVW9zWjBKQlFVRkJMRU5CUVdsQ0xGRkJRVUVzUTBGQlZVTXNTMEZCUVVFc1JVRkJRVUVzUTBGRE4wSXNTVUZCU1hsRkxFMUJRVUZCTEVOQlFWTnJSaXhMUVVGQlFTeERRVUZOTlVrc1MwRkJRVUVzUTBGQlRYbEpMRXRCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlJTOUNMMFVzVFVGQlFVRXNRMEZCVTNSR0xFbEJRVUZCTEVOQlFVdHZTeXhMUVVGQlFTeERRVUZOTTBvc1QwRkJRVUVzUTBGQlVUWkZMRTFCUVVGQkxFTkJRVkV4UkN4TFFVRkJRU3hGUVVOVUxFVkJRVUVzUlVGQmFFSkJMRXRCUVVGQkxFTkJRVTB5U1N4SlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVZHFRbXBHTEUxQlFVRkJMRU5CUVZOMFJpeEpRVUZCUVN4RFFVRkxiMHNzUzBGQlFVRXNRMEZCVFhWQ0xFbEJRVUZCTEVOQlFVdHlSeXhOUVVGQlFTeERRVUZSTVVRc1MwRkJRVUVzUlVGRGRFSkJMRXRCUVVGQkxFTkJRVTB5U1N4SlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVZGFUeXhOUVVGQlFTeEZRVU56UWl4UlFVRkJMRVZCUVc1Q2Frd3NUVUZCUVVFc1EwRkJUeXRLTEZGQlFVRkJMRWRCUTFCMFJTeE5RVUZCUVN4RFFVRlRkRVlzU1VGQlFVRXNRMEZCUzI5TExFdEJRVUZCTEVOQlFVMTNRaXhMUVVGQlFTeERRVUZOZEVjc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnVSWHBDTEVOQlFVTkJMRTFCUVVGQkxFVkJRVUZCTEVOQlExWXZReXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEV0N0RExFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVThyUlN4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVU4wUWl4SlFVRkxMRWxCUVVsNlNTeExRVUZCUVN4SlFVRlRNRVFzVFVGQlFVRXNRMEZCVVN4RFFVTjBRakZFTEV0QlFVRkJMRU5CUVZGQkxFdEJRVUZCTEVOQlFVMHlTU3hKUVVGQlFTeEZRVUZCUVN4RFFVTmtMRWxCUVVzc1NVRkJTV3hMTEVOQlFVRkJMRWxCUVV0U0xFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVU5pTVVVc1RVRkJRVUVzUTBGQlR6QkZMRkZCUVVGQkxFTkJRVk5zUlN4RFFVRkJRU3hEUVVGQlFTeEZRVUZOZFVJc1MwRkJRVUVzUjBGRGRFSkJMRXRCUVVGQkxFTkJRVkYyUWl4RFFVRkJRU3hEUVVGQlFTeERRVWxvUW10RExGRkJRVUZCTEVOQlFWTXlReXhKUVVGQlFTeERRVUZMZEVRc1MwRkJRVUVzUTBGQlFVRXNRMEZIYkVKdlNTeE5RVUZCUVN4RFFVRlBjRWtzUzBGQlFVRXNRMEZCVVZjc1VVRkJRVUVzUTBGRFptbEpMRXRCUVVGQkxFTkJRVTAxU1N4TFFVRkJRU3hEUVVGUk1FUXNUVUZCUVVFc1EwRkJRVUVzUlVGM1JHUkJMRTFCUVVGQkxFTkJRVk5CTEUxQlFVRkJMRU5CUVU5MVJ5eEpRVUZCUVN4RFFVRkxMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVXQ2UWtNc1RVRkJRVUVzUTBGQlQyeE1MR2RDUVVGQlFTeERRVUZwUWl4UlFVRkJMRU5CUVZWRExFdEJRVUZCTEVWQlFVRkJMRU5CUXpGQ2JVb3NUVUZCUVVFc1EwRkJUM05DTEUxQlFVRkJMRU5CUVU4c1RVRkJRU3hEUVVGQkxFVkJRMlJHTEdGQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1VSd1FpeE5RVUZCUVN4RFFVZFlkRXNzVFVGQlFVRXNRMEZCVDBjc1RVRkJRVUVzUTBGQlV5eERRVUZGTmtrc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVbHNSeXhQUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTJwRExFbEJRVWwxU2l4WlFVRkJRU3hEUVVGbEwwd3NTVUZCUVVFc1EwRkJTME1zWVVGQlFVRXNRMEZCWXl4RFFVTnNRME1zVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eGxRVUZCTEVOQlFVRXNRMEZCYlVKcFF5eFJRVUZCUVN4RFFVRlZMRU5CUXk5RUxFTkJRVVZ1UXl4UFFVRkJRU3hEUVVGVExFZEJRVUVzUTBGQlMwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRzlDUVVGQkxFTkJRVUVzUTBGQmQwSkpMRWxCUVVGQkxFTkJRVTFZTEUxQlFVRkJMRU5CUVU4MlNTeEpRVUZCUVN4RFFVRkJRU3hEUVVNeFJTeERRVUZGZUVrc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXgxUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZEZUVNc1EwRkJSVVlzVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NjVUpCUVVFc1EwRkJkVUkxUWl4TFFVRkJRU3hEUVVGUExFdEJRVUVzUTBGQlFTeERRVUZUU1N4SlFVRkJRU3hEUVVGTkxFOUJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVbDRSbmRNTEdGQlFVRkJMRU5CUVdkQ1JDeFpRVUZCUVN4RFFVRmhSU3hoUVVGQlFTeERRVUZqTEhkQ1FVRkJMRU5CUVVFc1EwRkZMME5HTEZsQlFVRkJMRU5CUVdGRkxHRkJRVUZCTEVOQlFXTXNjMEpCUVVFc1EwRkJRU3hEUVVGM1FuSk1MR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZORExFdEJRVUZCTEVWQlFVRkJMRU5CUTNwRmEwd3NXVUZCUVVFc1EwRkJZVGRJTEUxQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjJwQ0xFbEJRVXNzU1VGQlNUUkRMRTFCUVVGQkxFbEJRVlZxU0N4TlFVRkJRU3hEUVVGUE1rTXNUMEZCUVVFc1EwRkRkRUozU2l4aFFVRkJRU3hEUVVGamFrb3NWMEZCUVVFc1EwRkJXU3hEUVVOMFFqZERMRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c2JVSkJRVUVzUTBGQlFTeERRVUYxUWtrc1NVRkJRVUVzUTBGQlRYTkhMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1RkRkxFMUJRVThzUTBGRFNIQkNMRTlCUVVGQkxFTkJRVk54Unl4WlFVRkJRU3hEUVVGalJ5eE5RVUZCUVN4RFFVRlJMRWxCUVVsRExFOUJRVUZCTEVOQlFWRXNRMEZCUTBNc1QwRkJRVUVzUTBGQlUwTXNUVUZCUVVFc1IwRkJRVUVzUTBGRGFrUk1MR0ZCUVVGQkxFTkJRV053VEN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRReXhMUVVGQlFTeEZRVUZCUVN4RFFVTm9RMEVzUzBGQlFVRXNRMEZCVFhGSUxFMUJRVUZCTEVOQlFVOTRSaXhUUVVGQlFTeERRVUZWZVVZc1VVRkJRVUVzUTBGQlV5eGxRVUZCTEVOQlFVRXNSMEZEYUVOcFJTeFBRVUZCUVN4RFFVRlJka3dzUzBGQlFVRXNRMEZCVFhGSUxFMUJRVUZCTEVOQlFVODVSeXhYUVVGQlFTeERRVUZCUVN4RFFVTnlRakpMTEZsQlFVRkJMRU5CUVdFM1NDeE5RVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVU5cVEzaEZMRlZCUVVGQkxFTkJRVmRITEUxQlFVRkJMRU5CUVZNc1EwRkJSVzFETEVWQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGSmMwSXNTMEZCUVVFc1EwRkJUeXhYUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEycERla1FzVFVGQlFVRXNRMEZCVTBFc1RVRkJRVUVzUlVGQlZTeEZRVUZCTEVWQlExcHRReXhGUVVGQlFTeERRVUZMYmtNc1RVRkJRVUVzUTBGQlQyMURMRVZCUVVGQkxFVkJRVTBzWVVGQlFTeERRVU42UWl4SlFVRkpjMHNzVlVGQlFVRXNRMEZCWVhSTkxFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRV01zUTBGRGFFTkRMRTlCUVVGQkxFTkJRVk1zUzBGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWkxFTkJRM2hDTmtJc1JVRkJRVUVzUTBGQlNXNURMRTFCUVVGQkxFTkJRVTl0UXl4RlFVRkJRU3hEUVVGQlFTeERRVU5hU3l4UlFVRkJRU3hEUVVGVkxFTkJRMVFzUTBGRFNXNURMRTlCUVVGQkxFTkJRVk1zVDBGQlFTeERRVUZUVFN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4cFMwRkJRVUVzUlVGTFRGZ3NUVUZCUVVFc1EwRkJUM2xFTEV0QlFVRkJMRVZCUVZNc1lVRkJRU3hEUVVGQkxIYzVSRUZCUVN4RFFVRkJMRU5CUVVFc1EwRnhSR3BETEVOQlEwbHdSQ3hQUVVGQlFTeERRVUZUTEV0QlFVRXNRMEZCVDBNc1ZVRkJRVUVzUTBGQldTeERRVU40UWpaQ0xFVkJRVUZCTEVOQlFVa3NiVUpCUVVFc1EwRkJRU3hEUVVOTVN5eFJRVUZCUVN4RFFVRlZMRU5CUTFRc1EwRkRTVzVETEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUmJVTXNVVUZCUVVFc1EwRkJWU3hEUVVOMlFpeERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzV1VGQlFTeERRVUZqYzBNc1MwRkJRVUVzUTBGQlR5eE5RVUZCTEVOQlFVRXNRMEZCVlRsRUxFbEJRVUZCTEVOQlFVMHNVVUZCUVN4RFFVRkJMRU5CUXpWRkxFTkJRVVZPTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVVMlFpeEZRVUZCUVN4RFFVRkpMRmxCUVVFc1EwRkJZM05ETEV0QlFVRkJMRU5CUVU4c1RVRkJRU3hEUVVGQkxFTkJRVlU1UkN4SlFVRkJRU3hEUVVGTkxGRkJRVUVzUTBGQlFTeERRVU0xUlN4RFFVRkZUaXhQUVVGQlFTeERRVUZUTEZGQlFVRXNRMEZCVlVNc1ZVRkJRVUVzUTBGQldTeERRVUZGTmtJc1JVRkJRVUVzUTBGQlNTeGhRVUZCTEVOQlFVRXNRMEZCYVVKUkxFOUJRVUZCTEVOQlFWTjRReXhKUVVGQlFTeERRVUZMZFUwc1ZVRkJRVUVzUTBGQlFVRXNRMEZEZEVVc1EwRkJSWEpOTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVVMlFpeEZRVUZCUVN4RFFVRkpMR2xDUVVGQkxFTkJRVUVzUTBGQmNVSlJMRTlCUVVGQkxFTkJRVk40UXl4SlFVRkJRU3hEUVVGTGQwMHNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWNzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZEYmtZc1EwRkJSWFJOTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVVMlFpeEZRVUZCUVN4RFFVRkpMRzFDUVVGQkxFTkJRWEZDYzBNc1MwRkJRVUVzUTBGQlR5eGxRVUZCTEVOQlFVRXNRMEZCYlVJNVJDeEpRVUZCUVN4RFFVRk5MRXRCUVVFc1EwRkJRU3hEUVVNMVJpeERRVUZGVGl4UFFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3h4UWtGQlFTeERRVUYxUW5ORExFdEJRVUZCTEVOQlFVOHNaMEpCUVVFc1EwRkJRU3hEUVVGdlFqbEVMRWxCUVVGQkxFTkJRVTBzVVVGQlFTeERRVUZCTEVOQlF5OUdMRU5CUVVWT0xFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZReXhWUVVGQlFTeERRVUZaTEVOQlFVVTJRaXhGUVVGQlFTeERRVUZKTEZsQlFVRXNRMEZCWTNORExFdEJRVUZCTEVOQlFVOHNZVUZCUVN4RFFVRkJMRU5CUVdsQ09VUXNTVUZCUVVFc1EwRkJUU3hOUVVGQkxFTkJRVUVzUTBGRGJrWXNRMEZCUlU0c1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzWTBGQlFTeERRVUZuUW5ORExFdEJRVUZCTEVOQlFVOHNZVUZCUVN4RFFVRkJMRU5CUVdsQ09VUXNTVUZCUVVFc1EwRkJUU3hSUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJ6ZEdMRU5CUTBsT0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJiVU1zVVVGQlFVRXNRMEZCVlN4RFFVTjJRaXhEUVVGRmJrTXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVFpDTEVWQlFVRkJMRU5CUVVrc1dVRkJRU3hEUVVGamMwTXNTMEZCUVVFc1EwRkJUeXhOUVVGQkxFTkJRVUVzUTBGQlZXcERMRkZCUVVGQkxFTkJRVlVzUTBGQlF5eERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdE5MRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjJSeXhEUVVGRlRpeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZOa0lzUlVGQlFVRXNRMEZCU1N4alFVRkJMRU5CUVdkQ2MwTXNTMEZCUVVFc1EwRkJUeXhSUVVGQkxFTkJRVUVzUTBGQldXcERMRkZCUVVGQkxFTkJRVlVzUTBGQlF5eERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eEpRVUZCTEVOQlFVMU5MRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTFSeXhEUVVGRlRpeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZOa0lzUlVGQlFVRXNRMEZCU1N4cFFrRkJRU3hEUVVGdFFuTkRMRXRCUVVGQkxFTkJRVThzVjBGQlFTeERRVUZCTEVOQlFXVnFReXhSUVVGQlFTeERRVUZWTEVOQlFVTXNRMEZCUlc1RExFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRha2dzUTBGQlJVNHNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVFpDTEVWQlFVRkJMRU5CUVVrc1YwRkJRU3hEUVVGaGMwTXNTMEZCUVVFc1EwRkJUeXhoUVVGQkxFTkJRVUVzUTBGQmFVSnFReXhSUVVGQlFTeERRVUZWTEVOQlFVTXNRMEZCUlc1RExFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBUU3hKUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRMMGNzUTBGQlJVNHNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVFpDTEVWQlFVRkJMRU5CUVVrc1YwRkJRU3hEUVVGaGMwTXNTMEZCUVVFc1EwRkJUeXhYUVVGQkxFTkJRVUVzUTBGQlpXcERMRkZCUVVGQkxFTkJRVlVzUTBGQlF5eERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOU5MRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTNSeXhEUVVGRlRpeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZOa0lzUlVGQlFVRXNRMEZCU1N4alFVRkJMRU5CUVdkQ2MwTXNTMEZCUVVFc1EwRkJUeXhsUVVGQkxFTkJRVUVzUTBGQmJVSnFReXhSUVVGQlFTeERRVUZWTEVOQlFVTXNRMEZCUlc1RExFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZOTEV0QlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRiRWdzUTBGQlJVNHNUMEZCUVVFc1EwRkJVeXhQUVVGQkxFTkJRVk5ETEZWQlFVRkJMRU5CUVZrc1EwRkJSWE5OTEVsQlFVRkJMRU5CUVUwc1QwRkJRU3hEUVVGVGVrc3NSVUZCUVVFc1EwRkJTU3hwUWtGQlFTeERRVUZ0UW5ORExFdEJRVUZCTEVOQlFVOHNiVUpCUVVFc1EwRkJjVUl4UXl4TFFVRkJRU3hEUVVGUExGTkJRVUVzUTBGQlFTeERRVUZCTEVOQlF6TkhMRU5CUVVVeFFpeFBRVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZjMDBzU1VGQlFVRXNRMEZCVFN4UFFVRkJMRU5CUVZONlN5eEZRVUZCUVN4RFFVRkpMR2xDUVVGQkxFTkJRVzFDYzBNc1MwRkJRVUVzUTBGQlR5eHBRa0ZCUVN4RFFVRnRRakZETEV0QlFVRkJMRU5CUVU4c1UwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGVrY3NRMEZCUlRGQ0xFOUJRVUZCTEVOQlFWTXNUMEZCUVN4RFFVRlRReXhWUVVGQlFTeERRVUZaTEVOQlFVVnpUU3hKUVVGQlFTeERRVUZOTEU5QlFVRXNRMEZCVTNwTExFVkJRVUZCTEVOQlFVa3NhMEpCUVVFc1EwRkJiMEp6UXl4TFFVRkJRU3hEUVVGUExHMUNRVUZCTEVOQlFYRkNNVU1zUzBGQlFVRXNRMEZCVHl4VFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNMVJ5eERRVUZGTVVJc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzYVVKQlFVRXNRMEZCYlVKelF5eExRVUZCUVN4RFFVRlBMRmxCUVVFc1EwRkJRU3hEUVVGblFtcERMRkZCUVVGQkxFTkJRVlVzUTBGQlF5eERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdE5MRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnNTQ3hEUVVGRlRpeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZOa0lzUlVGQlFVRXNRMEZCU1N4dFFrRkJRU3hEUVVGeFFuTkRMRXRCUVVGQkxFTkJRVThzWTBGQlFTeERRVUZCTEVOQlFXdENha01zVVVGQlFVRXNRMEZCVlN4RFFVRkRMRU5CUVVWdVF5eFBRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTMDBzU1VGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRM1JJTEVOQlFVVk9MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVUyUWl4RlFVRkJRU3hEUVVGSkxHOUNRVUZCTEVOQlFYTkNjME1zUzBGQlFVRXNRMEZCVHl4bFFVRkJMRU5CUVVFc1EwRkJiVUpxUXl4UlFVRkJRU3hEUVVGVkxFTkJRVU1zUTBGQlJXNURMRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMVFN4SlFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEZUVnc1EwRkJSVTRzVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NhMEpCUVVFc1EwRkJiMEp6UXl4TFFVRkJRU3hEUVVGUExHRkJRVUVzUTBGQlFTeERRVUZwUW1wRExGRkJRVUZCTEVOQlFWVXNRMEZCUXl4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0TkxFbEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlMzQkpMRU5CUTBsT0xFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlEzaENOa0lzUlVGQlFVRXNRMEZCU1N4MVFrRkJRU3hEUVVGQkxFTkJRMHhMTEZGQlFVRkJMRU5CUVZVc1EwRkRWQ3hEUVVOSmJrTXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkRNMEkyUWl4RlFVRkJRU3hEUVVGSkxHOUNRVUZCTEVOQlFYTkNNRXNzVjBGQlFVRXNRMEZCWVN4RFFVRkJMRU5CUVVkb1RDeEpRVUZCUVN4RFFVRk5MRmxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFWRTFSRFJMTEZWQlFVRkJMRU5CUVZjM1RDeFBRVUZCUVN4RFFVRlJMRGhDUVVGQkxFTkJRVUVzUTBGRGVrSkRMRTlCUVVGQkxFTkJRVkZwVFN4SlFVRkJRU3hGUVVGQlFTeERRVU5XUVN4SlFVRkJRU3hEUVVGTEwwa3NSMEZCUVVFc1EwRkJTU3hEUVVGRlowb3NWVUZCUVVFc1EwRkJXVVFzU1VGQlFVRXNRMEZCU3k5TExFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjJoRE1Fc3NWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc2MwSkJRVUVzUTBGQlFTeERRVUYzUW5aQ0xGTkJRVUZCTEVOQlFWa3NVVUZCUVN4RFFVTndSSGxLTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMR0ZCUVVFc1EwRkJRU3hEUVVGbGRrSXNVMEZCUVVFc1EwRkJXU3hSUVVGQkxFTkJRek5EZVVvc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzWVVGQlFTeERRVUZCTEVOQlFXVjJRaXhUUVVGQlFTeERRVUZaTEZGQlFVRXNRMEZGTTBNc1NVRkJTV2RMTEVsQlFVRkJMRU5CUVU4M1RTeEpRVUZCUVN4RFFVTlFPRTBzV1VGQlFVRXNRMEZCWlZJc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzY1VKQlFVRXNRMEZCUVN4RFFXMUhia01zVDBGc1IwRXdTU3haUVVGQlFTeERRVUZoUXl4UFFVRkJRU3hEUVVGUkxFbEJRVUVzUTBGRGFrSXNTVUZCU1VNc1RVRkJRVUVzUTBGQlUwWXNXVUZCUVVFc1EwRkJZVWNzWVVGQlFVRXNRMEZCWTNwRUxGRkJRVUZCTEVOQlJYaERkMFFzVFVGQlFVRXNRMEZCVHpOSkxFbEJRVUZCTEVOQlFVdDRRaXhUUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZEY0VKblN5eEpRVUZCUVN4RFFVRkxla3NzUzBGQlFVRXNRMEZCVFhaRExFMUJRVUZCTEVOQlFVOXRSaXhQUVVGQlFTeERRVUZCUVN4SFFVTnNRbWRKTEUxQlFVRkJMRU5CUVU4elNTeEpRVUZCUVN4RFFVRkxlRUlzVTBGQlFVRXNRMEZCV1doRUxFMUJRVUZCTEVOQlFVOXRSaXhQUVVGQlFTeERRVUZSYmtNc1UwRkJRVUVzUTBGQlFVRXNRMEZITTBOdFN5eE5RVUZCUVN4RFFVRlBSU3hWUVVGQlFTeERRVUZoTEVsQlFVRXNRMEZGY0VKYUxGVkJRVUZCTEVOQlFWZHNTU3hKUVVGQlFTeERRVUZMTEdGQlFVRXNRMEZCUVN4RFFVRmxlRVFzWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlV5eEpRVUZCTEVOQlEzSkViMDBzVFVGQlFVRXNRMEZCVDBjc1YwRkJRVUVzUTBGQldTeE5RVUZCTEVOQlFVRXNRMEZCVVN4RFFVRkJMRU5CUVU4c1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU51UXl4RFFVRkJMRU5CUVVFc1EwRkZTR0lzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NaVUZCUVN4RFFVRkJMRU5CUVdsQ2VFUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVXl4SlFVRkJMRU5CUTNaRWIwMHNUVUZCUVVFc1EwRkJUMGNzVjBGQlFVRXNRMEZCV1N4UlFVRkJMRU5CUVVFc1EwRkJWU3hEUVVGQkxFTkJRVThzU1VGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnlReXhEUVVGQkxFTkJRVUVzUTBGRlNHSXNWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc2EwSkJRVUVzUTBGQlFTeERRVUZ2UW5oRUxHZENRVUZCUVN4RFFVRnBRaXhQUVVGQkxFTkJRVk1zU1VGQlFTeERRVU14Ukc5TkxFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRVmtzVjBGQlFTeERRVUZCTEVOQlFXRXNRMEZCUVN4RFFVRlBMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGVFTXNRMEZCUVN4RFFVRkJMRU5CUlVoaUxGVkJRVUZCTEVOQlFWZHNTU3hKUVVGQlFTeERRVUZMTEZsQlFVRXNRMEZCUVN4RFFVRmplRVFzWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlV5eEpRVUZCTEVOQlEzQkViMDBzVFVGQlFVRXNRMEZCVDBjc1YwRkJRVUVzUTBGQldTeGhRVUZCTEVOQlFVRXNRMEZCWlN4RFFVRkJMRU5CUVU4c1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU14UXl4RFFVRkJMRU5CUVVFc1EwRkZTR0lzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NXVUZCUVN4RFFVRkJMRU5CUVdONFJDeG5Ra0ZCUVVFc1EwRkJhVUlzVDBGQlFTeERRVUZUTEVsQlFVRXNRMEZEY0VSdlRTeE5RVUZCUVN4RFFVRlBSeXhYUVVGQlFTeERRVUZaTEZkQlFVRXNRMEZCUVN4RFFVRmhMRU5CUVVFc1EwRkJUeXhKUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzaERMRU5CUVVFc1EwRkJRU3hEUVVWSVlpeFZRVUZCUVN4RFFVRlhiRWtzU1VGQlFVRXNRMEZCU3l4bFFVRkJMRU5CUVVFc1EwRkJhVUo0UkN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRMRWxCUVVFc1EwRkRka1J2VFN4TlFVRkJRU3hEUVVGUFJ5eFhRVUZCUVN4RFFVRlpMR1ZCUVVFc1EwRkJRU3hEUVVGcFFpeERRVUZCTEVOQlFVOHNTVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNMVF5eERRVUZCTEVOQlFVRXNRMEZGU0dJc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzYjBKQlFVRXNRMEZCUVN4RFFVRnpRbmhFTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTXNTVUZCUVN4RFFVTTFSRzlOTEUxQlFVRkJMRU5CUVU5SExGZEJRVUZCTEVOQlFWa3NiVUpCUVVFc1EwRkJRU3hEUVVGeFFpeERRVUZCTEVOQlFVRXNRMEZCUVN4TFFVRkJMRVZCUVdWT0xFbEJRVUZCTEVOQlFVdFBMRTFCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRemRFTEVOQlFVRXNRMEZCUVN4RFFVVklaQ3hWUVVGQlFTeERRVUZYYkVrc1NVRkJRVUVzUTBGQlN5eHpRa0ZCUVN4RFFVRkJMRU5CUVhkQ2VFUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVXl4SlFVRkJMRU5CUXpsRWIwMHNUVUZCUVVFc1EwRkJUMGNzVjBGQlFVRXNRMEZCV1N4eFFrRkJRU3hEUVVGQkxFTkJRWFZDTEVOQlFVRXNRMEZCUVN4RFFVRkJMRXRCUVVFc1JVRkJaVTRzU1VGQlFVRXNRMEZCUzA4c1RVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGREwwUXNRMEZCUVN4RFFVRkJMRU5CUlVoa0xGVkJRVUZCTEVOQlFWZHNTU3hKUVVGQlFTeERRVUZMTEd0Q1FVRkJMRU5CUVVFc1EwRkJiMEl5UkN4VFFVRkJRU3hEUVVGVmJrY3NTMEZCUVVFc1JVRkJRVUVzUTBGRE1VTnZUQ3hOUVVGQlFTeERRVUZQUnl4WFFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlFTeERRVUZoTEVOQlFVRXNRMEZCVDNaTUxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6TkRNRXNzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NhMEpCUVVFc1EwRkJRU3hEUVVGdlFqSkVMRk5CUVVGQkxFTkJRVlZ1Unl4TFFVRkJRU3hGUVVGQlFTeERRVU14UTI5TUxFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRVmtzVjBGQlFTeERRVUZCTEVOQlFXRXNRMEZCUVN4RFFVRlBka3dzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITTBNd1N5eFZRVUZCUVN4RFFVRlhiRWtzU1VGQlFVRXNRMEZCU3l4dFFrRkJRU3hEUVVGQkxFTkJRWEZDTWtRc1UwRkJRVUVzUTBGQlZXNUhMRXRCUVVGQkxFVkJRVUZCTEVOQlF6TkRiMHdzVFVGQlFVRXNRMEZCVHpOSkxFbEJRVUZCTEVOQlFVdHNRaXhMUVVGQlFTeERRVUZOYTBzc1ZVRkJRVUVzUTBGQllYcE1MRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjI1RE1Fc3NWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc1kwRkJRU3hEUVVGQkxFTkJRV2RDTWtRc1UwRkJRVUVzUTBGQlZXNUhMRXRCUVVGQkxFVkJRVUZCTEVOQlEzUkRiMHdzVFVGQlFVRXNRMEZCVDBjc1YwRkJRVUVzUTBGQldTeFZRVUZCTEVOQlFVRXNRMEZCV1N4RFFVRkJMRU5CUVU5MlRDeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVY3hRekJMTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMR3RDUVVGQkxFTkJRVUVzUTBGQmIwSXlSQ3hUUVVGQlFTeERRVUZWYmtjc1MwRkJRVUVzUlVGQlFVRXNRMEZETVVOdlRDeE5RVUZCUVN4RFFVRlBSeXhYUVVGQlFTeERRVUZaTEZWQlFVRXNRMEZCUVN4RFFVRlpMRU5CUVVFc1EwRkJUM1pNTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpGRE1Fc3NWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc1lVRkJRU3hEUVVGQkxFTkJRV1Y0UkN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRMRWxCUVVFc1EwRkRja1FzU1VGQlNVVXNSMEZCUVVFc1EwRkJUWGROTEUxQlFVRkJMRU5CUVU4c1lVRkJRU3hEUVVGbExGTkJRVUVzUTBGQlFTeERRVVUxUWxRc1NVRkJRVUVzUTBGQlMzcEdMRTFCUVVGQkxFTkJRVTkwUnl4SFFVRkJRU3hEUVVGQlFTeEZRVU5vUW10TkxFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRVmtzV1VGQlFTeERRVUZCTEVOQlFXTXNRMEZCUVN4RFFVRlBjazBzUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEZWtNc1EwRkJRU3hEUVVGQkxFTkJSVWgzVEN4VlFVRkJRU3hEUVVGWGJFa3NTVUZCUVVFc1EwRkJTeXhsUVVGQkxFTkJRVUVzUTBGQmFVSjRSQ3huUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVExFbEJRVUVzUTBGRGRrUnZUU3hOUVVGQlFTeERRVUZQUnl4WFFVRkJRU3hEUVVGWkxGRkJRVUVzUTBGQlFTeERRVUZWTEVOQlFVRXNRMEZCVHl4SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRM0pETEVOQlFVRXNRMEZCUVN4RFFVVklZaXhWUVVGQlFTeERRVUZYYkVrc1NVRkJRVUVzUTBGQlN5eGhRVUZCTEVOQlFVRXNRMEZCWlhoRUxHZENRVUZCUVN4RFFVRnBRaXhQUVVGQkxFTkJRVk1zU1VGQlFTeERRVU55Ukc5TkxFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRVmtzVFVGQlFTeERRVUZCTEVOQlFWRXNRMEZCUVN4RFFVRlBMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGJrTXNRMEZCUVN4RFFVRkJMRU5CUlVoaUxGVkJRVUZCTEVOQlFWZHNTU3hKUVVGQlFTeERRVUZMTEdGQlFVRXNRMEZCUVN4RFFVRmxlRVFzWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlV5eEpRVUZCTEVOQlEzSkViMDBzVFVGQlFVRXNRMEZCVDBjc1YwRkJRVUVzUTBGQldTeE5RVUZCTEVOQlFVRXNRMEZCVVN4RFFVRkJMRU5CUVU4c1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU51UXl4RFFVRkJMRU5CUVVFc1EwRkZTR0lzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NhMEpCUVVFc1EwRkJRU3hEUVVGdlFuaEVMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZNc1NVRkJRU3hEUVVNeFJHOU5MRTFCUVVGQkxFTkJRVTlITEZkQlFVRkJMRU5CUVZrc1lVRkJRU3hEUVVGQkxFTkJRV1VzUTBGQlFTeERRVUZQTEVsQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkhOME5pTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMRzlDUVVGQkxFTkJRVUVzUTBGQmMwSjRSQ3huUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVExFbEJRVUVzUTBGRE5VUnZUU3hOUVVGQlFTeERRVUZQUnl4WFFVRkJRU3hEUVVGWkxHVkJRVUVzUTBGQlFTeERRVUZwUWl4RFFVRkJMRU5CUVU4c1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWN2UTJJc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzY1VKQlFVRXNRMEZCUVN4RFFVRjFRbmhFTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTXNTVUZCUVN4RFFVTTNSRzlOTEUxQlFVRkJMRU5CUVU5SExGZEJRVUZCTEVOQlFWa3NZVUZCUVN4RFFVRkJMRU5CUVdVc1EwRkJRU3hEUVVGUExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZITjBOaUxGVkJRVUZCTEVOQlFWZHNTU3hKUVVGQlFTeERRVUZMTEcxQ1FVRkJMRU5CUVVFc1EwRkJjVUo0UkN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRMRWxCUVVFc1EwRkRNMFJ2VFN4TlFVRkJRU3hEUVVGUFJ5eFhRVUZCUVN4RFFVRlpMR05CUVVFc1EwRkJRU3hEUVVGblFpeERRVUZCTEVOQlFVOHNTVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRkwwTXNRMEZCUVN4RFFVRkJMRU5CUlVsaUxGVkJRVUZCTEVOQlIxZzFUU3hYUVVGQlFTeERRVUZaZVVNc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbHZTQ3hUUVVGQlFTeERRVUZCUVN4RFFVTnVRaXhKUVVGSlowVXNWMEZCUVVFc1EwRkJZeXhGUVVGQkxFTkJRMlJETEdGQlFVRkJMRU5CUVdsQ05Vd3NTMEZCUVVFc1JVRkRWalZDTEVsQlFVRkJMRU5CUVV0RExHRkJRVUZCTEVOQlFXTXNRMEZCUlVNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhuUWtGQlFTeERRVUZCTEVOQlFXOUNTU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZWYjBJc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhhRWMyVEN4alFVRkJRU3hEUVVGclFqZE1MRXRCUVVGQkxFVkJRMWcxUWl4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUVVWRExFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzWjBKQlFVRXNRMEZCUVN4RFFVRnZRa2tzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlUyOUNMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ5OUdPRXdzYTBKQlFVRkJMRU5CUVhOQ09Vd3NTMEZCUVVFc1JVRkRaalZDTEVsQlFVRkJMRU5CUVV0RExHRkJRVUZCTEVOQlFXTXNRMEZCUlVNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhuUWtGQlFTeERRVUZCTEVOQlFXOUNTU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGVGIwSXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGUkwwWXJUQ3hYUVVGQlFTeERRVUZqTEVOQlFVTXZUQ3hMUVVGQlFTeERRVUZQTDBJc1RVRkJRVUVzUjBGQlFVRXNRMEZEZEVKQkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFVkJRVlVzUlVGQlFTeERRVU51UWl4SlFVRkpLMDRzU1VGQlFVRXNRMEZCVHpWT0xFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRV01zUTBGQlJVTXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4cFFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRV04wUlN4UFFXSkJiVTRzVjBGQlFVRXNRMEZCV1hKSkxFbEJRVUZCTEVOQlFVc3dTU3hKUVVGQlFTeERRVUZCUVN4RFFVTmlOVTRzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMTJReXhOUVVGQlFTeERRVUZQYVVvc1IwRkJRVUVzUTBGQlFVRXNRMEZEYkVJNFJTeEpRVUZCUVN4RFFVRkxOMHNzVjBGQlFVRXNRMEZCV1N4RFFVTmllVXNzWVVGQlFVRXNRMEZCWXpOT0xFMUJRVUZCTEVOQlFVOXBTaXhIUVVGQlFTeERRVUZCUVN4RFFVTnlRalJGTEd0Q1FVRkJRU3hEUVVGdFFpeExRVUZCTEVOQlFVRXNRMEZEYmtKSExHRkJRVUZCTEVOQlFXTnFUU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxzUW1kTkxFbEJRVUZCTEVOQlFVczNTeXhYUVVGQlFTeERRVUZaTEVOQlEySTRTeXhoUVVGQlFTeERRVUZqYWswc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSFptZE5MRWxCUVVGQkxFTkJRVUZCTEVOQlIxQkZMRmxCUVVGQkxFTkJRV2RDYkUwc1MwRkJRVUVzUlVGQlFVRXNRMEZEYUVJc1NVRkpTV2ROTEVsQlFVRkJMRU5CU2tGNFJDeExRVUZCUVN4RFFVRlJjRXNzU1VGQlFVRXNRMEZCUzBNc1lVRkJRVUVzUTBGQll5eERRVUZGUXl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMR3RDUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzWkZiVTRzVjBGQlFVRXNRMEZCV1hKSkxFbEJRVUZCTEVOQlFVdHJSaXhMUVVGQlFTeERRVUZCUVN4RFFVVnFRa0VzUzBGQlFVRXNRMEZCVFhKSUxGZEJRVUZCTEVOQlFWa3lTeXhyUWtGQlFVRXNRMEZCYlVJc1IwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRmNrTXNTVUZCU3l4SlFVRkpjazRzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDFRaXhMUVVGQlFTeERRVUZOYjBVc1RVRkJRVUVzUTBGQlVUTkdMRU5CUVVGQkxFVkJRVUZCTEVOQlF6bENkVTRzU1VGQlFVRXNRMEZCVDNoRUxFdEJRVUZCTEVOQlFVMXlTQ3hYUVVGQlFTeERRVUZaTkVzc1YwRkJRVUVzUTBGQldTOU1MRXRCUVVGQkxFTkJRVTEyUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWMlEwRXNRMEZCUVVFc1JVRkJTM1ZDTEV0QlFVRkJMRU5CUVUxdlJTeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1JVRkRjRUkwU0N4SlFVRkJRU3hEUVVGTE4wc3NWMEZCUVVFc1EwRkJXVEpMTEd0Q1FVRkJRU3hEUVVGdFFpeEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVazFReXhQUVVSQmRFUXNTMEZCUVVFc1EwRkJUWEpJTEZkQlFVRkJMRU5CUVZreVN5eHJRa0ZCUVVFc1EwRkJiVUlzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZET1VKMFJDeExRVUZCUVN4RFFVRkJRU3hEUVVkUU1rUXNZVUZCUVVFc1EwRkJhVUp1VFN4TFFVRkJRU3hGUVVGQlFTeERRVU5xUWl4SlFVbEpaMDBzU1VGQlFVRXNRMEZLUVVrc1RVRkJRVUVzUTBGQlUyaFBMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUVdNc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eHJRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVONFJXMU9MRmRCUVVGQkxFTkJRVmx5U1N4SlFVRkJRU3hEUVVGTE9Fa3NUVUZCUVVFc1EwRkJRVUVzUTBGRmFrSkJMRTFCUVVGQkxFTkJRVTlxVEN4WFFVRkJRU3hEUVVGWk1rc3NhMEpCUVVGQkxFTkJRVzFDTEVkQlFVRXNRMEZCUVN4RFFVRkJMRU5CUlhSRExFbEJRVWx5VGl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGRFVpeEpRVUZMTEVsQlFVbDVTU3hIUVVGQlFTeEpRVUZQYkVnc1MwRkJRVUVzUTBGRFdtZE5MRWxCUVVGQkxFTkJRVTlKTEUxQlFVRkJMRU5CUVU5cVRDeFhRVUZCUVN4RFFVRlpORXNzVjBGQlFVRXNRMEZCV1M5TUxFdEJRVUZCTEVOQlFVMXJTQ3hIUVVGQlFTeERRVUZCUVN4RFFVRk5MRU5CUVVWQkxFZEJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRMmhFZWtrc1EwRkJRVUVzUlVGQlMyZEdMRTFCUVVGQkxFTkJRVTgwU1N4SlFVRkJRU3hEUVVGTGNrMHNTMEZCUVVFc1EwRkJRVUVzUTBGQlQyOUZMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeEZRVU5xUXpSSUxFbEJRVUZCTEVOQlFVczNTeXhYUVVGQlFTeERRVUZaTWtzc2EwSkJRVUZCTEVOQlFXMUNMRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJSWGhEY2s0c1EwRkJRVUVzUlVGQlFVRXNRMEZIU2l4UFFVUkJNazRzVFVGQlFVRXNRMEZCVDJwTUxGZEJRVUZCTEVOQlFWa3lTeXhyUWtGQlFVRXNRMEZCYlVJc1IwRkJRU3hEUVVGQkxFTkJRVUVzUTBGREwwSk5MRTFCUVVGQkxFTkJRVUZCTEVOQlIxQklMR0ZCUVVGQkxFTkJRV2xDYWswc1MwRkJRVUVzUlVGRFJ5eFJRVUZCTEVWQlFVRXNUMEZCVkVFc1MwRkJRVUVzUTBGRFFUUk1MR0ZCUVVGQkxFTkJRV00xVEN4TFFVRkJRU3hEUVVGQlFTeERRVVZvUWpaSkxFdEJRVUZCTEVOQlFVMURMRTlCUVVGQkxFTkJRVkU1U1N4TFFVRkJRU3hEUVVGQlFTeERRVU5hYTAwc1dVRkJRVUVzUTBGQllXeE5MRXRCUVVGQkxFTkJRVUZCTEVOQlJVTXNVVUZCUVN4RlFVRkJMRTlCUVZSQkxFdEJRVUZCTEVOQlEweHRUU3hoUVVGQlFTeERRVUZqYmswc1MwRkJRVUVzUTBGQlFVRXNRMEZIWkRaTUxHTkJRVUZCTEVOQlFXVTNUQ3hMUVVGQlFTeERRVUZCUVN4RFFVa3hRbk5OTEZOQlFVRkJMRU5CUVZsc1R5eEpRVUZCUVN4RFFVRkxReXhoUVVGQlFTeERRVUZqTEVOQlF5OUNReXhQUVVGQlFTeERRVUZUTEV0QlFVRXNRMEZCVDBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHMUNRVUZCTEVOQlFVRXNRMEZCZFVKcFF5eFJRVUZCUVN4RFFVRlZMRU5CUTJ4RkxFTkJRMGx1UXl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMR2xDUVVGQkxFTkJRVzFDSzBNc1MwRkJRVUVzUTBGQlR5eERRVUZGWjB3c1ZVRkJRVUVzUTBGS04wUXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVUxVUxFTkJRMGxxVHl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRzlDUVVGQkxFTkJRVUVzUTBGQlFTeERRVVV4UXl4RFFVTkpSaXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHbENRVUZCTEVOQlFXMUNLME1zUzBGQlFVRXNRMEZCVHl4RFFVRkZaMHdzVlVGQlFVRXNRMEZXTjBRc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGVk5rVTVUQ3hSUVVGQlFTeERRVUZWTEVOQlEzaEdkMHdzWVVGQlFVRXNRMEZCWXpGTUxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlRURkNia01zU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMXRTQ3hUUVVGQlFTeERRVUZCUVN4RlFVTllRU3hUUVVGQlFTeERRVUZWYUVvc1RVRkJRVUVzUTBGQlR6Sk9MRk5CUVVGQkxFTkJRVUZCTEVOQlIzSkNMRWxCUTBsRkxFOUJRVUZCTEVOQlEwRkRMR0ZCUVVGQkxFTkJSa0ZETEVsQlFVRkJMRU5CUVU5S0xGTkJRVUZCTEVOQlFWVTVTaXhKUVVGQlFTeERRVUZMTEd0Q1FVRkJMRU5CUVVFc1EwRkpkRUp0U3l4TFFVRkJRU3hGUVVSVFJDeEpRVUZCUVN4RFFVRkxPVXNzVVVGQlFVRXNSVUZCUVVFc1EwRkJWMFFzVFVGQlFVRXNRMEZEYWtJeVN5eFRRVUZCUVN4RFFVRlZPVW9zU1VGQlFVRXNRMEZCU3l4clFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGRrSnZTeXhQUVVGQlFTeERRVUZWVGl4VFFVRkJRU3hEUVVGVk9Vb3NTVUZCUVVFc1EwRkJTeXh4UWtGQlFTeERRVUZCTEVOQlIzcENjVXNzVFVGQlFVRXNSVUZHYVVKRExGRkJRVUZCTEVOQk0wSktMRTFCUVVFc1EwRkJRU3hEUVRSQ1RFb3NTVUZCUVVFc1EwRkJTemRPTEU5QlFVRkJMRU5CUVZFc2EwSkJRVUVzUTBGQlFTeERRVU5hTms0c1NVRkJRVUVzUTBGQlN6ZE9MRTlCUVVGQkxFTkJRVkVzYlVKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUlhSQ2EwOHNVVUZCUVVFc1EwRkJXVEZHTEV0QlFVRkJMRVZCUVVGQkxFTkJRMW9zU1VGQlNUSkdMRXRCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVRkJMRU5CUVU4M1JpeExRVUZCUVN4RFFVRk5la1lzVVVGQlFVRXNSVUZCUVVFc1EwRkJWME1zUjBGQlFVRXNRMEZCVFRaTExFbEJRVUZCTEVOQlFVczVTeXhSUVVGQlFTeEZRVUZCUVN4RFFVRlhReXhIUVVGQlFTeEZRVUZQYVV3c1VVRkJRVUVzUTBGb1EzcEVMRTFCUVVFc1EwRkJRU3hEUVVGQkxFTkJaME5wUml4RFFVRkJMRU5CUXpGR1N5eEhRVUZCUVN4RFFVRk5SaXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGQlFTeERRVUZQTjBZc1MwRkJRVUVzUTBGQlRYcEdMRkZCUVVGQkxFVkJRVUZCTEVOQlFWZDFTQ3hOUVVGQlFTeERRVUZUZFVRc1NVRkJRVUVzUTBGQlN6bExMRkZCUVVGQkxFVkJRVUZCTEVOQlFWZERMRWRCUVVGQkxFVkJRVTlwVEN4UlFVRkJRU3hEUVdwRE1VUXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRnBRMnRHTEVOQlFVRXNRMEZETDBaNlJpeExRVUZCUVN4RFFVRk5kVVFzUzBGQlFVRXNRMEZCVVhoTkxFbEJRVUZCTEVOQlFVdDNUU3hMUVVGQlFTeERRVUZOZFVNc1IwRkJRVUVzUTBGQlMwZ3NTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEUyUWpsQ1NTeFhRVUZCUVN4RFFVRmxMMFlzUzBGQlFVRXNSVUZCUVVFc1EwRkRaaXhKUVVGTExFbEJRVWsxU1N4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVFJKTEV0QlFVRkJMRU5CUVUxMVJDeExRVUZCUVN4RFFVRk5lRWNzVFVGQlFVRXNRMEZCVVROR0xFTkJRVUZCTEVWQlFVRkJMRU5CUXk5Q1RDeEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCVFdkTkxFOUJRVUZCTEVOQlFWRnVSaXhMUVVGQlFTeERRVUZOZFVRc1MwRkJRVUVzUTBGQlRXNU5MRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVrMFR5eFZRVUZCUVN4RFFVRkJRU3hIUVVOd1EySXNUMEZCUVVFc1EwRkJVVzVHTEV0QlFVRkJMRU5CUVUxMVJDeExRVUZCUVN4RFFVRk5iazBzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNYVkVMRWRCUVVGQkxFTkJRVWtzUTBGQlJUaENMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZEZGtNd1NTeFBRVUZCUVN4RFFVRlJia1lzUzBGQlFVRXNRMEZCVFhWRUxFdEJRVUZCTEVOQlFVMXVUU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSk5FOHNWVUZCUVVFc1EwRkJZV2hITEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlN6ZERhVWNzVTBGQlFVRXNRMEZCWVdwSExFdEJRVUZCTEVWQlFVRkJMRU5CUTJJc1NVRkJTV3RITEZsQlFVRkJMRU5CUVdWc1J5eExRVUZCUVN4RFFVRk5OVWNzVVVGQlFVRXNRMEZEZWtJc1NVRkJTeXhKUVVGSmFFTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrNFR5eFpRVUZCUVN4RFFVRmhia29zVFVGQlFVRXNRMEZCVVROR0xFTkJRVUZCTEVWQlFVRkJMRU5CUTJwRE9FOHNXVUZCUVVFc1EwRkJZVGxQTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWR4UXl4VFFVRkJRU3hEUVVGVmVVWXNVVUZCUVVFc1EwRkJVeXhwUWtGQlFTeERRVUZCTEVkQlEyNURaMGdzV1VGQlFVRXNRMEZCWVRsUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkMVJDeEhRVUZCUVN4RFFVRkpMRU5CUVVVNFFpeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJRU3hEUVVGQkxFTkJSUzlDZVVvc1dVRkJRVUVzUTBGQllUbFBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEpMRTlCUVVGQkxFTkJRVkVzYlVKQlFVRXNRMEZCUVN4RFFVRnhRa01zVDBGQlFVRXNRMEZCVVRaR0xFTkJRVUZCTEVWQlFVRkJMRU5CUXpWRGRrY3NTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxdFJTeERRVUZCUVN4RFFVRkZPRUlzVFVGQlFVRXNRMEZCVHpSSExGVkJRVUZCTEVOQlFVRkJMRWRCUTNKQ01Va3NRMEZCUVVFc1EwRkJSVGhDTEUxQlFVRkJMRU5CUVU4MFJ5eFZRVUZCUVN4RFFVRmhhRWNzUzBGQlFVRXNRMEZEZEVJeFF5eERRVUZCUVN4RFFVRkZPRUlzVFVGQlFVRXNRMEZCVDNwRkxFZEJRVUZCTEVOQlFVa3NRMEZCUlRoQ0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQmFVVTFReXhQUVdwRFFUWklMRmRCUVVGQkxFTkJRVmx5U1N4SlFVRkJRU3hEUVVGQlFTeExRVUZMYTBzc1EwRkJRVUVzUTBGQlFVRXNRMEZGYWtKc1FpeFRRVUZCUVN4RFFVRlZia0lzVDBGQlFVRXNRMEZCVVd4TkxFdEJRVUZCTEVWQlFVRkJMRU5CT1VWRUxFTkJRVUVzU1VGQlFTeERRVU5pTEVsQlFVc3NTVUZCU1ZJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxyVGl4WFFVRkJRU3hEUVVGWmRrZ3NUVUZCUVVFc1EwRkJVVE5HTEVOQlFVRkJMRVZCUVVGQkxFTkJRM0JEYTA4c1MwRkJRVUVzUTBGQlRYaE1MRmRCUVVGQkxFTkJRVmtzUTBGRFpDeERRVUZGTjBNc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVc3lRaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGVGVFSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUzBZc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExIZENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hIUVRSRmJrVnBVQ3hEUVhaRllTeERRVUZCTEVsQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsb1VDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1c5UExFMUJRVUZCTEVOQlFVOTZTU3hOUVVGQlFTeERRVUZSTTBZc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTndReXhKUVVGSmIwUXNSMEZCUVVFc1EwRkJUV2RNTEUxQlFVRkJMRU5CUVU5d1R5eERRVUZCUVN4RFFVRkJRU3hEUVVGSGJVUXNVVUZCUVVFc1JVRkJRVUVzUTBGQlYwTXNSMEZCUVVFc1EwRkJUVFpMTEVsQlFVRkJMRU5CUVVzNVN5eFJRVUZCUVN4RlFVRkJRU3hEUVVGWFF5eEhRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJTU3hKUVVGQkxFTkJRek5FTkVVc1RVRkJRVUVzUTBGQlUyMUhMRTlCUVVGQkxFTkJRVkY2VEN4WFFVRkJRU3hEUVVGWkxFTkJRVVUzUXl4UFFVRkJRU3hEUVVGVExFZEJRVUVzUTBGQlMwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRFpEUVVGQkxFTkJRU3RESzBNc1MwRkJRVUVzUTBGQlR5eERRVUZGVFN4SFFVRkJRU3hEUVVGQlFTeEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVNVNEUkZMRTFCUVVGQkxFTkJRVTlaTEV0QlFVRkJMRU5CUVZGM1JpeE5RVUZCUVN4RFFVRlBjRThzUTBGQlFVRXNRMEZCUVVFc1EwRkRkRUp2VHl4TlFVRkJRU3hEUVVGUGNFOHNRMEZCUVVFc1EwRkJRVUVzUTBGQlIyZEpMRTFCUVVGQkxFTkJRVk5CTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVkQmEwVjJRbWxJTEVOQlJVRnNRaXhQUVVGQlFTeERRVUZWUnl4TFFVRkJRU3hEUVVGTk9VNHNUMEZCUVVFc1EwRkJVU3g1UWtGQlFTeERRVUZCTEVOQlEzaENORTRzWVVGQlFVRXNRMEZCWjBKSExFOUJRVUZCTEVOQlFWRXZUaXhQUVVGQlFTeERRVUZSTERSQ1FVRkJMRU5CUVVFc1EwRkhhRU41VGl4VFFVRkJRU3hEUVVGVmRFNHNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZEYUVNc1NVRkJTWEZJTEUxQlFVRkJMRU5CUVZOeVNDeExRVUZCUVN4RFFVRk5jVWdzVFVGQlFVRXNRMEZEWmtFc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExESkNRVUZCTEVOQlFVRXNSMEZEY2tKdVNTeEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCVFRoR0xFMUJRVUZCTEVOQlFVOWxMRXRCUVVGQkxFTkJRVTExUkN4TFFVRkJRU3hEUVVGQlFTeEZRVU42UW0xRExGRkJRVUZCTEVOQlFWTjZSeXhOUVVGQlFTeERRVUZQWlN4TFFVRkJRU3hEUVVGQlFTeERRVWRvUW1Zc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExHVkJRVUVzUTBGQlFTeEZRVU14UWpaSExGZEJRVUZCTEVOQlFWazVSeXhOUVVGQlFTeERRVUZQWlN4TFFVRkJRU3hEUVVGQlFTeERRVU51UW1sSExGTkJRVUZCTEVOQlFWVm9TQ3hOUVVGQlFTeERRVUZQWlN4TFFVRkJRU3hEUVVGQlFTeEhRVFZEWml4RFFVRkRRU3hMUVVGQlFTeEZRVUZCUVN4RFFVTm1MRWxCUVVzc1NVRkJTVFZKTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpORWtzUzBGQlFVRXNRMEZCVFhWRUxFdEJRVUZCTEVOQlFVMTRSeXhOUVVGQlFTeERRVUZSTTBZc1EwRkJRVUVzUlVGQlFVRXNRMEZEYUVNclRpeFBRVUZCUVN4RFFVRlJia1lzUzBGQlFVRXNRMEZCVFhWRUxFdEJRVUZCTEVOQlFVMXVUU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSk5FOHNWVUZCUVVFc1JVRkJZMmhITEV0QlFVRkJMRWRCUTNSRGJVWXNUMEZCUVVFc1EwRkJVVzVHTEV0QlFVRkJMRU5CUVUxMVJDeExRVUZCUVN4RFFVRk5iazBzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNUSklMRk5CUVVGQkxFTkJRVlVzUTBGQlF5eFRRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRTlCUXpWQ2IwY3NUMEZCUVVFc1EwRkJVVzVHTEV0QlFVRkJMRU5CUVUxMVJDeExRVUZCUVN4RFFVRk5iazBzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNUUlBMRlZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCTWtObUwwY3NUVUZCUVVFc1EwRkJUMlVzUzBGQlFVRXNRMEZCUVVFc1EwRjBRMjVDTEVOQlFVTkJMRXRCUVVGQkxFVkJRVUZCTEVOQlEySXNTVUZCU1d0SExGbEJRVUZCTEVOQlFXVnNSeXhMUVVGQlFTeERRVUZOTlVjc1VVRkJRVUVzUTBGRGVrSXNTVUZCU3l4SlFVRkphRU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVazRUeXhaUVVGQlFTeERRVUZoYmtvc1RVRkJRVUVzUTBGQlVUTkdMRU5CUVVGQkxFVkJRVUZCTEVOQlEycERPRThzV1VGQlFVRXNRMEZCWVRsUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkeFF5eFRRVUZCUVN4RFFVRlZlVVlzVVVGQlFVRXNRMEZCVXl4cFFrRkJRU3hEUVVGQkxFZEJRMjVEWjBnc1dVRkJRVUVzUTBGQllUbFBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3lTQ3hUUVVGQlFTeERRVUZWTEVOQlFVTXNVMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZNMEp0U0N4WlFVRkJRU3hEUVVGaE9VOHNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwa3NUMEZCUVVFc1EwRkJVU3h0UWtGQlFTeERRVUZCTEVOQlFYRkNReXhQUVVGQlFTeERRVUZSTmtZc1EwRkJRVUVzUlVGQlFVRXNRMEZETjBOQkxFTkJRVUZCTEVOQlFVVTRRaXhOUVVGQlFTeERRVUZQTkVjc1ZVRkJRVUVzUlVGQlkyaEhMRXRCUVVGQkxFZEJRVUZCTEU5QlEyaENNVU1zUTBGQlFVRXNRMEZCUlRoQ0xFMUJRVUZCTEVOQlFVODBSeXhWUVVGQlFTeERRVU5vUWpGSkxFTkJRVUZCTEVOQlFVVTRRaXhOUVVGQlFTeERRVUZQVEN4VFFVRkJRU3hEUVVGVkxFTkJRVU1zVTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFVkJPRUprUlN4TlFVRkJRU3hEUVVGUFpTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWR5UW1Zc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlV5Uml4TlFVRkJRU3hEUVVGUExHRkJRVUVzUTBGQlFTeERRVU40UWtnc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlV5Uml4TlFVRkJRU3hEUVVGUExHVkJRVUVzUTBGQlFTeERRWEpHYWtJc1EwRkJRU3hKUVVGQkxFTkJRMllzU1VGQlN5eEpRVUZKYUVrc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxuVHl4aFFVRkJRU3hEUVVGamNra3NUVUZCUVVFc1EwRkJVVE5HTEVOQlFVRkJMRVZCUVVGQkxFTkJRM1JEWjA4c1lVRkJRVUVzUTBGQlkyaFBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZDFSQ3hIUVVGQlFTeERRVUZKTEVOQlEycENTQ3hIUVVGQlFTeERRVUZMTkVzc1lVRkJRVUVzUTBGQlkyaFBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVYzBTU3hMUVVGQlFTeERRVUZOZWtZc1VVRkJRVUVzUlVGQlFVRXNRMEZCVjBNc1IwRkJRVUVzUTBGQlRUWkxMRWxCUVVGQkxFTkJRVXM1U3l4UlFVRkJRU3hGUVVGQlFTeERRVUZYUXl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlNTeEpRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRWRCYlVaMlJUaE1MRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMweHlRaXhUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kVGVtcGxhdGVfOT1yZXF1aXJlKFwiLi9UZW1wbGF0ZVwiKTsgKi87dmFyIF8kQ29sb3JQaWNrZXJfMj1mdW5jdGlvbigpe2xldCBzZWxmPXt9O3JldHVybiBzZWxmLmZ1bmM9bmV3IF8kRnVuY180LHNlbGYuZWxlbWVudE1vZGlmaWVyPW5ldyBfJFRlbXBsYXRlXzksc2VsZi5lbGVtZW50TW9kaWZpZXIuZWxlbWVudExpYnJhcnkoKSxzZWxmLmNvbG9ySW5kaWNhdG9yUG9zaXRpb249e3g6MCx5OjB9LHNlbGYub3BhY2l0eUluZGljYXRvclBvc2l0aW9uPXt4OjAseTowfSxzZWxmLmNvbnZlcnRUbz1cIlJHQlwiLHNlbGYuaW5pdD0ocGFyYW1zPT4oc2VsZi5waWNrZXI9c2VsZi5lbGVtZW50TW9kaWZpZXIuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY29sb3ItcGlja2VyXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcImNvbG9yLXBpY2tlci1zZXR0ZXJzXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcImNvbG9yLXBpY2tlci1jb2xvcnMtd2luZG93XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImNhbnZhc1wiLGF0dHJpYnV0ZXM6e2lkOlwiY29sb3ItcGlja2VyLWNvbG9yc1wifX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjb2xvci1waWNrZXItY29sb3ItaW5kaWNhdG9yXCJ9fV19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2lkOlwiY29sb3ItcGlja2VyLW9wYWNpdGllcy13aW5kb3dcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiY2FudmFzXCIsYXR0cmlidXRlczp7aWQ6XCJjb2xvci1waWNrZXItb3BhY2l0aWVzXCJ9fSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcImNvbG9yLXBpY2tlci1vcGFjaXR5LWluZGljYXRvclwifX1dfV19LHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJjb2xvci1waWNrZXItcmVzdWx0XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcInBpY2tlZC1jb2xvclwifX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJwaWNrZWQtY29sb3Itd2luZG93XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNlbGVjdFwiLGF0dHJpYnV0ZXM6e2lkOlwicGlja2VkLWNvbG9yLXNldHRlclwifSxvcHRpb25zOltcIlJHQlwiLFwiSEVYXCIsXCJIU0xcIl19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2lkOlwicGlja2VkLWNvbG9yLXZhbHVlXCJ9fV19XX1dfSksc2VsZi5jb2xvcldpbmRvdz1zZWxmLnBpY2tlci5maW5kKFwiI2NvbG9yLXBpY2tlci1jb2xvcnMtd2luZG93XCIpLHNlbGYub3BhY2l0eVdpbmRvdz1zZWxmLnBpY2tlci5maW5kKFwiI2NvbG9yLXBpY2tlci1vcGFjaXRpZXMtd2luZG93XCIpLHNlbGYuY29sb3JDYW52YXM9c2VsZi5waWNrZXIuZmluZChcIiNjb2xvci1waWNrZXItY29sb3JzXCIpLHNlbGYub3BhY2l0eUNhbnZhcz1zZWxmLnBpY2tlci5maW5kKFwiI2NvbG9yLXBpY2tlci1vcGFjaXRpZXNcIiksc2VsZi5jb2xvck1hcmtlcj1zZWxmLnBpY2tlci5maW5kKFwiI2NvbG9yLXBpY2tlci1jb2xvci1pbmRpY2F0b3JcIiksc2VsZi5vcGFjaXR5TWFya2VyPXNlbGYucGlja2VyLmZpbmQoXCIjY29sb3ItcGlja2VyLW9wYWNpdHktaW5kaWNhdG9yXCIpLHNlbGYud2lkdGg9cGFyYW1zLndpZHRoLHNlbGYuaGVpZ2h0PXBhcmFtcy5oZWlnaHQsc2VsZi5waWNrZWRDb2xvcj1wYXJhbXMuY29sb3J8fFwicmdiKDAsIDAsIDApXCIsc2VsZi5jb2xvcldpbmRvdy5jc3Moe2hlaWdodDpzZWxmLmhlaWdodCtcInB4XCJ9KSxzZWxmLmNvbG9yQ2FudmFzLndpZHRoPXNlbGYud2lkdGgsc2VsZi5jb2xvckNhbnZhcy5oZWlnaHQ9c2VsZi5oZWlnaHQsc2VsZi5vcGFjaXR5V2luZG93LmNzcyh7aGVpZ2h0OnNlbGYuaGVpZ2h0K1wicHhcIn0pLHNlbGYub3BhY2l0eUNhbnZhcy5oZWlnaHQ9c2VsZi5oZWlnaHQsc2VsZi5vcGFjaXR5Q2FudmFzLndpZHRoPTIwLHNlbGYuY29sb3JDb250ZXh0PXNlbGYuY29sb3JDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpLHNlbGYub3BhY2l0eUNvbnRleHQ9c2VsZi5vcGFjaXR5Q2FudmFzLmdldENvbnRleHQoXCIyZFwiKSxzZWxmLnBpY2tlci5maW5kKFwiI3BpY2tlZC1jb2xvci12YWx1ZVwiKS5pbm5lclRleHQ9c2VsZi5waWNrZWRDb2xvcixzZWxmLnBpY2tlci5maW5kKFwiI3BpY2tlZC1jb2xvci1zZXR0ZXJcIikub25DaGFuZ2VkKHZhbHVlPT57c2VsZi5jb252ZXJ0VG89dmFsdWUsc2VsZi5yZXBseSgpfSksc2VsZi5saXN0ZW4oKSxzZWxmLnBpY2tlcikpLHNlbGYuY2FsaWJyYXRlQ29sb3I9KCgpPT57bGV0IGNvbG9yR3JhZGllbnQ9c2VsZi5jb2xvckNvbnRleHQuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwwLHNlbGYud2lkdGgsMCk7Y29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoMCxcInJnYigyNTUsIDAsIDApXCIpLGNvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKC4xNSxcInJnYigyNTUsIDAsIDI1NSlcIiksY29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoLjMzLFwicmdiKDAsIDAsIDI1NSlcIiksY29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoLjQ5LFwicmdiKDAsIDI1NSwgMjU1KVwiKSxjb2xvckdyYWRpZW50LmFkZENvbG9yU3RvcCguNjcsXCJyZ2IoMCwgMjU1LCAwKVwiKSxjb2xvckdyYWRpZW50LmFkZENvbG9yU3RvcCguODcsXCJyZ2IoMjU1LCAyNTUsIDApXCIpLGNvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKDEsXCJyZ2IoMjU1LCAwLCAwKVwiKSxzZWxmLmNvbG9yQ29udGV4dC5maWxsU3R5bGU9Y29sb3JHcmFkaWVudCxzZWxmLmNvbG9yQ29udGV4dC5maWxsUmVjdCgwLDAsc2VsZi53aWR0aCxzZWxmLmhlaWdodCksKGNvbG9yR3JhZGllbnQ9c2VsZi5jb2xvckNvbnRleHQuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwwLDAsc2VsZi5oZWlnaHQpKS5hZGRDb2xvclN0b3AoMCxcInJnYmEoMjU1LCAyNTUsIDI1NSwgMSlcIiksY29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoLjUsXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDApXCIpLGNvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKC41LFwicmdiYSgwLCAwLCAwLCAwKVwiKSxjb2xvckdyYWRpZW50LmFkZENvbG9yU3RvcCgxLFwicmdiYSgwLCAwLCAwLCAxKVwiKSxzZWxmLmNvbG9yQ29udGV4dC5maWxsU3R5bGU9Y29sb3JHcmFkaWVudCxzZWxmLmNvbG9yQ29udGV4dC5maWxsUmVjdCgwLDAsc2VsZi53aWR0aCxzZWxmLmhlaWdodCl9KSxzZWxmLmNhbGlicmF0ZU9wYWNpdHk9KCgpPT57bGV0IHJnYmE7c2VsZi5vcGFjaXR5Q29udGV4dC5jbGVhclJlY3QoMCwwLHNlbGYub3BhY2l0eUNhbnZhcy53aWR0aCxzZWxmLmhlaWdodCk7bGV0IG9wYWNpdHlHcmFkaWVudD1zZWxmLm9wYWNpdHlDb250ZXh0LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsMCwwLHNlbGYub3BhY2l0eUNhbnZhcy5oZWlnaHQpO2ZvcihsZXQgaT0xMDA7aT49MDtpLS0pcmdiYT1zZWxmLmFkZE9wYWNpdHkoc2VsZi5waWNrZWRDb2xvcixpLzEwMCksb3BhY2l0eUdyYWRpZW50LmFkZENvbG9yU3RvcChpLzEwMCxyZ2JhKTtzZWxmLm9wYWNpdHlDb250ZXh0LmZpbGxTdHlsZT1vcGFjaXR5R3JhZGllbnQsc2VsZi5vcGFjaXR5Q29udGV4dC5jbGVhclJlY3QoMCwwLHNlbGYub3BhY2l0eUNhbnZhcy53aWR0aCxzZWxmLm9wYWNpdHlDYW52YXMuaGVpZ2h0KSxzZWxmLm9wYWNpdHlDb250ZXh0LmZpbGxSZWN0KDAsMCxzZWxmLm9wYWNpdHlDYW52YXMud2lkdGgsc2VsZi5vcGFjaXR5Q2FudmFzLmhlaWdodCl9KSxzZWxmLmxpc3Rlbj0oKCk9PntsZXQgaXNDb2xvck1vdXNlRG93bj0hMSxpc09wYWNpdHlNb3VzZURvd249ITE7c2VsZi5waWNrZXIubm90QnViYmxlZEV2ZW50KFwiY2xpY2tcIixldmVudD0+eyFzZWxmLmFkZGVkfHxpc0NvbG9yTW91c2VEb3dufHxpc09wYWNpdHlNb3VzZURvd258fHNlbGYuZGlzcG9zZSgpfSksc2VsZi5jb2xvckNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsZXZlbnQ9PntsZXQgY3VycmVudFg9ZXZlbnQuY2xpZW50WC1zZWxmLmNvbG9yQ2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQsY3VycmVudFk9ZXZlbnQuY2xpZW50WS1zZWxmLmNvbG9yQ2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtpc0NvbG9yTW91c2VEb3duPWN1cnJlbnRYPjAmJmN1cnJlbnRYPHNlbGYuY29sb3JDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgmJmN1cnJlbnRZPjAmJmN1cnJlbnRZPHNlbGYuY29sb3JDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0fSksc2VsZi5jb2xvckNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsZXZlbnQ9PntpZihpc0NvbG9yTW91c2VEb3duKXtzZWxmLmNvbG9ySW5kaWNhdG9yUG9zaXRpb24ueD1ldmVudC5jbGllbnRYLXNlbGYuY29sb3JDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCxzZWxmLmNvbG9ySW5kaWNhdG9yUG9zaXRpb24ueT1ldmVudC5jbGllbnRZLXNlbGYuY29sb3JDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wLHNlbGYuY29sb3JNYXJrZXIuY3NzKHt0b3A6c2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uLnkrXCJweFwiLGxlZnQ6c2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uLngrXCJweFwifSk7bGV0IHBpY2tlZD1zZWxmLmdldFBpY2tlZENvbG9yKCk7c2VsZi5waWNrZWRDb2xvcj1gcmdiKCR7cGlja2VkLnJ9LCAke3BpY2tlZC5nfSwgJHtwaWNrZWQuYn0pYCxzZWxmLnJlcGx5KCl9fSksc2VsZi5jb2xvckNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLGV2ZW50PT57aXNDb2xvck1vdXNlRG93bj0hMSxzZWxmLmNhbGlicmF0ZU9wYWNpdHkoKX0pLHNlbGYub3BhY2l0eUNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsZXZlbnQ9PntsZXQgY3VycmVudFg9ZXZlbnQuY2xpZW50WC1zZWxmLm9wYWNpdHlDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCxjdXJyZW50WT1ldmVudC5jbGllbnRZLXNlbGYub3BhY2l0eUNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7aXNPcGFjaXR5TW91c2VEb3duPWN1cnJlbnRYPjAmJmN1cnJlbnRYPHNlbGYub3BhY2l0eUNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCYmY3VycmVudFk+MCYmY3VycmVudFk8c2VsZi5vcGFjaXR5Q2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodH0pLHNlbGYub3BhY2l0eUNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsZXZlbnQ9PntpZihpc09wYWNpdHlNb3VzZURvd24pe3NlbGYub3BhY2l0eUluZGljYXRvclBvc2l0aW9uLng9ZXZlbnQuY2xpZW50WC1zZWxmLm9wYWNpdHlDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCxzZWxmLm9wYWNpdHlJbmRpY2F0b3JQb3NpdGlvbi55PWV2ZW50LmNsaWVudFktc2VsZi5vcGFjaXR5Q2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCxzZWxmLm9wYWNpdHlNYXJrZXIuY3NzKHt0b3A6c2VsZi5vcGFjaXR5SW5kaWNhdG9yUG9zaXRpb24ueStcInB4XCJ9KTtsZXQgcGlja2VkPXNlbGYuZ2V0UGlja2VkT3BhY2l0eSgpO3NlbGYucGlja2VkQ29sb3I9YHJnYigke3BpY2tlZC5yfSwgJHtwaWNrZWQuZ30sICR7cGlja2VkLmJ9LCAke3BpY2tlZC5hfSlgLHNlbGYucmVwbHkoKX19KSxzZWxmLm9wYWNpdHlDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixldmVudD0+e2lzT3BhY2l0eU1vdXNlRG93bj0hMX0pfSksc2VsZi5yZXBseT0oKCk9PntzZWxmLmNvbnZlckNvbG9yKCksc2VsZi5waWNrZXIuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJjb2xvckNoYW5nZWRcIikpLHNlbGYucGlja2VyLmZpbmQoXCIjcGlja2VkLWNvbG9yXCIpLmNzcyh7YmFja2dyb3VuZENvbG9yOnNlbGYuY29udmVydGVkQ29sb3J9KSxzZWxmLnBpY2tlci5maW5kKFwiI3BpY2tlZC1jb2xvci12YWx1ZVwiKS5pbm5lclRleHQ9c2VsZi5jb252ZXJ0ZWRDb2xvcn0pLHNlbGYuY29udmVyQ29sb3I9KCgpPT57XCJIRVhcIj09c2VsZi5jb252ZXJ0VG8/c2VsZi5jb252ZXJ0ZWRDb2xvcj1zZWxmLnJnYlRvSGV4KHNlbGYucGlja2VkQ29sb3IpOlwiSFNMXCI9PXNlbGYuY29udmVydFRvP3NlbGYuY29udmVydGVkQ29sb3I9c2VsZi5yZ2JUb0hTTChzZWxmLnBpY2tlZENvbG9yKTpcIlJHQlwiPT1zZWxmLmNvbnZlcnRUbyYmKHNlbGYuY29udmVydGVkQ29sb3I9c2VsZi5waWNrZWRDb2xvcil9KSxzZWxmLm9uQ2hhbmdlZD0oY2FsbEJhY2s9PntzZWxmLnBpY2tlci5hZGRFdmVudExpc3RlbmVyKFwiY29sb3JDaGFuZ2VkXCIsZXZlbnQ9PntjYWxsQmFjayhzZWxmLmNvbnZlcnRlZENvbG9yKX0pfSksc2VsZi5nZXRQaWNrZWRDb2xvcj0oKCk9PntsZXQgaW1hZ2VEYXRhPXNlbGYuY29sb3JDb250ZXh0LmdldEltYWdlRGF0YShzZWxmLmNvbG9ySW5kaWNhdG9yUG9zaXRpb24ueCxzZWxmLmNvbG9ySW5kaWNhdG9yUG9zaXRpb24ueSwxLDEpO3JldHVybntyOmltYWdlRGF0YS5kYXRhWzBdLGc6aW1hZ2VEYXRhLmRhdGFbMV0sYjppbWFnZURhdGEuZGF0YVsyXX19KSxzZWxmLmdldFBpY2tlZE9wYWNpdHk9KCgpPT57bGV0IGltYWdlRGF0YT1zZWxmLm9wYWNpdHlDb250ZXh0LmdldEltYWdlRGF0YShzZWxmLm9wYWNpdHlJbmRpY2F0b3JQb3NpdGlvbi54LHNlbGYub3BhY2l0eUluZGljYXRvclBvc2l0aW9uLnksMSwxKSxhbHBoYT1NYXRoLmNlaWwoaW1hZ2VEYXRhLmRhdGFbM10vMjU1KjEwMCkvMTAwO3JldHVybntyOmltYWdlRGF0YS5kYXRhWzBdLGc6aW1hZ2VEYXRhLmRhdGFbMV0sYjppbWFnZURhdGEuZGF0YVsyXSxhOmFscGhhfX0pLHNlbGYuZHJhdz0ocGFyYW1zPT57c2VsZi5pbml0KHBhcmFtcyksc2VsZi5jYWxpYnJhdGVDb2xvcigpLHNlbGYuY2FsaWJyYXRlT3BhY2l0eSgpO2xldCBpbnRlcnZhbD1zZXRUaW1lb3V0KCgpPT57c2VsZi5hZGRlZD0hMCxjbGVhclRpbWVvdXQoaW50ZXJ2YWwpfSwyZTMpO3JldHVybiBzZWxmLnBpY2tlcn0pLHNlbGYuZGlzcG9zZT0oKCk9PntjbGVhckludGVydmFsKHNlbGYuaW50ZXJ2YWwpLHNlbGYucGlja2VyLnJlbW92ZSgpfSksc2VsZi5jb2xvclR5cGU9KChjb2xvcj1cIiNmZmZmZmZcIik9PntsZXQgdHlwZT1cInN0cmluZ1wiO2lmKDA9PWNvbG9yLmluZGV4T2YoXCIjXCIpJiYoY29sb3IubGVuZ3RoLTEpJTM9PTApdHlwZT1cImhleFwiO2Vsc2UgaWYoMD09Y29sb3IuaW5kZXhPZihcInJnYmFcIikpe2xldCB2YWx1ZXM9c2VsZi5mdW5jLmluQmV0d2Vlbihjb2xvcixcInJnYmEoXCIsXCIpXCIpOy0xIT12YWx1ZXMmJjQ9PXZhbHVlcy5zcGxpdChcIixcIikubGVuZ3RoJiYodHlwZT1cInJnYmFcIil9ZWxzZSBpZigwPT1jb2xvci5pbmRleE9mKFwicmdiXCIpKXtsZXQgdmFsdWVzPXNlbGYuZnVuYy5pbkJldHdlZW4oY29sb3IsXCJyZ2IoXCIsXCIpXCIpOy0xIT12YWx1ZXMmJjM9PXZhbHVlcy5zcGxpdChcIixcIikubGVuZ3RoJiYodHlwZT1cInJnYlwiKX1lbHNlIGlmKDA9PWNvbG9yLmluZGV4T2YoXCJoc2xhXCIpKXtsZXQgdmFsdWVzPXNlbGYuZnVuYy5pbkJldHdlZW4oY29sb3IsXCJoc2xhKFwiLFwiKVwiKTstMSE9dmFsdWVzJiY0PT12YWx1ZXMuc3BsaXQoXCIsXCIpLmxlbmd0aCYmKHR5cGU9XCJoc2xhXCIpfWVsc2UgaWYoMD09Y29sb3IuaW5kZXhPZihcImhzbFwiKSl7bGV0IHZhbHVlcz1zZWxmLmZ1bmMuaW5CZXR3ZWVuKGNvbG9yLFwiaHNsKFwiLFwiKVwiKTstMSE9dmFsdWVzJiYzPT12YWx1ZXMuc3BsaXQoXCIsXCIpLmxlbmd0aCYmKHR5cGU9XCJoc2xcIil9cmV0dXJuIHR5cGV9KSxzZWxmLmhleFRvUkdCPSgoaGV4PVwiI2ZmZmZmZlwiLGFscGhhPSEwKT0+e2xldCByPTAsZz0wLGI9MCxhPTI1NTtyZXR1cm4gND09aGV4Lmxlbmd0aD8ocj1cIjB4XCIraGV4WzFdK2hleFsxXSxnPVwiMHhcIitoZXhbMl0raGV4WzJdLGI9XCIweFwiK2hleFszXStoZXhbM10pOjU9PWhleC5sZW5ndGg/KHI9XCIweFwiK2hleFsxXStoZXhbMV0sZz1cIjB4XCIraGV4WzJdK2hleFsyXSxiPVwiMHhcIitoZXhbM10raGV4WzNdLGE9XCIweFwiK2hleFs0XStoZXhbNF0pOjc9PWhleC5sZW5ndGg/KHI9XCIweFwiK2hleFsxXStoZXhbMl0sZz1cIjB4XCIraGV4WzNdK2hleFs0XSxiPVwiMHhcIitoZXhbNV0raGV4WzZdKTo5PT1oZXgubGVuZ3RoJiYocj1cIjB4XCIraGV4WzFdK2hleFsyXSxnPVwiMHhcIitoZXhbM10raGV4WzRdLGI9XCIweFwiK2hleFs1XStoZXhbNl0sYT1cIjB4XCIraGV4WzddK2hleFs4XSksYT0rKGEvMjU1KS50b0ZpeGVkKDMpLDA9PWFscGhhP2ByZ2IoJHsrcn0sICR7K2d9LCAkeytifSlgOmByZ2IoJHsrcn0sICR7K2d9LCAkeytifSwgJHthfSlgfSksc2VsZi5oZXhUb0hTTD0oKGhleD1cIiNmZmZmZmZcIixhbHBoYT0hMCk9PntsZXQgY29sb3I9c2VsZi5oZXhUb1JHQihoZXgsYWxwaGEpO3JldHVybiBjb2xvcj1zZWxmLnJnYlRvSFNMKGNvbG9yLGFscGhhKX0pLHNlbGYucmdiVG9IZXg9KChyZ2I9XCJyZ2IoMCwgMCwgMClcIixhbHBoYT0hMCk9PntsZXQgc3RhcnQ9cmdiLmluZGV4T2YoXCIoXCIpKzEsZW5kPXJnYi5pbmRleE9mKFwiKVwiKSxbcixnLGIsYV09cmdiLnNsaWNlKHN0YXJ0LGVuZCkuc3BsaXQoXCIsXCIpO3NlbGYuZnVuYy5pc3NldChhKXx8KGE9MSkscj0oK3IpLnRvU3RyaW5nKDE2KSxnPSgrZykudG9TdHJpbmcoMTYpLGI9KCtiKS50b1N0cmluZygxNiksYT1NYXRoLnJvdW5kKDI1NSphKS50b1N0cmluZygxNiksMT09ci5sZW5ndGgmJihyPWAwJHtyfWApLDE9PWcubGVuZ3RoJiYoZz1gMCR7Z31gKSwxPT1iLmxlbmd0aCYmKGI9YDAke2J9YCksMT09YS5sZW5ndGgmJihhPWAwJHthfWApO2xldCBoZXg9XCIjXCI7cmV0dXJuIGhleCs9MCE9YWxwaGE/YCR7cn0ke2d9JHtifSR7YX1gOmAke3J9JHtnfSR7Yn1gfSksc2VsZi5yZ2JUb0hTTD0oKHJnYj1cInJnYigwLCAwLCAwKVwiLGFscGhhPSEwKT0+e2xldCBzdGFydD1yZ2IuaW5kZXhPZihcIihcIikrMSxlbmQ9cmdiLmluZGV4T2YoXCIpXCIpLFtyLGcsYixhXT1yZ2Iuc2xpY2Uoc3RhcnQsZW5kKS5zcGxpdChcIixcIik7Y29uc29sZS5sb2cocixnLGIpLHNlbGYuZnVuYy5pc3NldChhKXx8KGE9MSksci89MjI1LGcvPTIyNSxiLz0yMjU7bGV0IGNtaW49TWF0aC5taW4ocixnLGIpLGNtYXg9TWF0aC5tYXgocixnLGIpLGRlbHRhPWNtYXgtY21pbixoPTAscz0wLGw9MDswPT1kZWx0YT9oPTA6Y21heD09cj9oPShnLWIpL2RlbHRhJTY6Y21heD09Zz9oPShiLXIpL2RlbHRhKzI6Y21heD09ZyYmKGg9KHItZykvZGVsdGErNCksKGg9TWF0aC5yb3VuZCg2MCpoKSk8MCYmKGgrPTM2MCksbD0oY21heCtjbWluKS8yLHM9MD09ZGVsdGE/MDpkZWx0YS8oMS1NYXRoLmFicygyKmwtMSkpLGw9KygxMDAqbCkudG9GaXhlZCgxKSxzPSsoMTAwKnMpLnRvRml4ZWQoMSk7bGV0IGhzbD1cImhzbFwiO3JldHVybiBoc2wrPTA9PWFscGhhP2AoJHtofSwgJHtzfSUsICR7bH0lKWA6YCgke2h9LCAke3N9JSwgJHtsfSUsICR7YX0pYH0pLHNlbGYuaHNsVG9SR0I9KChoc2w9XCJoc2woMCwgMCUsIDAlKVwiLGFscGhhPSEwKT0+e2xldCByZ2I9XCJyZ2JcIixzdGFydD1oc2wuaW5kZXhPZihcIihcIikrMSxlbmQ9aHNsLmluZGV4T2YoXCIpXCIpLFtoLHMsbCxhXT1oc2wuc2xpY2Uoc3RhcnQsZW5kKS5zcGxpdChcIixcIik7c2VsZi5mdW5jLmlzc2V0KGEpfHwoYT0xKSxjb25zb2xlLmxvZyhoLHMsbCksaC5pbmRleE9mKFwiZGVnXCIpPi0xP2g9aC5zdWJzdHIoMCxoLmxlbmd0aC0zKTpoLmluZGV4T2YoXCJyYWRcIik+LTE/aD1NYXRoLnJvdW5kKGguc3Vic3RyKDAsaC5sZW5ndGgtMykqKDE4MC9NYXRoLlBJKSk6aC5pbmRleE9mKFwidHVyblwiKT4tMSYmKGg9TWF0aC5yb3VuZCgzNjAqaC5zdWJzdHIoMCxoLmxlbmd0aC00KSkpLGg+PTM2MCYmKGglPTM2MCkscz1zLnJlcGxhY2UoXCIlXCIsXCJcIikvMTAwLGw9bC5yZXBsYWNlKFwiJVwiLFwiXCIpLzEwMDtsZXQgYz0oMS1NYXRoLmFicygyKmwtMSkpKnMseD1jKigxLU1hdGguYWJzKGgvNjAlMi0xKSksbT1sLWMvMixyPTAsZz0wLGI9MDtyZXR1cm4gMDw9aCYmaDw2MD8ocj1jLGc9eCxiPTApOjYwPD1oJiZoPDEyMD8ocj14LGc9YyxiPTApOjEyMDw9aCYmaDwxODA/KHI9MCxnPWMsYj14KToxODA8PWgmJmg8MjQwPyhyPTAsZz14LGI9Yyk6MjQwPD1oJiZoPDMwMD8ocj14LGc9MCxiPWMpOjMwMDw9aCYmaDwzNjAmJihyPWMsZz0wLGI9eCkscj1NYXRoLnJvdW5kKDI1NSoocittKSksZz1NYXRoLnJvdW5kKDI1NSooZyttKSksYj1NYXRoLnJvdW5kKDI1NSooYittKSkscmdiKz0wPT1hbHBoYT9gKCR7cn0sICR7Z30sICR7Yn0pYDpgKCR7cn0sICR7Z30sICR7Yn0sICR7YX0pYH0pLHNlbGYuaHNsVG9IZXg9KChoc2w9XCJcIixhbHBoYT0hMCk9PntsZXQgY29sb3I9c2VsZi5oc2xUb1JHQihoc2wsYWxwaGEpO3JldHVybiBzZWxmLnJnYlRvSGV4KGNvbG9yLGFscGhhKX0pLHNlbGYuYWRkT3BhY2l0eT0oKGNvbG9yPVwicmdiKDAsIDAsIDApXCIsb3BhY2l0eT0uNSk9PntsZXQgc3RhcnQ9Y29sb3IuaW5kZXhPZihcIihcIikrMSxlbmQ9Y29sb3IuaW5kZXhPZihcIilcIikscG9pbnRzPWNvbG9yLnNsaWNlKHN0YXJ0LGVuZCkuc3BsaXQoXCIsXCIpO3JldHVybiBwb2ludHNbM109b3BhY2l0eSxgcmdiYSgke3BvaW50cy5qb2luKFwiLFwiKX0pYH0pLHNlbGYuZ2V0T3BhY2l0eT0oKGNvbG9yPVwicmdiKDAsIDAsIDApXCIpPT57Y29sb3I9c2VsZi5mdW5jLmluQmV0d2Vlbihjb2xvcixcIihcIixcIilcIik7bGV0W3IsZyxiLGFdPWNvbG9yLnNwbGl0KFwiLFwiKTtyZXR1cm4gYS50cmltKCl9KSxzZWxmLmludmVydENvbG9yPSgoY29sb3I9XCIjZmZmZmZmXCIpPT57bGV0IGludmVydCx0eXBlPXNlbGYuY29sb3JUeXBlKGNvbG9yKTtpZihcImhleFwiPT10eXBlKWNvbG9yPWNvbG9yLnJlcGxhY2UoXCIjXCIsXCJcIiksaW52ZXJ0PVwiI1wiK3NlbGYuaW52ZXJ0SGV4KGNvbG9yKTtlbHNlIGlmKFwicmdiXCI9PXR5cGUpY29sb3I9c2VsZi5yZ2JUb0hleChjb2xvcikucmVwbGFjZShcIiNcIixcIlwiKSxpbnZlcnQ9c2VsZi5pbnZlcnRIZXgoY29sb3IpLGludmVydD1zZWxmLmhleFRvUkdCKGludmVydCk7ZWxzZSBpZihcInJnYmFcIj09dHlwZSl7bGV0IG9wYWNpdHk9c2VsZi5nZXRPcGFjaXR5KGNvbG9yKTtjb2xvcj1zZWxmLnJnYlRvSGV4KGNvbG9yKS5yZXBsYWNlKFwiI1wiLFwiXCIpLGludmVydD1zZWxmLmludmVydEhleChjb2xvciksaW52ZXJ0PXNlbGYuaGV4VG9SR0IoaW52ZXJ0KSxpbnZlcnQ9c2VsZi5hZGRPcGFjaXR5KGludmVydCxvcGFjaXR5KX1yZXR1cm4gaW52ZXJ0fSksc2VsZi5pbnZlcnRIZXg9KChoZXg9XCJmZmZmZmZcIik9PigxNjc3NzIxNV5OdW1iZXIoYDB4MSR7aGV4fWApKS50b1N0cmluZygxNikuc3Vic3RyKDEpLnRvVXBwZXJDYXNlKCkpLHNlbGZ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa052Ykc5eVVHbGphMlZ5TG1weklsMHNJbTVoYldWeklqcGJJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0p6Wld4bUlpd2lablZ1WXlJc0lrWjFibU1pTENKbGJHVnRaVzUwVFc5a2FXWnBaWElpTENKVVpXMXdiR0YwWlNJc0ltVnNaVzFsYm5STWFXSnlZWEo1SWl3aVkyOXNiM0pKYm1ScFkyRjBiM0pRYjNOcGRHbHZiaUlzSW5naUxDSjVJaXdpYjNCaFkybDBlVWx1WkdsallYUnZjbEJ2YzJsMGFXOXVJaXdpWTI5dWRtVnlkRlJ2SWl3aWFXNXBkQ0lzSW5CaGNtRnRjeUlzSW5CcFkydGxjaUlzSW1OeVpXRjBaVVZzWlcxbGJuUWlMQ0psYkdWdFpXNTBJaXdpWVhSMGNtbGlkWFJsY3lJc0ltTnNZWE56SWl3aVkyaHBiR1J5Wlc0aUxDSnBaQ0lzSW05d2RHbHZibk1pTENKamIyeHZjbGRwYm1SdmR5SXNJbVpwYm1RaUxDSnZjR0ZqYVhSNVYybHVaRzkzSWl3aVkyOXNiM0pEWVc1MllYTWlMQ0p2Y0dGamFYUjVRMkZ1ZG1Geklpd2lZMjlzYjNKTllYSnJaWElpTENKdmNHRmphWFI1VFdGeWEyVnlJaXdpZDJsa2RHZ2lMQ0pvWldsbmFIUWlMQ0p3YVdOclpXUkRiMnh2Y2lJc0ltTnZiRzl5SWl3aVkzTnpJaXdpWTI5c2IzSkRiMjUwWlhoMElpd2laMlYwUTI5dWRHVjRkQ0lzSW05d1lXTnBkSGxEYjI1MFpYaDBJaXdpYVc1dVpYSlVaWGgwSWl3aWIyNURhR0Z1WjJWa0lpd2lkbUZzZFdVaUxDSnlaWEJzZVNJc0lteHBjM1JsYmlJc0ltTmhiR2xpY21GMFpVTnZiRzl5SWl3aVkyOXNiM0pIY21Ga2FXVnVkQ0lzSW1OeVpXRjBaVXhwYm1WaGNrZHlZV1JwWlc1MElpd2lZV1JrUTI5c2IzSlRkRzl3SWl3aVptbHNiRk4wZVd4bElpd2labWxzYkZKbFkzUWlMQ0pqWVd4cFluSmhkR1ZQY0dGamFYUjVJaXdpY21kaVlTSXNJbU5zWldGeVVtVmpkQ0lzSW05d1lXTnBkSGxIY21Ga2FXVnVkQ0lzSW1raUxDSmhaR1JQY0dGamFYUjVJaXdpYVhORGIyeHZjazF2ZFhObFJHOTNiaUlzSW1selQzQmhZMmwwZVUxdmRYTmxSRzkzYmlJc0ltNXZkRUoxWW1Kc1pXUkZkbVZ1ZENJc0ltVjJaVzUwSWl3aVlXUmtaV1FpTENKa2FYTndiM05sSWl3aVlXUmtSWFpsYm5STWFYTjBaVzVsY2lJc0ltTjFjbkpsYm5SWUlpd2lZMnhwWlc1MFdDSXNJbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENJc0lteGxablFpTENKamRYSnlaVzUwV1NJc0ltTnNhV1Z1ZEZraUxDSjBiM0FpTENKd2FXTnJaV1FpTENKblpYUlFhV05yWldSRGIyeHZjaUlzSW5JaUxDSm5JaXdpWWlJc0ltZGxkRkJwWTJ0bFpFOXdZV05wZEhraUxDSmhJaXdpWTI5dWRtVnlRMjlzYjNJaUxDSmthWE53WVhSamFFVjJaVzUwSWl3aVEzVnpkRzl0UlhabGJuUWlMQ0ppWVdOclozSnZkVzVrUTI5c2IzSWlMQ0pqYjI1MlpYSjBaV1JEYjJ4dmNpSXNJbkpuWWxSdlNHVjRJaXdpY21kaVZHOUlVMHdpTENKallXeHNRbUZqYXlJc0ltbHRZV2RsUkdGMFlTSXNJbWRsZEVsdFlXZGxSR0YwWVNJc0ltUmhkR0VpTENKaGJIQm9ZU0lzSWsxaGRHZ2lMQ0pqWldsc0lpd2laSEpoZHlJc0ltbHVkR1Z5ZG1Gc0lpd2ljMlYwVkdsdFpXOTFkQ0lzSW1Oc1pXRnlWR2x0Wlc5MWRDSXNJbU5zWldGeVNXNTBaWEoyWVd3aUxDSnlaVzF2ZG1VaUxDSmpiMnh2Y2xSNWNHVWlMQ0owZVhCbElpd2lhVzVrWlhoUFppSXNJbXhsYm1kMGFDSXNJblpoYkhWbGN5SXNJbWx1UW1WMGQyVmxiaUlzSW5Od2JHbDBJaXdpYUdWNFZHOVNSMElpTENKb1pYZ2lMQ0owYjBacGVHVmtJaXdpYUdWNFZHOUlVMHdpTENKeVoySWlMQ0p6ZEdGeWRDSXNJbVZ1WkNJc0luTnNhV05sSWl3aWFYTnpaWFFpTENKMGIxTjBjbWx1WnlJc0luSnZkVzVrSWl3aVkyOXVjMjlzWlNJc0lteHZaeUlzSW1OdGFXNGlMQ0p0YVc0aUxDSmpiV0Y0SWl3aWJXRjRJaXdpWkdWc2RHRWlMQ0pvSWl3aWN5SXNJbXdpTENKaFluTWlMQ0pvYzJ3aUxDSm9jMnhVYjFKSFFpSXNJbk4xWW5OMGNpSXNJbEJKSWl3aWNtVndiR0ZqWlNJc0ltTWlMQ0p0SWl3aWFITnNWRzlJWlhnaUxDSnZjR0ZqYVhSNUlpd2ljRzlwYm5Seklpd2lhbTlwYmlJc0ltZGxkRTl3WVdOcGRIa2lMQ0owY21sdElpd2lhVzUyWlhKMFEyOXNiM0lpTENKcGJuWmxjblFpTENKcGJuWmxjblJJWlhnaUxDSk9kVzFpWlhJaUxDSjBiMVZ3Y0dWeVEyRnpaU0pkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzZVVSQk5tZENRVUVzYlVKQlFVOURMRU5CTVdkQ1VDeFZRVUZCTEVOQlJVa3NTVUZCU1VNc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQmNXZENXQ3hQUVhCblFrRkJMRWxCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVU4c1NVRkJTVU1zVVVGQlFVRXNRMEZEYUVKR0xFbEJRVUZCTEVOQlFVdEhMR1ZCUVVGQkxFTkJRV3RDTEVsQlFVbERMRmxCUVVGQkxFTkJRek5DU2l4SlFVRkJRU3hEUVVGTFJ5eGxRVUZCUVN4RFFVRm5Ra1VzWTBGQlFVRXNSVUZCUVVFc1EwRkRja0pNTEVsQlFVRkJMRU5CUVV0TkxITkNRVUZCUVN4RFFVRjVRaXhEUVVGRlF5eERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkRla05TTEVsQlFVRkJMRU5CUVV0VExIZENRVUZCUVN4RFFVRXlRaXhEUVVGRlJpeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkRNME5TTEVsQlFVRkJMRU5CUVV0VkxGTkJRVUZCTEVOQlFWa3NTMEZCUVN4RFFVVnFRbFlzU1VGQlFVRXNRMEZCUzFjc1NVRkJRVUVzUlVGQlVVTXNUVUZCUVVFc1IwRkRWRm9zU1VGQlFVRXNRMEZCUzJFc1RVRkJRVUVzUTBGQlUySXNTVUZCUVVFc1EwRkJTMGNzWlVGQlFVRXNRMEZCWjBKWExHRkJRVUZCTEVOQlFXTXNRMEZETjBORExFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzWTBGQlFTeERRVUZCTEVOQlFXdENReXhSUVVGQlFTeERRVUZWTEVOQlF6ZEVMRU5CUTBsSUxFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRVZCUVVGQkxFTkJRVWtzYzBKQlFVRXNRMEZCUVN4RFFVRXdRa1FzVVVGQlFVRXNRMEZCVlN4RFFVTnVSU3hEUVVOSlNDeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhGUVVGQlFTeERRVUZKTERSQ1FVRkJMRU5CUVVFc1EwRkJaME5FTEZGQlFVRkJMRU5CUVZVc1EwRkRla1VzUTBGQlJVZ3NUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUlVGQlFVRXNRMEZCU1N4eFFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGRrTXNRMEZCUlVvc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVY3NSVUZCUVVFc1EwRkJTU3c0UWtGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUnpkRExFTkJRMGxLTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFVkJRVUZCTEVOQlFVa3NLMEpCUVVFc1EwRkJRU3hEUVVGdFEwUXNVVUZCUVVFc1EwRkJWU3hEUVVNMVJTeERRVUZGU0N4UFFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlJ5eEZRVUZCUVN4RFFVRkpMSGRDUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4yUXl4RFFVRkZTaXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4RlFVRkJRU3hEUVVGSkxHZERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJTM0pFTEVOQlEwbEtMRTlCUVVGQkxFTkJRVk1zUzBGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEVWQlFVRkJMRU5CUVVrc2NVSkJRVUVzUTBGQlFTeERRVUY1UWtRc1VVRkJRVUVzUTBGQlZTeERRVU5xUlN4RFFVRkZTQ3hQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4RlFVRkJRU3hEUVVGSkxHTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzSkRMRU5CUTBsS0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRVZCUVVGQkxFTkJRVWtzY1VKQlFVRXNRMEZCUVN4RFFVRjVRa1FzVVVGQlFVRXNRMEZCVlN4RFFVTnNSU3hEUVVGRlNDeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhGUVVGQlFTeERRVUZKTEhGQ1FVRkJMRU5CUVVFc1EwRkJlVUpETEU5QlFVRkJMRU5CUVZNc1EwRkJReXhMUVVGQkxFTkJRVThzUzBGQlFTeERRVUZQTEV0QlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNoR0xFTkJRVVZNTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFVkJRVUZCTEVOQlFVa3NiMEpCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRlJOMFJ1UWl4SlFVRkJRU3hEUVVGTGNVSXNWMEZCUVVFc1EwRkJZM0pDTEVsQlFVRkJMRU5CUVV0aExFMUJRVUZCTEVOQlFVOVRMRWxCUVVGQkxFTkJRVXNzTmtKQlFVRXNRMEZCUVN4RFFVTndRM1JDTEVsQlFVRkJMRU5CUVV0MVFpeGhRVUZCUVN4RFFVRm5RblpDTEVsQlFVRkJMRU5CUVV0aExFMUJRVUZCTEVOQlFVOVRMRWxCUVVGQkxFTkJRVXNzWjBOQlFVRXNRMEZCUVN4RFFVTjBRM1JDTEVsQlFVRkJMRU5CUVV0M1FpeFhRVUZCUVN4RFFVRmplRUlzU1VGQlFVRXNRMEZCUzJFc1RVRkJRVUVzUTBGQlQxTXNTVUZCUVVFc1EwRkJTeXh6UWtGQlFTeERRVUZCTEVOQlEzQkRkRUlzU1VGQlFVRXNRMEZCUzNsQ0xHRkJRVUZCTEVOQlFXZENla0lzU1VGQlFVRXNRMEZCUzJFc1RVRkJRVUVzUTBGQlQxTXNTVUZCUVVFc1EwRkJTeXg1UWtGQlFTeERRVUZCTEVOQlEzUkRkRUlzU1VGQlFVRXNRMEZCU3pCQ0xGZEJRVUZCTEVOQlFXTXhRaXhKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGUFV5eEpRVUZCUVN4RFFVRkxMQ3RDUVVGQkxFTkJRVUVzUTBGRGNFTjBRaXhKUVVGQlFTeERRVUZMTWtJc1lVRkJRVUVzUTBGQlowSXpRaXhKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGUFV5eEpRVUZCUVN4RFFVRkxMR2xEUVVGQkxFTkJRVUVzUTBGRGRFTjBRaXhKUVVGQlFTeERRVUZMTkVJc1MwRkJRVUVzUTBGQlVXaENMRTFCUVVGQkxFTkJRVTluUWl4TFFVRkJRU3hEUVVOd1FqVkNMRWxCUVVGQkxFTkJRVXMyUWl4TlFVRkJRU3hEUVVGVGFrSXNUVUZCUVVFc1EwRkJUMmxDTEUxQlFVRkJMRU5CUTNKQ04wSXNTVUZCUVVFc1EwRkJTemhDTEZkQlFVRkJMRU5CUVdOc1FpeE5RVUZCUVN4RFFVRlBiVUlzUzBGQlFVRXNSVUZCVXl4alFVRkJMRU5CUTI1REwwSXNTVUZCUVVFc1EwRkJTM0ZDTEZkQlFVRkJMRU5CUVZsWExFZEJRVUZCTEVOQlFVa3NRMEZCUlVnc1RVRkJRVUVzUTBGQlVUZENMRWxCUVVGQkxFTkJRVXMyUWl4TlFVRkJRU3hEUVVGVExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlF6ZEROMElzU1VGQlFVRXNRMEZCUzNkQ0xGZEJRVUZCTEVOQlFWbEpMRXRCUVVGQkxFTkJRVkUxUWl4SlFVRkJRU3hEUVVGTE5FSXNTMEZCUVVFc1EwRkRPVUkxUWl4SlFVRkJRU3hEUVVGTGQwSXNWMEZCUVVFc1EwRkJXVXNzVFVGQlFVRXNRMEZCVXpkQ0xFbEJRVUZCTEVOQlFVczJRaXhOUVVGQlFTeERRVU12UWpkQ0xFbEJRVUZCTEVOQlFVdDFRaXhoUVVGQlFTeERRVUZqVXl4SFFVRkJRU3hEUVVGSkxFTkJRVVZJTEUxQlFVRkJMRU5CUVZFM1FpeEpRVUZCUVN4RFFVRkxOa0lzVFVGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNdlF6ZENMRWxCUVVGQkxFTkJRVXQ1UWl4aFFVRkJRU3hEUVVGalNTeE5RVUZCUVN4RFFVRlROMElzU1VGQlFVRXNRMEZCU3paQ0xFMUJRVUZCTEVOQlEycEROMElzU1VGQlFVRXNRMEZCUzNsQ0xHRkJRVUZCTEVOQlFXTkhMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVWN6UWpWQ0xFbEJRVUZCTEVOQlFVdHBReXhaUVVGQlFTeERRVUZsYWtNc1NVRkJRVUVzUTBGQlMzZENMRmRCUVVGQkxFTkJRVmxWTEZWQlFVRkJMRU5CUVZjc1NVRkJRU3hEUVVGQkxFTkJRMmhFYkVNc1NVRkJRVUVzUTBGQlMyMURMR05CUVVGQkxFTkJRV2xDYmtNc1NVRkJRVUVzUTBGQlMzbENMR0ZCUVVGQkxFTkJRV05UTEZWQlFVRkJMRU5CUVZjc1NVRkJRU3hEUVVGQkxFTkJSWEJFYkVNc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJUMU1zU1VGQlFVRXNRMEZCU3l4eFFrRkJRU3hEUVVGQkxFTkJRWFZDWXl4VFFVRkJRU3hEUVVGWmNFTXNTVUZCUVVFc1EwRkJTemhDTEZkQlFVRkJMRU5CUTNwRU9VSXNTVUZCUVVFc1EwRkJTMkVzVFVGQlFVRXNRMEZCVDFNc1NVRkJRVUVzUTBGQlN5eHpRa0ZCUVN4RFFVRkJMRU5CUVhkQ1pTeFRRVUZCUVN4RFFVRlZReXhMUVVGQlFTeEZRVUZCUVN4RFFVTXZRM1JETEVsQlFVRkJMRU5CUVV0VkxGTkJRVUZCTEVOQlFWazBRaXhMUVVGQlFTeERRVU5xUW5SRExFbEJRVUZCTEVOQlFVdDFReXhMUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRVZGtNc1NVRkJRVUVzUTBGQlMzZERMRTFCUVVGQkxFVkJRVUZCTEVOQlJVVjRReXhKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZG9RbUlzU1VGQlFVRXNRMEZCUzNsRExHTkJRVUZCTEVWQlFXbENMRWxCUVVFc1EwRkRiRUlzU1VGQlNVTXNZVUZCUVVFc1EwRkJaMEl4UXl4SlFVRkJRU3hEUVVGTGFVTXNXVUZCUVVFc1EwRkJZVlVzYjBKQlFVRkJMRU5CUVhGQ0xFTkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVY3pReXhKUVVGQlFTeERRVUZMTkVJc1MwRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVRXNRMEZITjBWakxHRkJRVUZCTEVOQlFXTkZMRmxCUVVGQkxFTkJRV0VzUTBGQlFTeERRVUZITEdkQ1FVRkJMRU5CUVVFc1EwRkRPVUpHTEdGQlFVRkJMRU5CUVdORkxGbEJRVUZCTEVOQlFXRXNSMEZCUVN4RFFVRk5MR3RDUVVGQkxFTkJRVUVzUTBGRGFrTkdMR0ZCUVVGQkxFTkJRV05GTEZsQlFVRkJMRU5CUVdFc1IwRkJRU3hEUVVGTkxHZENRVUZCTEVOQlFVRXNRMEZEYWtOR0xHRkJRVUZCTEVOQlFXTkZMRmxCUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZOTEd0Q1FVRkJMRU5CUVVFc1EwRkRha05HTEdGQlFVRkJMRU5CUVdORkxGbEJRVUZCTEVOQlFXRXNSMEZCUVN4RFFVRk5MR2RDUVVGQkxFTkJRVUVzUTBGRGFrTkdMR0ZCUVVGQkxFTkJRV05GTEZsQlFVRkJMRU5CUVdFc1IwRkJRU3hEUVVGTkxHdENRVUZCTEVOQlFVRXNRMEZEYWtOR0xHRkJRVUZCTEVOQlFXTkZMRmxCUVVGQkxFTkJRV0VzUTBGQlFTeERRVUZITEdkQ1FVRkJMRU5CUVVFc1EwRkZPVUkxUXl4SlFVRkJRU3hEUVVGTGFVTXNXVUZCUVVFc1EwRkJZVmtzVTBGQlFVRXNRMEZCV1Vnc1lVRkJRVUVzUTBGRE9VSXhReXhKUVVGQlFTeERRVUZMYVVNc1dVRkJRVUVzUTBGQllXRXNVVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZIT1VNc1NVRkJRVUVzUTBGQlN6UkNMRXRCUVVGQkxFTkJRVTgxUWl4SlFVRkJRU3hEUVVGTE5rSXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVSaExHRkJRVUZCTEVOQlFXZENNVU1zU1VGQlFVRXNRMEZCUzJsRExGbEJRVUZCTEVOQlFXRlZMRzlDUVVGQlFTeERRVUZ4UWl4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGSExFTkJRVUVzUTBGQlJ6TkRMRWxCUVVGQkxFTkJRVXMyUWl4TlFVRkJRU3hEUVVGQlFTeEZRVU4yUkdVc1dVRkJRVUVzUTBGQllTeERRVUZCTEVOQlFVY3NkMEpCUVVFc1EwRkJRU3hEUVVNNVFrWXNZVUZCUVVFc1EwRkJZMFVzV1VGQlFVRXNRMEZCWVN4RlFVRkJMRU5CUVVzc2QwSkJRVUVzUTBGQlFTeERRVU5vUTBZc1lVRkJRVUVzUTBGQlkwVXNXVUZCUVVFc1EwRkJZU3hGUVVGQkxFTkJRVXNzYTBKQlFVRXNRMEZCUVN4RFFVTm9RMFlzWVVGQlFVRXNRMEZCWTBVc1dVRkJRVUVzUTBGQllTeERRVUZCTEVOQlFVY3NhMEpCUVVFc1EwRkJRU3hEUVVVNVFqVkRMRWxCUVVGQkxFTkJRVXRwUXl4WlFVRkJRU3hEUVVGaFdTeFRRVUZCUVN4RFFVRlpTQ3hoUVVGQlFTeERRVU01UWpGRExFbEJRVUZCTEVOQlFVdHBReXhaUVVGQlFTeERRVUZoWVN4UlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVYzVReXhKUVVGQlFTeERRVUZMTkVJc1MwRkJRVUVzUTBGQlR6VkNMRWxCUVVGQkxFTkJRVXMyUWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkMFJEZENMRWxCUVVGQkxFTkJRVXNyUXl4blFrRkJRVUVzUlVGQmJVSXNTVUZCUVN4RFFVTndRaXhKUVVGSlF5eEpRVUZCUVN4RFFVVkthRVFzU1VGQlFVRXNRMEZCUzIxRExHTkJRVUZCTEVOQlFXVmpMRk5CUVVGQkxFTkJRVlVzUTBGQlFTeERRVUZITEVOQlFVRXNRMEZCUjJwRUxFbEJRVUZCTEVOQlFVdDVRaXhoUVVGQlFTeERRVUZqUnl4TFFVRkJRU3hEUVVGUE5VSXNTVUZCUVVFc1EwRkJTelpDTEUxQlFVRkJMRU5CUVVGQkxFTkJRMjVGTEVsQlFVbHhRaXhsUVVGQlFTeERRVUZyUW14RUxFbEJRVUZCTEVOQlFVdHRReXhqUVVGQlFTeERRVUZsVVN4dlFrRkJRVUVzUTBGQmNVSXNRMEZCUVN4RFFVRkhMRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWN6UXl4SlFVRkJRU3hEUVVGTGVVSXNZVUZCUVVFc1EwRkJZMGtzVFVGQlFVRXNRMEZCUVVFc1EwRkZNMFlzU1VGQlN5eEpRVUZKYzBJc1EwRkJRVUVzUTBGQlNTeEhRVUZCTEVOQlFVdEJMRU5CUVVGQkxFVkJRVXNzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGQlFTeERRVU4wUWtnc1NVRkJRVUVzUTBGQlQyaEVMRWxCUVVGQkxFTkJRVXR2UkN4VlFVRkJRU3hEUVVGWGNFUXNTVUZCUVVFc1EwRkJTemhDTEZkQlFVRkJMRU5CUVdGeFFpeERRVUZCUVN4RFFVRkpMRWRCUVVFc1EwRkJRU3hEUVVNM1EwUXNaVUZCUVVFc1EwRkJaMEpPTEZsQlFVRkJMRU5CUVdGUExFTkJRVUZCTEVOQlFVa3NSMEZCUVN4RFFVRkxTQ3hKUVVGQlFTeERRVUZCUVN4RFFVY3hRMmhFTEVsQlFVRkJMRU5CUVV0dFF5eGpRVUZCUVN4RFFVRmxWU3hUUVVGQlFTeERRVUZaU3l4bFFVRkJRU3hEUVVOb1EyeEVMRWxCUVVGQkxFTkJRVXR0UXl4alFVRkJRU3hEUVVGbFl5eFRRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWRxUkN4SlFVRkJRU3hEUVVGTGVVSXNZVUZCUVVFc1EwRkJZMGNzUzBGQlFVRXNRMEZCVHpWQ0xFbEJRVUZCTEVOQlFVdDVRaXhoUVVGQlFTeERRVUZqU1N4TlFVRkJRU3hEUVVGQlFTeERRVU5xUmpkQ0xFbEJRVUZCTEVOQlFVdHRReXhqUVVGQlFTeERRVUZsVnl4UlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVYzVReXhKUVVGQlFTeERRVUZMZVVJc1lVRkJRVUVzUTBGQlkwY3NTMEZCUVVFc1EwRkJUelZDTEVsQlFVRkJMRU5CUVV0NVFpeGhRVUZCUVN4RFFVRmpTU3hOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWR3UmpkQ0xFbEJRVUZCTEVOQlFVdDNReXhOUVVGQlFTeEZRVUZUTEVsQlFVRXNRMEZEVml4SlFVRkpZU3huUWtGQlFVRXNRMEZCUVVFc1EwRkJiVUlzUTBGQlFTeERRVU51UWtNc2EwSkJRVUZCTEVOQlFVRkJMRU5CUVhGQ0xFTkJRVUVzUTBGRmVrSjBSQ3hKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGUE1FTXNaVUZCUVVFc1EwRkJaMElzVDBGQlFTeERRVUZUUXl4TFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVTTNRbmhFTEVsQlFVRkJMRU5CUVV0NVJDeExRVUZCUVN4RlFVRlZTaXhuUWtGQlFVRXNSVUZCY1VKRExHdENRVUZCUVN4RlFVTndRM1JFTEVsQlFVRkJMRU5CUVVzd1JDeFBRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFUaENZakZFTEVsQlFVRkJMRU5CUVV0M1FpeFhRVUZCUVN4RFFVRlpiVU1zWjBKQlFVRkJMRU5CUVdsQ0xGZEJRVUVzUTBFeFFsWklMRXRCUVVGQkxFVkJRVUZCTEVOQlEzQkNMRWxCUVVsSkxGRkJRVUZCTEVOQlFWZEtMRXRCUVVGQkxFTkJRVTFMTEU5QlFVRkJMRU5CUVZVM1JDeEpRVUZCUVN4RFFVRkxkMElzVjBGQlFVRXNRMEZCV1hORExIRkNRVUZCUVN4RlFVRkJRU3hEUVVGM1FrTXNTVUZCUVVFc1EwRkRjRVZETEZGQlFVRkJMRU5CUVZkU0xFdEJRVUZCTEVOQlFVMVRMRTlCUVVGQkxFTkJRVlZxUlN4SlFVRkJRU3hEUVVGTGQwSXNWMEZCUVVFc1EwRkJXWE5ETEhGQ1FVRkJRU3hGUVVGQlFTeERRVUYzUWtrc1IwRkJRVUVzUTBGSGVFVmlMR2RDUVVGQlFTeERRVUZ2UWs4c1VVRkJRVUVzUTBGQlZ5eERRVUZCTEVWQlFVdEJMRkZCUVVGQkxFTkJRVmMxUkN4SlFVRkJRU3hEUVVGTGQwSXNWMEZCUVVFc1EwRkJXWE5ETEhGQ1FVRkJRU3hGUVVGQlFTeERRVUYzUW14RExFdEJRVUZCTEVWQlFWTnZReXhSUVVGQlFTeERRVUZYTEVOQlFVRXNSVUZCUzBFc1VVRkJRVUVzUTBGQlYyaEZMRWxCUVVGQkxFTkJRVXQzUWl4WFFVRkJRU3hEUVVGWmMwTXNjVUpCUVVGQkxFVkJRVUZCTEVOQlFYZENha01zVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGelFucExOMElzU1VGQlFVRXNRMEZCUzNkQ0xGZEJRVUZCTEVOQlFWbHRReXhuUWtGQlFVRXNRMEZCYVVJc1YwRkJRU3hEUVc1Q1ZrZ3NTMEZCUVVFc1JVRkJRVUVzUTBGRGNFSXNSMEZCU1Vnc1owSkJRVUZCTEVOQlFXdENMRU5CUTJ4Q2NrUXNTVUZCUVVFc1EwRkJTMDBzYzBKQlFVRkJMRU5CUVhWQ1F5eERRVUZCUVN4RFFVRkphVVFzUzBGQlFVRXNRMEZCVFVzc1QwRkJRVUVzUTBGQlZUZEVMRWxCUVVGQkxFTkJRVXQzUWl4WFFVRkJRU3hEUVVGWmMwTXNjVUpCUVVGQkxFVkJRVUZCTEVOQlFYZENReXhKUVVGQlFTeERRVU42Umk5RUxFbEJRVUZCTEVOQlFVdE5MSE5DUVVGQlFTeERRVUYxUWtVc1EwRkJRVUVzUTBGQlNXZEVMRXRCUVVGQkxFTkJRVTFUTEU5QlFVRkJMRU5CUVZWcVJTeEpRVUZCUVN4RFFVRkxkMElzVjBGQlFVRXNRMEZCV1hORExIRkNRVUZCUVN4RlFVRkJRU3hEUVVGM1Fra3NSMEZCUVVFc1EwRkRla1pzUlN4SlFVRkJRU3hEUVVGTE1FSXNWMEZCUVVFc1EwRkJXVTBzUjBGQlFVRXNRMEZCU1N4RFFVRkZhME1zUjBGQlFVRXNRMEZCUzJ4RkxFbEJRVUZCTEVOQlFVdE5MSE5DUVVGQlFTeERRVUYxUWtVc1EwRkJRVUVzUTBGQlNTeEpRVUZCTEVOQlFVMTFSQ3hKUVVGQlFTeERRVUZOTDBRc1NVRkJRVUVzUTBGQlMwMHNjMEpCUVVGQkxFTkJRWFZDUXl4RFFVRkJRU3hEUVVGSkxFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlJYaEhMRWxCUVVrMFJDeE5RVUZCUVN4RFFVRlRia1VzU1VGQlFVRXNRMEZCUzI5RkxHTkJRVUZCTEVWQlFVRkJMRU5CUTJ4Q2NFVXNTVUZCUVVFc1EwRkJTemhDTEZkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVsQlFVRkJMRVZCUVhGQ2NVTXNUVUZCUVVFc1EwRkJUMFVzUTBGQlFVRXNRMEZCUVVFc1JVRkJRVUVzUlVGQlRVWXNUVUZCUVVFc1EwRkJUMGNzUTBGQlFVRXNRMEZCUVVFc1JVRkJRVUVzUlVGQlRVZ3NUVUZCUVVFc1EwRkJUMGtzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZETTBSMlJTeEpRVUZCUVN4RFFVRkxkVU1zUzBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRlpZblpETEVsQlFVRkJMRU5CUVV0M1FpeFhRVUZCUVN4RFFVRlpiVU1zWjBKQlFVRkJMRU5CUVdsQ0xGTkJRVUVzUTBGU1drZ3NTMEZCUVVFc1JVRkJRVUVzUTBGRGJFSklMR2RDUVVGQlFTeERRVUZCUVN4RFFVRnRRaXhEUVVGQkxFTkJRMjVDY2tRc1NVRkJRVUVzUTBGQlN5dERMR2RDUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRV2REVkM5RExFbEJRVUZCTEVOQlFVdDVRaXhoUVVGQlFTeERRVUZqYTBNc1owSkJRVUZCTEVOQlFXbENMRmRCUVVFc1EwRjRRbFpJTEV0QlFVRkJMRVZCUVVGQkxFTkJRM1JDTEVsQlFVbEpMRkZCUVVGQkxFTkJRVmRLTEV0QlFVRkJMRU5CUVUxTExFOUJRVUZCTEVOQlFWVTNSQ3hKUVVGQlFTeERRVUZMZVVJc1lVRkJRVUVzUTBGQlkzRkRMSEZDUVVGQlFTeEZRVUZCUVN4RFFVRjNRa01zU1VGQlFVRXNRMEZEZEVWRExGRkJRVUZCTEVOQlFWZFNMRXRCUVVGQkxFTkJRVTFUTEU5QlFVRkJMRU5CUVZWcVJTeEpRVUZCUVN4RFFVRkxlVUlzWVVGQlFVRXNRMEZCWTNGRExIRkNRVUZCUVN4RlFVRkJRU3hEUVVGM1Fra3NSMEZCUVVFc1EwRkhNVVZhTEd0Q1FVRkJRU3hEUVVGelFrMHNVVUZCUVVFc1EwRkJWeXhEUVVGQkxFVkJRVXRCTEZGQlFVRkJMRU5CUVZjMVJDeEpRVUZCUVN4RFFVRkxlVUlzWVVGQlFVRXNRMEZCWTNGRExIRkNRVUZCUVN4RlFVRkJRU3hEUVVGM1FteERMRXRCUVVGQkxFVkJRVk52UXl4UlFVRkJRU3hEUVVGWExFTkJRVUVzUlVGQlMwRXNVVUZCUVVFc1EwRkJWMmhGTEVsQlFVRkJMRU5CUVV0NVFpeGhRVUZCUVN4RFFVRmpjVU1zY1VKQlFVRkJMRVZCUVVGQkxFTkJRWGRDYWtNc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnZRaTlMTjBJc1NVRkJRVUVzUTBGQlMzbENMR0ZCUVVGQkxFTkJRV05yUXl4blFrRkJRVUVzUTBGQmFVSXNWMEZCUVN4RFFXcENWa2dzUzBGQlFVRXNSVUZCUVVFc1EwRkRkRUlzUjBGQlNVWXNhMEpCUVVGQkxFTkJRVzlDTEVOQlEzQkNkRVFzU1VGQlFVRXNRMEZCUzFNc2QwSkJRVUZCTEVOQlFYbENSaXhEUVVGQlFTeERRVUZKYVVRc1MwRkJRVUVzUTBGQlRVc3NUMEZCUVVFc1EwRkJWVGRFTEVsQlFVRkJMRU5CUVV0NVFpeGhRVUZCUVN4RFFVRmpjVU1zY1VKQlFVRkJMRVZCUVVGQkxFTkJRWGRDUXl4SlFVRkJRU3hEUVVNM1JpOUVMRWxCUVVGQkxFTkJRVXRUTEhkQ1FVRkJRU3hEUVVGNVFrUXNRMEZCUVVFc1EwRkJTV2RFTEV0QlFVRkJMRU5CUVUxVExFOUJRVUZCTEVOQlFWVnFSU3hKUVVGQlFTeERRVUZMZVVJc1lVRkJRVUVzUTBGQlkzRkRMSEZDUVVGQlFTeEZRVUZCUVN4RFFVRjNRa2tzUjBGQlFVRXNRMEZETjBac1JTeEpRVUZCUVN4RFFVRkxNa0lzWVVGQlFVRXNRMEZCWTBzc1IwRkJRVUVzUTBGQlNTeERRVUZGYTBNc1IwRkJRVUVzUTBGQlMyeEZMRWxCUVVGQkxFTkJRVXRUTEhkQ1FVRkJRU3hEUVVGNVFrUXNRMEZCUVVFc1EwRkJTU3hKUVVGQkxFTkJRVUVzUTBGQlFTeERRVVZvUlN4SlFVRkpNa1FzVFVGQlFVRXNRMEZCVTI1RkxFbEJRVUZCTEVOQlFVdDNSU3huUWtGQlFVRXNSVUZCUVVFc1EwRkRiRUo0UlN4SlFVRkJRU3hEUVVGTE9FSXNWMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTVUZCUVVFc1JVRkJjVUp4UXl4TlFVRkJRU3hEUVVGUFJTeERRVUZCUVN4RFFVRkJRU3hGUVVGQlFTeEZRVUZOUml4TlFVRkJRU3hEUVVGUFJ5eERRVUZCUVN4RFFVRkJRU3hGUVVGQlFTeEZRVUZOU0N4TlFVRkJRU3hEUVVGUFNTeERRVUZCUVN4RFFVRkJRU3hGUVVGQlFTeEZRVUZOU2l4TlFVRkJRU3hEUVVGUFRTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjRSWHBGTEVsQlFVRkJMRU5CUVV0MVF5eExRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVZWaWRrTXNTVUZCUVVFc1EwRkJTM2xDTEdGQlFVRkJMRU5CUVdOclF5eG5Ra0ZCUVVFc1EwRkJhVUlzVTBGQlFTeERRVTVhU0N4TFFVRkJRU3hGUVVGQlFTeERRVU53UWtZc2EwSkJRVUZCTEVOQlFVRkJMRU5CUVhGQ0xFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFWRTNRblJFTEVsQlFVRkJMRU5CUVV0MVF5eExRVUZCUVN4RlFVRlJMRWxCUVVFc1EwRkRWSFpETEVsQlFVRkJMRU5CUVVzd1JTeFhRVUZCUVN4RlFVRkJRU3hEUVVOTU1VVXNTVUZCUVVFc1EwRkJTMkVzVFVGQlFVRXNRMEZCVHpoRUxHRkJRVUZCTEVOQlFXTXNTVUZCU1VNc1YwRkJRVUVzUTBGQldTeGpRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXhRelZGTEVsQlFVRkJMRU5CUVV0aExFMUJRVUZCTEVOQlFVOVRMRWxCUVVGQkxFTkJRVXNzWlVGQlFTeERRVUZCTEVOQlFXbENWU3hIUVVGQlFTeERRVUZKTEVOQlFVVTJReXhsUVVGQlFTeERRVUZwUWpkRkxFbEJRVUZCTEVOQlFVczRSU3hqUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVNNVJEbEZMRWxCUVVGQkxFTkJRVXRoTEUxQlFVRkJMRU5CUVU5VExFbEJRVUZCTEVOQlFVc3NjVUpCUVVFc1EwRkJRU3hEUVVGMVFtTXNVMEZCUVVFc1EwRkJXWEJETEVsQlFVRkJMRU5CUVVzNFJTeGpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWMzUkRsRkxFbEJRVUZCTEVOQlFVc3dSU3hYUVVGQlFTeEZRVUZqTEVsQlFVRXNRMEZEVHl4TFFVRkJMRVZCUVd4Q01VVXNTVUZCUVVFc1EwRkJTMVVzVTBGQlFVRXNRMEZEVEZZc1NVRkJRVUVzUTBGQlN6aEZMR05CUVVGQkxFTkJRV2xDT1VVc1NVRkJRVUVzUTBGQlN5dEZMRkZCUVVGQkxFTkJRVk12UlN4SlFVRkJRU3hEUVVGTE9FSXNWMEZCUVVFc1EwRkJRVUVzUTBGRmJFSXNTMEZCUVN4RlFVRnNRamxDTEVsQlFVRkJMRU5CUVV0VkxGTkJRVUZCTEVOQlExWldMRWxCUVVGQkxFTkJRVXM0UlN4alFVRkJRU3hEUVVGcFFqbEZMRWxCUVVGQkxFTkJRVXRuUml4UlFVRkJRU3hEUVVGVGFFWXNTVUZCUVVFc1EwRkJTemhDTEZkQlFVRkJMRU5CUVVGQkxFTkJSV3hDTEV0QlFVRXNSVUZCYkVJNVFpeEpRVUZCUVN4RFFVRkxWU3hUUVVGQlFTeEhRVU5XVml4SlFVRkJRU3hEUVVGTE9FVXNZMEZCUVVFc1EwRkJhVUk1UlN4SlFVRkJRU3hEUVVGTE9FSXNWMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpia001UWl4SlFVRkJRU3hEUVVGTGNVTXNVMEZCUVVFc1JVRkJZVFJETEZGQlFVRkJMRVZCUVVGQkxFTkJRMlJxUml4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRlBPRU1zWjBKQlFVRkJMRU5CUVdsQ0xHTkJRVUVzUTBGQlowSklMRXRCUVVGQkxFVkJRVUZCTEVOQlEzcERlVUlzVVVGQlFVRXNRMEZCVTJwR0xFbEJRVUZCTEVOQlFVczRSU3hqUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsMFFqbEZMRWxCUVVGQkxFTkJRVXR2UlN4alFVRkJRU3hGUVVGcFFpeEpRVUZCTEVOQlEyeENMRWxCUVVsakxGTkJRVUZCTEVOQlFWbHNSaXhKUVVGQlFTeERRVUZMYVVNc1dVRkJRVUVzUTBGQllXdEVMRmxCUVVGQkxFTkJRV0Z1Uml4SlFVRkJRU3hEUVVGTFRTeHpRa0ZCUVVFc1EwRkJkVUpETEVOQlFVRkJMRU5CUVVkUUxFbEJRVUZCTEVOQlFVdE5MSE5DUVVGQlFTeERRVUYxUWtVc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUTJoSUxFMUJRVThzUTBGQlJUWkVMRU5CUVVGQkxFTkJRVWRoTEZOQlFVRkJMRU5CUVZWRkxFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUVVsa0xFTkJRVUZCTEVOQlFVZFpMRk5CUVVGQkxFTkJRVlZGTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVWxpTEVOQlFVRkJMRU5CUVVkWExGTkJRVUZCTEVOQlFWVkZMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUnpORmNFWXNTVUZCUVVFc1EwRkJTM2RGTEdkQ1FVRkJRU3hGUVVGdFFpeEpRVUZCTEVOQlEzQkNMRWxCUVVsVkxGTkJRVUZCTEVOQlFWbHNSaXhKUVVGQlFTeERRVUZMYlVNc1kwRkJRVUVzUTBGQlpXZEVMRmxCUVVGQkxFTkJRV0Z1Uml4SlFVRkJRU3hEUVVGTFV5eDNRa0ZCUVVFc1EwRkJlVUpHTEVOQlFVRkJMRU5CUVVkUUxFbEJRVUZCTEVOQlFVdFRMSGRDUVVGQlFTeERRVUY1UWtRc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUld4SU5rVXNTMEZCUVVFc1EwRkJVVU1zU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlQwd3NVMEZCUVVFc1EwRkJWVVVzU1VGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkJTeXhIUVVGQkxFTkJRVThzUjBGQlFTeERRVUZCTEVOQlFWRXNSMEZCUVN4RFFVTXpSQ3hOUVVGUExFTkJRVVZtTEVOQlFVRkJMRU5CUVVkaExGTkJRVUZCTEVOQlFWVkZMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVbGtMRU5CUVVGQkxFTkJRVWRaTEZOQlFVRkJMRU5CUVZWRkxFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUVVsaUxFTkJRVUZCTEVOQlFVZFhMRk5CUVVGQkxFTkJRVlZGTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVWxZTEVOQlFVRkJMRU5CUVVkWkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIyeEdja1lzU1VGQlFVRXNRMEZCUzNkR0xFbEJRVUZCTEVWQlFWRTFSU3hOUVVGQlFTeEZRVUZCUVN4RFFVTlVXaXhKUVVGQlFTeERRVUZMVnl4SlFVRkJRU3hEUVVGTFF5eE5RVUZCUVN4RFFVRkJRU3hEUVVOV1dpeEpRVUZCUVN4RFFVRkxlVU1zWTBGQlFVRXNSVUZCUVVFc1EwRkRUSHBETEVsQlFVRkJMRU5CUVVzclF5eG5Ra0ZCUVVFc1JVRkJRVUVzUTBGRlRDeEpRVUZKTUVNc1VVRkJRVUVzUTBGQlYwTXNWVUZCUVVFc1EwRkJWeXhKUVVGQkxFTkJRM1JDTVVZc1NVRkJRVUVzUTBGQlMzbEVMRXRCUVVGQkxFTkJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVTmlhME1zV1VGQlFVRXNRMEZCWVVZc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRaQ3hIUVVGQkxFTkJRVUVzUTBGRlNDeFBRVUZQZWtZc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYUVKaUxFbEJRVUZCTEVOQlFVc3dSQ3hQUVVGQlFTeEZRVUZWTEVsQlFVRXNRMEZEV0d0RExHRkJRVUZCTEVOQlFXTTFSaXhKUVVGQlFTeERRVUZMZVVZc1VVRkJRVUVzUTBGQlFVRXNRMEZEYmtKNlJpeEpRVUZCUVN4RFFVRkxZU3hOUVVGQlFTeERRVUZQWjBZc1RVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGFFSTNSaXhKUVVGQlFTeERRVUZMT0VZc1UwRkJRVUVzUlVGQldTeERRVUZETDBRc1MwRkJRVUVzUTBGQlVTeFRRVUZCTEVkQlFVRXNRMEZEZEVJc1NVRkJTV2RGTEVsQlFVRkJMRU5CUVU4c1VVRkJRU3hEUVVOWUxFZEJRVEJDTEVOQlFVRXNSVUZCZEVKb1JTeExRVUZCUVN4RFFVRk5hVVVzVDBGQlFVRXNRMEZCVVN4SFFVRkJMRU5CUVVFc1JVRkJRU3hEUVVGamFrVXNTMEZCUVVFc1EwRkJUV3RGTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hGUVVGTExFTkJRVUVzUlVGQlN5eERRVUZCTEVOQlEzSkVSaXhKUVVGQlFTeERRVUZQTEV0QlFVRXNRMEZCUVN4TFFVVk9MRWRCUVRaQ0xFTkJRVUVzUlVGQmVrSm9SU3hMUVVGQlFTeERRVUZOYVVVc1QwRkJRVUVzUTBGQlVTeE5RVUZCTEVOQlFVRXNRMEZCWXl4RFFVTnFReXhKUVVGSlJTeE5RVUZCUVN4RFFVRlRiRWNzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMydEhMRk5CUVVGQkxFTkJRVlZ3UlN4TFFVRkJRU3hEUVVGUExFOUJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnNReXhEUVVGQkxFVkJRVmh0UlN4TlFVRkJRU3hGUVVFMFF5eERRVUZCTEVWQlFUVkNRU3hOUVVGQlFTeERRVUZQUlN4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZMU0N4TlFVRkJRU3hIUVVOc1EwWXNTVUZCUVVFc1EwRkJUeXhOUVVGQkxFTkJRVUVzUTBGQlFTeExRVWRXTEVkQlFUUkNMRU5CUVVFc1JVRkJlRUpvUlN4TFFVRkJRU3hEUVVGTmFVVXNUMEZCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVUVzUTBGQllTeERRVU5vUXl4SlFVRkpSU3hOUVVGQlFTeERRVUZUYkVjc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTMnRITEZOQlFVRkJMRU5CUVZWd1JTeExRVUZCUVN4RFFVRlBMRTFCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5xUXl4RFFVRkJMRVZCUVZodFJTeE5RVUZCUVN4RlFVRTBReXhEUVVGQkxFVkJRVFZDUVN4TlFVRkJRU3hEUVVGUFJTeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTFNDeE5RVUZCUVN4SFFVTnNRMFlzU1VGQlFVRXNRMEZCVHl4TFFVRkJMRU5CUVVFc1EwRkJRU3hMUVVkV0xFZEJRVFpDTEVOQlFVRXNSVUZCZWtKb1JTeExRVUZCUVN4RFFVRk5hVVVzVDBGQlFVRXNRMEZCVVN4TlFVRkJMRU5CUVVFc1EwRkJZeXhEUVVOcVF5eEpRVUZKUlN4TlFVRkJRU3hEUVVGVGJFY3NTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCUzJ0SExGTkJRVUZCTEVOQlFWVndSU3hMUVVGQlFTeERRVUZQTEU5QlFVRXNRMEZCVXl4SFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOc1F5eERRVUZCTEVWQlFWaHRSU3hOUVVGQlFTeEZRVUUwUXl4RFFVRkJMRVZCUVRWQ1FTeE5RVUZCUVN4RFFVRlBSU3hMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxTQ3hOUVVGQlFTeEhRVU5zUTBZc1NVRkJRVUVzUTBGQlR5eE5RVUZCTEVOQlFVRXNRMEZCUVN4TFFVZFdMRWRCUVRSQ0xFTkJRVUVzUlVGQmVFSm9SU3hMUVVGQlFTeERRVUZOYVVVc1QwRkJRVUVzUTBGQlVTeExRVUZCTEVOQlFVRXNRMEZCWVN4RFFVTm9ReXhKUVVGSlJTeE5RVUZCUVN4RFFVRlRiRWNzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMydEhMRk5CUVVGQkxFTkJRVlZ3UlN4TFFVRkJRU3hEUVVGUExFMUJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnFReXhEUVVGQkxFVkJRVmh0UlN4TlFVRkJRU3hGUVVFMFF5eERRVUZCTEVWQlFUVkNRU3hOUVVGQlFTeERRVUZQUlN4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZMU0N4TlFVRkJRU3hIUVVOc1EwWXNTVUZCUVVFc1EwRkJUeXhMUVVGQkxFTkJRVUVzUTBGSlppeFBRVUZQUVN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFlMMFlzU1VGQlFVRXNRMEZCUzNGSExGRkJRVUZCTEVWQlFWY3NRMEZCUTBNc1IwRkJRVUVzUTBGQlRTeFRRVUZCTEVOQlFWZHFRaXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUVVFc1IwRkJRU3hEUVVOMFF5eEpRVUZKYUVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwVXNRMEZCUVVFc1EwRkJTU3hIUVVGQkxFTkJlVUkzUWl4UFFYaENhMElzUTBGQlFTeEZRVUZrTmtJc1IwRkJRVUVzUTBGQlNVd3NUVUZCUVVFc1JVRkRTalZDTEVOQlFVRkJMRU5CUVVrc1NVRkJRU3hEUVVGUGFVTXNSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlMwRXNSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGRGVFSm9ReXhEUVVGQlFTeERRVUZKTEVsQlFVRXNRMEZCVDJkRExFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUTNoQ0wwSXNRMEZCUVVFc1EwRkJTU3hKUVVGQkxFTkJRVThyUWl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZMUVN4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeEZRVVZNTEVOQlFVRXNSVUZCWkVFc1IwRkJRVUVzUTBGQlNVd3NUVUZCUVVFc1JVRkRWRFZDTEVOQlFVRkJMRU5CUVVrc1NVRkJRU3hEUVVGUGFVTXNSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlMwRXNSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGRGVFSm9ReXhEUVVGQlFTeERRVUZKTEVsQlFVRXNRMEZCVDJkRExFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUTNoQ0wwSXNRMEZCUVVFc1EwRkJTU3hKUVVGQkxFTkJRVThyUWl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZMUVN4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU40UWpkQ0xFTkJRVUZCTEVOQlFVa3NTVUZCUVN4RFFVRlBOa0lzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1JVRkZUQ3hEUVVGQkxFVkJRV1JCTEVkQlFVRkJMRU5CUVVsTUxFMUJRVUZCTEVWQlExUTFRaXhEUVVGQlFTeERRVUZKTEVsQlFVRXNRMEZCVDJsRExFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUTNoQ2FFTXNRMEZCUVVFc1EwRkJTU3hKUVVGQkxFTkJRVTluUXl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZMUVN4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU40UWk5Q0xFTkJRVUZCTEVOQlFVa3NTVUZCUVN4RFFVRlBLMElzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1JVRkZUQ3hEUVVGQkxFVkJRV1JCTEVkQlFVRkJMRU5CUVVsTUxFMUJRVUZCTEVkQlExUTFRaXhEUVVGQlFTeERRVUZKTEVsQlFVRXNRMEZCVDJsRExFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUTNoQ2FFTXNRMEZCUVVFc1EwRkJTU3hKUVVGQkxFTkJRVTluUXl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZMUVN4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU40UWk5Q0xFTkJRVUZCTEVOQlFVa3NTVUZCUVN4RFFVRlBLMElzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkRlRUkzUWl4RFFVRkJRU3hEUVVGSkxFbEJRVUVzUTBGQlR6WkNMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGTlVJM1FpeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZOUVN4RFFVRkJRU3hEUVVGSkxFZEJRVUVzUlVGQlN6aENMRTlCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlJWWXNRMEZCUVN4RlFVRlViRUlzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzU1VGQlFVRXNSVUZCUVVFc1EwRkRaV2hDTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVRkJMRU5CUVU5RExFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVOURMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRWxCUVVGQkxFVkJRVUZCTEVOQlIyUkdMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVVGQkxFTkJRVTlETEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVRkJMRU5CUVU5RExFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVTFGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNUTkRla1VzU1VGQlFVRXNRMEZCUzNkSExGRkJRVUZCTEVWQlFWY3NRMEZCUTBZc1IwRkJRVUVzUTBGQlRTeFRRVUZCTEVOQlFWZHFRaXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUVVFc1IwRkJRU3hEUVVOMFF5eEpRVUZKZEVRc1MwRkJRVUVzUTBGQlVTOUNMRWxCUVVGQkxFTkJRVXR4Unl4UlFVRkJRU3hEUVVGVFF5eEhRVUZCUVN4RFFVRkxha0lzUzBGQlFVRXNRMEZCUVVFc1EwRkZMMElzVDBGRVFYUkVMRXRCUVVGQkxFTkJRVkV2UWl4SlFVRkJRU3hEUVVGTFowWXNVVUZCUVVFc1EwRkJVMnBFTEV0QlFVRkJMRU5CUVU5elJDeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbHFRM0pHTEVsQlFVRkJMRU5CUVVzclJTeFJRVUZCUVN4RlFVRlhMRU5CUVVNd1FpeEhRVUZCUVN4RFFVRk5MR05CUVVFc1EwRkJaMEp3UWl4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNSMEZCUVN4RFFVTXpReXhKUVVGSmNVSXNTMEZCUVVFc1EwRkJVVVFzUjBGQlFVRXNRMEZCU1ZRc1QwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVRXNRMEZCVHl4RFFVRkJMRU5CUXpOQ1Z5eEhRVUZCUVN4RFFVRk5SaXhIUVVGQlFTeERRVUZKVkN4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlFTeERRVUZCTEVOQlEycENNMElzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJSMFVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTMmRETEVkQlFVRkJMRU5CUVVsSExFdEJRVUZCTEVOQlFVMUdMRXRCUVVGQkxFTkJRVTlETEVkQlFVRkJMRU5CUVVGQkxFTkJRVXRRTEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJSVEZEY0Vjc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTelJITEV0QlFVRkJMRU5CUVUxd1F5eERRVUZCUVN4RFFVRkJRU3hIUVVOcVFrRXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGSFVrb3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFVFc1EwRkJRVUVzUlVGQlIzbERMRkZCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlEyeENlRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRVRXNRMEZCUVVFc1JVRkJSM2RETEZGQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRMnhDZGtNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJUVUVzUTBGQlFVRXNSVUZCUjNWRExGRkJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUTJ4Q2NrTXNRMEZCUVVFc1EwRkJTV0VzU1VGQlFVRXNRMEZCUzNsQ0xFdEJRVUZCTEVOQlFWVXNSMEZCUVN4RFFVRktkRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJVM0ZETEZGQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJSV3BDTEVOQlFVRXNSVUZCV25wRExFTkJRVUZCTEVOQlFVVTBRaXhOUVVGQlFTeEhRVU5HTlVJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlVVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhTU3hEUVVGQkxFVkJRVnBETEVOQlFVRkJMRU5CUVVVeVFpeE5RVUZCUVN4SFFVTkdNMElzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSFNTeERRVUZCTEVWQlFWcERMRU5CUVVGQkxFTkJRVVV3UWl4TlFVRkJRU3hIUVVOR01VSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJVVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGU1N4RFFVRkJMRVZCUVZwRkxFTkJRVUZCTEVOQlFVVjNRaXhOUVVGQlFTeEhRVU5HZUVJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlVVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhXaXhKUVVGSk5rSXNSMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJVVllzVDBGT1NVRXNSMEZCUVVFc1JVRkVVeXhEUVVGQkxFVkJRVlJxUWl4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVTlZhRUlzUTBGQlFVRXNRMEZCUVVFc1JVRkJTVU1zUTBGQlFVRXNRMEZCUVVFc1JVRkJTVU1zUTBGQlFVRXNRMEZCUVVFc1JVRkJTVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkhXa29zUTBGQlFVRXNRMEZCUVVFc1JVRkJTVU1zUTBGQlFVRXNRMEZCUVVFc1JVRkJTVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5NVUoyUlN4SlFVRkJRU3hEUVVGTFowWXNVVUZCUVVFc1JVRkJWeXhEUVVGRGVVSXNSMEZCUVVFc1EwRkJUU3hqUVVGQkxFTkJRV2RDY0VJc1MwRkJRVUVzUTBGQlFVRXNRMEZCVVN4RFFVRkJMRWRCUVVFc1EwRkRNME1zU1VGQlNYRkNMRXRCUVVGQkxFTkJRVkZFTEVkQlFVRkJMRU5CUVVsVUxFOUJRVUZCTEVOQlFWRXNSMEZCUVN4RFFVRkJMRU5CUVU4c1EwRkJRU3hEUVVNelFsY3NSMEZCUVVFc1EwRkJUVVlzUjBGQlFVRXNRMEZCU1ZRc1QwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnFRak5DTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVWRGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRuUXl4SFFVRkJRU3hEUVVGSlJ5eExRVUZCUVN4RFFVRk5SaXhMUVVGQlFTeERRVUZQUXl4SFFVRkJRU3hEUVVGQlFTeERRVUZMVUN4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVVV2UTFrc1QwRkJRVUVzUTBGQlVVTXNSMEZCUVVFc1EwRkJTVFZETEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlEySjJSU3hKUVVGQlFTeERRVUZMUXl4SlFVRkJRU3hEUVVGTE5FY3NTMEZCUVVFc1EwRkJUWEJETEVOQlFVRkJMRU5CUVVGQkxFZEJRMnBDUVN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVWRTU2l4RFFVRkJRU3hGUVVGTExFZEJRVUVzUTBGRFRFTXNRMEZCUVVFc1JVRkJTeXhIUVVGQkxFTkJRMHhETEVOQlFVRkJMRVZCUVVzc1IwRkJRU3hEUVVWTUxFbEJRVWt5UXl4SlFVRkJRU3hEUVVGUE5VSXNTVUZCUVVFc1EwRkJTelpDTEVkQlFVRkJMRU5CUVVrNVF5eERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRVU4wUWpaRExFbEJRVUZCTEVOQlFVODVRaXhKUVVGQlFTeERRVUZMSzBJc1IwRkJRVUVzUTBGQlNXaEVMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUTNSQ0swTXNTMEZCUVVFc1EwRkJVVVlzU1VGQlFVRXNRMEZCVDBZc1NVRkJRVUVzUTBGRFprc3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRMHBETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVOS1F5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkpTeXhEUVVGQkxFVkJRVlJJTEV0QlFVRkJMRU5CUTBGRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVVkRTQ3hKUVVGQlFTeEZRVUZSTDBNc1EwRkJRVUVzUTBGRFltdEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVMXFSQ3hEUVVGQlFTeERRVUZKUXl4RFFVRkJRU3hGUVVGTEswTXNTMEZCUVVFc1EwRkJVeXhEUVVGQkxFTkJSVzVDUml4SlFVRkJRU3hGUVVGUk9VTXNRMEZCUVVFc1EwRkRZbWxFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRvUkN4RFFVRkJRU3hEUVVGSlJpeERRVUZCUVN4RlFVRkxhVVFzUzBGQlFVRXNRMEZCVVN4RFFVRkJMRU5CUldwQ1JpeEpRVUZCUVN4RlFVRlJPVU1zUTBGQlFVRXNSMEZEWW1sRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0c1JDeERRVUZCUVN4RFFVRkpReXhEUVVGQlFTeEZRVUZMWjBRc1MwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVY3hRa01zUTBGQlFVRXNRMEZCU1dwRExFbEJRVUZCTEVOQlFVdDVRaXhMUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZCU2xFc1EwRkJRVUVzUTBGQlFVRXNSVUZGVUN4RFFVRkJMRWRCUTBwQkxFTkJRVUZCTEVWQlFVc3NSMEZCUVN4RFFVRkJMRU5CUjFSRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0TUxFbEJRVUZCTEVOQlFVOUdMRWxCUVVGQkxFVkJRVkVzUTBGQlFTeERRVVZ3UWswc1EwRkJRVUVzUTBGQllTeERRVUZCTEVWQlFWUkdMRXRCUVVGQkxFTkJRV0VzUTBGQlFTeERRVUZKUVN4TFFVRkJRU3hGUVVGVExFTkJRVUVzUTBGQlNXaERMRWxCUVVGQkxFTkJRVXR2UXl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlNVUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVZ1UkVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJWU3hIUVVGQkxFTkJRVXBCTEVOQlFVRkJMRVZCUVZOc1FpeFBRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVOMlFtbENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVZVc1IwRkJRU3hEUVVGS1FTeERRVUZCUVN4RlFVRlRha0lzVDBGQlFVRXNRMEZCVVN4RFFVRkJMRU5CUVVFc1EwRkZka0lzU1VGQlNXOUNMRWRCUVVGQkxFTkJRVTBzUzBGQlFTeERRVTlXTEU5QlRFbEJMRWRCUVVGQkxFVkJSRk1zUTBGQlFTeEZRVUZVZEVNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGRFYydERMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVUxRExFTkJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFVkJRVTlETEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUjJKR0xFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVTFETEVOQlFVRkJMRU5CUVVGQkxFZEJRVUZCTEVWQlFVOURMRU5CUVVGQkxFTkJRVUZCTEVkQlFVRkJMRVZCUVU5b1JDeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXQyUTNwRkxFbEJRVUZCTEVOQlFVczBTQ3hSUVVGQlFTeEZRVUZYTEVOQlFVTkVMRWRCUVVGQkxFTkJRVTBzWjBKQlFVRXNRMEZCYTBKMFF5eExRVUZCUVN4RFFVRkJRU3hEUVVGUkxFTkJRVUVzUjBGQlFTeERRVU0zUXl4SlFVRkpiMElzUjBGQlFVRXNRMEZCVFN4TFFVRkJMRU5CUTA1RExFdEJRVUZCTEVOQlFWRnBRaXhIUVVGQlFTeERRVUZKTTBJc1QwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVRXNRMEZCVHl4RFFVRkJMRU5CUXpOQ1Z5eEhRVUZCUVN4RFFVRk5aMElzUjBGQlFVRXNRMEZCU1ROQ0xFOUJRVUZCTEVOQlFWRXNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRha0oxUWl4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZIYUVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzJ0RUxFZEJRVUZCTEVOQlFVbG1MRXRCUVVGQkxFTkJRVTFHTEV0QlFVRkJMRU5CUVU5RExFZEJRVUZCTEVOQlFVRkJMRU5CUVV0UUxFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUlRGRGNFY3NTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCU3pSSExFdEJRVUZCTEVOQlFVMXdReXhEUVVGQlFTeERRVUZCUVN4SFFVTnFRa0VzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkhVblZETEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVbE5MRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUldSR0xFTkJRVUZCTEVOQlFVVjJRaXhQUVVGQlFTeERRVUZSTEV0QlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZVc1EwRkJRU3hEUVVOd1FuVkNMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVWTkxFMUJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkhUaXhEUVVGQlFTeERRVUZGZEVJc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVRXNRMEZEZEVKelFpeERRVUZCUVN4RFFVRkZka0lzVDBGQlFVRXNRMEZCVVN4TFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGVkxFTkJRVUVzUTBGRGVrSjFRaXhEUVVGQlFTeERRVUZKYWtNc1NVRkJRVUVzUTBGQlMzbENMRXRCUVVGQkxFTkJRVTFSTEVOQlFVRkJMRU5CUVVWTkxFMUJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkhUaXhEUVVGQlFTeERRVUZGZEVJc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVRXNSVUZCVFN4SFFVRkJMRU5CUVUxWUxFbEJRVUZCTEVOQlFVdDNReXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVOc1JGQXNRMEZCUVVFc1EwRkJSWFpDTEU5QlFVRkJMRU5CUVZFc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlZ5eERRVUZCTEVkQlF6RkNkVUlzUTBGQlFVRXNRMEZCU1dwRExFbEJRVUZCTEVOQlFVdDVRaXhMUVVGQlFTeERRVUZyUXl4SFFVRkJMRU5CUVRWQ1VTeERRVUZCUVN4RFFVRkZUU3hOUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUjA0c1EwRkJRVUVzUTBGQlJYUkNMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVjBRM05DTEVOQlFVRkJMRVZCUVVzc1IwRkJRU3hIUVVOTVFTeERRVUZCUVN4RlFVRkxMRWRCUVVFc1EwRkJRU3hEUVVWVVF5eERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGVHl4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlN5eEZRVUZCTEVOQlFVRXNRMEZCVFN4SFFVRkJMRU5CUTNwQ1RpeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGVFN4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlN5eEZRVUZCTEVOQlFVRXNRMEZCVFN4SFFVRkJMRU5CUlhwQ0xFbEJRVWxETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZKTVVNc1NVRkJRVUVzUTBGQlMyOURMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZKUkN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeEZRVUZOUkN4RFFVRkJRU3hEUVVOb1EycElMRU5CUVVGQkxFTkJRVWw1U0N4RFFVRkJRU3hGUVVGTExFTkJRVUVzUTBGQlNURkRMRWxCUVVGQkxFTkJRVXR2UXl4SFFVRkJRU3hEUVVGTFNDeERRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEY2tOVkxFTkJRVUZCTEVOQlFVbFNMRU5CUVVGQkxFTkJRVWxQTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVOYU0wUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRMHBETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVOS1F5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRXdRbElzVDBGNFFra3NRMEZCUVN4RlFVRkxaMFFzUTBGQlFVRXNSVUZCUzBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVWQlEyUnNSQ3hEUVVGQlFTeERRVUZKTWtRc1EwRkJRVUVzUTBGQlJ6RkVMRU5CUVVGQkxFTkJRVWt2UkN4RFFVRkJRU3hEUVVGSFowVXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFVkJRMWdzUlVGQlFTeEZRVUZOWjBRc1EwRkJRVUVzUlVGQlMwRXNRMEZCUVVFc1EwRkJTU3hIUVVGQkxFVkJRM1JDYkVRc1EwRkJRVUVzUTBGQlNUbEVMRU5CUVVGQkxFTkJRVWNyUkN4RFFVRkJRU3hEUVVGSk1FUXNRMEZCUVVFc1EwRkJSM3BFTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hGUVVOWUxFZEJRVUVzUlVGQlQyZEVMRU5CUVVGQkxFVkJRVXRCTEVOQlFVRkJMRU5CUVVrc1IwRkJRU3hGUVVOMlFteEVMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGSk1FUXNRMEZCUVVFc1EwRkJSM3BFTEVOQlFVRkJMRU5CUVVsb1JTeERRVUZCUVN4RlFVTllMRWRCUVVFc1JVRkJUMmRJTEVOQlFVRkJMRVZCUVV0QkxFTkJRVUZCTEVOQlFVa3NSMEZCUVN4RlFVTjJRbXhFTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkpMMFFzUTBGQlFVRXNRMEZCUjJkRkxFTkJRVUZCTEVOQlFVbDVSQ3hEUVVGQlFTeEZRVU5ZTEVkQlFVRXNSVUZCVDFRc1EwRkJRVUVzUlVGQlMwRXNRMEZCUVVFc1EwRkJTU3hIUVVGQkxFVkJRM1pDYkVRc1EwRkJRVUVzUTBGQlNUbEVMRU5CUVVGQkxFTkJRVWNyUkN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJTWGxFTEVOQlFVRkJMRVZCUTFnc1IwRkJRU3hGUVVGUFZDeERRVUZCUVN4RlFVRkxRU3hEUVVGQlFTeERRVUZKTEVkQlFVRXNSMEZEZGtKc1JDeERRVUZCUVN4RFFVRkpNa1FzUTBGQlFVRXNRMEZCUnpGRUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZKYUVVc1EwRkJRVUVzUTBGQlFVRXNRMEZGZEVJNFJDeERRVUZCUVN4RFFVRkphVUlzU1VGQlFVRXNRMEZCUzNsQ0xFdEJRVUZCTEVOQlFXZENMRWRCUVVFc1JVRkJWREZETEVOQlFVRkJMRU5CUVVrMFJDeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU53UWpORUxFTkJRVUZCTEVOQlFVbG5RaXhKUVVGQlFTeERRVUZMZVVJc1MwRkJRVUVzUTBGQlowSXNSMEZCUVN4RlFVRlVla01zUTBGQlFVRXNRMEZCU1RKRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRM0JDTVVRc1EwRkJRVUVzUTBGQlNXVXNTVUZCUVVFc1EwRkJTM2xDTEV0QlFVRkJMRU5CUVdkQ0xFZEJRVUVzUlVGQlZIaERMRU5CUVVGQkxFTkJRVWt3UkN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZG9RbmhDTEVkQlFVRkJMRVZCUkZNc1EwRkJRU3hGUVVGVWNFSXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkRWMmhDTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVMURMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVUxRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlIxcEdMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVUxRExFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVTFETEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVMUZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVFhKRGVrVXNTVUZCUVVFc1EwRkJTMnRKTEZGQlFVRkJMRVZCUVZjc1EwRkJRMUFzUjBGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVsMFF5eExRVUZCUVN4RFFVRkJRU3hEUVVGUkxFTkJRVUVzUjBGQlFTeERRVU12UWl4SlFVRkpkRVFzUzBGQlFVRXNRMEZCVVM5Q0xFbEJRVUZCTEVOQlFVczBTQ3hSUVVGQlFTeERRVUZUUkN4SFFVRkJRU3hEUVVGTGRFTXNTMEZCUVVFc1EwRkJRVUVzUTBGREwwSXNUMEZCVDNKR0xFbEJRVUZCTEVOQlFVc3JSU3hSUVVGQlFTeERRVUZUYUVRc1MwRkJRVUVzUTBGQlQzTkVMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMmhEY2tZc1NVRkJRVUVzUTBGQlMyOUVMRlZCUVVGQkxFVkJRV0VzUTBGQlEzSkNMRXRCUVVGQkxFTkJRVkVzWTBGQlFTeERRVUZuUW05SExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4SFFVRkJMRU5CUTJwRUxFbEJRVWw2UWl4TFFVRkJRU3hEUVVGUk0wVXNTMEZCUVVFc1EwRkJUV2xGTEU5QlFVRkJMRU5CUVZFc1IwRkJRU3hEUVVGQkxFTkJRVThzUTBGQlFTeERRVU0zUWxjc1IwRkJRVUVzUTBGQlRUVkZMRXRCUVVGQkxFTkJRVTFwUlN4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlFTeERRVU53UW05RExFMUJRVUZCTEVOQlFWTnlSeXhMUVVGQlFTeERRVUZOTmtVc1MwRkJRVUVzUTBGQlRVWXNTMEZCUVVFc1EwRkJUME1zUjBGQlFVRXNRMEZCUVVFc1EwRkJTMUFzUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkxNME1zVDBGS1FXZERMRTFCUVVGQkxFTkJRVThzUTBGQlFTeERRVUZCTEVOQlFVdEVMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCUVVGQkxFVkJSV1ZETEUxQlFVRkJMRU5CUVU5RExFbEJRVUZCTEVOQlFVc3NSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVXN6UTNKSkxFbEJRVUZCTEVOQlFVdHpTU3hWUVVGQlFTeEZRVUZoTEVOQlFVTjJSeXhMUVVGQlFTeERRVUZSTEdOQlFVRXNSMEZCUVN4RFFVTjJRa0VzUzBGQlFVRXNRMEZCVVM5Q0xFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRyUnl4VFFVRkJRU3hEUVVGVmNFVXNTMEZCUVVFc1EwRkJUeXhIUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZCTEVOQlEzaERMRWRCUVVFc1EwRkJTM05ETEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVWRGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXN4UXl4TFFVRkJRU3hEUVVGTmNVVXNTMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGREwwSXNUMEZCVHpOQ0xFTkJRVUZCTEVOQlFVVTRSQ3hKUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRpZGtrc1NVRkJRVUVzUTBGQlMzZEpMRmRCUVVGQkxFVkJRV01zUTBGQlEzcEhMRXRCUVVGQkxFTkJRVkVzVTBGQlFTeEhRVUZCTEVOQlEzaENMRWxCUTBrd1J5eE5RVUZCUVN4RFFVUkJNVU1zU1VGQlFVRXNRMEZCVHk5R0xFbEJRVUZCTEVOQlFVczRSaXhUUVVGQlFTeERRVUZWTDBRc1MwRkJRVUVzUTBGQlFVRXNRMEZGTVVJc1IwRkJXU3hMUVVGQkxFVkJRVkpuUlN4SlFVRkJRU3hEUVVOQmFFVXNTMEZCUVVFc1EwRkJVVUVzUzBGQlFVRXNRMEZCVFdkSExFOUJRVUZCTEVOQlFWRXNSMEZCUVN4RFFVRkxMRVZCUVVFc1EwRkJRU3hEUVVNelFsVXNUVUZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVTE2U1N4SlFVRkJRU3hEUVVGTE1Fa3NVMEZCUVVFc1EwRkJWVE5ITEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlJUZENMRWRCUVZrc1MwRkJRU3hGUVVGU1owVXNTVUZCUVVFc1EwRkRUR2hGTEV0QlFVRkJMRU5CUVZFdlFpeEpRVUZCUVN4RFFVRkxLMFVzVVVGQlFVRXNRMEZCVTJoRUxFdEJRVUZCTEVOQlFVRkJMRU5CUVU5blJ5eFBRVUZCUVN4RFFVRlJMRWRCUVVFc1EwRkJTeXhGUVVGQkxFTkJRVUVzUTBGRE1VTlZMRTFCUVVGQkxFTkJRVk42U1N4SlFVRkJRU3hEUVVGTE1Fa3NVMEZCUVVFc1EwRkJWVE5ITEV0QlFVRkJMRU5CUVVGQkxFTkJRM2hDTUVjc1RVRkJRVUVzUTBGQlUzcEpMRWxCUVVGQkxFTkJRVXR4Unl4UlFVRkJRU3hEUVVGVGIwTXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTMEZGZEVJc1IwRkJXU3hOUVVGQkxFVkJRVkl4UXl4SlFVRkJRU3hEUVVGblFpeERRVU55UWl4SlFVRkpiME1zVDBGQlFVRXNRMEZCVlc1SkxFbEJRVUZCTEVOQlFVdHpTU3hWUVVGQlFTeERRVUZYZGtjc1MwRkJRVUVzUTBGQlFVRXNRMEZET1VKQkxFdEJRVUZCTEVOQlFWRXZRaXhKUVVGQlFTeERRVUZMSzBVc1VVRkJRVUVzUTBGQlUyaEVMRXRCUVVGQkxFTkJRVUZCTEVOQlFVOW5SeXhQUVVGQlFTeERRVUZSTEVkQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkRNVU5WTEUxQlFVRkJMRU5CUVZONlNTeEpRVUZCUVN4RFFVRkxNRWtzVTBGQlFVRXNRMEZCVlROSExFdEJRVUZCTEVOQlFVRkJMRU5CUTNoQ01FY3NUVUZCUVVFc1EwRkJVM3BKTEVsQlFVRkJMRU5CUVV0eFJ5eFJRVUZCUVN4RFFVRlRiME1zVFVGQlFVRXNRMEZCUVVFc1EwRkRka0pCTEUxQlFVRkJMRU5CUVZONlNTeEpRVUZCUVN4RFFVRkxiMFFzVlVGQlFVRXNRMEZCVjNGR0xFMUJRVUZCTEVOQlFWRk9MRTlCUVVGQkxFTkJRVUZCTEVOQlJYSkRMRTlCUVU5TkxFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMWg2U1N4SlFVRkJRU3hEUVVGTE1Fa3NVMEZCUVVFc1JVRkJXU3hEUVVGRGNFTXNSMEZCUVVFc1EwRkJUU3hSUVVGQkxFZEJRVUVzUTBGRFZTeFJRVUZCTEVOQlFYUkNjVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUjBGQlFVRXNSVUZCWVhKRExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXMUNVU3hSUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCUVN4RFFVRkpaU3hOUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVRkhaU3hYUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVjMVJEVkpMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJsZXQgSWNvbnM9e1wiYWRkcmVzcy1ib29rXCI6XCJmYXMsIGZhLWFkZHJlc3MtYm9va1wiLGFtYXpvbjpcImZhcywgZmEtYW1hem9uXCIsYW1idWxhbmNlOlwiZmFzLCBmYS1hbWJ1bGFuY2VcIixhbmRyb2lkOlwiZmFzLCBmYS1hbmRyb2lkXCIsYXBwbGU6XCJmYXMsIGZhLWFwcGxlXCIsYXN0ZXJpc2s6XCJmYXMsIGZhLWFzdGVyaXNrXCIsYXQ6XCJmYXMsIGZhLWF0XCIsYmFja3dhcmQ6XCJmYXMsIGZhLWJhY2t3YXJkXCIsYmFuazpcImZhcywgZmEtYmFua1wiLGJhdHRlcnk6XCJmYXMsIGZhLWJhdHRlcnlcIixiZWQ6XCJmYXMsIGZhLWJlZFwiLGJlbGw6XCJmYXMsIGZhLWJlbGxcIixiaWN5Y2xlOlwiZmFzLCBmYS1iaWN5Y2xlXCIsXCJiaXJ0aGRheS1jYWtlXCI6XCJmYXMsIGZhLWJpcnRoZGF5LWNha2VcIixiaXRidWNrZXQ6XCJmYXMsIGZhLWJpdGJ1Y2tldFwiLGJpdGNvaW46XCJmYXMsIGZhLWJpdGNvaW5cIixibHVldG9vdGg6XCJmYXMsIGZhLWJsdWV0b290aFwiLGJvbHQ6XCJmYXMsIGZhLWJvbHRcIixib29rOlwiZmFzLCBmYS1ib29rXCIsYnVzOlwiZmFzLCBmYS1idXNcIixjYWI6XCJmYXMsIGZhLWNhYlwiLGNhbGN1bGF0b3I6XCJmYXMsIGZhLWNhbGN1bGF0b3JcIixjYW1lcmE6XCJmYXMsIGZhLWNhbWVyYVwiLGNhcjpcImZhcywgZmEtY2FyXCIsY2VydGlmaWNhdGU6XCJmYXMsIGZhLWNlcnRpZmljYXRlXCIsY2hpbGQ6XCJmYXMsIGZhLWNoaWxkXCIsY2hyb21lOlwiZmFzLCBmYS1jaHJvbWVcIixjbG91ZDpcImZhcywgZmEtY2xvdWRcIixjb2ZmZWU6XCJmYXMsIGZhLWNvZmZlZVwiLGNvbW1lbnQ6XCJmYXMsIGZhLWNvbW1lbnRcIixjb21wYXNzOlwiZmFzLCBmYS1jb21wYXNzXCIsY29weTpcImZhcywgZmEtY29weVwiLGNvcHlyaWdodDpcImZhcywgZmEtY29weXJpZ2h0XCIsY2xvbmU6XCJmYXMsIGZhLWNsb25lXCIsXCJjcmVkaXQtY2FyZFwiOlwiZmFzLCBmYS1jcmVkaXQtY2FyZFwiLGN1YmU6XCJmYXMsIGZhLWN1YmVcIixkZXNrdG9wOlwiZmFzLCBmYS1kZXNrdG9wXCIsZGlhbW9uZDpcImZhcywgZmEtZGlhbW9uZFwiLGRvd25sb2FkOlwiZmFzLCBmYS1kb3dubG9hZFwiLFwiZHJpdmVycy1saWNlbnNlXCI6XCJmYXMsIGZhLWRyaXZlcnMtbGljZW5zZVwiLGRyb3Bib3g6XCJmYXMsIGZhLWRyb3Bib3hcIixkcnVwYWw6XCJmYXMsIGZhLWRydXBhbFwiLGVkZ2U6XCJmYXMsIGZhLWVkZ2VcIixlZGl0OlwiZmFzLCBmYS1lZGl0XCIsZWplY3Q6XCJmYXMsIGZhLWVqZWN0XCIsXCJlbGxpcHNpcy1oXCI6XCJmYXMsIGZhLWVsbGlwc2lzLWhcIixlbnZlbG9wZTpcImZhcywgZmEtZW52ZWxvcGVcIixlcmFzZXI6XCJmYXMsIGZhLWVyYXNlclwiLGV4Y2hhbmdlOlwiZmFzLCBmYS1leGNoYW5nZVwiLGV4Y2xhbWF0aW9uOlwiZmFzLCBmYS1leGNsYW1hdGlvblwiLGV4cGFuZDpcImZhcywgZmEtZXhwYW5kXCIsZXllOlwiZmFzLCBmYS1leWVcIixcImV5ZS1zbGFzaFwiOlwiZmFzLCBmYS1leWUtc2xhc2hcIixmYXg6XCJmYXMsIGZhLWZheFwiLGZlbWFsZTpcImZhcywgZmEtZmVtYWxlXCIsZmlsZTpcImZhcywgZmEtZmlsZVwiLGZpbG06XCJmYXMsIGZhLWZpbG1cIixmaXJlOlwiZmFzLCBmYS1maXJlXCIsZmxhZzpcImZhcywgZmEtZmxhZ1wiLGZsaWNrcjpcImZhcywgZmEtZmxpY2tyXCIsZm9sZGVyOlwiZmFzLCBmYS1mb2xkZXJcIixmb3J3YXJkOlwiZmFzLCBmYS1mb3J3YXJkXCIsZm91cnNxdWFyZTpcImZhcywgZmEtZm91cnNxdWFyZVwiLGdpZnQ6XCJmYXMsIGZhLWdpZnRcIixnbGFzczpcImZhcywgZmEtZ2xhc3NcIixnbG9iZTpcImZhcywgZmEtZ2xvYmVcIixnb29nbGU6XCJmYXMsIGZhLWdvb2dsZVwiLFwiZ3JhZHVhdGlvbi1jYXBcIjpcImZhcywgZmEtZ3JhZHVhdGlvbi1jYXBcIixncm91cDpcImZhcywgZmEtZ3JvdXBcIixoYXNodGFnOlwiZmFzLCBmYS1oYXNodGFnXCIsaGVhZHBob25lczpcImZhcywgZmEtaGVhZHBob25lc1wiLGhlYXJ0OlwiZmFzLCBmYS1oZWFydFwiLGhpc3Rvcnk6XCJmYXMsIGZhLWhpc3RvcnlcIixob21lOlwiZmFzLCBmYS1ob21lXCIsaG90ZWw6XCJmYXMsIGZhLWhvdGVsXCIsaG91cmdsYXNzOlwiZmFzLCBmYS1ob3VyZ2xhc3NcIixpbWFnZTpcImZhcywgZmEtaW1hZ2VcIixpbWRiOlwiZmFzLCBmYS1pbWRiXCIsaW5ib3g6XCJmYXMsIGZhLWluYm94XCIsaW5kdXN0cnk6XCJmYXMsIGZhLWluZHVzdHJ5XCIsaW5mbzpcImZhcywgZmEtaW5mb1wiLGluc3RhZ3JhbTpcImZhcywgZmEtaW5zdGFncmFtXCIsa2V5OlwiZmFzLCBmYS1rZXlcIixsYW5ndWFnZTpcImZhcywgZmEtbGFuZ3VhZ2VcIixsYXB0b3A6XCJmYXMsIGZhLWxhcHRvcFwiLGxlYWY6XCJmYXMsIGZhLWxlYWZcIixsZWdhbDpcImZhcywgZmEtbGVnYWxcIixcImxpZmUtYm91eVwiOlwiZmFzLCBmYS1saWZlLWJvdXlcIixsaW5rZWRpbjpcImZhcywgZmEtbGlua2VkaW5cIixsaW51eDpcImZhcywgZmEtbGludXhcIixsb2NrOlwiZmFzLCBmYS1sb2NrXCIsbWFnaWM6XCJmYXMsIGZhLW1hZ2ljXCIsbWFnbmV0OlwiZmFzLCBmYS1tYWduZXRcIixtYWxlOlwiZmFzLCBmYS1tYWxlXCIsbWFwOlwiZmFzLCBmYS1tYXBcIixtaWNyb3Bob25lOlwiZmFzLCBmYS1taWNyb3Bob25lXCIsbW9iaWxlOlwiZmFzLCBmYS1tb2JpbGVcIixtb25leTpcImZhcywgZmEtbW9uZXlcIixtb3RvcmN5Y2xlOlwiZmFzLCBmYS1tb3RvcmN5Y2xlXCIsbXVzaWM6XCJmYXMsIGZhLW11c2ljXCIsb3BlcmE6XCJmYXMsIGZhLW9wZXJhXCIsXCJwYWludC1icnVzaFwiOlwiZmFzLCBmYS1wYWludC1icnVzaFwiLFwicGFwZXItcGxhbmVcIjpcImZhcywgZmEtcGFwZXItcGxhbmVcIixwYXVzZTpcImZhcywgZmEtcGF1c2VcIixwYXc6XCJmYXMsIGZhLXBhd1wiLHBheXBhbDpcImZhcywgZmEtcGF5cGFsXCIscGVuOlwiZmFzLCBmYS1wZW5cIixwZW5jaWw6XCJmYXMsIGZhLXBlbmNpbFwiLHBob25lOlwiZmFzLCBmYS1waG9uZVwiLHBob3RvOlwiZmFzLCBmYS1waG90b1wiLHBpbnRlcmVzdDpcImZhcywgZmEtcGludGVyZXN0XCIscGxhbmU6XCJmYXMsIGZhLXBsYW5lXCIscGxheTpcImZhcywgZmEtcGxheVwiLHBsdWc6XCJmYXMsIGZhLXBsdWdcIixwbHVzOlwiZmFzLCBmYS1wbHVzXCIscG9kY2FzdDpcImZhcywgZmEtcG9kY2FzdFwiLHF1ZXN0aW9uOlwiZmFzLCBmYS1xdWVzdGlvblwiLHF1b3JhOlwiZmFzLCBmYS1xdW9yYVwiLHJlY3ljbGU6XCJmYXMsIGZhLXJlY3ljbGVcIixyZWRkaXQ6XCJmYXMsIGZhLXJlZGRpdFwiLHJlZG86XCJmYXMsIGZhLXJlZG9cIixyZWZyZXNoOlwiZmFzLCBmYS1yZWZyZXNoXCIscmVwbHk6XCJmYXMsIGZhLXJlcGx5XCIscmVzaXN0YW5jZTpcImZhcywgZmEtcmVzaXN0YW5jZVwiLHJldHdlZXQ6XCJmYXMsIGZhLXJldHdlZXRcIixyb2FkOlwiZmFzLCBmYS1yb2FkXCIscm9ja2V0OlwiZmFzLCBmYS1yb2NrZXRcIixyc3M6XCJmYXMsIGZhLXJzc1wiLHNhZmFyaTpcImZhcywgZmEtc2FmYXJpXCIsc2NyaWJlOlwiZmFzLCBmYS1zY3JpYmVcIixzZWFyY2g6XCJmYXMsIGZhLXNlYXJjaFwiLHNlbmQ6XCJmYXMsIGZhLXNlbmRcIixzZXJ2ZXI6XCJmYXMsIGZhLXNlcnZlclwiLHNoaXA6XCJmYXMsIGZhLXNoaXBcIixcInNpZ24taW5cIjpcImZhcywgZmEtc2lnbi1pblwiLHNpdGVtYXA6XCJmYXMsIGZhLXNpdGVtYXBcIixza3lhdGxhczpcImZhcywgZmEtc2t5YXRsYXNcIixza3lwZTpcImZhcywgZmEtc2t5cGVcIixzbGlkZXNoYXJlOlwiZmFzLCBmYS1zbGlkZXNoYXJlXCIsc25hcGNoYXQ6XCJmYXMsIGZhLXNuYXBjaGF0XCIsc29ydDpcImZhcywgZmEtc29ydFwiLHNvdW5kY2xvdWQ6XCJmYXMsIGZhLXNvdW5kY2xvdWRcIixzcG9vbjpcImZhcywgZmEtc3Bvb25cIixzcG90aWZ5OlwiZmFzLCBmYS1zcG90aWZ5XCIsc3F1YXJlOlwiZmFzLCBmYS1zcXVhcmVcIixcInN0YWNrLWV4Y2hhbmdlXCI6XCJmYXMsIGZhLXN0YWNrLWV4Y2hhbmdlXCIsc3RhcjpcImZhcywgZmEtc3RhclwiLHN0ZWFtOlwiZmFzLCBmYS1zdGVhbVwiLFwic3RpY2t5LW5vdGVcIjpcImZhcywgZmEtc3RpY2t5LW5vdGVcIixzdG9wOlwiZmFzLCBmYS1zdG9wXCIsXCJzdHJlZXQtdmlld1wiOlwiZmFzLCBmYS1zdHJlZXQtdmlld1wiLHN1YndheTpcImZhcywgZmEtc3Vid2F5XCIsc3VpdGNhc2U6XCJmYXMsIGZhLXN1aXRjYXNlXCIsc3VwcG9ydDpcImZhcywgZmEtc3VwcG9ydFwiLHRhc2tzOlwiZmFzLCBmYS10YXNrc1wiLHRheGk6XCJmYXMsIGZhLXRheGlcIix0ZWxlZ3JhbTpcImZhcywgZmEtdGVsZWdyYW1cIix0ZWxldmlzaW9uOlwiZmFzLCBmYS10ZWxldmlzaW9uXCIsdGVybWluYWw6XCJmYXMsIGZhLXRlcm1pbmFsXCIsdGhlcm1vbWV0ZXI6XCJmYXMsIGZhLXRoZXJtb21ldGVyXCIsdGlja2V0OlwiZmFzLCBmYS10aWNrZXRcIix0aW1lczpcImZhcywgZmEtdGltZXNcIix0cmFpbjpcImZhcywgZmEtdHJhaW5cIix0cmFzaDpcImZhcywgZmEtdHJhc2hcIix0cmVlOlwiZmFzLCBmYS10cmVlXCIsdHJvcGh5OlwiZmFzLCBmYS10cm9waHlcIix0cnVjazpcImZhcywgZmEtdHJ1Y2tcIix0dW1ibHI6XCJmYXMsIGZhLXR1bWJsclwiLHR2OlwiZmFzLCBmYS10dlwiLHR3aXR0ZXI6XCJmYXMsIGZhLXR3aXR0ZXJcIix1bWJyZWxsYTpcImZhcywgZmEtdW1icmVsbGFcIix1bml2ZXJzaXR5OlwiZmFzLCBmYS11bml2ZXJzaXR5XCIsdW5sb2NrOlwiZmFzLCBmYS11bmxvY2tcIix1cGxvYWQ6XCJmYXMsIGZhLXVwbG9hZFwiLHVzYjpcImZhcywgZmEtdXNiXCIsdXNlcjpcImZhcywgZmEtdXNlclwiLFwidmlkZW8tY2FtZXJhXCI6XCJmYXMsIGZhLXZpZGVvLWNhbWVyYVwiLHZpbWVvOlwiZmFzLCBmYS12aW1lb1wiLHdhcm5pbmc6XCJmYXMsIGZhLXdhcm5pbmdcIix3ZWNoYXQ6XCJmYXMsIGZhLXdlY2hhdFwiLHdlaWJvOlwiZmFzLCBmYS13ZWlib1wiLHdoYXRzYXBwOlwiZmFzLCBmYS13aGF0c2FwcFwiLHdoZWVsY2hhaXI6XCJmYXMsIGZhLXdoZWVsY2hhaXJcIix3aWZpOlwiZmFzLCBmYS13aWZpXCIsXCJ3aWtpcGVkaWEtd1wiOlwiZmFzLCBmYS13aWtpcGVkaWEtd1wiLHdvcmRwcmVzczpcImZhcywgZmEtd29yZHByZXNzXCIseWVscDpcImZhcywgZmEteWVscFwiLHlvYXN0OlwiZmFzLCBmYS15b2FzdFwiLHlvdXR1YmU6XCJmYXMsIGZhLXlvdXR1YmVcIix1bmRvOlwiZmFzLCBmYS11bmRvXCJ9O3ZhciBfJEljb25zXzE9SWNvbnM7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrbGpiMjV6TG1weklsMHNJbTVoYldWeklqcGJJa2xqYjI1eklpd2lZV1JrY21WemN5MWliMjlySWl3aVlXMWhlbTl1SWl3aVlXMWlkV3hoYm1ObElpd2lZVzVrY205cFpDSXNJbUZ3Y0d4bElpd2lZWE4wWlhKcGMyc2lMQ0poZENJc0ltSmhZMnQzWVhKa0lpd2lZbUZ1YXlJc0ltSmhkSFJsY25raUxDSmlaV1FpTENKaVpXeHNJaXdpWW1samVXTnNaU0lzSW1KcGNuUm9aR0Y1TFdOaGEyVWlMQ0ppYVhSaWRXTnJaWFFpTENKaWFYUmpiMmx1SWl3aVlteDFaWFJ2YjNSb0lpd2lZbTlzZENJc0ltSnZiMnNpTENKaWRYTWlMQ0pqWVdJaUxDSmpZV3hqZFd4aGRHOXlJaXdpWTJGdFpYSmhJaXdpWTJGeUlpd2lZMlZ5ZEdsbWFXTmhkR1VpTENKamFHbHNaQ0lzSW1Ob2NtOXRaU0lzSW1Oc2IzVmtJaXdpWTI5bVptVmxJaXdpWTI5dGJXVnVkQ0lzSW1OdmJYQmhjM01pTENKamIzQjVJaXdpWTI5d2VYSnBaMmgwSWl3aVkyeHZibVVpTENKamNtVmthWFF0WTJGeVpDSXNJbU4xWW1VaUxDSmtaWE5yZEc5d0lpd2laR2xoYlc5dVpDSXNJbVJ2ZDI1c2IyRmtJaXdpWkhKcGRtVnljeTFzYVdObGJuTmxJaXdpWkhKdmNHSnZlQ0lzSW1SeWRYQmhiQ0lzSW1Wa1oyVWlMQ0psWkdsMElpd2laV3BsWTNRaUxDSmxiR3hwY0hOcGN5MW9JaXdpWlc1MlpXeHZjR1VpTENKbGNtRnpaWElpTENKbGVHTm9ZVzVuWlNJc0ltVjRZMnhoYldGMGFXOXVJaXdpWlhod1lXNWtJaXdpWlhsbElpd2laWGxsTFhOc1lYTm9JaXdpWm1GNElpd2labVZ0WVd4bElpd2labWxzWlNJc0ltWnBiRzBpTENKbWFYSmxJaXdpWm14aFp5SXNJbVpzYVdOcmNpSXNJbVp2YkdSbGNpSXNJbVp2Y25kaGNtUWlMQ0ptYjNWeWMzRjFZWEpsSWl3aVoybG1kQ0lzSW1kc1lYTnpJaXdpWjJ4dlltVWlMQ0puYjI5bmJHVWlMQ0puY21Ga2RXRjBhVzl1TFdOaGNDSXNJbWR5YjNWd0lpd2lhR0Z6YUhSaFp5SXNJbWhsWVdSd2FHOXVaWE1pTENKb1pXRnlkQ0lzSW1ocGMzUnZjbmtpTENKb2IyMWxJaXdpYUc5MFpXd2lMQ0pvYjNWeVoyeGhjM01pTENKcGJXRm5aU0lzSW1sdFpHSWlMQ0pwYm1KdmVDSXNJbWx1WkhWemRISjVJaXdpYVc1bWJ5SXNJbWx1YzNSaFozSmhiU0lzSW10bGVTSXNJbXhoYm1kMVlXZGxJaXdpYkdGd2RHOXdJaXdpYkdWaFppSXNJbXhsWjJGc0lpd2liR2xtWlMxaWIzVjVJaXdpYkdsdWEyVmthVzRpTENKc2FXNTFlQ0lzSW14dlkyc2lMQ0p0WVdkcFl5SXNJbTFoWjI1bGRDSXNJbTFoYkdVaUxDSnRZWEFpTENKdGFXTnliM0JvYjI1bElpd2liVzlpYVd4bElpd2liVzl1WlhraUxDSnRiM1J2Y21ONVkyeGxJaXdpYlhWemFXTWlMQ0p2Y0dWeVlTSXNJbkJoYVc1MExXSnlkWE5vSWl3aWNHRndaWEl0Y0d4aGJtVWlMQ0p3WVhWelpTSXNJbkJoZHlJc0luQmhlWEJoYkNJc0luQmxiaUlzSW5CbGJtTnBiQ0lzSW5Cb2IyNWxJaXdpY0dodmRHOGlMQ0p3YVc1MFpYSmxjM1FpTENKd2JHRnVaU0lzSW5Cc1lYa2lMQ0p3YkhWbklpd2ljR3gxY3lJc0luQnZaR05oYzNRaUxDSnhkV1Z6ZEdsdmJpSXNJbkYxYjNKaElpd2ljbVZqZVdOc1pTSXNJbkpsWkdScGRDSXNJbkpsWkc4aUxDSnlaV1p5WlhOb0lpd2ljbVZ3YkhraUxDSnlaWE5wYzNSaGJtTmxJaXdpY21WMGQyVmxkQ0lzSW5KdllXUWlMQ0p5YjJOclpYUWlMQ0p5YzNNaUxDSnpZV1poY21raUxDSnpZM0pwWW1VaUxDSnpaV0Z5WTJnaUxDSnpaVzVrSWl3aWMyVnlkbVZ5SWl3aWMyaHBjQ0lzSW5OcFoyNHRhVzRpTENKemFYUmxiV0Z3SWl3aWMydDVZWFJzWVhNaUxDSnphM2x3WlNJc0luTnNhV1JsYzJoaGNtVWlMQ0p6Ym1Gd1kyaGhkQ0lzSW5OdmNuUWlMQ0p6YjNWdVpHTnNiM1ZrSWl3aWMzQnZiMjRpTENKemNHOTBhV1o1SWl3aWMzRjFZWEpsSWl3aWMzUmhZMnN0WlhoamFHRnVaMlVpTENKemRHRnlJaXdpYzNSbFlXMGlMQ0p6ZEdsamEza3RibTkwWlNJc0luTjBiM0FpTENKemRISmxaWFF0ZG1sbGR5SXNJbk4xWW5kaGVTSXNJbk4xYVhSallYTmxJaXdpYzNWd2NHOXlkQ0lzSW5SaGMydHpJaXdpZEdGNGFTSXNJblJsYkdWbmNtRnRJaXdpZEdWc1pYWnBjMmx2YmlJc0luUmxjbTFwYm1Gc0lpd2lkR2hsY20xdmJXVjBaWElpTENKMGFXTnJaWFFpTENKMGFXMWxjeUlzSW5SeVlXbHVJaXdpZEhKaGMyZ2lMQ0owY21WbElpd2lkSEp2Y0doNUlpd2lkSEoxWTJzaUxDSjBkVzFpYkhJaUxDSjBkaUlzSW5SM2FYUjBaWElpTENKMWJXSnlaV3hzWVNJc0luVnVhWFpsY25OcGRIa2lMQ0oxYm14dlkyc2lMQ0oxY0d4dllXUWlMQ0oxYzJJaUxDSjFjMlZ5SWl3aWRtbGtaVzh0WTJGdFpYSmhJaXdpZG1sdFpXOGlMQ0ozWVhKdWFXNW5JaXdpZDJWamFHRjBJaXdpZDJWcFltOGlMQ0ozYUdGMGMyRndjQ0lzSW5kb1pXVnNZMmhoYVhJaUxDSjNhV1pwSWl3aWQybHJhWEJsWkdsaExYY2lMQ0ozYjNKa2NISmxjM01pTENKNVpXeHdJaXdpZVc5aGMzUWlMQ0o1YjNWMGRXSmxJaXdpZFc1a2J5SXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRWxCUVVsQkxFdEJRVUZCTEVOQlFWRXNRMEZGV2tNc1kwRkJRVUVzUTBGQmQwSXNjMEpCUVVFc1EwRkRlRUpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhUUVVGQlFTeERRVUZ4UWl4dFFrRkJRU3hEUVVOeVFrTXNUMEZCUVVFc1EwRkJiVUlzYVVKQlFVRXNRMEZEYmtKRExFdEJRVUZCTEVOQlFXbENMR1ZCUVVFc1EwRkRha0pETEZGQlFVRkJMRU5CUVc5Q0xHdENRVUZCTEVOQlEzQkNReXhGUVVGQlFTeERRVUZqTEZsQlFVRXNRMEZEWkVNc1VVRkJRVUVzUTBGQmIwSXNhMEpCUVVFc1EwRkRjRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eEhRVUZCUVN4RFFVRmxMR0ZCUVVFc1EwRkRaa01zU1VGQlFVRXNRMEZCWjBJc1kwRkJRU3hEUVVOb1FrTXNUMEZCUVVFc1EwRkJiVUlzYVVKQlFVRXNRMEZEYmtKRExHVkJRVUZCTEVOQlFYbENMSFZDUVVGQkxFTkJRM3BDUXl4VFFVRkJRU3hEUVVGeFFpeHRRa0ZCUVN4RFFVTnlRa01zVDBGQlFVRXNRMEZCYlVJc2FVSkJRVUVzUTBGRGJrSkRMRk5CUVVGQkxFTkJRWEZDTEcxQ1FVRkJMRU5CUTNKQ1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhIUVVGQlFTeERRVUZsTEdGQlFVRXNRMEZEWmtNc1IwRkJRVUVzUTBGQlpTeGhRVUZCTEVOQlEyWkRMRlZCUVVGQkxFTkJRWE5DTEc5Q1FVRkJMRU5CUTNSQ1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1IwRkJRVUVzUTBGQlpTeGhRVUZCTEVOQlEyWkRMRmRCUVVGQkxFTkJRWFZDTEhGQ1FVRkJMRU5CUTNaQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNUVUZCUVVFc1EwRkJhMElzWjBKQlFVRXNRMEZEYkVKRExFOUJRVUZCTEVOQlFXMUNMR2xDUVVGQkxFTkJRMjVDUXl4UFFVRkJRU3hEUVVGdFFpeHBRa0ZCUVN4RFFVTnVRa01zU1VGQlFVRXNRMEZCWjBJc1kwRkJRU3hEUVVOb1FrTXNVMEZCUVVFc1EwRkJjVUlzYlVKQlFVRXNRMEZEY2tKRExFdEJRVUZCTEVOQlFXbENMR1ZCUVVFc1EwRkRha0pETEdGQlFVRkJMRU5CUVhWQ0xIRkNRVUZCTEVOQlEzWkNReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eFBRVUZCUVN4RFFVRnRRaXhwUWtGQlFTeERRVU51UWtNc1QwRkJRVUVzUTBGQmJVSXNhVUpCUVVFc1EwRkRia0pETEZGQlFVRkJMRU5CUVc5Q0xHdENRVUZCTEVOQlEzQkNReXhwUWtGQlFVRXNRMEZCTWtJc2VVSkJRVUVzUTBGRE0wSkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zU1VGQlFVRXNRMEZCWjBJc1kwRkJRU3hEUVVOb1FrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1dVRkJRVUVzUTBGQmMwSXNiMEpCUVVFc1EwRkRkRUpETEZGQlFVRkJMRU5CUVc5Q0xHdENRVUZCTEVOQlEzQkNReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNVVUZCUVVFc1EwRkJiMElzYTBKQlFVRXNRMEZEY0VKRExGZEJRVUZCTEVOQlFYVkNMSEZDUVVGQkxFTkJRM1pDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zUjBGQlFVRXNRMEZCWlN4aFFVRkJMRU5CUTJaRExGZEJRVUZCTEVOQlFYRkNMRzFDUVVGQkxFTkJRM0pDUXl4SFFVRkJRU3hEUVVGbExHRkJRVUVzUTBGRFprTXNUVUZCUVVFc1EwRkJhMElzWjBKQlFVRXNRMEZEYkVKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNUMEZCUVVFc1EwRkJiVUlzYVVKQlFVRXNRMEZEYmtKRExGVkJRVUZCTEVOQlFYTkNMRzlDUVVGQkxFTkJRM1JDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zWjBKQlFVRkJMRU5CUVRCQ0xIZENRVUZCTEVOQlF6RkNReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eFBRVUZCUVN4RFFVRnRRaXhwUWtGQlFTeERRVU51UWtNc1ZVRkJRVUVzUTBGQmMwSXNiMEpCUVVFc1EwRkRkRUpETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhUUVVGQlFTeERRVUZ4UWl4dFFrRkJRU3hEUVVOeVFrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNVVUZCUVVFc1EwRkJiMElzYTBKQlFVRXNRMEZEY0VKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEZOQlFVRkJMRU5CUVhGQ0xHMUNRVUZCTEVOQlEzSkNReXhIUVVGQlFTeERRVUZsTEdGQlFVRXNRMEZEWmtNc1VVRkJRVUVzUTBGQmIwSXNhMEpCUVVFc1EwRkRjRUpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4WFFVRkJRU3hEUVVGeFFpeHRRa0ZCUVN4RFFVTnlRa01zVVVGQlFVRXNRMEZCYjBJc2EwSkJRVUVzUTBGRGNFSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRTFCUVVGQkxFTkJRV3RDTEdkQ1FVRkJMRU5CUTJ4Q1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4SFFVRkJRU3hEUVVGbExHRkJRVUVzUTBGRFprTXNWVUZCUVVFc1EwRkJjMElzYjBKQlFVRXNRMEZEZEVKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhWUVVGQlFTeERRVUZ6UWl4dlFrRkJRU3hEUVVOMFFrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1MwRkJRVUVzUTBGQmFVSXNaVUZCUVN4RFFVTnFRa01zWVVGQlFVRXNRMEZCZFVJc2NVSkJRVUVzUTBGRGRrSkRMR0ZCUVVGQkxFTkJRWFZDTEhGQ1FVRkJMRU5CUTNaQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4SFFVRkJRU3hEUVVGbExHRkJRVUVzUTBGRFprTXNUVUZCUVVFc1EwRkJhMElzWjBKQlFVRXNRMEZEYkVKRExFZEJRVUZCTEVOQlFXVXNZVUZCUVN4RFFVTm1ReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1MwRkJRVUVzUTBGQmFVSXNaVUZCUVN4RFFVTnFRa01zVTBGQlFVRXNRMEZCY1VJc2JVSkJRVUVzUTBGRGNrSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFOUJRVUZCTEVOQlFXMUNMR2xDUVVGQkxFTkJRMjVDUXl4UlFVRkJRU3hEUVVGdlFpeHJRa0ZCUVN4RFFVTndRa01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNUMEZCUVVFc1EwRkJiVUlzYVVKQlFVRXNRMEZEYmtKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhQUVVGQlFTeERRVUZ0UWl4cFFrRkJRU3hEUVVOdVFrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1ZVRkJRVUVzUTBGQmMwSXNiMEpCUVVFc1EwRkRkRUpETEU5QlFVRkJMRU5CUVcxQ0xHbENRVUZCTEVOQlEyNUNReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1IwRkJRVUVzUTBGQlpTeGhRVUZCTEVOQlEyWkRMRTFCUVVGQkxFTkJRV3RDTEdkQ1FVRkJMRU5CUTJ4Q1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1RVRkJRVUVzUTBGQmEwSXNaMEpCUVVFc1EwRkRiRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRTFCUVVGQkxFTkJRV3RDTEdkQ1FVRkJMRU5CUTJ4Q1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4VFFVRkJRU3hEUVVGdFFpeHBRa0ZCUVN4RFFVTnVRa01zVDBGQlFVRXNRMEZCYlVJc2FVSkJRVUVzUTBGRGJrSkRMRkZCUVVGQkxFTkJRVzlDTEd0Q1FVRkJMRU5CUTNCQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4VlFVRkJRU3hEUVVGelFpeHZRa0ZCUVN4RFFVTjBRa01zVVVGQlFVRXNRMEZCYjBJc2EwSkJRVUVzUTBGRGNFSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExGVkJRVUZCTEVOQlFYTkNMRzlDUVVGQkxFTkJRM1JDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhQUVVGQlFTeERRVUZ0UWl4cFFrRkJRU3hEUVVOdVFrTXNUVUZCUVVFc1EwRkJhMElzWjBKQlFVRXNRMEZEYkVKRExHZENRVUZCUVN4RFFVRXdRaXgzUWtGQlFTeERRVU14UWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNZVUZCUVVFc1EwRkJkVUlzY1VKQlFVRXNRMEZEZGtKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEdGQlFVRkJMRU5CUVhWQ0xIRkNRVUZCTEVOQlEzWkNReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNVVUZCUVVFc1EwRkJiMElzYTBKQlFVRXNRMEZEY0VKRExFOUJRVUZCTEVOQlFXMUNMR2xDUVVGQkxFTkJRMjVDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eFJRVUZCUVN4RFFVRnZRaXhyUWtGQlFTeERRVU53UWtNc1ZVRkJRVUVzUTBGQmMwSXNiMEpCUVVFc1EwRkRkRUpETEZGQlFVRkJMRU5CUVc5Q0xHdENRVUZCTEVOQlEzQkNReXhYUVVGQlFTeERRVUYxUWl4eFFrRkJRU3hEUVVOMlFrTXNUVUZCUVVFc1EwRkJhMElzWjBKQlFVRXNRMEZEYkVKRExFdEJRVUZCTEVOQlFXbENMR1ZCUVVFc1EwRkRha0pETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1JVRkJRVUVzUTBGQll5eFpRVUZCTEVOQlEyUkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eFJRVUZCUVN4RFFVRnZRaXhyUWtGQlFTeERRVU53UWtNc1ZVRkJRVUVzUTBGQmMwSXNiMEpCUVVFc1EwRkRkRUpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNSMEZCUVVFc1EwRkJaU3hoUVVGQkxFTkJRMlpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMR05CUVVGQkxFTkJRWGRDTEhOQ1FVRkJMRU5CUTNoQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4UFFVRkJRU3hEUVVGdFFpeHBRa0ZCUVN4RFFVTnVRa01zVFVGQlFVRXNRMEZCYTBJc1owSkJRVUVzUTBGRGJFSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExGRkJRVUZCTEVOQlFXOUNMR3RDUVVGQkxFTkJRM0JDUXl4VlFVRkJRU3hEUVVGelFpeHZRa0ZCUVN4RFFVTjBRa01zU1VGQlFVRXNRMEZCWjBJc1kwRkJRU3hEUVVOb1FrTXNZVUZCUVVFc1EwRkJkVUlzY1VKQlFVRXNRMEZEZGtKRExGTkJRVUZCTEVOQlFYRkNMRzFDUVVGQkxFTkJRM0pDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eFBRVUZCUVN4RFFVRnRRaXhwUWtGQlFTeERRVU51UWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVRkJMRU5CUjJoQ1F5eGhRVUZQUXl4RFFVRlZhRTBzUzBGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsImxldCBfX2Z1bmNfMTU9bmV3KF8kRnVuY180KTt2YXIgXyRTaGFkb3dfMTU9ZnVuY3Rpb24oZWxlbWVudCl7bGV0IHNlbGY9e2VsZW1lbnQ6ZWxlbWVudC5jbG9uZU5vZGUoITApLGNoaWxkcmVuOltlbGVtZW50XSxwcm9wZXJ0aWVzOnt9LGNoaWxkUHJvcGVydGllczp7fSx1cGRhdGVOZXdFbGVtZW50Q2hpbGRQcm9wZXJ0aWVzOmZ1bmN0aW9uKGVsZW1lbnQscHJvcGVydHlDb2xsZWN0aW9uPXt9KXtsZXQgY2hpbGRyZW4scG9zaXRpb25zO2ZvcihsZXQgaWRlbnRpZmllciBpbiBwcm9wZXJ0eUNvbGxlY3Rpb24pZm9yKGxldCBjaGlsZFByb3BlcnRpZXMgb2YgcHJvcGVydHlDb2xsZWN0aW9uW2lkZW50aWZpZXJdKXtwb3NpdGlvbnM9dGhpcy5zZXRQb3NpdGlvbnMoY2hpbGRQcm9wZXJ0aWVzLnBvc2l0aW9ucyksY2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLGVsZW1lbnQscG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0uc2V0UHJvcGVydGllcyhjaGlsZFByb3BlcnRpZXMucHJvcGVydGllcyl9fSx1cGRhdGVOZXdFbGVtZW50Q2hpbGRBdHRyaWJ1dGVzOmZ1bmN0aW9uKGVsZW1lbnQsYXR0cmlidXRlQ29sbGVjdGlvbj17fSl7bGV0IGNoaWxkcmVuLHBvc2l0aW9ucztmb3IobGV0IGlkZW50aWZpZXIgaW4gYXR0cmlidXRlQ29sbGVjdGlvbilmb3IobGV0IGNoaWxkQXRycmlidXRlcyBvZiBhdHRyaWJ1dGVDb2xsZWN0aW9uW2lkZW50aWZpZXJdKXtwb3NpdGlvbnM9dGhpcy5zZXRQb3NpdGlvbnMoY2hpbGRBdHJyaWJ1dGVzLnBvc2l0aW9ucyksY2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLGVsZW1lbnQscG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0uc2V0QXR0cmlidXRlcyhjaGlsZEF0cnJpYnV0ZXMuYXR0cmlidXRlcyl9fSxzZXRQb3NpdGlvbnM6ZnVuY3Rpb24ocG9zaXRpb25zPTEpe3JldHVybiBBcnJheS5pc0FycmF5KHBvc2l0aW9ucyl8fChwb3NpdGlvbnM9X19mdW5jXzE1LnJhbmdlKHBvc2l0aW9ucykpLHBvc2l0aW9uc30sY3JlYXRlRWxlbWVudDpmdW5jdGlvbihwYXJhbXM9e2NoaWxkRGV0YWlsczp7YXR0cmlidXRlczp7fSxwcm9wZXJ0aWVzOnt9fSxkZXRhaWxzOnthdHRyaWJ1dGVzOnt9LHByb3BlcnRpZXM6e319fSl7bGV0IGVsZW1lbnQ9dGhpcy5lbGVtZW50LmNsb25lTm9kZSghMCk7cmV0dXJuIHRoaXMuY2hpbGRyZW4ucHVzaChlbGVtZW50KSx0aGlzLnByZXBhcmVFbGVtZW50KGVsZW1lbnQscGFyYW1zKSxlbGVtZW50fSxwcmVwYXJlRWxlbWVudDpmdW5jdGlvbihlbGVtZW50LHBhcmFtcz17Y2hpbGREZXRhaWxzOnthdHRyaWJ1dGVzOnt9LHByb3BlcnRpZXM6e319LGRldGFpbHM6e2F0dHJpYnV0ZXM6e30scHJvcGVydGllczp7fX19KXtudWxsIT1wYXJhbXMuY2hpbGREZXRhaWxzJiYobnVsbCE9cGFyYW1zLmNoaWxkRGV0YWlscy5hdHRyaWJ1dGVzJiZ0aGlzLnVwZGF0ZU5ld0VsZW1lbnRDaGlsZEF0dHJpYnV0ZXMoZWxlbWVudCxwYXJhbXMuY2hpbGREZXRhaWxzLmF0dHJpYnV0ZXMpLG51bGwhPXBhcmFtcy5jaGlsZERldGFpbHMucHJvcGVydGllcyYmdGhpcy51cGRhdGVOZXdFbGVtZW50Q2hpbGRQcm9wZXJ0aWVzKGVsZW1lbnQscGFyYW1zLmNoaWxkRGV0YWlscy5wcm9wZXJ0aWVzKSksbnVsbCE9cGFyYW1zLmRldGFpbHMmJihudWxsIT1wYXJhbXMuZGV0YWlscy5hdHRyaWJ1dGVzJiZlbGVtZW50LnNldEF0dHJpYnV0ZXMocGFyYW1zLmRldGFpbHMuYXR0cmlidXRlcyksbnVsbCE9cGFyYW1zLmRldGFpbHMucHJvcGVydGllcyYmZWxlbWVudC5zZXRQcm9wZXJ0aWVzKHBhcmFtcy5kZXRhaWxzLnByb3BlcnRpZXMpKSx0aGlzLnVwZGF0ZU5ld0VsZW1lbnRDaGlsZFByb3BlcnRpZXMoZWxlbWVudCx0aGlzLmNoaWxkUHJvcGVydGllcyksZWxlbWVudC5zZXRQcm9wZXJ0aWVzKHRoaXMucHJvcGVydGllcyksdGhpcy5tYWtlQ2xvbmVhYmxlKGVsZW1lbnQpfSxyZW1vdmVFbGVtZW50OmZ1bmN0aW9uKGVsZW1lbnQpe2xldCBjaGlsZHJlbj1bXSxwb3NpdGlvbj10aGlzLmNoaWxkcmVuLmluZGV4T2YoZWxlbWVudCk7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0O2krKylwb3NpdGlvbiE9aSYmY2hpbGRyZW4ucHVzaCh0aGlzLmNoaWxkcmVuW2ldKTt0aGlzLmNoaWxkcmVuPWNoaWxkcmVufSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24ocG9zaXRpb24scGFyYW1zPXtjaGlsZERldGFpbHM6e2F0dHJpYnV0ZXM6e30scHJvcGVydGllczp7fX0sZGV0YWlsczp7YXR0cmlidXRlczp7fSxwcm9wZXJ0aWVzOnt9fX0pe2xldCBlbGVtZW50PXRoaXMuY2hpbGRyZW5bcG9zaXRpb25dLmNsb25lTm9kZSghMCk7cmV0dXJuIHRoaXMuY2hpbGRyZW4ucHVzaChlbGVtZW50KSx0aGlzLnByZXBhcmVFbGVtZW50KGVsZW1lbnQscGFyYW1zKSxlbGVtZW50fSxtYWtlQ2xvbmVhYmxlOmZ1bmN0aW9uKGVsZW1lbnQpe2xldCBwb3NpdGlvbj10aGlzLmNoaWxkcmVuLmluZGV4T2YoZWxlbWVudCk7LTEhPXBvc2l0aW9uJiYoZWxlbWVudC51bml0Q2xvbmU9KHBhcmFtcz0+dGhpcy5jbG9uZUVsZW1lbnQocG9zaXRpb24scGFyYW1zKSkpfSxsZW5ndGg6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGlsZHJlbi5sZW5ndGh9LHNldFByb3BlcnRpZXM6ZnVuY3Rpb24ocHJvcGVydGllcz17fSl7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspdGhpcy5jaGlsZHJlbltpXS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMpO3RoaXMuZWxlbWVudC5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMpO2ZvcihsZXQgaSBpbiBwcm9wZXJ0aWVzKXRoaXMucHJvcGVydGllc1tpXT1wcm9wZXJ0aWVzW2ldfSxjc3M6ZnVuY3Rpb24oc3R5bGU9e30pe2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXRoaXMuY2hpbGRyZW5baV0uY3NzKHN0eWxlKTt0aGlzLmVsZW1lbnQuY3NzKHN0eWxlKX0sc2V0QXR0cmlidXRlczpmdW5jdGlvbihhdHRyaWJ1dGVzPXt9KXtmb3IobGV0IGk9MDtpPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2krKyl0aGlzLmNoaWxkcmVuW2ldLnNldEF0dHJpYnV0ZXMoYXR0cmlidXRlcyk7dGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZXMoYXR0cmlidXRlcyl9LGFkZENsYXNzZXM6ZnVuY3Rpb24oY2xhc3Nlcz1cIlwiKXtmb3IobGV0IGk9MDtpPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2krKyl0aGlzLmNoaWxkcmVuW2ldLmFkZENsYXNzZXMoY2xhc3Nlcyk7dGhpcy5lbGVtZW50LmFkZENsYXNzZXMoY2xhc3Nlcyl9LHJlbW92ZUNsYXNzZXM6ZnVuY3Rpb24oY2xhc3Nlcz1cIlwiKXtmb3IobGV0IGk9MDtpPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2krKyl0aGlzLmNoaWxkcmVuW2ldLnJlbW92ZUNsYXNzZXMoY2xhc3Nlcyk7dGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzZXMoY2xhc3Nlcyl9LGdldENoaWxkcmVuOmZ1bmN0aW9uKGlkZW50aWZpZXI9XCJcIixlbGVtZW50LHBvc2l0aW9ucz1bXSl7bGV0IGNvbGxlY3Rpb249W10sY2hpbGRyZW49ZWxlbWVudC5maW5kQWxsKGlkZW50aWZpZXIpO2lmKGNoaWxkcmVuLmxlbmd0aD4wKWZvcihsZXQgaj0wO2o8cG9zaXRpb25zLmxlbmd0aDtqKyspbnVsbCE9Y2hpbGRyZW5bcG9zaXRpb25zW2pdXSYmY29sbGVjdGlvbi5wdXNoKGNoaWxkcmVuW3Bvc2l0aW9uc1tqXV0pO3JldHVybiBjb2xsZWN0aW9ufSxjaGlsZENzczpmdW5jdGlvbihpZGVudGlmaWVyPVwiXCIsc3R5bGU9e30scG9zaXRpb25zPVtdKXtsZXQgY2hpbGRyZW47cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKHBvc2l0aW9ucyk7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspe2NoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmNoaWxkcmVuW2ldLHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLmNzcyhzdHlsZSl9Y2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLHRoaXMuZWxlbWVudCxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5jc3Moc3R5bGUpfSxzZXRDaGlsZFByb3BlcnRpZXM6ZnVuY3Rpb24oaWRlbnRpZmllcj1cIlwiLHByb3BlcnRpZXM9e30scG9zaXRpb25zPVtdKXtsZXQgY2hpbGRyZW47cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKHBvc2l0aW9ucyk7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspe2NoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmNoaWxkcmVuW2ldLHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLnNldFByb3BlcnRpZXMocHJvcGVydGllcyl9Y2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLHRoaXMuZWxlbWVudCxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMpO3RoaXMuY2hpbGRQcm9wZXJ0aWVzW2lkZW50aWZpZXJdPXRoaXMuY2hpbGRQcm9wZXJ0aWVzW2lkZW50aWZpZXJdfHxbXSx0aGlzLmNoaWxkUHJvcGVydGllc1tpZGVudGlmaWVyXS5wdXNoKHtwcm9wZXJ0aWVzOnByb3BlcnRpZXMscG9zaXRpb25zOnBvc2l0aW9uc30pfSxzZXRDaGlsZEF0dHJpYnV0ZXM6ZnVuY3Rpb24oaWRlbnRpZmllcj1cIlwiLGF0dHJpYnV0ZXM9e30scG9zaXRpb25zPVwiXCIpe2xldCBjaGlsZHJlbjtwb3NpdGlvbnM9dGhpcy5zZXRQb3NpdGlvbnMocG9zaXRpb25zKTtmb3IobGV0IGk9MDtpPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2krKyl7Y2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLHRoaXMuY2hpbGRyZW5baV0scG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0uc2V0QXR0cmlidXRlcyhhdHRyaWJ1dGVzKX1jaGlsZHJlbj10aGlzLmdldENoaWxkcmVuKGlkZW50aWZpZXIsdGhpcy5lbGVtZW50LHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLnNldEF0dHJpYnV0ZXMoYXR0cmlidXRlcyl9LGFkZENsYXNzZXNUb0NoaWxkOmZ1bmN0aW9uKGlkZW50aWZpZXI9XCJcIixjbGFzc2VzPVwiXCIscG9zaXRpb25zPVtdKXtsZXQgY2hpbGRyZW47cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKHBvc2l0aW9ucyk7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspe2NoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmNoaWxkcmVuW2ldLHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLmFkZENsYXNzZXMoY2xhc3Nlcyl9Y2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLHRoaXMuZWxlbWVudCxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5hZGRDbGFzc2VzKGNsYXNzZXMpfSxyZW1vdmVDbGFzc2VzRnJvbUNoaWxkOmZ1bmN0aW9uKGlkZW50aWZpZXI9XCJcIixjbGFzc2VzPVwiXCIscG9zaXRpb25zPVtdKXtsZXQgY2hpbGRyZW47cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKHBvc2l0aW9ucyk7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspe2NoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmNoaWxkcmVuW2ldLHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLnJlbW92ZUNsYXNzZXMoY2xhc3Nlcyl9Y2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLHRoaXMuZWxlbWVudCxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5yZW1vdmVDbGFzc2VzKGNsYXNzZXMpfX07cmV0dXJuIHNlbGZ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbE5vWVdSdmR5NXFjeUpkTENKdVlXMWxjeUk2V3lKbWRXNWpJaXdpY21WeGRXbHlaU0lzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKbGJHVnRaVzUwSWl3aWMyVnNaaUlzSW1Oc2IyNWxUbTlrWlNJc0ltTm9hV3hrY21WdUlpd2ljSEp2Y0dWeWRHbGxjeUlzSW1Ob2FXeGtVSEp2Y0dWeWRHbGxjeUlzSW5Wd1pHRjBaVTVsZDBWc1pXMWxiblJEYUdsc1pGQnliM0JsY25ScFpYTWlMQ0p3Y205d1pYSjBlVU52Ykd4bFkzUnBiMjRpTENKd2IzTnBkR2x2Ym5NaUxDSnBaR1Z1ZEdsbWFXVnlJaXdpZEdocGN5SXNJbk5sZEZCdmMybDBhVzl1Y3lJc0ltZGxkRU5vYVd4a2NtVnVJaXdpYWlJc0lteGxibWQwYUNJc0luTmxkRkJ5YjNCbGNuUnBaWE1pTENKMWNHUmhkR1ZPWlhkRmJHVnRaVzUwUTJocGJHUkJkSFJ5YVdKMWRHVnpJaXdpWVhSMGNtbGlkWFJsUTI5c2JHVmpkR2x2YmlJc0ltTm9hV3hrUVhSeWNtbGlkWFJsY3lJc0luTmxkRUYwZEhKcFluVjBaWE1pTENKaGRIUnlhV0oxZEdWeklpd2lRWEp5WVhraUxDSnBjMEZ5Y21GNUlpd2ljbUZ1WjJVaUxDSmpjbVZoZEdWRmJHVnRaVzUwSWl3aWNHRnlZVzF6SWl3aVkyaHBiR1JFWlhSaGFXeHpJaXdpWkdWMFlXbHNjeUlzSW5CMWMyZ2lMQ0p3Y21Wd1lYSmxSV3hsYldWdWRDSXNJblZ1WkdWbWFXNWxaQ0lzSW0xaGEyVkRiRzl1WldGaWJHVWlMQ0p5WlcxdmRtVkZiR1Z0Wlc1MElpd2ljRzl6YVhScGIyNGlMQ0pwYm1SbGVFOW1JaXdpYVNJc0lteGxibWQwSWl3aVkyeHZibVZGYkdWdFpXNTBJaXdpZFc1cGRFTnNiMjVsSWl3aVkzTnpJaXdpYzNSNWJHVWlMQ0poWkdSRGJHRnpjMlZ6SWl3aVkyeGhjM05sY3lJc0luSmxiVzkyWlVOc1lYTnpaWE1pTENKamIyeHNaV04wYVc5dUlpd2labWx1WkVGc2JDSXNJbU5vYVd4a1EzTnpJaXdpYzJWMFEyaHBiR1JRY205d1pYSjBhV1Z6SWl3aWMyVjBRMmhwYkdSQmRIUnlhV0oxZEdWeklpd2lZV1JrUTJ4aGMzTmxjMVJ2UTJocGJHUWlMQ0p5WlcxdmRtVkRiR0Z6YzJWelJuSnZiVU5vYVd4a0lsMHNJbTFoY0hCcGJtZHpJam9pUVVGRFFTeEpRVUZKUVN4VFFVRkJRU3hEUVVGUExFbEJSRVZETEZGQlFWRXNRMEZCUVN4RFFXMVJja0pETEdWQlFVOURMRU5CYUZGUUxGTkJRV2RDUXl4UFFVRkJRU3hEUVVGQlFTeERRVU5hTEVsQlFVbERMRWxCUVVGQkxFTkJRVThzUTBGQlJVUXNUMEZCUVVFc1EwRkJVMEVzVDBGQlFVRXNRMEZCVVVVc1UwRkJRVUVzUTBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUVVFc1EwRkJUME1zVVVGQlFVRXNRMEZCVlN4RFFVRkRTQ3hQUVVGQlFTeERRVUZCUVN4RFFVRlZTU3hWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCU1VNc1pVRkJRVUVzUTBGQmFVSXNSVUZCUVN4RFFVVnlSME1zSzBKQlFVRkJMRU5CUVhWRExGTkJRVlZPTEU5QlFVRkJMRU5CUVZOUExHdENRVUZCUVN4RFFVRnhRaXhGUVVGQkxFTkJRVUVzUTBGRE0wVXNTVUZCU1Vvc1VVRkJRVUVzUTBGQlZVc3NVMEZCUVVFc1EwRkRaQ3hKUVVGTExFbEJRVWxETEZWQlFVRkJMRWxCUVdOR0xHdENRVUZCUVN4RFFVTnVRaXhKUVVGTExFbEJRVWxHTEdWQlFVRkJMRWxCUVcxQ1JTeHJRa0ZCUVVFc1EwRkJiVUpGTEZWQlFVRkJMRU5CUVVGQkxFTkJRV0VzUTBGRGVFUkVMRk5CUVVGQkxFTkJRVmxGTEVsQlFVRkJMRU5CUVV0RExGbEJRVUZCTEVOQlFXRk9MR1ZCUVVGQkxFTkJRV2RDUnl4VFFVRkJRU3hEUVVGQlFTeERRVU01UTB3c1VVRkJRVUVzUTBGQlYwOHNTVUZCUVVFc1EwRkJTMFVzVjBGQlFVRXNRMEZCV1Vnc1ZVRkJRVUVzUTBGQldWUXNUMEZCUVVFc1EwRkJVMUVzVTBGQlFVRXNRMEZCUVVFc1EwRkRha1FzU1VGQlN5eEpRVUZKU3l4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVllzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRGFrTldMRkZCUVVGQkxFTkJRVk5WTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRGTEdGQlFVRkJMRU5CUVdOV0xHVkJRVUZCTEVOQlFXZENSQ3hWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTB4UkZrc0swSkJRVUZCTEVOQlFYVkRMRk5CUVZWb1FpeFBRVUZCUVN4RFFVRlRhVUlzYlVKQlFVRkJMRU5CUVhOQ0xFVkJRVUVzUTBGQlFTeERRVU0xUlN4SlFVRkpaQ3hSUVVGQlFTeERRVUZWU3l4VFFVRkJRU3hEUVVOa0xFbEJRVXNzU1VGQlNVTXNWVUZCUVVFc1NVRkJZMUVzYlVKQlFVRkJMRU5CUTI1Q0xFbEJRVXNzU1VGQlNVTXNaVUZCUVVFc1NVRkJiVUpFTEcxQ1FVRkJRU3hEUVVGdlFsSXNWVUZCUVVFc1EwRkJRVUVzUTBGQllTeERRVU42UkVRc1UwRkJRVUVzUTBGQldVVXNTVUZCUVVFc1EwRkJTME1zV1VGQlFVRXNRMEZCWVU4c1pVRkJRVUVzUTBGQlowSldMRk5CUVVGQkxFTkJRVUZCTEVOQlF6bERUQ3hSUVVGQlFTeERRVUZYVHl4SlFVRkJRU3hEUVVGTFJTeFhRVUZCUVN4RFFVRlpTQ3hWUVVGQlFTeERRVUZaVkN4UFFVRkJRU3hEUVVGVFVTeFRRVUZCUVN4RFFVRkJRU3hEUVVOcVJDeEpRVUZMTEVsQlFVbExMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU5xUTFZc1VVRkJRVUVzUTBGQlUxVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwMHNZVUZCUVVFc1EwRkJZMFFzWlVGQlFVRXNRMEZCWjBKRkxGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlRURkVWQ3haUVVGQlFTeERRVUZ2UWl4VFFVRlZTQ3hUUVVGQlFTeERRVUZaTEVOQlFVRXNRMEZCUVN4RFFVdDBReXhQUVVwTFlTeExRVUZCUVN4RFFVRk5ReXhQUVVGQlFTeERRVUZSWkN4VFFVRkJRU3hEUVVGQlFTeEhRVU5tUVN4VFFVRkJRU3hEUVVGWldpeFRRVUZCUVN4RFFVRkxNa0lzUzBGQlFVRXNRMEZCVFdZc1UwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhjRUpCTEZOQlFVRkJMRU5CUVVGQkxFTkJSMWhuUWl4aFFVRkJRU3hEUVVGeFFpeFRRVUZWUXl4TlFVRkJRU3hEUVVGVExFTkJRVVZETEZsQlFVRkJMRU5CUVdNc1EwRkJSVTRzVlVGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUVVsb1FpeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJRU3hEUVVGTmRVSXNUMEZCUVVFc1EwRkJVeXhEUVVGRlVDeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJTV2hDTEZWQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU12U0N4SlFVRkpTaXhQUVVGQlFTeERRVUZWVlN4SlFVRkJRU3hEUVVGTFZpeFBRVUZCUVN4RFFVRlJSU3hUUVVGQlFTeERRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJRU3hEUVVseVF5eFBRVWhCVVN4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRlVUlzU1VGQlFVRXNRMEZCU3pWQ0xFOUJRVUZCTEVOQlFVRkJMRU5CUlc1Q1ZTeEpRVUZCUVN4RFFVRkxiVUlzWTBGQlFVRXNRMEZCWlRkQ0xFOUJRVUZCTEVOQlFWTjVRaXhOUVVGQlFTeERRVUZCUVN4RFFVTjBRbnBDTEU5QlFVRkJMRU5CUVVGQkxFTkJSMWcyUWl4alFVRkJRU3hEUVVGelFpeFRRVUZWTjBJc1QwRkJRVUVzUTBGQlUzbENMRTFCUVVGQkxFTkJRVk1zUTBGQlJVTXNXVUZCUVVFc1EwRkJZeXhEUVVGRlRpeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJTV2hDTEZWQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVGQkxFTkJRVTExUWl4UFFVRkJRU3hEUVVGVExFTkJRVVZRTEZWQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVGSmFFSXNWVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlF6bEhNRUlzU1VGQlFVRXNSVUZCZGtKTUxFMUJRVUZCTEVOQlFVOURMRmxCUVVGQkxFZEJReXRDU1N4SlFVRkJRU3hGUVVGc1Ewd3NUVUZCUVVFc1EwRkJUME1zV1VGQlFVRXNRMEZCWVU0c1ZVRkJRVUVzUlVGRGNFSldMRWxCUVVGQkxFTkJRVXROTEN0Q1FVRkJRU3hEUVVGblEyaENMRTlCUVVGQkxFTkJRVk41UWl4TlFVRkJRU3hEUVVGUFF5eFpRVUZCUVN4RFFVRmhUaXhWUVVGQlFTeERRVUZCUVN4RFFVZG9RMVVzU1VGQlFVRXNSVUZCYkVOTUxFMUJRVUZCTEVOQlFVOURMRmxCUVVGQkxFTkJRV0YwUWl4VlFVRkJRU3hGUVVOd1FrMHNTVUZCUVVFc1EwRkJTMG9zSzBKQlFVRkJMRU5CUVdkRFRpeFBRVUZCUVN4RFFVRlRlVUlzVFVGQlFVRXNRMEZCVDBNc1dVRkJRVUVzUTBGQllYUkNMRlZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hCRU1FSXNTVUZCUVVFc1JVRkJiRUpNTEUxQlFVRkJMRU5CUVU5RkxFOUJRVUZCTEVkQlF6QkNSeXhKUVVGQlFTeEZRVUUzUWt3c1RVRkJRVUVzUTBGQlQwVXNUMEZCUVVFc1EwRkJVVkFzVlVGQlFVRXNSVUZEWm5CQ0xFOUJRVUZCTEVOQlFWRnRRaXhoUVVGQlFTeERRVUZqVFN4TlFVRkJRU3hEUVVGUFJTeFBRVUZCUVN4RFFVRlJVQ3hWUVVGQlFTeERRVUZCUVN4RFFVZFNWU3hKUVVGQlFTeEZRVUUzUWt3c1RVRkJRVUVzUTBGQlQwVXNUMEZCUVVFc1EwRkJVWFpDTEZWQlFVRkJMRVZCUTJaS0xFOUJRVUZCTEVOQlFWRmxMR0ZCUVVGQkxFTkJRV05WTEUxQlFVRkJMRU5CUVU5RkxFOUJRVUZCTEVOQlFWRjJRaXhWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVrM1EwMHNTVUZCUVVFc1EwRkJTMG9zSzBKQlFVRkJMRU5CUVdkRFRpeFBRVUZCUVN4RFFVRlRWU3hKUVVGQlFTeERRVUZMVEN4bFFVRkJRU3hEUVVGQlFTeERRVU51UkV3c1QwRkJRVUVzUTBGQlVXVXNZVUZCUVVFc1EwRkJZMHdzU1VGQlFVRXNRMEZCUzA0c1ZVRkJRVUVzUTBGQlFVRXNRMEZGTTBKTkxFbEJRVUZCTEVOQlFVdHhRaXhoUVVGQlFTeERRVUZqTDBJc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhka0puUXl4aFFVRkJRU3hEUVVGeFFpeFRRVUZWYUVNc1QwRkJRVUVzUTBGQlFVRXNRMEZETTBJc1NVRkJTVWNzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTFnNFFpeFJRVUZCUVN4RFFVRlhka0lzU1VGQlFVRXNRMEZCUzFBc1VVRkJRVUVzUTBGQlV5dENMRTlCUVVGQkxFTkJRVkZzUXl4UFFVRkJRU3hEUVVGQlFTeERRVU55UXl4SlFVRkxMRWxCUVVsdFF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1hwQ0xFbEJRVUZCTEVOQlFVdFFMRkZCUVVGQkxFTkJRVk5wUXl4TFFVRkJRU3hEUVVGUFJDeERRVUZCUVN4RlFVRkJRU3hEUVVOcVEwWXNVVUZCUVVFc1JVRkJXVVVzUTBGQlFVRXNSVUZEV21oRExGRkJRVUZCTEVOQlFWTjVRaXhKUVVGQlFTeERRVUZMYkVJc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJVMmRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzQkRla0lzU1VGQlFVRXNRMEZCUzFBc1VVRkJRVUVzUTBGQlYwRXNVVUZCUVVFc1EwRkJRVUVzUTBGSGNFSnJReXhaUVVGQlFTeERRVUZ2UWl4VFFVRlZTaXhSUVVGQlFTeERRVUZWVWl4TlFVRkJRU3hEUVVGVExFTkJRVVZETEZsQlFVRkJMRU5CUVdNc1EwRkJSVTRzVlVGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUVVsb1FpeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJRU3hEUVVGTmRVSXNUMEZCUVVFc1EwRkJVeXhEUVVGRlVDeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJTV2hDTEZWQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU40U1N4SlFVRkpTaXhQUVVGQlFTeERRVUZWVlN4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRPRUlzVVVGQlFVRXNRMEZCUVVFc1EwRkJWUzlDTEZOQlFVRkJMRU5CUVVGQkxFTkJRVlVzUTBGQlFTeERRVUZCTEVOQlNXaEVMRTlCU0VGUkxFbEJRVUZCTEVOQlFVdFFMRkZCUVVGQkxFTkJRVk41UWl4SlFVRkJRU3hEUVVGTE5VSXNUMEZCUVVFc1EwRkJRVUVzUTBGRmJrSlZMRWxCUVVGQkxFTkJRVXR0UWl4alFVRkJRU3hEUVVGbE4wSXNUMEZCUVVFc1EwRkJVM2xDTEUxQlFVRkJMRU5CUVVGQkxFTkJRM1JDZWtJc1QwRkJRVUVzUTBGQlFVRXNRMEZIV0N0Q0xHRkJRVUZCTEVOQlFYRkNMRk5CUVZVdlFpeFBRVUZCUVN4RFFVRkJRU3hEUVVNelFpeEpRVUZKYVVNc1VVRkJRVUVzUTBGQlYzWkNMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZNclFpeFBRVUZCUVN4RFFVRlJiRU1zVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGNFSXNRMEZCUVN4RlFVRmlhVU1zVVVGQlFVRXNSMEZKU21wRExFOUJRVUZCTEVOQlFWRnpReXhUUVVGQlFTeEZRVUZoWWl4TlFVRkJRU3hGUVVOV1ppeEpRVUZCUVN4RFFVRkxNa0lzV1VGQlFVRXNRMEZCWVVvc1VVRkJRVUVzUTBGQlZWSXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSk0wTllMRTFCUVVGQkxFTkJRV01zVlVGQlFTeERRVU5XTEU5QlFVOUtMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZOWExFMUJRVUZCTEVOQlFVRkJMRU5CUjNwQ1F5eGhRVUZCUVN4RFFVRnhRaXhUUVVGVldDeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJRU3hEUVVONFF5eEpRVUZMTEVsQlFVa3JRaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYcENMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZOWExFMUJRVUZCTEVOQlFWRnhRaXhEUVVGQlFTeEZRVUZCUVN4RFFVTjBRM3BDTEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTm5ReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhjRUlzWVVGQlFVRXNRMEZCWTFnc1ZVRkJRVUVzUTBGQlFVRXNRMEZGYmtOTkxFbEJRVUZCTEVOQlFVdFdMRTlCUVVGQkxFTkJRVkZsTEdGQlFVRkJMRU5CUVdOWUxGVkJRVUZCTEVOQlFVRkJMRU5CUXpOQ0xFbEJRVXNzU1VGQlNTdENMRU5CUVVGQkxFbEJRVXN2UWl4VlFVRkJRU3hEUVVOV1RTeEpRVUZCUVN4RFFVRkxUaXhWUVVGQlFTeERRVUZYSzBJc1EwRkJRVUVzUTBGQlFVRXNRMEZCU3k5Q0xGVkJRVUZCTEVOQlFWY3JRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsNFEwa3NSMEZCUVVFc1EwRkJWeXhUUVVGVlF5eExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJRU3hEUVVONlFpeEpRVUZMTEVsQlFVbE1MRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVrSXNTVUZCUVVFc1EwRkJTMUFzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVYRkNMRU5CUVVGQkxFVkJRVUZCTEVOQlEzUkRla0lzU1VGQlFVRXNRMEZCUzFBc1VVRkJRVUVzUTBGQlUyZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEpMRWRCUVVGQkxFTkJRVWxETEV0QlFVRkJMRU5CUVVGQkxFTkJSWHBDT1VJc1NVRkJRVUVzUTBGQlMxWXNUMEZCUVVFc1EwRkJVWFZETEVkQlFVRkJMRU5CUVVsRExFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0pDY2tJc1lVRkJRVUVzUTBGQmNVSXNVMEZCVlVNc1ZVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlFVRXNRMEZEZUVNc1NVRkJTeXhKUVVGSlpTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1hwQ0xFbEJRVUZCTEVOQlFVdFFMRkZCUVVGQkxFTkJRVk5YTEUxQlFVRkJMRU5CUVZGeFFpeERRVUZCUVN4RlFVRkJRU3hEUVVOMFEzcENMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZOblF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSGFFSXNZVUZCUVVFc1EwRkJZME1zVlVGQlFVRXNRMEZCUVVFc1EwRkZia05XTEVsQlFVRkJMRU5CUVV0V0xFOUJRVUZCTEVOQlFWRnRRaXhoUVVGQlFTeERRVUZqUXl4VlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVY3ZRbkZDTEZWQlFVRkJMRU5CUVd0Q0xGTkJRVlZETEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVGQkxFTkJRMnhETEVsQlFVc3NTVUZCU1ZBc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWw2UWl4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSY1VJc1EwRkJRVUVzUlVGQlFVRXNRMEZEZEVONlFpeEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUWjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjAwc1ZVRkJRVUVzUTBGQlYwTXNUMEZCUVVFc1EwRkJRVUVzUTBGRmFFTm9ReXhKUVVGQlFTeERRVUZMVml4UFFVRkJRU3hEUVVGUmVVTXNWVUZCUVVFc1EwRkJWME1zVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSE5VSkRMR0ZCUVVGQkxFTkJRWEZDTEZOQlFWVkVMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZCTEVOQlEzSkRMRWxCUVVzc1NVRkJTVkFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDZRaXhKUVVGQlFTeERRVUZMVUN4UlFVRkJRU3hEUVVGVFZ5eE5RVUZCUVN4RFFVRlJjVUlzUTBGQlFVRXNSVUZCUVVFc1EwRkRkRU42UWl4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRaME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSMUVzWVVGQlFVRXNRMEZCWTBRc1QwRkJRVUVzUTBGQlFVRXNRMEZGYmtOb1F5eEpRVUZCUVN4RFFVRkxWaXhQUVVGQlFTeERRVUZSTWtNc1lVRkJRVUVzUTBGQlkwUXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITDBJNVFpeFhRVUZCUVN4RFFVRnRRaXhUUVVGVlNDeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJTVlFzVDBGQlFVRXNRMEZCVTFFc1UwRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVRXNRMEZETDBRc1NVRkJTVzlETEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVOaWVrTXNVVUZCUVVFc1EwRkJWMGdzVDBGQlFVRXNRMEZCVVRaRExFOUJRVUZCTEVOQlFWRndReXhWUVVGQlFTeERRVUZCUVN4RFFVTXZRaXhIUVVGSlRpeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZEYkVJc1NVRkJTeXhKUVVGSlJDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1V3c1UwRkJRVUVzUTBGQlZVMHNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRTbWxDTEVsQlFVRkJMRVZCUVRGQ00wSXNVVUZCUVVFc1EwRkJVMHNzVTBGQlFVRXNRMEZCVlVzc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkRia0lyUWl4VlFVRkJRU3hEUVVGWGFFSXNTVUZCUVVFc1EwRkJTM3BDTEZGQlFVRkJMRU5CUVZOTExGTkJRVUZCTEVOQlFWVkxMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTUzlETEU5QlFVOHJRaXhWUVVGQlFTeERRVUZCUVN4RFFVZFlSU3hSUVVGQlFTeERRVUZuUWl4VFFVRlZja01zVlVGQlFVRXNRMEZCWVN4RlFVRkJMRU5CUVVrclFpeExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJTV2hETEZOQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVGQkxFTkJSeTlFTEVsQlFVbE1MRkZCUVVGQkxFTkJSa3BMTEZOQlFVRkJMRU5CUVZsRkxFbEJRVUZCTEVOQlFVdERMRmxCUVVGQkxFTkJRV0ZJTEZOQlFVRkJMRU5CUVVGQkxFTkJSemxDTEVsQlFVc3NTVUZCU1RKQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKZWtJc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJVMWNzVFVGQlFVRXNRMEZCVVhGQ0xFTkJRVUZCTEVWQlFVRkJMRU5CUVVzc1EwRkRNME5vUXl4UlFVRkJRU3hEUVVGWFR5eEpRVUZCUVN4RFFVRkxSU3hYUVVGQlFTeERRVUZaU0N4VlFVRkJRU3hEUVVGWlF5eEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUWjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1ROQ0xGTkJRVUZCTEVOQlFVRkJMRU5CUlRGRUxFbEJRVXNzU1VGQlNVc3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsV0xGRkJRVUZCTEVOQlFWTlhMRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRMnBEVml4UlFVRkJRU3hEUVVGVFZTeERRVUZCUVN4RFFVRkJRU3hEUVVGSE1FSXNSMEZCUVVFc1EwRkJTVU1zUzBGQlFVRXNRMEZCUVVFc1EwRkplRUp5UXl4UlFVRkJRU3hEUVVGWFR5eEpRVUZCUVN4RFFVRkxSU3hYUVVGQlFTeERRVUZaU0N4VlFVRkJRU3hEUVVGWlF5eEpRVUZCUVN4RFFVRkxWaXhQUVVGQlFTeERRVUZUVVN4VFFVRkJRU3hEUVVGQlFTeERRVVYwUkN4SlFVRkxMRWxCUVVsTExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4UlFVRkJRU3hEUVVGVFZ5eE5RVUZCUVN4RFFVRlJSQ3hEUVVGQlFTeEZRVUZCUVN4RFFVTnFRMVlzVVVGQlFVRXNRMEZCVTFVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpCQ0xFZEJRVUZCTEVOQlFVbERMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hoQ1R5eHJRa0ZCUVVFc1EwRkJNRUlzVTBGQlZYUkRMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVUZKVEN4VlFVRkJRU3hEUVVGaExFVkJRVUVzUTBGQlNVa3NVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGSE9VVXNTVUZCU1V3c1VVRkJRVUVzUTBGR1Nrc3NVMEZCUVVFc1EwRkJXVVVzU1VGQlFVRXNRMEZCUzBNc1dVRkJRVUVzUTBGQllVZ3NVMEZCUVVFc1EwRkJRVUVzUTBGSE9VSXNTVUZCU3l4SlFVRkpNa0lzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDZRaXhKUVVGQlFTeERRVUZMVUN4UlFVRkJRU3hEUVVGVFZ5eE5RVUZCUVN4RFFVRlJjVUlzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVNelEyaERMRkZCUVVGQkxFTkJRVmRQTEVsQlFVRkJMRU5CUVV0RkxGZEJRVUZCTEVOQlFWbElMRlZCUVVGQkxFTkJRVmxETEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTm5ReXhEUVVGQlFTeERRVUZCUVN4RFFVRkpNMElzVTBGQlFVRXNRMEZCUVVFc1EwRkZNVVFzU1VGQlN5eEpRVUZKU3l4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVllzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRGFrTldMRkZCUVVGQkxFTkJRVk5WTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRGTEdGQlFVRkJMRU5CUVdOWUxGVkJRVUZCTEVOQlFVRkJMRU5CU1d4RFJDeFJRVUZCUVN4RFFVRlhUeXhKUVVGQlFTeERRVUZMUlN4WFFVRkJRU3hEUVVGWlNDeFZRVUZCUVN4RFFVRlpReXhKUVVGQlFTeERRVUZMVml4UFFVRkJRU3hEUVVGVFVTeFRRVUZCUVN4RFFVRkJRU3hEUVVOMFJDeEpRVUZMTEVsQlFVbExMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU5xUTFZc1VVRkJRVUVzUTBGQlUxVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwVXNZVUZCUVVFc1EwRkJZMWdzVlVGQlFVRXNRMEZCUVVFc1EwRkhPVUpOTEVsQlFVRkJMRU5CUVV0TUxHVkJRVUZCTEVOQlFXZENTU3hWUVVGQlFTeERRVUZCUVN4RFFVRmpReXhKUVVGQlFTeERRVUZMVEN4bFFVRkJRU3hEUVVGblFra3NWVUZCUVVFc1EwRkJRVUVzUlVGQlpTeEZRVUZCTEVOQlEzWkZReXhKUVVGQlFTeERRVUZMVEN4bFFVRkJRU3hEUVVGblFra3NWVUZCUVVFc1EwRkJRVUVzUTBGQldXMUNMRWxCUVVGQkxFTkJRVXNzUTBGQlJYaENMRlZCUVVGQkxFTkJRVUZCTEZWQlFVRkJMRU5CUVZsSkxGTkJRVUZCTEVOQlFVRkJMRk5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM2hFZDBNc2EwSkJRVUZCTEVOQlFUQkNMRk5CUVZWMlF5eFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJTVmNzVlVGQlFVRXNRMEZCWVN4RlFVRkJMRU5CUVVsYUxGTkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUnpsRkxFbEJRVWxNTEZGQlFVRkJMRU5CUmtwTExGTkJRVUZCTEVOQlFWbEZMRWxCUVVGQkxFTkJRVXRETEZsQlFVRkJMRU5CUVdGSUxGTkJRVUZCTEVOQlFVRkJMRU5CUnpsQ0xFbEJRVXNzU1VGQlNUSkNMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVrSXNTVUZCUVVFc1EwRkJTMUFzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVYRkNMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3NRMEZETTBOb1F5eFJRVUZCUVN4RFFVRlhUeXhKUVVGQlFTeERRVUZMUlN4WFFVRkJRU3hEUVVGWlNDeFZRVUZCUVN4RFFVRlpReXhKUVVGQlFTeERRVUZMVUN4UlFVRkJRU3hEUVVGVFowTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNUTkNMRk5CUVVGQkxFTkJRVUZCTEVOQlJURkVMRWxCUVVzc1NVRkJTVXNzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFdMRkZCUVVGQkxFTkJRVk5YTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTJwRFZpeFJRVUZCUVN4RFFVRlRWU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhUU3hoUVVGQlFTeERRVUZqUXl4VlFVRkJRU3hEUVVGQlFTeERRVWxzUTJwQ0xGRkJRVUZCTEVOQlFWZFBMRWxCUVVGQkxFTkJRVXRGTEZkQlFVRkJMRU5CUVZsSUxGVkJRVUZCTEVOQlFWbERMRWxCUVVGQkxFTkJRVXRXTEU5QlFVRkJMRU5CUVZOUkxGTkJRVUZCTEVOQlFVRkJMRU5CUlhSRUxFbEJRVXNzU1VGQlNVc3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsV0xGRkJRVUZCTEVOQlFWTlhMRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRMnBEVml4UlFVRkJRU3hEUVVGVFZTeERRVUZCUVN4RFFVRkJRU3hEUVVGSFRTeGhRVUZCUVN4RFFVRmpReXhWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsc1F6WkNMR2xDUVVGQlFTeERRVUY1UWl4VFFVRlZlRU1zVlVGQlFVRXNRMEZCWVN4RlFVRkJMRU5CUVVscFF5eFBRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJTV3hETEZOQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVGQkxFTkJSekZGTEVsQlFVbE1MRkZCUVVGQkxFTkJSa3BMTEZOQlFVRkJMRU5CUVZsRkxFbEJRVUZCTEVOQlFVdERMRmxCUVVGQkxFTkJRV0ZJTEZOQlFVRkJMRU5CUVVGQkxFTkJSemxDTEVsQlFVc3NTVUZCU1RKQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKZWtJc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJVMWNzVFVGQlFVRXNRMEZCVVhGQ0xFTkJRVUZCTEVWQlFVRkJMRU5CUVVzc1EwRkRNME5vUXl4UlFVRkJRU3hEUVVGWFR5eEpRVUZCUVN4RFFVRkxSU3hYUVVGQlFTeERRVUZaU0N4VlFVRkJRU3hEUVVGWlF5eEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUWjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1ROQ0xGTkJRVUZCTEVOQlFVRkJMRU5CUlRGRUxFbEJRVXNzU1VGQlNVc3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsV0xGRkJRVUZCTEVOQlFWTlhMRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRMnBEVml4UlFVRkJRU3hEUVVGVFZTeERRVUZCUVN4RFFVRkJRU3hEUVVGSE5FSXNWVUZCUVVFc1EwRkJWME1zVDBGQlFVRXNRMEZCUVVFc1EwRkpMMEoyUXl4UlFVRkJRU3hEUVVGWFR5eEpRVUZCUVN4RFFVRkxSU3hYUVVGQlFTeERRVUZaU0N4VlFVRkJRU3hEUVVGWlF5eEpRVUZCUVN4RFFVRkxWaXhQUVVGQlFTeERRVUZUVVN4VFFVRkJRU3hEUVVGQlFTeERRVVYwUkN4SlFVRkxMRWxCUVVsTExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4UlFVRkJRU3hEUVVGVFZ5eE5RVUZCUVN4RFFVRlJSQ3hEUVVGQlFTeEZRVUZCUVN4RFFVTnFRMVlzVVVGQlFVRXNRMEZCVTFVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpSQ0xGVkJRVUZCTEVOQlFWZERMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1M5Q1VTeHpRa0ZCUVVFc1EwRkJPRUlzVTBGQlZYcERMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVUZKYVVNc1QwRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlFVbHNReXhUUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCUVN4RFFVY3ZSU3hKUVVGSlRDeFJRVUZCUVN4RFFVWktTeXhUUVVGQlFTeERRVUZaUlN4SlFVRkJRU3hEUVVGTFF5eFpRVUZCUVN4RFFVRmhTQ3hUUVVGQlFTeERRVUZCUVN4RFFVYzVRaXhKUVVGTExFbEJRVWt5UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWHBDTEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTlhMRTFCUVVGQkxFTkJRVkZ4UWl4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlF6TkRhRU1zVVVGQlFVRXNRMEZCVjA4c1NVRkJRVUVzUTBGQlMwVXNWMEZCUVVFc1EwRkJXVWdzVlVGQlFVRXNRMEZCV1VNc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJVMmRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWt6UWl4VFFVRkJRU3hEUVVGQlFTeERRVVV4UkN4SlFVRkxMRWxCUVVsTExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4UlFVRkJRU3hEUVVGVFZ5eE5RVUZCUVN4RFFVRlJSQ3hEUVVGQlFTeEZRVUZCUVN4RFFVTnFRMVlzVVVGQlFVRXNRMEZCVTFVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpoQ0xHRkJRVUZCTEVOQlFXTkVMRTlCUVVGQkxFTkJRVUZCTEVOQlNXeERka01zVVVGQlFVRXNRMEZCVjA4c1NVRkJRVUVzUTBGQlMwVXNWMEZCUVVFc1EwRkJXVWdzVlVGQlFVRXNRMEZCV1VNc1NVRkJRVUVzUTBGQlMxWXNUMEZCUVVFc1EwRkJVMUVzVTBGQlFVRXNRMEZCUVVFc1EwRkZkRVFzU1VGQlN5eEpRVUZKU3l4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVllzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRGFrTldMRkZCUVVGQkxFTkJRVk5WTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWM0UWl4aFFVRkJRU3hEUVVGalJDeFBRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHNReXhQUVVGUGVrTXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJsZXQgX19hcnJheUxpYnJhcnlfMTQ9XyRBcnJheUxpYnJhcnlfMTEoKTt2YXIgXyRPYmplY3RzTGlicmFyeV8xND1mdW5jdGlvbigpe2xldCBzZWxmPXtzaXplOm9iamVjdD0+e2xldCBieXRlcz0wO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBvYmplY3QpYnl0ZXMrPTIqb2JqZWN0Lmxlbmd0aDtlbHNlIGlmKFwibnVtYmVyXCI9PXR5cGVvZiBvYmplY3QpYnl0ZXMrPTg7ZWxzZSBpZihcImJvb2xlYW5cIj09dHlwZW9mIG9iamVjdClieXRlcys9NDtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBvYmplY3QpZm9yKGxldCBpIGluIG9iamVjdClieXRlcys9cm91Z2hPYmplY3RTaXplKG9iamVjdFtpXSk7cmV0dXJuIGJ5dGVzfSxleHRyYWN0RnJvbUpzb25BcnJheToobWV0YSxzb3VyY2UpPT57bGV0IGtleXM9T2JqZWN0LmtleXMobWV0YSksdmFsdWVzPU9iamVjdC52YWx1ZXMobWV0YSksZVNvdXJjZT1bXTtpZihudWxsIT1zb3VyY2UpZm9yKGxldCBvYmogb2Ygc291cmNlKXtsZXQgb2JqZWN0PXt9O2ZvcihsZXQgaSBpbiBrZXlzKV9fYXJyYXlMaWJyYXJ5XzE0LmNvbnRhaW5zKE9iamVjdC5rZXlzKG9iaiksdmFsdWVzW2ldKSYmKG9iamVjdFtrZXlzW2ldXT1vYmpbdmFsdWVzW2ldXSk7ZVNvdXJjZS5wdXNoKG9iamVjdCl9cmV0dXJuIGVTb3VyY2V9LGZpbmQ6KG9iaixjYWxsYmFjayk9Pntmb3IobGV0IGkgaW4gb2JqKWlmKDE9PWNhbGxiYWNrKG9ialtpXSkpcmV0dXJuIG9ialtpXX0sZmluZEFsbDoob2JqLGNhbGxiYWNrKT0+e2xldCB2YWx1ZXM9e307Zm9yKGxldCBpIGluIG9iaikxPT1jYWxsYmFjayhvYmpbaV0pJiYodmFsdWVzW2ldPW9ialtpXSk7cmV0dXJuIHZhbHVlc319O3JldHVybiBzZWxmLm1ha2VJdGVyYWJsZT0ob2JqPT4ob2JqW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24qKCl7bGV0IHByb3BlcnRpZXM9T2JqZWN0LmtleXMob2JqKTtmb3IobGV0IHAgb2YgcHJvcGVydGllcyl5aWVsZCB0aGlzW3BdfSxvYmopKSxzZWxmLm1heD0ob2JqZWN0PT4ob2JqZWN0PXNlbGYuc29ydChvYmplY3Qse3ZhbHVlOiEwfSksc2VsZi5nZXRJbmRleChvYmplY3QpKSksc2VsZi5taW49KG9iamVjdD0+KG9iamVjdD1zZWxmLnNvcnQob2JqZWN0LHt2YWx1ZTohMX0pLHNlbGYuZ2V0SW5kZXgob2JqZWN0KSkpLHNlbGYub25DaGFuZ2VkPSgob2JqLGNhbGxiYWNrKT0+e2NvbnN0IGhhbmRsZXI9e2dldCh0YXJnZXQscHJvcGVydHkscmVjZWl2ZXIpe3RyeXtyZXR1cm4gbmV3IFByb3h5KHRhcmdldFtwcm9wZXJ0eV0saGFuZGxlcil9Y2F0Y2goZXJyKXtyZXR1cm4gUmVmbGVjdC5nZXQodGFyZ2V0LHByb3BlcnR5LHJlY2VpdmVyKX19LGRlZmluZVByb3BlcnR5Oih0YXJnZXQscHJvcGVydHksZGVzY3JpcHRvcik9PihjYWxsYmFjayh0YXJnZXQscHJvcGVydHkpLFJlZmxlY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LHByb3BlcnR5LGRlc2NyaXB0b3IpKSxkZWxldGVQcm9wZXJ0eToodGFyZ2V0LHByb3BlcnR5KT0+KGNhbGxiYWNrKHRhcmdldCxwcm9wZXJ0eSksUmVmbGVjdC5kZWxldGVQcm9wZXJ0eSh0YXJnZXQscHJvcGVydHkpKX07cmV0dXJuIG5ldyBQcm94eShvYmosaGFuZGxlcil9KSxzZWxmLnRvQXJyYXk9KChvYmplY3QsbmFtZWQpPT57dmFyIGFycmF5PVtdO3JldHVybiBPYmplY3Qua2V5cyhvYmplY3QpLm1hcChrZXk9PnsxPT1uYW1lZD9hcnJheVtrZXldPW9iamVjdFtrZXldOmFycmF5LnB1c2gob2JqZWN0W2tleV0pfSksYXJyYXl9KSxzZWxmLnZhbHVlT2ZPYmplY3RBcnJheT0oKGFycmF5LG5hbWUpPT57dmFyIG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBhcnJheSluZXdBcnJheS5wdXNoKGFycmF5W2ldW25hbWVdKTtyZXR1cm4gbmV3QXJyYXl9KSxzZWxmLmtleXNPZk9iamVjdEFycmF5PSgoYXJyYXk9W10pPT57dmFyIG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBhcnJheSluZXdBcnJheT1uZXdBcnJheS5jb25jYXQoT2JqZWN0LmtleXMoYXJyYXlbaV0pKTtyZXR1cm4gX19hcnJheUxpYnJhcnlfMTQudG9TZXQobmV3QXJyYXkpfSksc2VsZi5vYmplY3RPZk9iamVjdEFycmF5PSgoYXJyYXk9W10saWQsbmFtZSk9Pnt2YXIgb2JqZWN0PXt9O2ZvcihsZXQgaSBpbiBhcnJheSlvYmplY3RbYXJyYXlbaV1baWRdXT1hcnJheVtpXVtuYW1lXTtyZXR1cm4gb2JqZWN0fSksc2VsZi5jb3B5PSgoZnJvbSx0byk9PntPYmplY3Qua2V5cyhmcm9tKS5tYXAoa2V5PT57dG9ba2V5XT1mcm9tW2tleV19KX0pLHNlbGYuZm9yRWFjaD0oKG9iamVjdCxjYWxsYmFjayk9Pntmb3IobGV0IGtleSBpbiBvYmplY3QpY2FsbGJhY2sob2JqZWN0W2tleV0sa2V5KX0pLHNlbGYuZWFjaD1mdW5jdGlvbihvYmplY3QsY2FsbGJhY2spe2xldCBuZXdPYmplY3Q9e307Zm9yKGxldCBrZXkgaW4gb2JqZWN0KW5ld09iamVjdFtrZXldPWNhbGxiYWNrKG9iamVjdFtrZXldLGtleSk7cmV0dXJuIG5ld09iamVjdH0sc2VsZi5pc1N1Yk9iamVjdD0oKGRhdGEsc2FtcGxlKT0+e2xldCBmbGFnO2ZvcihsZXQgbmFtZSBpbiBzYW1wbGUpaWYoIShmbGFnPUpTT04uc3RyaW5naWZ5KHNhbXBsZVtuYW1lXSk9PUpTT04uc3RyaW5naWZ5KGRhdGFbbmFtZV0pKSlicmVhaztyZXR1cm4gZmxhZ30pLHNlbGYuZ2V0U3ViT2JqZWN0PSgoZGF0YT1bXSxzYW1wbGU9e30pPT57bGV0IG1hdGNoZWQ9W10sZmxhZz0hMDtmb3IobGV0IGkgaW4gZGF0YSkoZmxhZz1zZWxmLmlzU3ViT2JqZWN0KGRhdGFbaV0sc2FtcGxlKSkmJm1hdGNoZWQucHVzaChkYXRhW2ldKTtyZXR1cm4gbWF0Y2hlZH0pLHNlbGYuc29ydD0oKGRhdGE9e30scGFyYW1zPXtpdGVtczpbXSxkZXNjZW5kOiExLGtleTohMSx2YWx1ZTohMX0pPT57cGFyYW1zLml0ZW09cGFyYW1zLml0ZW18fFwiXCIscGFyYW1zLmRlc2NlbmQ9cGFyYW1zLmRlc2NlbmR8fCExO2xldCBzb3J0ZWQ9W10sbkRhdGE9e307Zm9yKGxldFtrZXksdmFsdWVdb2YgT2JqZWN0LmVudHJpZXMoZGF0YSkpc29ydGVkLnB1c2goe2tleTprZXksdmFsdWU6dmFsdWV9KTtudWxsIT1wYXJhbXMua2V5JiYoY29uc29sZS5sb2coXCJIZWxsb1wiKSxzb3J0ZWQuc29ydCgoYSxiKT0+e2xldCB2YWx1ZT1hLmtleT49Yi5rZXk7cmV0dXJuIDE9PXBhcmFtcy5rZXkmJih2YWx1ZT0hdmFsdWUpLHZhbHVlfSkpLG51bGwhPXBhcmFtcy52YWx1ZSYmc29ydGVkLnNvcnQoKGEsYik9PntsZXQgdmFsdWU9YS52YWx1ZT49Yi52YWx1ZTtyZXR1cm4gMT09cGFyYW1zLnZhbHVlJiYodmFsdWU9IXZhbHVlKSx2YWx1ZX0pLG51bGwhPXBhcmFtcy5pdGVtcyYmc29ydGVkLnNvcnQoKGEsYik9PntsZXQgZ3JlYXRlcj0wLGxlc3Nlcj0wO2ZvcihsZXQgaXRlbSBvZiBwYXJhbXMuaXRlbXMpYS52YWx1ZVtpdGVtXT49Yi52YWx1ZVtpdGVtXT9ncmVhdGVyKys6bGVzc2VyKys7bGV0IHZhbHVlPWdyZWF0ZXI+PWxlc3NlcjtyZXR1cm4gMT09cGFyYW1zLmRlc2NlbmQmJih2YWx1ZT0hdmFsdWUpLHZhbHVlfSk7Zm9yKGxldHtrZXk6a2V5LHZhbHVlOnZhbHVlfW9mIHNvcnRlZCluRGF0YVtrZXldPXZhbHVlO3JldHVybiBuRGF0YX0pLHNlbGYucmV2ZXJzZT0oKGRhdGE9e30pPT57bGV0IGtleXM9T2JqZWN0LmtleXMoZGF0YSkucmV2ZXJzZSgpLG5ld09iamVjdD17fTtmb3IobGV0IGkgb2Yga2V5cyluZXdPYmplY3RbaV09ZGF0YVtpXTtyZXR1cm4gbmV3T2JqZWN0fSksc2VsZi5nZXRJbmRleD0oKGRhdGE9e30pPT57bGV0IGtleT1PYmplY3Qua2V5cyhkYXRhKS5zaGlmdCgpO3JldHVybntrZXk6a2V5LHZhbHVlOmRhdGFba2V5XX19KSxzZWxmLmdldExhc3Q9KChkYXRhPXt9KT0+e2xldCBrZXk9T2JqZWN0LmtleXMoZGF0YSkucG9wKCk7cmV0dXJue2tleTprZXksdmFsdWU6ZGF0YVtrZXldfX0pLHNlbGYuZ2V0QXQ9KChkYXRhPXt9LGluZGV4KT0+e2xldCBrZXk9T2JqZWN0LmtleXMoZGF0YSlbaW5kZXhdO3JldHVybntrZXk6a2V5LHZhbHVlOmRhdGFba2V5XX19KSxzZWxmLmtleU9mPSgoZGF0YT17fSxpdGVtKT0+e2ZvcihsZXQgaSBpbiBkYXRhKWlmKEpTT04uc3RyaW5naWZ5KGRhdGFbaV0pPT1KU09OLnN0cmluZ2lmeShpdGVtKSlyZXR1cm4gaTtyZXR1cm4tMX0pLHNlbGYubGFzdEtleU9mPSgoZGF0YT17fSxpdGVtKT0+e2xldCBpbmRleD0tMTtmb3IobGV0IGkgaW4gZGF0YSlKU09OLnN0cmluZ2lmeShkYXRhW2ldKT09SlNPTi5zdHJpbmdpZnkoaXRlbSkmJihpbmRleD1pKTtyZXR1cm4gaW5kZXh9KSxzZWxmLmluY2x1ZGVzPSgoZGF0YT17fSxpdGVtKT0+LTEhPXNlbGYua2V5T2YoZGF0YSxpdGVtKSksc2VsZn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrOWlhbVZqZEhOTWFXSnlZWEo1TG1weklsMHNJbTVoYldWeklqcGJJbUZ5Y21GNVRHbGljbUZ5ZVNJc0luSmxjWFZwY21VaUxDSkJjbkpoZVV4cFluSmhjbmtpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWMyVnNaaUlzSW5OcGVtVWlMQ0p2WW1wbFkzUWlMQ0ppZVhSbGN5SXNJbXhsYm1kMGFDSXNJbWtpTENKeWIzVm5hRTlpYW1WamRGTnBlbVVpTENKbGVIUnlZV04wUm5KdmJVcHpiMjVCY25KaGVTSXNJbTFsZEdFaUxDSnpiM1Z5WTJVaUxDSnJaWGx6SWl3aVQySnFaV04wSWl3aWRtRnNkV1Z6SWl3aVpWTnZkWEpqWlNJc0luVnVaR1ZtYVc1bFpDSXNJbTlpYWlJc0ltTnZiblJoYVc1eklpd2ljSFZ6YUNJc0ltWnBibVFpTENKallXeHNZbUZqYXlJc0ltWnBibVJCYkd3aUxDSnRZV3RsU1hSbGNtRmliR1VpTENKVGVXMWliMndpTENKcGRHVnlZWFJ2Y2lJc0luQnliM0JsY25ScFpYTWlMQ0p3SWl3aWRHaHBjeUlzSW0xaGVDSXNJbk52Y25RaUxDSjJZV3gxWlNJc0ltZGxkRWx1WkdWNElpd2liV2x1SWl3aWIyNURhR0Z1WjJWa0lpd2lhR0Z1Wkd4bGNpSXNJbHR2WW1wbFkzUWdUMkpxWldOMFhTSXNJblJoY21kbGRDSXNJbkJ5YjNCbGNuUjVJaXdpY21WalpXbDJaWElpTENKUWNtOTRlU0lzSW1WeWNpSXNJbEpsWm14bFkzUWlMQ0puWlhRaUxDSmtaV1pwYm1WUWNtOXdaWEowZVNJc0ltUmxjMk55YVhCMGIzSWlMQ0prWld4bGRHVlFjbTl3WlhKMGVTSXNJblJ2UVhKeVlYa2lMQ0p1WVcxbFpDSXNJbUZ5Y21GNUlpd2liV0Z3SWl3aWEyVjVJaXdpZG1Gc2RXVlBaazlpYW1WamRFRnljbUY1SWl3aWJtRnRaU0lzSW01bGQwRnljbUY1SWl3aWEyVjVjMDltVDJKcVpXTjBRWEp5WVhraUxDSmpiMjVqWVhRaUxDSjBiMU5sZENJc0ltOWlhbVZqZEU5bVQySnFaV04wUVhKeVlYa2lMQ0pwWkNJc0ltTnZjSGtpTENKbWNtOXRJaXdpZEc4aUxDSm1iM0pGWVdOb0lpd2laV0ZqYUNJc0ltNWxkMDlpYW1WamRDSXNJbWx6VTNWaVQySnFaV04wSWl3aVpHRjBZU0lzSW5OaGJYQnNaU0lzSW1ac1lXY2lMQ0pLVTA5T0lpd2ljM1J5YVc1bmFXWjVJaXdpWjJWMFUzVmlUMkpxWldOMElpd2liV0YwWTJobFpDSXNJbkJoY21GdGN5SXNJbWwwWlcxeklpd2laR1Z6WTJWdVpDSXNJbWwwWlcwaUxDSnpiM0owWldRaUxDSnVSR0YwWVNJc0ltVnVkSEpwWlhNaUxDSmpiMjV6YjJ4bElpd2liRzluSWl3aVlTSXNJbUlpTENKbmNtVmhkR1Z5SWl3aWJHVnpjMlZ5SWl3aWNtVjJaWEp6WlNJc0luTm9hV1owSWl3aVoyVjBUR0Z6ZENJc0luQnZjQ0lzSW1kbGRFRjBJaXdpYVc1a1pYZ2lMQ0pyWlhsUFppSXNJbXhoYzNSTFpYbFBaaUlzSW1sdVkyeDFaR1Z6SWwwc0ltMWhjSEJwYm1keklqb2lRVUZEUVN4SlFVRkpRU3hwUWtGQlFVRXNRMEZFYVVKRExHbENRVU5HUXl4RlFVRkJRU3hEUVRKU2JrSkRMSFZDUVVGUFF5eERRWHBTVUN4VlFVRkJMRU5CUTBrc1NVRkJTVU1zU1VGQlFVRXNRMEZCVHl4RFFVVllReXhKUVVGQlFTeERRVUZoUXl4TlFVRkJRU3hGUVVGQlFTeERRVU5VTEVsQlFVbERMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5hTEVkQlFYRkNMRkZCUVVFc1JVRkJRU3hQUVVGV1JDeE5RVUZCUVN4RFFVTlFReXhMUVVGQlFTeEZRVUY1UWl4RFFVRkJMRU5CUVdoQ1JDeE5RVUZCUVN4RFFVRlBSU3hOUVVGQlFTeERRVUZCUVN4TFFVVm1MRWRCUVhGQ0xGRkJRVUVzUlVGQlFTeFBRVUZXUml4TlFVRkJRU3hEUVVOYVF5eExRVUZCUVN4RlFVRlRMRU5CUVVFc1EwRkJRU3hMUVVWU0xFZEJRWEZDTEZOQlFVRXNSVUZCUVN4UFFVRldSQ3hOUVVGQlFTeERRVU5hUXl4TFFVRkJRU3hGUVVGVExFTkJRVUVzUTBGQlFTeExRVVZTTEVkQlFYRkNMRkZCUVVFc1JVRkJRU3hQUVVGV1JDeE5RVUZCUVN4RFFVTmFMRWxCUVVzc1NVRkJTVWNzUTBGQlFVRXNTVUZCUzBnc1RVRkJRVUVzUTBGRFZrTXNTMEZCUVVFc1JVRkJVMGNzWlVGQlFVRXNRMEZCWjBKS0xFMUJRVUZCTEVOQlFVOUhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hoRExFOUJRVTlHTEV0QlFVRkJMRU5CUVVGQkxFTkJSMWhKTEc5Q1FVRkJRU3hEUVVFMFFpeERRVUZEUXl4SlFVRkJRU3hEUVVGTlF5eE5RVUZCUVN4SFFVRkJRU3hEUVVNdlFpeEpRVUZKUXl4SlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMUml4SlFVRkJRU3hEUVVGQlFTeERRVU51UWtrc1RVRkJRVUVzUTBGQlUwUXNUVUZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZCVDBvc1NVRkJRVUVzUTBGQlFVRXNRMEZGZGtKTExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTmtMRWRCUVdORExFbEJRVUZCTEVWQlFWWk1MRTFCUVVGQkxFTkJRMEVzU1VGQlN5eEpRVUZKVFN4SFFVRkJRU3hKUVVGUFRpeE5RVUZCUVN4RFFVRlJMRU5CUTNCQ0xFbEJRVWxRTEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVOaUxFbEJRVXNzU1VGQlNVY3NRMEZCUVVFc1NVRkJTMHNzU1VGQlFVRXNRMEZEVG1Zc2FVSkJRVUZCTEVOQlFXRnhRaXhSUVVGQlFTeERRVUZUVEN4TlFVRkJRU3hEUVVGUFJDeEpRVUZCUVN4RFFVRkxTeXhIUVVGQlFTeERRVUZCUVN4RFFVRk5TQ3hOUVVGQlFTeERRVUZQVUN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4SFFVTXZRMGdzVFVGQlFVRXNRMEZCVDFFc1NVRkJRVUVzUTBGQlMwd3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFZVc1IwRkJRVUVzUTBGQlNVZ3NUVUZCUVVFc1EwRkJUMUFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY2tOUkxFOUJRVUZCTEVOQlFWRkpMRWxCUVVGQkxFTkJRVXRtTEUxQlFVRkJMRU5CUVVGQkxFTkJSM0pDTEU5QlFVOVhMRTlCUVVGQkxFTkJRVUZCTEVOQlIxaExMRWxCUVVGQkxFTkJRVmtzUTBGQlEwZ3NSMEZCUVVFc1EwRkJTMGtzVVVGQlFVRXNSMEZCUVVFc1EwRkRaQ3hKUVVGTExFbEJRVWxrTEVOQlFVRkJMRWxCUVV0VkxFZEJRVUZCTEVOQlExWXNSMEZCZDBJc1EwRkJRU3hGUVVGd1Fra3NVVUZCUVVFc1EwRkJVMG9zUjBGQlFVRXNRMEZCU1ZZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRZaXhQUVVGUFZTeEhRVUZCUVN4RFFVRkpWaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0MlFtVXNUMEZCUVVFc1EwRkJaU3hEUVVGRFRDeEhRVUZCUVN4RFFVRkxTU3hSUVVGQlFTeEhRVUZCUVN4RFFVTnFRaXhKUVVGSlVDeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxRTEVOQlFVRkJMRWxCUVV0VkxFZEJRVUZCTEVOQlEyTXNRMEZCUVN4RlFVRndRa2tzVVVGQlFVRXNRMEZCVTBvc1IwRkJRVUVzUTBGQlNWWXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSMEZEWWs4c1RVRkJRVUVzUTBGQlQxQXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMxVXNSMEZCUVVFc1EwRkJTVllzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGVFSXNUMEZCVDA4c1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRTJUbGdzVDBFeFRrRmFMRWxCUVVGQkxFTkJRVXR4UWl4WlFVRkJRU3hGUVVGblFrNHNSMEZCUVVFc1IwRkRha0pCTEVkQlFVRkJMRU5CUVVsUExFMUJRVUZCTEVOQlFVOURMRkZCUVVGQkxFTkJRVUZCTEVOQlFWa3NWMEZCUVN4RFFVTnVRaXhKUVVGSlF5eFZRVUZCUVN4RFFVRmhZaXhOUVVGQlFTeERRVUZQUkN4SlFVRkJRU3hEUVVGTFN5eEhRVUZCUVN4RFFVRkJRU3hEUVVNM1FpeEpRVUZMTEVsQlFVbFZMRU5CUVVGQkxFbEJRVXRFTEZWQlFVRkJMRU5CUVVGQkxFMUJRMHBGTEVsQlFVRkJMRU5CUVV0RUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMXBXTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIxaG1MRWxCUVVGQkxFTkJRVXN5UWl4SFFVRkJRU3hGUVVGUGVrSXNUVUZCUVVFc1IwRkRVa0VzVFVGQlFVRXNRMEZCVTBZc1NVRkJRVUVzUTBGQlN6UkNMRWxCUVVGQkxFTkJRVXN4UWl4TlFVRkJRU3hEUVVGUkxFTkJRVVV5UWl4TFFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUXpkQ04wSXNTVUZCUVVFc1EwRkJTemhDTEZGQlFVRkJMRU5CUVZNMVFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDZRa1lzU1VGQlFVRXNRMEZCU3l0Q0xFZEJRVUZCTEVWQlFVODNRaXhOUVVGQlFTeEhRVU5TUVN4TlFVRkJRU3hEUVVGVFJpeEpRVUZCUVN4RFFVRkxORUlzU1VGQlFVRXNRMEZCU3pGQ0xFMUJRVUZCTEVOQlFWRXNRMEZCUlRKQ0xFdEJRVUZCTEVOQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRE4wSTNRaXhKUVVGQlFTeERRVUZMT0VJc1VVRkJRVUVzUTBGQlV6VkNMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM3BDUml4SlFVRkJRU3hEUVVGTFowTXNVMEZCUVVFc1JVRkJXU3hEUVVGRGFrSXNSMEZCUVVFc1EwRkJTMGtzVVVGQlFVRXNSMEZCUVVFc1EwRkRia0lzVFVGQlRXTXNUMEZCUVVFc1EwRkJWU3hEUVVOYVF5eEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZSUXl4UlFVRkJRU3hEUVVGVlF5eFJRVUZCUVN4RFFVRkJRU3hEUVVOc1FpeEhRVUZCTEVOQlEwa3NUMEZCVHl4SlFVRkpReXhMUVVGQlFTeERRVUZOU0N4TlFVRkJRU3hEUVVGUFF5eFJRVUZCUVN4RFFVRkJRU3hEUVVGWFNDeFBRVUZCUVN4RFFVRkJRU3hEUVVOeVF5eE5RVUZQVFN4SFFVRkJRU3hEUVVGQlFTeERRVU5NTEU5QlFVOURMRTlCUVVGQkxFTkJRVkZETEVkQlFVRkJMRU5CUVVsT0xFMUJRVUZCTEVOQlFWRkRMRkZCUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpkRFN5eGpRVUZCUVN4RFFVRmpMRU5CUVVOUUxFMUJRVUZCTEVOQlFWRkRMRkZCUVVGQkxFTkJRVlZQTEZWQlFVRkJMRWxCUXpkQ2VFSXNVVUZCUVVFc1EwRkJVMmRDTEUxQlFVRkJMRU5CUVZGRExGRkJRVUZCTEVOQlFVRkJMRU5CUTFaSkxFOUJRVUZCTEVOQlFWRkZMR05CUVVGQkxFTkJRV1ZRTEUxQlFVRkJMRU5CUVZGRExGRkJRVUZCTEVOQlFWVlBMRlZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhCRVF5eGpRVUZCUVN4RFFVRmpMRU5CUVVOVUxFMUJRVUZCTEVOQlFWRkRMRkZCUVVGQkxFbEJRMjVDYWtJc1VVRkJRVUVzUTBGQlUyZENMRTFCUVVGQkxFTkJRVkZETEZGQlFVRkJMRU5CUVVGQkxFTkJRMVpKTEU5QlFVRkJMRU5CUVZGSkxHTkJRVUZCTEVOQlFXVlVMRTFCUVVGQkxFTkJRVkZETEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1RsRExFOUJRVThzU1VGQlNVVXNTMEZCUVVFc1EwRkJUWFpDTEVkQlFVRkJMRU5CUVV0clFpeFBRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVY3hRbXBETEVsQlFVRkJMRU5CUVVzMlF5eFBRVUZCUVN4RlFVRlZMRU5CUVVNelF5eE5RVUZCUVN4RFFVRlJORU1zUzBGQlFVRXNSMEZCUVVFc1EwRkRjRUlzU1VGQlNVTXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJVMW9zVDBGU1FYQkRMRTFCUVVGQkxFTkJRVTlFTEVsQlFVRkJMRU5CUVV0U0xFMUJRVUZCTEVOQlFVRkJMRU5CUVZFNFF5eEhRVUZCUVN4RFFVRkxReXhIUVVGQlFTeEZRVUZCUVN4RFFVTlNMRU5CUVVFc1JVRkJWRWdzUzBGQlFVRXNRMEZEUVVNc1MwRkJRVUVzUTBGQlRVVXNSMEZCUVVFc1EwRkJRVUVzUTBGQlR5OURMRTFCUVVGQkxFTkJRVThyUXl4SFFVRkJRU3hEUVVGQlFTeERRVWR3UWtZc1MwRkJRVUVzUTBGQlRUbENMRWxCUVVGQkxFTkJRVXRtTEUxQlFVRkJMRU5CUVU4clF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkdVFrWXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIV0M5RExFbEJRVUZCTEVOQlFVdHJSQ3hyUWtGQlFVRXNSVUZCY1VJc1EwRkJRMGdzUzBGQlFVRXNRMEZCVDBrc1NVRkJRVUVzUjBGQlFVRXNRMEZET1VJc1NVRkJTVU1zVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTJZc1NVRkJTeXhKUVVGSkwwTXNRMEZCUVVFc1NVRkJTekJETEV0QlFVRkJMRU5CUTFaTExGRkJRVUZCTEVOQlFWTnVReXhKUVVGQlFTeERRVUZMT0VJc1MwRkJRVUVzUTBGQlRURkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVYzRReXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVelFpeFBRVUZQUXl4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFljRVFzU1VGQlFVRXNRMEZCUzNGRUxHbENRVUZCUVN4RlFVRnZRaXhEUVVGRFRpeExRVUZCUVN4RFFVRlJMRVZCUVVFc1IwRkJRU3hEUVVNNVFpeEpRVUZKU3l4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGRFppeEpRVUZMTEVsQlFVa3ZReXhEUVVGQlFTeEpRVUZMTUVNc1MwRkJRVUVzUTBGRFZrc3NVVUZCUVVFc1EwRkJWMEVzVVVGQlFVRXNRMEZCVTBVc1RVRkJRVUVzUTBGQlR6TkRMRTFCUVVGQkxFTkJRVTlFTEVsQlFVRkJMRU5CUVV0eFF5eExRVUZCUVN4RFFVRk5NVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYWtRc1QwRkJUMVlzYVVKQlFVRkJMRU5CUVdFMFJDeExRVUZCUVN4RFFVRk5TQ3hSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWM1UW5CRUxFbEJRVUZCTEVOQlFVdDNSQ3h0UWtGQlFVRXNSVUZCYzBJc1EwRkJRMVFzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVsVkxFVkJRVUZCTEVOQlFVbE9MRWxCUVVGQkxFZEJRVUZCTEVOQlEzaERMRWxCUVVscVJDeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxITEVOQlFVRkJMRWxCUVVzd1F5eExRVUZCUVN4RFFVTldOME1zVFVGQlFVRXNRMEZCVHpaRExFdEJRVUZCTEVOQlFVMHhReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhiMFFzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlQxWXNTMEZCUVVFc1EwRkJUVEZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWM0UXl4SlFVRkJRU3hEUVVGQlFTeERRVVZ3UXl4UFFVRlBha1FzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSFdFWXNTVUZCUVVFc1EwRkJTekJFTEVsQlFVRkJMRVZCUVU4c1EwRkJRME1zU1VGQlFVRXNRMEZCVFVNc1JVRkJRVUVzUjBGQlFVRXNRMEZEWm1wRUxFMUJRVUZCTEVOQlFVOUVMRWxCUVVGQkxFTkJRVXRwUkN4SlFVRkJRU3hEUVVGQlFTeERRVUZOV0N4SFFVRkJRU3hEUVVGSlF5eEhRVUZCUVN4RlFVRkJRU3hEUVVOc1FsY3NSVUZCUVVFc1EwRkJSMWdzUjBGQlFVRXNRMEZCUVVFc1EwRkJUMVVzU1VGQlFVRXNRMEZCUzFZc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpka0pxUkN4SlFVRkJRU3hEUVVGTE5rUXNUMEZCUVVFc1JVRkJWU3hEUVVGRE0wUXNUVUZCUVVFc1EwRkJVV2xDTEZGQlFVRkJMRWRCUVVGQkxFTkJRM0JDTEVsQlFVc3NTVUZCU1RoQ0xFZEJRVUZCTEVsQlFVOHZReXhOUVVGQlFTeERRVU5hYVVJc1VVRkJRVUVzUTBGQlUycENMRTFCUVVGQkxFTkJRVThyUXl4SFFVRkJRU3hEUVVGQlFTeERRVUZOUVN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVrNVFtcEVMRWxCUVVGQkxFTkJRVXM0UkN4SlFVRkJRU3hEUVVGUExGTkJRVlUxUkN4TlFVRkJRU3hEUVVGUmFVSXNVVUZCUVVFc1EwRkJRVUVzUTBGRE1VSXNTVUZCU1RSRExGTkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVTm9RaXhKUVVGTExFbEJRVWxrTEVkQlFVRkJMRWxCUVU4dlF5eE5RVUZCUVN4RFFVTmFOa1FzVTBGQlFVRXNRMEZCVldRc1IwRkJRVUVzUTBGQlFVRXNRMEZCVHpsQ0xGRkJRVUZCTEVOQlFWTnFRaXhOUVVGQlFTeERRVUZQSzBNc1IwRkJRVUVzUTBGQlFVRXNRMEZCVFVFc1IwRkJRVUVzUTBGQlFVRXNRMEZGTTBNc1QwRkJUMk1zVTBGQlFVRXNRMEZCUVVFc1EwRkhXQzlFTEVsQlFVRkJMRU5CUVV0blJTeFhRVUZCUVN4RlFVRmpMRU5CUVVORExFbEJRVUZCTEVOQlFVMURMRTFCUVVGQkxFZEJRVUZCTEVOQlEzUkNMRWxCUVVsRExFbEJRVUZCTEVOQlEwb3NTVUZCU3l4SlFVRkphRUlzU1VGQlFVRXNTVUZCVVdVc1RVRkJRVUVzUTBGRllpeEhRVUZCTEVWQlJFRkRMRWxCUVVGQkxFTkJRVTlETEVsQlFVRkJMRU5CUVV0RExGTkJRVUZCTEVOQlFWVklMRTFCUVVGQkxFTkJRVTltTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFWVnBRaXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVlNpeEpRVUZCUVN4RFFVRkxaQ3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU5vUkN4TlFVZG1MRTlCUVU5blFpeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRZYmtVc1NVRkJRVUVzUTBGQlMzTkZMRmxCUVVGQkxFVkJRV1VzUTBGQlEwd3NTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVWxETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hIUVVGQkxFTkJRM0pETEVsQlFVbExMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZKU2l4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZEZWtJc1NVRkJTeXhKUVVGSk9VUXNRMEZCUVVFc1NVRkJTelJFTEVsQlFVRkJMRU5CUVVGQkxFTkJRMVpGTEVsQlFVRkJMRU5CUVU5dVJTeEpRVUZCUVN4RFFVRkxaMFVzVjBGQlFVRXNRMEZCV1VNc1NVRkJRVUVzUTBGQlN6VkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVazJSQ3hOUVVGQlFTeERRVUZCUVN4SFFVVnFRMHNzVDBGQlFVRXNRMEZCVVhSRUxFbEJRVUZCTEVOQlFVdG5SQ3hKUVVGQlFTeERRVUZMTlVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhkRUlzVDBGQlQydEZMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjFoMlJTeEpRVUZCUVN4RFFVRkxORUlzU1VGQlFVRXNSVUZCVHl4RFFVRkRjVU1zU1VGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsUExFMUJRVUZCTEVOQlFWTXNRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbERMRTlCUVVGQkxFTkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRlBla0lzUjBGQlFVRXNRMEZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRVTl3UWl4TFFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4SFFVRkJMRU5CUXpkRk1rTXNUVUZCUVVFc1EwRkJUMGNzU1VGQlFVRXNRMEZCVDBnc1RVRkJRVUVzUTBGQlQwY3NTVUZCUVVFc1JVRkJVU3hGUVVGQkxFTkJRemRDU0N4TlFVRkJRU3hEUVVGUFJTeFBRVUZCUVN4RFFVRlZSaXhOUVVGQlFTeERRVUZQUlN4UFFVRkJRU3hGUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZGYmtNc1NVRkJTVVVzVFVGQlFVRXNRMEZCVXl4RlFVRkJMRU5CUVVsRExFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVTjZRaXhKUVVGTExFZEJRVUVzUTBGQlN6VkNMRWRCUVVGQkxFTkJRVXR3UWl4TFFVRkJRU3hEUVVGQlFTeEhRVUZWYkVJc1RVRkJRVUVzUTBGQlQyMUZMRTlCUVVGQkxFTkJRVkZpTEVsQlFVRkJMRU5CUVVGQkxFTkJRM0JEVnl4TlFVRkJRU3hEUVVGUE0wUXNTVUZCUVVFc1EwRkJTeXhEUVVGRlowTXNSMEZCUVVFc1EwRkJRVUVzUjBGQlFVRXNRMEZCUzNCQ0xFdEJRVUZCTEVOQlFVRkJMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjB4bUxFbEJRVUZCTEVWQlFXUXdSQ3hOUVVGQlFTeERRVUZQZGtJc1IwRkJRVUVzUjBGRFVEaENMRTlCUVVGQkxFTkJRVkZETEVkQlFVRkJMRU5CUVVrc1QwRkJRU3hEUVVGQkxFTkJRMXBLTEUxQlFVRkJMRU5CUVU5b1JDeEpRVUZCUVN4RFFVRkxMRU5CUVVOeFJDeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeEhRVUZCUVN4RFFVTmFMRWxCUVVseVJDeExRVUZCUVN4RFFVRlRiMFFzUTBGQlFVRXNRMEZCUldoRExFZEJRVUZCTEVWQlFVOXBReXhEUVVGQlFTeERRVUZGYWtNc1IwRkJRVUVzUTBGRmVFSXNUMEZFYTBJc1EwRkJRU3hGUVVGa2RVSXNUVUZCUVVFc1EwRkJUM1pDTEVkQlFVRkJMRWRCUVdGd1FpeExRVUZCUVN4RFFVRkJRU3hEUVVGVFFTeExRVUZCUVN4RFFVRkJRU3hEUVVNeFFrRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpTMllzU1VGQlFVRXNSVUZCYUVJd1JDeE5RVUZCUVN4RFFVRlBNME1zUzBGQlFVRXNSVUZEVUN0RExFMUJRVUZCTEVOQlFVOW9SQ3hKUVVGQlFTeERRVUZMTEVOQlFVTnhSQ3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hIUVVGQlFTeERRVU5hTEVsQlFVbHlSQ3hMUVVGQlFTeERRVUZUYjBRc1EwRkJRVUVzUTBGQlJYQkVMRXRCUVVGQkxFVkJRVk54UkN4RFFVRkJRU3hEUVVGRmNrUXNTMEZCUVVFc1EwRkZNVUlzVDBGRWIwSXNRMEZCUVN4RlFVRm9RakpETEUxQlFVRkJMRU5CUVU4elF5eExRVUZCUVN4SFFVRmxRU3hMUVVGQlFTeERRVUZCUVN4RFFVRlRRU3hMUVVGQlFTeERRVUZCUVN4RFFVTTFRa0VzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSlMyWXNTVUZCUVVFc1JVRkJhRUl3UkN4TlFVRkJRU3hEUVVGUFF5eExRVUZCUVN4RlFVTlFSeXhOUVVGQlFTeERRVUZQYUVRc1NVRkJRVUVzUTBGQlN5eERRVUZEY1VRc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1IwRkJRVUVzUTBGRFdpeEpRVUZKUXl4UFFVRkJRU3hEUVVGVkxFTkJRVUVzUTBGQlIwTXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRekZDTEVsQlFVc3NTVUZCU1ZRc1NVRkJRVUVzU1VGQlVVZ3NUVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZEYUVKUkxFTkJRVUZCTEVOQlFVVndSQ3hMUVVGQlFTeERRVUZOT0VNc1NVRkJRVUVzUTBGQlFVRXNSVUZCVTA4c1EwRkJRVUVzUTBGQlJYSkVMRXRCUVVGQkxFTkJRVTA0UXl4SlFVRkJRU3hEUVVGQlFTeERRVUZQVVN4UFFVRkJRU3hGUVVGQlFTeERRVU12UWtNc1RVRkJRVUVzUlVGQlFVRXNRMEZGVkN4SlFVRkpka1FzUzBGQlFVRXNRMEZCVVhORUxFOUJRVUZCTEVWQlFWZERMRTFCUVVGQkxFTkJSWFpDTEU5QlJITkNMRU5CUVVFc1JVRkJiRUphTEUxQlFVRkJMRU5CUVU5RkxFOUJRVUZCTEVkQlFXbENOME1zUzBGQlFVRXNRMEZCUVVFc1EwRkJVMEVzUzBGQlFVRXNRMEZCUVVFc1EwRkRPVUpCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXWXNTVUZCU3l4SFFVRkJMRU5CUVVsdlFpeEhRVUZCUVN4RFFVRkZRU3hIUVVGQlFTeERRVUZIY0VJc1MwRkJRVUVzUTBGQlJVRXNTMEZCUVVFc1EwRkJRVUVzUjBGQlZ5dERMRTFCUVVGQkxFTkJRM1pDUXl4TFFVRkJRU3hEUVVGTk5VSXNSMEZCUVVFc1EwRkJRVUVzUTBGQlQzQkNMRXRCUVVGQkxFTkJSMnBDTEU5QlFVOW5SQ3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkWU4wVXNTVUZCUVVFc1EwRkJTM0ZHTEU5QlFVRkJMRVZCUVZVc1EwRkJRM0JDTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hIUVVGQkxFTkJRMjVDTEVsQlFVbDJSQ3hKUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGUFJDeEpRVUZCUVN4RFFVRkxkVVFzU1VGQlFVRXNRMEZCUVVFc1EwRkJUVzlDTEU5QlFVRkJMRVZCUVVGQkxFTkJRM3BDZEVJc1UwRkJRVUVzUTBGQldTeEZRVUZCTEVOQlEyaENMRWxCUVVzc1NVRkJTVEZFTEVOQlFVRkJMRWxCUVV0TExFbEJRVUZCTEVOQlExWnhSQ3hUUVVGQlFTeERRVUZWTVVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCU3pSRUxFbEJRVUZCTEVOQlFVczFSQ3hEUVVGQlFTeERRVUZCUVN4RFFVVjRRaXhQUVVGUE1FUXNVMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIV0M5RUxFbEJRVUZCTEVOQlFVczRRaXhSUVVGQlFTeEZRVUZYTEVOQlFVTnRReXhKUVVGQlFTeERRVUZQTEVWQlFVRXNSMEZCUVN4RFFVTndRaXhKUVVGSmFFSXNSMEZCUVVFc1EwRkJUWFJETEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdDFSQ3hKUVVGQlFTeERRVUZCUVN4RFFVRk5jVUlzUzBGQlFVRXNSVUZCUVVFc1EwRkZOVUlzVFVGQlR5eERRVUZGY2tNc1IwRkJRVUVzUTBGQlFVRXNSMEZCUVVFc1EwRkJTM0JDTEV0QlFVRkJMRU5CUkVadlF5eEpRVUZCUVN4RFFVRkxhRUlzUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpja0pxUkN4SlFVRkJRU3hEUVVGTGRVWXNUMEZCUVVFc1JVRkJWU3hEUVVGRGRFSXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFZEJRVUVzUTBGRGJrSXNTVUZCU1doQ0xFZEJRVUZCTEVOQlFVMTBReXhOUVVGQlFTeERRVUZQUkN4SlFVRkJRU3hEUVVGTGRVUXNTVUZCUVVFc1EwRkJRVUVzUTBGQlRYVkNMRWRCUVVGQkxFVkJRVUZCTEVOQlJUVkNMRTFCUVU4c1EwRkJSWFpETEVkQlFVRkJMRU5CUVVGQkxFZEJRVUZCTEVOQlFVdHdRaXhMUVVGQlFTeERRVVJHYjBNc1NVRkJRVUVzUTBGQlMyaENMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYSkNha1FzU1VGQlFVRXNRMEZCUzNsR0xFdEJRVUZCTEVWQlFWRXNRMEZCUTNoQ0xFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVRkplVUlzUzBGQlFVRXNSMEZCUVVFc1EwRkRja0lzU1VGQlNYcERMRWRCUVVGQkxFTkJRVTEwUXl4TlFVRkJRU3hEUVVGUFJDeEpRVUZCUVN4RFFVRkxkVVFzU1VGQlFVRXNRMEZCUVVFc1EwRkJUWGxDTEV0QlFVRkJMRU5CUVVGQkxFTkJSVFZDTEUxQlFVOHNRMEZCUlhwRExFZEJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFTkJRVXR3UWl4TFFVRkJRU3hEUVVSR2IwTXNTVUZCUVVFc1EwRkJTMmhDTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTWEpDYWtRc1NVRkJRVUVzUTBGQlN6SkdMRXRCUVVGQkxFVkJRVkVzUTBGQlF6RkNMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZKVlN4SlFVRkJRU3hIUVVGQlFTeERRVVZ5UWl4SlFVRkxMRWxCUVVsMFJTeERRVUZCUVN4SlFVRkxORVFzU1VGQlFVRXNRMEZEVml4SFFVRkpSeXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVlNpeEpRVUZCUVN4RFFVRkxOVVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlR5dEVMRWxCUVVGQkxFTkJRVXRETEZOQlFVRkJMRU5CUVZWTkxFbEJRVUZCTEVOQlFVRkJMRU5CUXpGRExFOUJRVTkwUlN4RFFVRkJRU3hEUVVsbUxFMUJRVUVzUTBGUVlTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFWVnFRa3dzU1VGQlFVRXNRMEZCU3pSR0xGTkJRVUZCTEVWQlFWa3NRMEZCUXpOQ0xFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVRkpWU3hKUVVGQlFTeEhRVUZCUVN4RFFVTjZRaXhKUVVGSlpTeExRVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRFlpeEpRVUZMTEVsQlFVbHlSaXhEUVVGQlFTeEpRVUZMTkVRc1NVRkJRVUVzUTBGRFRrY3NTVUZCUVVFc1EwRkJTME1zVTBGQlFVRXNRMEZCVlVvc1NVRkJRVUVzUTBGQlN6VkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUVU4clJDeEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZWVFN4SlFVRkJRU3hEUVVGQlFTeEhRVU14UTJVc1MwRkJRVUVzUTBGQlVYSkdMRU5CUVVGQkxFTkJRVUZCTEVOQlNXaENMRTlCUVU5eFJpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRZTVVZc1NVRkJRVUVzUTBGQlN6WkdMRkZCUVVGQkxFVkJRVmNzUTBGQlF6VkNMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZKVlN4SlFVRkJRU3hIUVVGQlFTeERRVU5WTEVOQlFVRXNSVUZCTTBJelJTeEpRVUZCUVN4RFFVRkxNa1lzUzBGQlFVRXNRMEZCVFRGQ0xFbEJRVUZCTEVOQlFVMVZMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhKQ00wVXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJsZXQgX19hcnJheUxpYnJhcnlfMTM9XyRBcnJheUxpYnJhcnlfMTEoKTt2YXIgXyRNYXRoc0xpYnJhcnlfMTM9ZnVuY3Rpb24oKXtsZXQgc2VsZj17cGxhY2VVbml0OihudW0sdmFsdWUsY291bnQpPT57bnVtPU1hdGguZmxvb3IobnVtKS50b1N0cmluZygpLHZhbHVlPXZhbHVlfHxudW1bMF0sY291bnQ9Y291bnR8fDA7bGV0IHBvcz0tMTtmb3IobGV0IGk9MDtpPG51bS5sZW5ndGg7aSsrKW51bVtpXT09dmFsdWUmJigwPT1jb3VudCYmKHBvcz1pKSxjb3VudC0tKTtyZXR1cm4tMSE9cG9zJiYocG9zPTEwKioobnVtLmxlbmd0aC1wb3MtMSkpLHBvc30scm91bmQ6cGFyYW1zPT4ocGFyYW1zLmRpcj1wYXJhbXMuZGlyfHxcInJvdW5kXCIscGFyYW1zLnRvPXBhcmFtcy50b3x8MSxNYXRoW3BhcmFtcy5kaXJdKHBhcmFtcy5udW0vcGFyYW1zLnRvKSpwYXJhbXMudG8pLHZhcmlhbmNlOmRhdGE9PntsZXQgbWVhbj1zZWxmLm1lYW4oZGF0YSksdmFyaWFuY2U9MDtmb3IobGV0IGk9MDtpPGRhdGEubGVuZ3RoO2krKyl2YXJpYW5jZSs9KGRhdGFbaV0tbWVhbikqKjI7cmV0dXJuIHZhcmlhbmNlL2RhdGEubGVuZ3RofSxzdGFuZGFyZERldmlhdGlvbjpkYXRhPT57bGV0IHZhcmlhbmNlPXNlbGYudmFyaWFuY2UoZGF0YSk7cmV0dXJuIE1hdGguc3FydCh2YXJpYW5jZSl9LHJhbmdlOmRhdGE9PntsZXQgbWluPU1hdGgubWluKC4uLmRhdGEpO3JldHVybiBNYXRoLm1heCguLi5kYXRhKS1taW59LG1lYW46ZGF0YT0+c2VsZi5zdW0oZGF0YSkvZGF0YS5sZW5ndGgsbWVkaWFuOmRhdGE9PntsZXQgbWVkaWFuLGxlbmd0aD1kYXRhLmxlbmd0aDtyZXR1cm4gbWVkaWFuPWxlbmd0aCUyPT0wPyhkYXRhW2xlbmd0aC8yLTFdK2RhdGFbbGVuZ3RoLzJdKS8yOmRhdGFbTWF0aC5mbG9vcihsZW5ndGgvMildfSxtb2RlOmRhdGE9PntsZXQgcmVjb3JkPXt9O2ZvcihsZXQgaT0wO2k8ZGF0YS5sZW5ndGg7aSsrKW51bGwhPXJlY29yZFtkYXRhW2ldXT9yZWNvcmRbZGF0YVtpXV0rKzpyZWNvcmRbZGF0YVtpXV09aTtsZXQgbW9kZSxtYXg9TWF0aC5tYXgoLi4uT2JqZWN0LnZhbHVlKHJlY29yZCkpO2ZvcihsZXQgaSBpbiByZWNvcmQpaWYocmVjb3JkW2ldPT1tYXgpe21vZGU9aTticmVha31yZXR1cm4gbW9kZX0sbm9ybWFsaXplRGF0YTpkYXRhPT57ZGF0YS5zb3J0KChhLGIpPT5hLWIpO2Zvcih2YXIgbWF4PWRhdGFbZGF0YS5sZW5ndGgtMV0sbWluPWRhdGFbMF0sbm9ybWFsaXplZD1bXSxpPTA7aTxkYXRhLmxlbmd0aDtpKyspbm9ybWFsaXplZC5wdXNoKChkYXRhW2ldLW1pbikvKG1heC1taW4pKTtyZXR1cm4gbm9ybWFsaXplZH0sbWluaW11aW1Td2FwczooYXJyLG9yZGVyKT0+e3ZhciBzd2FwPTAsY2hlY2tlZD1bXSxjb3VudGVyPTAsZmluYWw9Wy4uLmFycl0uc29ydCgoYSxiKT0+YS1iKTstMT09b3JkZXImJihmaW5hbD1maW5hbC5yZXZlcnNlKCkpO2Zvcih2YXIgaT0wO2k8YXJyLmxlbmd0aDtpKyspe3ZhciBlbGVtZW50PWFycltpXTtpZihpIT1lbGVtZW50JiYhY2hlY2tlZFtpXSl7Zm9yKGNvdW50ZXI9MCwwPT1hcnJbMF0mJihlbGVtZW50PWkpOyFjaGVja2VkW2ldOyljaGVja2VkW2ldPSEwLGVsZW1lbnQ9YXJyW2k9ZmluYWwuaW5kZXhPZihlbGVtZW50KV0sY291bnRlcisrOzAhPWNvdW50ZXImJihzd2FwKz1jb3VudGVyLTEpfX1yZXR1cm4gc3dhcH0scHJpbWVGYWN0b3JpemU6bnVtYmVyPT57aWYoXCJudW1iZXJcIiE9dHlwZW9mIG51bWJlcilyZXR1cm5bXTtpZigxPT0obnVtYmVyPU1hdGguYWJzKHBhcnNlSW50KG51bWJlcikpKXx8MD09bnVtYmVyKXJldHVybltdO2Zvcih2YXIgZGl2aWRlbmQsZGl2aWRlcj0yLGZhY3RvcnM9W107MSE9bnVtYmVyOyktMT09KGRpdmlkZW5kPW51bWJlci9kaXZpZGVyKS50b1N0cmluZygpLmluZGV4T2YoXCIuXCIpPyhudW1iZXI9ZGl2aWRlbmQsZmFjdG9ycy5wdXNoKGRpdmlkZXIpKTpkaXZpZGVyKys7cmV0dXJuIGZhY3RvcnN9LGxjZjpudW1iZXJzPT57aWYoIUFycmF5LmlzQXJyYXkobnVtYmVycykpcmV0dXJuW107dmFyIGZhY3RvcnM9W10sY29tbW9uRmFjdG9ycz1bXSx2YWx1ZT0xO2Zvcih2YXIgbnVtYmVyIG9mIG51bWJlcnMpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiBudW1iZXIpcmV0dXJuW107ZmFjdG9ycy5wdXNoKHNlbGYucHJpbWVGYWN0b3JpemUobnVtYmVyKSl9bWFpbjpmb3IodmFyIGZhY3RvciBvZiBmYWN0b3JzWzBdKWlmKC0xPT1jb21tb25GYWN0b3JzLmluZGV4T2YoZmFjdG9yKSl7Zm9yKHZhciBpIG9mIGZhY3RvcnMpaWYoLTE9PWkuaW5kZXhPZihmYWN0b3IpKWNvbnRpbnVlIG1haW47Y29tbW9uRmFjdG9ycy5wdXNoKGZhY3RvciksdmFsdWUqPWZhY3Rvcn1yZXR1cm4gdmFsdWV9LHN0cmlwSW50ZWdlcjpudW1iZXI9Pm51bWJlcj0tMT09KG51bWJlcj1udW1iZXIudG9TdHJpbmcoKSkuaW5kZXhPZihcIi5cIik/bnVtYmVyOm51bWJlci5zbGljZSgwLG51bWJlci5pbmRleE9mKFwiLlwiKSksc3RyaXBGcmFjdGlvbjpudW1iZXI9Pm51bWJlcj0tMT09KG51bWJlcj1udW1iZXIudG9TdHJpbmcoKSkuaW5kZXhPZihcIi5cIik/XCIwXCI6bnVtYmVyLnNsaWNlKG51bWJlci5pbmRleE9mKFwiLlwiKSsxKSxjaGFuZ2VCYXNlOihudW1iZXIsZnJvbSx0byk9PnBhcnNlRmxvYXQobnVtYmVyLGZyb20pLnRvU3RyaW5nKHRvKSxtYXg6YXJyYXk9Pnt2YXIgbWF4PWFycmF5WzBdO3JldHVybiBfX2FycmF5TGlicmFyeV8xMy5lYWNoKGFycmF5LHZhbHVlPT57bWF4PHZhbHVlJiYobWF4PXZhbHVlKX0pLG1heH0sbWluOmFycmF5PT57dmFyIG1heD1hcnJheVswXTtyZXR1cm4gX19hcnJheUxpYnJhcnlfMTMuZWFjaChhcnJheSx2YWx1ZT0+e21heD52YWx1ZSYmKG1heD12YWx1ZSl9KSxtYXh9LHN1bTphcnJheT0+e2xldCBzdW09MDtmb3IobGV0IGk9MDtpPGFycmF5Lmxlbmd0aDtpKyspe2lmKGlzTmFOKE1hdGguZmxvb3IoYXJyYXlbaV0pKSl7c3VtPSExO2JyZWFrfXN1bSs9YXJyYXlbaV0vMX1yZXR1cm4gc3VtfSxwcm9kdWN0OmFycmF5PT57bGV0IHByb2R1Y3Q9MTtmb3IobGV0IGk9MDtpPGFycmF5Lmxlbmd0aDtpKyspe2lmKGlzTmFOKE1hdGguZmxvb3IoYXJyYXlbaV0pKSl7cHJvZHVjdD0hMTticmVha31wcm9kdWN0Kj1hcnJheVtpXX1yZXR1cm4gcHJvZHVjdH0sYWRkOiguLi5hcnJheXMpPT57bGV0IG5ld0FycmF5PVtdO3JldHVybiBhcnJheXNbMF0uZm9yRWFjaCgodmFsdWUscG9zaXRpb24pPT57YXJyYXlzLmZvckVhY2goKGFycmF5LGxvY2F0aW9uKT0+e2lmKDAhPWxvY2F0aW9uKXtsZXQgZWxlbWVudD1BcnJheS5pc0FycmF5KGFycmF5KT9hcnJheVtwb3NpdGlvbl06YXJyYXk7dmFsdWUrPTE9PWlzTmFOKGVsZW1lbnQpPzA6ZWxlbWVudH19KSxuZXdBcnJheS5wdXNoKHZhbHVlKX0pLG5ld0FycmF5fSxzdWI6KC4uLmFycmF5cyk9PntsZXQgbmV3QXJyYXk9W107cmV0dXJuIGFycmF5c1swXS5mb3JFYWNoKCh2YWx1ZSxwb3NpdGlvbik9PnthcnJheXMuZm9yRWFjaCgoYXJyYXksbG9jYXRpb24pPT57aWYoMCE9bG9jYXRpb24pe2xldCBlbGVtZW50PUFycmF5LmlzQXJyYXkoYXJyYXkpP2FycmF5W3Bvc2l0aW9uXTphcnJheTt2YWx1ZS09MT09aXNOYU4oZWxlbWVudCk/MDplbGVtZW50fX0pLG5ld0FycmF5LnB1c2godmFsdWUpfSksbmV3QXJyYXl9LG11bDooLi4uYXJyYXlzKT0+e2xldCBuZXdBcnJheT1bXTtyZXR1cm4gYXJyYXlzWzBdLmZvckVhY2goKHZhbHVlLHBvc2l0aW9uKT0+e2FycmF5cy5mb3JFYWNoKChhcnJheSxsb2NhdGlvbik9PntpZigwIT1sb2NhdGlvbil7bGV0IGVsZW1lbnQ9QXJyYXkuaXNBcnJheShhcnJheSk/YXJyYXlbcG9zaXRpb25dOmFycmF5O3ZhbHVlKj0xPT1pc05hTihlbGVtZW50KT8wOmVsZW1lbnR9fSksbmV3QXJyYXkucHVzaCh2YWx1ZSl9KSxuZXdBcnJheX0sZGl2aWRlOiguLi5hcnJheXMpPT57bGV0IG5ld0FycmF5PVtdO3JldHVybiBhcnJheXNbMF0uZm9yRWFjaCgodmFsdWUscG9zaXRpb24pPT57YXJyYXlzLmZvckVhY2goKGFycmF5LGxvY2F0aW9uKT0+e2lmKDAhPWxvY2F0aW9uKXtsZXQgZWxlbWVudD1BcnJheS5pc0FycmF5KGFycmF5KT9hcnJheVtwb3NpdGlvbl06YXJyYXk7dmFsdWUvPTE9PWlzTmFOKGVsZW1lbnQpPzA6ZWxlbWVudH19KSxuZXdBcnJheS5wdXNoKHZhbHVlKX0pLG5ld0FycmF5fSxhYnM6YXJyYXk9Pl9fYXJyYXlMaWJyYXJ5XzEzLmVhY2goYXJyYXksdmFsdWU9Pih2YWx1ZT0xPT1pc05hTih2YWx1ZSk/MDp2YWx1ZSxNYXRoLmFicyh2YWx1ZSkpKX07cmV0dXJuIHNlbGZ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJazFoZEdoelRHbGljbUZ5ZVM1cWN5SmRMQ0p1WVcxbGN5STZXeUpoY25KaGVVeHBZbkpoY25raUxDSnlaWEYxYVhKbElpd2lRWEp5WVhsTWFXSnlZWEo1SWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0luTmxiR1lpTENKd2JHRmpaVlZ1YVhRaUxDSnVkVzBpTENKMllXeDFaU0lzSW1OdmRXNTBJaXdpVFdGMGFDSXNJbVpzYjI5eUlpd2lkRzlUZEhKcGJtY2lMQ0p3YjNNaUxDSnBJaXdpYkdWdVozUm9JaXdpY205MWJtUWlMQ0p3WVhKaGJYTWlMQ0prYVhJaUxDSjBieUlzSW5aaGNtbGhibU5sSWl3aVpHRjBZU0lzSW0xbFlXNGlMQ0p6ZEdGdVpHRnlaRVJsZG1saGRHbHZiaUlzSW5OeGNuUWlMQ0p5WVc1blpTSXNJbTFwYmlJc0ltMWhlQ0lzSW5OMWJTSXNJbTFsWkdsaGJpSXNJbTF2WkdVaUxDSnlaV052Y21RaUxDSjFibVJsWm1sdVpXUWlMQ0pQWW1wbFkzUWlMQ0p1YjNKdFlXeHBlbVZFWVhSaElpd2ljMjl5ZENJc0ltRWlMQ0ppSWl3aWJtOXliV0ZzYVhwbFpDSXNJbkIxYzJnaUxDSnRhVzVwYlhWcGJWTjNZWEJ6SWl3aVlYSnlJaXdpYjNKa1pYSWlMQ0p6ZDJGd0lpd2lZMmhsWTJ0bFpDSXNJbU52ZFc1MFpYSWlMQ0ptYVc1aGJDSXNJbkpsZG1WeWMyVWlMQ0psYkdWdFpXNTBJaXdpYVc1a1pYaFBaaUlzSW5CeWFXMWxSbUZqZEc5eWFYcGxJaXdpYm5WdFltVnlJaXdpWVdKeklpd2ljR0Z5YzJWSmJuUWlMQ0prYVhacFpHVnVaQ0lzSW1ScGRtbGtaWElpTENKbVlXTjBiM0p6SWl3aWJHTm1JaXdpYm5WdFltVnljeUlzSWtGeWNtRjVJaXdpYVhOQmNuSmhlU0lzSW1OdmJXMXZia1poWTNSdmNuTWlMQ0p0WVdsdUlpd2labUZqZEc5eUlpd2ljM1J5YVhCSmJuUmxaMlZ5SWl3aWMyeHBZMlVpTENKemRISnBjRVp5WVdOMGFXOXVJaXdpWTJoaGJtZGxRbUZ6WlNJc0ltWnliMjBpTENKd1lYSnpaVVpzYjJGMElpd2lZWEp5WVhraUxDSmxZV05vSWl3aWFYTk9ZVTRpTENKd2NtOWtkV04wSWl3aVlXUmtJaXdpWVhKeVlYbHpJaXdpYm1WM1FYSnlZWGtpTENKbWIzSkZZV05vSWl3aWNHOXphWFJwYjI0aUxDSnNiMk5oZEdsdmJpSXNJbk4xWWlJc0ltMTFiQ0lzSW1ScGRtbGtaU0pkTENKdFlYQndhVzVuY3lJNklrRkJRMEVzU1VGQlNVRXNhVUpCUVVGQkxFTkJSR2xDUXl4cFFrRkRSa01zUlVGQlFVRXNRMEUyVTI1Q1F5eHhRa0ZCVDBNc1EwRXpVMUFzVlVGQlFTeERRVU5KTEVsQlFVbERMRWxCUVVGQkxFTkJRVThzUTBGRldFTXNVMEZCUVVFc1EwRkJhVUlzUTBGQlEwTXNSMEZCUVVFc1EwRkJTME1zUzBGQlFVRXNRMEZCVDBNc1MwRkJRVUVzUjBGQlFVRXNRMEZETVVKR0xFZEJRVUZCTEVOQlFVMUhMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxS0xFZEJRVUZCTEVOQlFVRkJMRU5CUVV0TExGRkJRVUZCTEVWQlFVRkJMRU5CUTNSQ1NpeExRVUZCUVN4RFFVRlJRU3hMUVVGQlFTeEZRVUZUUkN4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU55UWtVc1MwRkJRVUVzUTBGQlVVRXNTMEZCUVVFc1JVRkJVeXhEUVVGQkxFTkJSV3BDTEVsQlFVbEpMRWRCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVTllMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFFMRWRCUVVGQkxFTkJRVWxSTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTNoQ1VDeEhRVUZCUVN4RFFVRkpUeXhEUVVGQlFTeERRVUZCUVN4RlFVRk5UaXhMUVVGQlFTeEhRVU5ITEVOQlFVRXNSVUZCVkVNc1MwRkJRVUVzUjBGRFFVa3NSMEZCUVVFc1EwRkJUVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkZWa3dzUzBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGTlVpeE5RVUZCTEVOQlJGa3NRMEZCUVN4RlFVRlNTU3hIUVVGQlFTeEhRVUZYUVN4SFFVRkJRU3hEUVVGTkxFVkJRVUVzUjBGQlQwNHNSMEZCUVVFc1EwRkJTVkVzVFVGQlFVRXNRMEZCVTBZc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjRRMEVzUjBGQlFVRXNRMEZCUVVFc1EwRkhXRWNzUzBGQlFVRXNRMEZCWTBNc1RVRkJRVUVzUjBGRFZrRXNUVUZCUVVFc1EwRkJUME1zUjBGQlFVRXNRMEZCVFVRc1RVRkJRVUVzUTBGQlQwTXNSMEZCUVVFc1JVRkJUeXhQUVVGQkxFTkJRek5DUkN4TlFVRkJRU3hEUVVGUFJTeEZRVUZCUVN4RFFVRkxSaXhOUVVGQlFTeERRVUZQUlN4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGRllsUXNTVUZCUVVFc1EwRkJTMDhzVFVGQlFVRXNRMEZCVDBNc1IwRkJRVUVzUTBGQlFVRXNRMEZCUzBRc1RVRkJRVUVzUTBGQlQxWXNSMEZCUVVFc1EwRkJUVlVzVFVGQlFVRXNRMEZCVDBVc1JVRkJRVUVzUTBGQlFVRXNRMEZCVFVZc1RVRkJRVUVzUTBGQlQwVXNSVUZCUVVFc1EwRkJRVUVzUTBGSmJFVkRMRkZCUVVGQkxFTkJRV2xDUXl4SlFVRkJRU3hGUVVGQlFTeERRVU5pTEVsQlFVbERMRWxCUVVGQkxFTkJRVTlxUWl4SlFVRkJRU3hEUVVGTGFVSXNTVUZCUVVFc1EwRkJTMFFzU1VGQlFVRXNRMEZCUVVFc1EwRkRha0pFTEZGQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNVNHNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsUExFbEJRVUZCTEVOQlFVdE9MRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRemRDVFN4UlFVRkJRU3hGUVVGQlFTeERRVUZoUXl4SlFVRkJRU3hEUVVGTFVDeERRVUZCUVN4RFFVRkJRU3hEUVVGTFVTeEpRVUZCUVN4SFFVRlRMRU5CUVVFc1EwRkZjRU1zVDBGQlQwWXNVVUZCUVVFc1EwRkJWME1zU1VGQlFVRXNRMEZCUzA0c1RVRkJRVUVzUTBGQlFVRXNRMEZITTBKUkxHbENRVUZCUVN4RFFVRXdRa1lzU1VGQlFVRXNSVUZCUVVFc1EwRkRkRUlzU1VGQlNVUXNVVUZCUVVFc1EwRkJWMllzU1VGQlFVRXNRMEZCUzJVc1VVRkJRVUVzUTBGQlUwTXNTVUZCUVVFc1EwRkJRVUVzUTBGRk4wSXNUMEZFVlZnc1NVRkJRVUVzUTBGQlMyTXNTVUZCUVVFc1EwRkJTMG9zVVVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSmVFSkxMRXRCUVVGQkxFTkJRV05LTEVsQlFVRkJMRVZCUVVGQkxFTkJRMVlzU1VGQlNVc3NSMEZCUVVFc1EwRkJUV2hDTEVsQlFVRkJMRU5CUVV0blFpeEhRVUZCUVN4RFFVRkJRU3hIUVVGUFRDeEpRVUZCUVN4RFFVRkJRU3hEUVVsMFFpeFBRVWhWV0N4SlFVRkJRU3hEUVVGTGFVSXNSMEZCUVVFc1EwRkJRVUVzUjBGQlQwNHNTVUZCUVVFc1EwRkJRVUVzUTBGRlNrc3NSMEZCUVVFc1EwRkJRVUVzUTBGSmRFSktMRWxCUVVGQkxFTkJRV0ZFTEVsQlFVRkJMRVZCUTBOb1FpeEpRVUZCUVN4RFFVRkxkVUlzUjBGQlFVRXNRMEZCU1ZBc1NVRkJRVUVzUTBGQlFVRXNRMEZGUmtFc1NVRkJRVUVzUTBGQlMwNHNUVUZCUVVFc1EwRkpNVUpqTEUxQlFVRkJMRU5CUVdWU0xFbEJRVUZCTEVWQlFVRkJMRU5CUTFnc1NVRkRTVkVzVFVGQlFVRXNRMEZFUVdRc1RVRkJRVUVzUTBGQlUwMHNTVUZCUVVFc1EwRkJTMDRzVFVGQlFVRXNRMEZSYkVJc1QwRk1TV01zVFVGQlFVRXNRMEZFUVdRc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVWQlFVc3NRMEZCUVN4RFFVRkJMRU5CUTBwTkxFbEJRVUZCTEVOQlFVMU9MRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZMTEVOQlFVRXNRMEZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZMVGl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeEZRVUZOTEVOQlFVRXNRMEZGT1VOTkxFbEJRVUZCTEVOQlFVdFlMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxSkxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVUweFEyVXNTVUZCUVVFc1EwRkJZVlFzU1VGQlFVRXNSVUZCUVVFc1EwRkRWQ3hKUVVGSlZTeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxxUWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVThzU1VGQlFVRXNRMEZCUzA0c1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRFRtdENMRWxCUVVGQkxFVkJRVzVDUkN4TlFVRkJRU3hEUVVGUFZpeEpRVUZCUVN4RFFVRkxVQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGclFtbENMRTFCUVVGQkxFTkJRVTlXTEVsQlFVRkJMRU5CUVV0UUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVOQlEzcERhVUlzVFVGQlFVRXNRMEZCVDFZc1NVRkJRVUVzUTBGQlMxQXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFVFc1EwRkJRVUVzUTBGSE0wSXNTVUZEU1dkQ0xFbEJRVUZCTEVOQlJFRklMRWRCUVVGQkxFTkJRVTFxUWl4SlFVRkJRU3hEUVVGTGFVSXNSMEZCUVVFc1EwRkJRVUVzUjBGQlQwMHNUVUZCUVVFc1EwRkJUM3BDTEV0QlFVRkJMRU5CUVUxMVFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVZ1UXl4SlFVRkxMRWxCUVVscVFpeERRVUZCUVN4SlFVRkxhVUlzVFVGQlFVRXNRMEZEVml4SFFVRkpRU3hOUVVGQlFTeERRVUZQYWtJc1EwRkJRVUVzUTBGQlFVRXNSVUZCVFdFc1IwRkJRVUVzUTBGQlN5eERRVU5zUWtjc1NVRkJRVUVzUTBGQlQyaENMRU5CUVVGQkxFTkJRMUFzUzBGQlFTeERRVWxTTEU5QlFVOW5RaXhKUVVGQlFTeERRVUZCUVN4RFFVZFlTU3hoUVVGQlFTeERRVUZ6UW1Jc1NVRkJRVUVzUlVGQlFVRXNRMEZEYkVKQkxFbEJRVUZCTEVOQlFVdGpMRWxCUVVGQkxFTkJRVXNzUTBGQlEwTXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNSMEZCWlVRc1EwRkJRVUVzUTBGQlNVTXNRMEZCUVVFc1EwRkJRVUVzUTBGSmFrTXNTVUZJUVN4SlFVRkpWaXhIUVVGQlFTeERRVUZOVGl4SlFVRkJRU3hEUVVGTFFTeEpRVUZCUVN4RFFVRkxUaXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4RFFVTjZRbGNzUjBGQlFVRXNRMEZCVFV3c1NVRkJRVUVzUTBGQlN5eERRVUZCTEVOQlFVRXNRMEZEV0dsQ0xGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVTlNlRUlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFBMRWxCUVVGQkxFTkJRVXRPTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUXpkQ2QwSXNWVUZCUVVFc1EwRkJWME1zU1VGQlFVRXNRMEZCUVVFc1EwRkJUV3hDTEVsQlFVRkJMRU5CUVV0UUxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0WkxFZEJRVUZCTEVkQlFWRkRMRWRCUVVGQkxFTkJRVTFFTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJUZERMRTlCUVU5WkxGVkJRVUZCTEVOQlFVRkJMRU5CUjFoRkxHRkJRVUZCTEVOQlFYRkNMRU5CUVVORExFZEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFZEJRVUZCTEVOQlEzWkNMRWxCUVVsRExFbEJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVTlFReXhQUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZEVmtNc1QwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlExWkRMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeEhRVUZKVEN4SFFVRkJRU3hEUVVGQlFTeERRVUZMVGl4SlFVRkJRU3hEUVVGTExFTkJRVU5ETEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVkQlFXVkVMRU5CUVVGQkxFTkJRVWxETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlEyNURMRU5CUVVFc1JVRkJWa3NzUzBGQlFVRXNSMEZCWVVrc1MwRkJRVUVzUTBGQlVVRXNTMEZCUVVFc1EwRkJUVU1zVDBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGRkwwSXNTVUZCU3l4SlFVRkpha01zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3lRaXhIUVVGQlFTeERRVUZKTVVJc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN5eERRVU5xUXl4SlFVRkphME1zVDBGQlFVRXNRMEZCVlZBc1IwRkJRVUVzUTBGQlNUTkNMRU5CUVVGQkxFTkJRVUZCTEVOQlEyeENMRWRCUVVsQkxFTkJRVUZCTEVWQlFVdHJReXhQUVVGQlFTeEZRVUZCUVN4RFFVRlhTaXhQUVVGQlFTeERRVUZST1VJc1EwRkJRVUVzUTBGQlFVRXNRMEZCTlVJc1EwRk5RU3hKUVVwQkswSXNUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJSVWtzUTBGQlFTeEZRVUZXU2l4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeEhRVUZUVHl4UFFVRkJRU3hEUVVGVmJFTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYmtJNFFpeFBRVUZCUVN4RFFVRlJPVUlzUTBGQlFVRXNRMEZCUVVFc1JVRkRXamhDTEU5QlFVRkJMRU5CUVZFNVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZGWW10RExFOUJRVUZCTEVOQlFWVlFMRWRCUVVGQkxFTkJSRll6UWl4RFFVRkJRU3hEUVVGSlowTXNTMEZCUVVFc1EwRkJUVWNzVDBGQlFVRXNRMEZCVVVRc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZiRUpJTEU5QlFVRkJMRVZCUVVGQkxFTkJSVmNzUTBGQlFTeEZRVUZZUVN4UFFVRkJRU3hIUVVOQlJpeEpRVUZCUVN4RlFVRlJSU3hQUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUnpGQ0xFOUJRVTlHTEVsQlFVRkJMRU5CUVVGQkxFTkJSMWhQTEdOQlFVRkJMRU5CUVhWQ1F5eE5RVUZCUVN4RlFVRkJRU3hEUVVOdVFpeEhRVUZ4UWl4UlFVRkJMRVZCUVVFc1QwRkJWa0VzVFVGQlFVRXNRMEZCYjBJc1RVRkJUeXhGUVVGQkxFTkJSWFJETEVkQlFXTXNRMEZCUVN4SFFVUmtRU3hOUVVGQlFTeERRVUZUZWtNc1NVRkJRVUVzUTBGQlN6QkRMRWRCUVVGQkxFTkJRVWxETEZGQlFVRkJMRU5CUVZOR0xFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlEwVXNRMEZCUVN4RlFVRldRU3hOUVVGQlFTeERRVUZoTEUxQlFVOHNSVUZCUVN4RFFVbDJReXhKUVVoQkxFbEJRMGxITEZGQlFVRkJMRU5CUkVGRExFOUJRVUZCTEVOQlFWVXNRMEZCUVN4RFFVVldReXhQUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZEUnl4RFFVRkJMRVZCUVZaTUxFMUJRVUZCTEVWQlFVRkJMRU5CUlhORExFTkJRVUVzUlVGQlFTeERRVVI2UTBjc1VVRkJRVUVzUTBGQlYwZ3NUVUZCUVVFc1EwRkJVMGtzVDBGQlFVRXNSVUZEVURORExGRkJRVUZCTEVWQlFVRkJMRU5CUVZkeFF5eFBRVUZCUVN4RFFVRlJMRWRCUVVFc1EwRkJRU3hGUVVsb1EwVXNUVUZCUVVFc1EwRkJVMGNzVVVGQlFVRXNRMEZEVkVVc1QwRkJRVUVzUTBGQlVXcENMRWxCUVVGQkxFTkJRVXRuUWl4UFFVRkJRU3hEUVVGQlFTeEZRVXBVUVN4UFFVRkJRU3hGUVVGQlFTeERRVTFTTEU5QlFVOURMRTlCUVVGQkxFTkJRVUZCTEVOQlIxaERMRWRCUVVGQkxFTkJRVmxETEU5QlFVRkJMRVZCUVVGQkxFTkJRMUlzUjBGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTlF5eFBRVUZCUVN4RFFVRlJSaXhQUVVGQlFTeERRVUZCUVN4RFFVRlZMRTFCUVU4c1JVRkJRU3hEUVVOd1F5eEpRVUZKUml4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRFZrc3NZVUZCUVVFc1EwRkJaMElzUlVGQlFTeERRVU5vUW5KRUxFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVTmFMRWxCUVVzc1NVRkJTVEpETEUxQlFVRkJMRWxCUVZWUExFOUJRVUZCTEVOQlFWTXNRMEZEZUVJc1IwRkJjVUlzVVVGQlFTeEZRVUZCTEU5QlFWWlFMRTFCUVVGQkxFTkJRVzlDTEUxQlFVOHNSVUZCUVN4RFFVTjBRMHNzVDBGQlFVRXNRMEZCVVdwQ0xFbEJRVUZCTEVOQlFVdHNReXhKUVVGQlFTeERRVUZMTmtNc1kwRkJRVUVzUTBGQlpVTXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY2tOWExFbEJRVUZCTEVOQlEwRXNTVUZCU3l4SlFVRkpReXhOUVVGQlFTeEpRVUZWVUN4UFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVU4yUWl4SFFVRkJMRU5CUVhORExFTkJRVUVzUlVGQmJFTkxMR0ZCUVVGQkxFTkJRV05hTEU5QlFVRkJMRU5CUVZGakxFMUJRVUZCTEVOQlFVRkJMRU5CUVdVc1EwRkRja01zU1VGQlN5eEpRVUZKYWtRc1EwRkJRVUVzU1VGQlN6QkRMRTlCUVVGQkxFTkJRMVlzUjBGQlFTeERRVUV3UWl4RFFVRkJMRVZCUVhSQ01VTXNRMEZCUVVFc1EwRkJSVzFETEU5QlFVRkJMRU5CUVZGakxFMUJRVUZCTEVOQlFVRkJMRU5CUVdVc1UwRkJVMFFzU1VGQlFVRXNRMEZGTVVORUxHRkJRVUZCTEVOQlFXTjBRaXhKUVVGQlFTeERRVUZMZDBJc1RVRkJRVUVzUTBGQlFVRXNRMEZEYmtKMlJDeExRVUZCUVN4RlFVRlRkVVFzVFVGQlFVRXNRMEZIYWtJc1QwRkJUM1pFTEV0QlFVRkJMRU5CUVVGQkxFTkJSMWgzUkN4WlFVRkJRU3hEUVVGeFFtSXNUVUZCUVVFc1JVRkZha0pCTEUxQlFVRkJMRU5CUVVGQkxFTkJRV3RETEVOQlFVRXNSVUZCUVN4RFFVUnNRMEVzVFVGQlFVRXNRMEZCVTBFc1RVRkJRVUVzUTBGQlQzWkRMRkZCUVVGQkxFVkJRVUZCTEVWQlEwTnhReXhQUVVGQlFTeERRVUZSTEVkQlFVRXNRMEZCUVN4RFFVRmpSU3hOUVVGQlFTeERRVUZUUVN4TlFVRkJRU3hEUVVGUFl5eExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJSMlFzVFVGQlFVRXNRMEZCVDBZc1QwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVbHVSbWxDTEdGQlFVRkJMRU5CUVhOQ1ppeE5RVUZCUVN4RlFVVnNRa0VzVFVGQlFVRXNRMEZCUVVFc1EwRkJhME1zUTBGQlFTeEZRVUZCTEVOQlJHeERRU3hOUVVGQlFTeERRVUZUUVN4TlFVRkJRU3hEUVVGUGRrTXNVVUZCUVVFc1JVRkJRVUVzUlVGRFEzRkRMRTlCUVVGQkxFTkJRVkVzUjBGQlFTeERRVUZCTEVOQlFXTXNSMEZCUVN4RFFVRk5SU3hOUVVGQlFTeERRVUZQWXl4TFFVRkJRU3hEUVVGTlpDeE5RVUZCUVN4RFFVRlBSaXhQUVVGQlFTeERRVUZSTEVkQlFVRXNRMEZCUVN4RFFVRlBMRU5CUVVFc1EwRkJRU3hEUVVsd1JtdENMRlZCUVVGQkxFTkJRV3RDTEVOQlFVTm9RaXhOUVVGQlFTeERRVUZSYVVJc1NVRkJRVUVzUTBGQlRXcEVMRVZCUVVGQkxFZEJRM1JDYTBRc1ZVRkJRVUVzUTBGQlYyeENMRTFCUVVGQkxFTkJRVkZwUWl4SlFVRkJRU3hEUVVGQlFTeERRVUZOZUVRc1VVRkJRVUVzUTBGQlUwOHNSVUZCUVVFc1EwRkJRVUVzUTBGSE4wTlJMRWRCUVVGQkxFTkJRVmt5UXl4TFFVRkJRU3hGUVVGQlFTeERRVU5TTEVsQlFVa3pReXhIUVVGQlFTeERRVUZOTWtNc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZKYUVJc1QwRklRWFJGTEdsQ1FVRkJRU3hEUVVGaGRVVXNTVUZCUVVFc1EwRkJTMFFzUzBGQlFVRXNRMEZCVHpsRUxFdEJRVUZCTEVWQlFVRkJMRU5CUTJwQ2JVSXNSMEZCUVVFc1EwRkJUVzVDTEV0QlFVRkJMRWRCUVU5dFFpeEhRVUZCUVN4RFFVRk5ia0lzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGY0VKdFFpeEhRVUZCUVN4RFFVRkJRU3hEUVVkWVJDeEhRVUZCUVN4RFFVRlpORU1zUzBGQlFVRXNSVUZCUVVFc1EwRkRVaXhKUVVGSk0wTXNSMEZCUVVFc1EwRkJUVEpETEV0QlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJTV2hDTEU5QlNFRjBSU3hwUWtGQlFVRXNRMEZCWVhWRkxFbEJRVUZCTEVOQlFVdEVMRXRCUVVGQkxFTkJRVTg1UkN4TFFVRkJRU3hGUVVGQlFTeERRVU5xUW0xQ0xFZEJRVUZCTEVOQlFVMXVRaXhMUVVGQlFTeEhRVUZQYlVJc1IwRkJRVUVzUTBGQlRXNUNMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWEJDYlVJc1IwRkJRVUVzUTBGQlFVRXNRMEZIV0VNc1IwRkJRVUVzUTBGQldUQkRMRXRCUVVGQkxFVkJRVUZCTEVOQlJWSXNTVUZCU1RGRExFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVTldMRWxCUVVzc1NVRkJTV1FzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDNSQ3hMUVVGQlFTeERRVUZOZGtRc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN5eERRVU51UXl4SFFVRkpNRVFzUzBGQlFVRXNRMEZCVFRsRUxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTB5UkN4TFFVRkJRU3hEUVVGTmVFUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJUU3hEUVVNM1FtTXNSMEZCUVVFc1EwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlEwNHNTMEZCUVN4RFFVVktRU3hIUVVGQlFTeEZRVUZQTUVNc1MwRkJRVUVzUTBGQlRYaEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVZDBRaXhQUVVGUFl5eEhRVUZCUVN4RFFVRkJRU3hEUVVkWU5rTXNUMEZCUVVFc1EwRkJaMEpJTEV0QlFVRkJMRVZCUVVGQkxFTkJSVm9zU1VGQlNVY3NUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRMlFzU1VGQlN5eEpRVUZKTTBRc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWwzUkN4TFFVRkJRU3hEUVVGTmRrUXNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOdVF5eEhRVUZKTUVRc1MwRkJRVUVzUTBGQlRUbEVMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUweVJDeExRVUZCUVN4RFFVRk5lRVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFN4RFFVTTNRakpFTEU5QlFVRkJMRU5CUVVGQkxFTkJRVlVzUTBGQlFTeERRVU5XTEV0QlFVRXNRMEZGU2tFc1QwRkJRVUVzUlVGQlYwZ3NTMEZCUVVFc1EwRkJUWGhFTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0pDTEU5QlFVOHlSQ3hQUVVGQlFTeERRVUZCUVN4RFFVZFlReXhIUVVGQlFTeERRVUZYTEVOQlFVRXNSMEZCU1VNc1RVRkJRVUVzUjBGQlFVRXNRMEZEV0N4SlFVRkpReXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZWWml4UFFWUkJSQ3hOUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVRkhSU3hQUVVGQlFTeERRVUZSTEVOQlFVTnlSU3hMUVVGQlFTeERRVUZQYzBVc1VVRkJRVUVzUjBGQlFVRXNRMEZEZEVKSUxFMUJRVUZCTEVOQlFVOUZMRTlCUVVGQkxFTkJRVkVzUTBGQlExQXNTMEZCUVVFc1EwRkJUMU1zVVVGQlFVRXNSMEZCUVVFc1EwRkRia0lzUjBGQlowSXNRMEZCUVN4RlFVRmFRU3hSUVVGQlFTeERRVUZsTEVOQlEyWXNTVUZCU1M5Q0xFOUJRVUZCTEVOQlFWVlhMRXRCUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVZGVkxFdEJRVUZCTEVOQlFVRkJMRU5CUVZOQkxFdEJRVUZCTEVOQlFVMVJMRkZCUVVGQkxFTkJRVUZCTEVOQlFWbFNMRXRCUVVGQkxFTkJRM1pFT1VRc1MwRkJRVUVzUlVGQk1rSXNRMEZCUVN4RlFVRnNRbWRGTEV0QlFVRkJMRU5CUVUxNFFpeFBRVUZCUVN4RFFVRkJRU3hEUVVGdFFpeERRVUZCTEVOQlFVbEJMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSemxETkVJc1VVRkJRVUVzUTBGQlUzSkRMRWxCUVVGQkxFTkJRVXN2UWl4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWWWIwVXNVVUZCUVVFc1EwRkJRVUVzUTBGSFdFa3NSMEZCUVVFc1EwRkJWeXhEUVVGQkxFZEJRVWxNTEUxQlFVRkJMRWRCUVVGQkxFTkJRMWdzU1VGQlNVTXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJWV1lzVDBGVVFVUXNUVUZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVUVzUTBGQlIwVXNUMEZCUVVFc1EwRkJVU3hEUVVGRGNrVXNTMEZCUVVFc1EwRkJUM05GTEZGQlFVRkJMRWRCUVVGQkxFTkJRM1JDU0N4TlFVRkJRU3hEUVVGUFJTeFBRVUZCUVN4RFFVRlJMRU5CUVVOUUxFdEJRVUZCTEVOQlFVOVRMRkZCUVVGQkxFZEJRVUZCTEVOQlEyNUNMRWRCUVdkQ0xFTkJRVUVzUlVGQldrRXNVVUZCUVVFc1EwRkJaU3hEUVVObUxFbEJRVWt2UWl4UFFVRkJRU3hEUVVGVlZ5eExRVUZCUVN4RFFVRk5ReXhQUVVGQlFTeERRVUZSVlN4TFFVRkJRU3hEUVVGQlFTeERRVUZUUVN4TFFVRkJRU3hEUVVGTlVTeFJRVUZCUVN4RFFVRkJRU3hEUVVGWlVpeExRVUZCUVN4RFFVTjJSRGxFTEV0QlFVRkJMRVZCUVRKQ0xFTkJRVUVzUlVGQmJFSm5SU3hMUVVGQlFTeERRVUZOZUVJc1QwRkJRVUVzUTBGQlFVRXNRMEZCYlVJc1EwRkJRU3hEUVVGSlFTeFBRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVYzVRelJDTEZGQlFVRkJMRU5CUVZOeVF5eEpRVUZCUVN4RFFVRkxMMElzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGV0c5RkxGRkJRVUZCTEVOQlFVRkJMRU5CUjFoTExFZEJRVUZCTEVOQlFWY3NRMEZCUVN4SFFVRkpUaXhOUVVGQlFTeEhRVUZCUVN4RFFVTllMRWxCUVVsRExGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFWVm1MRTlCVkVGRUxFMUJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkJMRU5CUVVkRkxFOUJRVUZCTEVOQlFWRXNRMEZCUTNKRkxFdEJRVUZCTEVOQlFVOXpSU3hSUVVGQlFTeEhRVUZCUVN4RFFVTjBRa2dzVFVGQlFVRXNRMEZCVDBVc1QwRkJRVUVzUTBGQlVTeERRVUZEVUN4TFFVRkJRU3hEUVVGUFV5eFJRVUZCUVN4SFFVRkJRU3hEUVVOdVFpeEhRVUZuUWl4RFFVRkJMRVZCUVZwQkxGRkJRVUZCTEVOQlFXVXNRMEZEWml4SlFVRkpMMElzVDBGQlFVRXNRMEZCVlZjc1MwRkJRVUVzUTBGQlRVTXNUMEZCUVVFc1EwRkJVVlVzUzBGQlFVRXNRMEZCUVVFc1EwRkJVMEVzUzBGQlFVRXNRMEZCVFZFc1VVRkJRVUVzUTBGQlFVRXNRMEZCV1ZJc1MwRkJRVUVzUTBGRGRrUTVSQ3hMUVVGQlFTeEZRVUV5UWl4RFFVRkJMRVZCUVd4Q1owVXNTMEZCUVVFc1EwRkJUWGhDTEU5QlFVRkJMRU5CUVVGQkxFTkJRVzFDTEVOQlFVRXNRMEZCU1VFc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSE9VTTBRaXhSUVVGQlFTeERRVUZUY2tNc1NVRkJRVUVzUTBGQlN5OUNMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVmh2UlN4UlFVRkJRU3hEUVVGQlFTeERRVWRZVFN4TlFVRkJRU3hEUVVGakxFTkJRVUVzUjBGQlNWQXNUVUZCUVVFc1IwRkJRVUVzUTBGRFpDeEpRVUZKUXl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGVlppeFBRVlJCUkN4TlFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeERRVUZIUlN4UFFVRkJRU3hEUVVGUkxFTkJRVU55UlN4TFFVRkJRU3hEUVVGUGMwVXNVVUZCUVVFc1IwRkJRVUVzUTBGRGRFSklMRTFCUVVGQkxFTkJRVTlGTEU5QlFVRkJMRU5CUVZFc1EwRkJRMUFzUzBGQlFVRXNRMEZCVDFNc1VVRkJRVUVzUjBGQlFVRXNRMEZEYmtJc1IwRkJaMElzUTBGQlFTeEZRVUZhUVN4UlFVRkJRU3hEUVVGbExFTkJRMllzU1VGQlNTOUNMRTlCUVVGQkxFTkJRVlZYTEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRlZMRXRCUVVGQkxFTkJRVUZCTEVOQlFWTkJMRXRCUVVGQkxFTkJRVTFSTEZGQlFVRkJMRU5CUVVGQkxFTkJRVmxTTEV0QlFVRkJMRU5CUTNaRU9VUXNTMEZCUVVFc1JVRkJNa0lzUTBGQlFTeEZRVUZzUW1kRkxFdEJRVUZCTEVOQlFVMTRRaXhQUVVGQlFTeERRVUZCUVN4RFFVRnRRaXhEUVVGQkxFTkJRVWxCTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpsRE5FSXNVVUZCUVVFc1EwRkJVM0pETEVsQlFVRkJMRU5CUVVzdlFpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVlliMFVzVVVGQlFVRXNRMEZCUVVFc1EwRkhXSGhDTEVkQlFVRkJMRU5CUVZsclFpeExRVUZCUVN4RlFVTkVkRVVzYVVKQlFVRkJMRU5CUVdGMVJTeEpRVUZCUVN4RFFVRkxSQ3hMUVVGQlFTeERRVUZQT1VRc1MwRkJRVUVzUjBGRE5VSkJMRXRCUVVGQkxFTkJRWGRDTEVOQlFVRXNSVUZCYUVKblJTeExRVUZCUVN4RFFVRk5hRVVzUzBGQlFVRXNRMEZCUVVFc1EwRkJhVUlzUTBGQlFTeERRVUZKUVN4TFFVRkJRU3hEUVVNMVFrVXNTVUZCUVVFc1EwRkJTekJETEVkQlFVRkJMRU5CUVVrMVF5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsNFFpeFBRVUZQU0N4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiY29uc3QgTWF0aHNMaWJyYXJ5ID0gcmVxdWlyZSgnLi9NYXRoc0xpYnJhcnknKTtcclxuY29uc3QgT2JqZWN0c0xpYnJhcnkgPSByZXF1aXJlKCcuL09iamVjdHNMaWJyYXJ5Jyk7XHJcbmNvbnN0IEFycmF5TGlicmFyeSA9IHJlcXVpcmUoJy4vQXJyYXlMaWJyYXJ5Jyk7XHJcblxyXG5sZXQgbWF0aExpYnJhcnkgPSBNYXRoc0xpYnJhcnkoKTtcclxubGV0IG9iamVjdExpYnJhcnkgPSBPYmplY3RzTGlicmFyeSgpO1xyXG5sZXQgYXJyYXlMaWJyYXJ5ID0gQXJyYXlMaWJyYXJ5KCk7XHJcblxyXG4vLyBpbXBvcnQgeyBUcmVlIH0gZnJvbSAnLi4vY2xhc3Nlcy9UcmVlLmpzJztcclxuXHJcbmZ1bmN0aW9uIENvbXByZXNzaW9uKCkge1xyXG4gICAgY29uc3Qgc2VsZiA9IHt9O1xyXG5cclxuICAgIHNlbGYuZ2V0RnJlcXVlbmN5ID0gKGRhdGEgPSBbXSkgPT4gey8vZ2V0IHRoZSBvY2N1cnJhbmNlIG9mIHN5bWJvbHMgaW4gYSBsaXN0XHJcbiAgICAgICAgY29uc3QgZnJlcXVlbmN5ID0ge307XHJcbiAgICAgICAgZm9yIChsZXQgZCBpbiBkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChmcmVxdWVuY3lbZGF0YVtkXV0gPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBmcmVxdWVuY3lbZGF0YVtkXV0gPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZnJlcXVlbmN5W2RhdGFbZF1dKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmcmVxdWVuY3k7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5nZXRQcm9iYWJpbGl0aWVzID0gKGRhdGEgPSBbXSkgPT4gey8vZ2V0IHRoZSBwcm9iYWJpbGl0aWVzIG9mIGFsbCBzeW1ib2xzIGluIGEgbGlzdFxyXG4gICAgICAgIGxldCBwcm9icyA9IHNlbGYuZ2V0RnJlcXVlbmN5KGRhdGEpO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpIGluIHByb2JzKSB7XHJcbiAgICAgICAgICAgIHByb2JzW2ldID0gcHJvYnNbaV0gLyBkYXRhLmxlbmd0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHByb2JzO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZW50cm9weSA9IChkYXRhID0gW10pID0+IHsvL3RoaXMgc2hvd3MgdGhlIHNob3J0ZXN0IHBvc3NpYmxlIGF2ZXJhZ2UgbGVuZ3RoIG9mIGEgbG9zc2xlc3MgY29tcHJlc3Npb25cclxuICAgICAgICBsZXQgc3VtID0gMDtcclxuICAgICAgICBsZXQgZGF0YVR5cGUgPSBhcnJheUxpYnJhcnkuZGF0YVR5cGUoZGF0YSk7Ly9nZXQgdGhlIGRhdGF0eXBlIG9mIHRoZSBsaXN0XHJcbiAgICAgICAgbGV0IHByb2JhYmlsaXRpZXM7XHJcbiAgICAgICAgaWYgKGRhdGFUeXBlID09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgIHByb2JhYmlsaXRpZXMgPSBkYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChkYXRhVHlwZSA9PSAnc3RyaW5nJykgey8vZ2V0IHRoZSBzeW1ib2xzIHByb2JhYmlsaXRpZXNcclxuICAgICAgICAgICAgcHJvYmFiaWxpdGllcyA9IE9iamVjdC52YWx1ZXMoc2VsZi5nZXRQcm9iYWJpbGl0aWVzKGRhdGEpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vU3VtIG9mICgtcCBsb2cgYmFzZSAyIG9mIHApXHJcbiAgICAgICAgZm9yIChsZXQgcHJvYiBvZiBwcm9iYWJpbGl0aWVzKSB7XHJcbiAgICAgICAgICAgIHN1bSArPSAoLXByb2IgKiBNYXRoLmxvZzIocHJvYikpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHN1bTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmlzVURDID0gKGRhdGEgPSBbXSkgPT4gey8vY2hlY2sgaWYgYSBsaXN0IGlzIHVuaXF1ZWx5IGRlY29kYWJsZSBjb2RlXHJcbiAgICAgICAgbGV0IGZsYWcgPSB0cnVlLCBub1ByZWZpeCwga2VlcFJ1bm5pbmcgPSB0cnVlO1xyXG5cclxuICAgICAgICBsZXQgYWRkU3VyZml4ID0gKHN0cikgPT4ge1xyXG4gICAgICAgICAgICAvL2NoZWNrIGlmIHN1ZmZpeCBpcyBpbiBsaXN0IGFscmVhZHkgdGhlbiBzdG9wIHJ1bm5pbmdcclxuICAgICAgICAgICAgaWYgKGRhdGEuaW5jbHVkZXMoc3RyKSkge1xyXG4gICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAga2VlcFJ1bm5pbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZGF0YS5wdXNoKHN0cik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgY2hlY2tQcmVmaXggPSAocG9zKSA9PiB7Ly9jaGVjayBmb3IgcHJlZml4XHJcbiAgICAgICAgICAgIG5vUHJlZml4ID0gdHJ1ZTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaSA9PSBwb3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL3NraXAgdGhlIGN1cnJlbnQgcG9zaXRpb25cclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGFbaV0gPT0gZGF0YVtwb3NdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9kb3VibGUgZm91bmQgaW4gdGhlIGxpc3RcclxuICAgICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAga2VlcFJ1bm5pbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGFbaV0uaW5kZXhPZihkYXRhW3Bvc10pID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAvL2FkZCBzdWZmaXggZm91bmQgdG8gdGhlIGxpc3RcclxuICAgICAgICAgICAgICAgICAgICBhZGRTdXJmaXgoZGF0YVtpXS5yZXBsYWNlKGRhdGFbcG9zXSwgJycpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvL3N0b3AgY2hlY2tpbmcgZm9yIHByZWZpeFxyXG4gICAgICAgICAgICAgICAgaWYgKCFrZWVwUnVubmluZykgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHdoaWxlIChrZWVwUnVubmluZykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGNoZWNrUHJlZml4KGkpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGtlZXBSdW5uaW5nID09IGZhbHNlKSBicmVhazsvL3N0b3AgcnVubmluZ1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAobm9QcmVmaXggPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgLy9pZiBubyBwcmVmaXggaXMgZm91bmQgc3RvcCBpdCBpcyBVRENcclxuICAgICAgICAgICAgICAgIGtlZXBSdW5uaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmbGFnO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuc2ZBbGdvcml0aG0gPSAoZGF0YSA9IFtdKSA9PiB7XHJcbiAgICAgICAgbGV0IGZyZXF1ZW5jeSA9IHNlbGYuZ2V0RnJlcXVlbmN5KGRhdGEpOy8vZ2V0IHRoZSBmcmVxdWVjaWVzIG9mIHRoZSBzeW1ib2xzXHJcbiAgICAgICAgbGV0IHNvcnRlZCA9IG9iamVjdExpYnJhcnkuc29ydChmcmVxdWVuY3ksIHsgdmFsdWU6IHRydWUgfSk7Ly9zb3J0IHRoZSBzeW1ib2xzIGJhc2VkIG9uIGZyZXF1ZWN5IG9mIG9jY3VycmFuY2VcclxuICAgICAgICBsZXQgY29kZVdvcmQgPSAnJztcclxuXHJcbiAgICAgICAgbGV0IHRyZWUgPSB7IHBhdGg6ICcnLCBzaXplOiBtYXRoTGlicmFyeS5zdW0oT2JqZWN0LnZhbHVlcyhzb3J0ZWQpKSwgdmFsdWU6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc29ydGVkKSkgfTsvL3NldCBhIGNvcHkgb2YgdGhlIHNvcnRlZCBkYXRhIGFzIGEgdHJlZVxyXG4gICAgICAgIGxldCB0YWJsZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc29ydGVkKSk7Ly9zZXQgdGhlIHNvcnRlZCBhcyB0YWJsZVxyXG5cclxuICAgICAgICBmb3IgKGxldCBpIGluIHRhYmxlKSB7XHJcbiAgICAgICAgICAgIHRhYmxlW2ldID0geyBmcmVxdWVuY3k6IHRhYmxlW2ldIH07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdHJ5U3dpdGNoaW5nID0gKG5vZGUpID0+IHsvL3N3aXRjaCBub2RlcyBpZiB0aGUgbGVmdCBzaXplIGlzIGJpZ2dlciB0aGFuIHRoZSByaWdodCBzaWRlXHJcbiAgICAgICAgICAgIGlmIChub2RlWzBdLnNpemUgPiBub2RlWzFdLnNpemUpIHtcclxuICAgICAgICAgICAgICAgIGxldCB0ZW1wID0gbm9kZVswXTtcclxuICAgICAgICAgICAgICAgIG5vZGVbMF0gPSBub2RlWzFdO1xyXG4gICAgICAgICAgICAgICAgbm9kZVsxXSA9IHRlbXA7XHJcblxyXG4gICAgICAgICAgICAgICAgdGVtcCA9IG5vZGVbMF0ucGF0aDtcclxuICAgICAgICAgICAgICAgIG5vZGVbMF0ucGF0aCA9IG5vZGVbMV0ucGF0aFxyXG4gICAgICAgICAgICAgICAgbm9kZVsxXS5wYXRoID0gdGVtcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBzcGxpdERhdGEgPSAoY29taW5nTm9kZSkgPT4gey8vc3BsaXQgYSB0cmVlXHJcbiAgICAgICAgICAgIGxldCBub2RlID0gW3sgcGF0aDogY29taW5nTm9kZS5wYXRoICsgJzAnLCBzaXplOiAwLCB2YWx1ZTogW10gfSwgeyBwYXRoOiBjb21pbmdOb2RlLnBhdGggKyAnMScsIHNpemU6IDAsIHZhbHVlOiBbXSB9XTsvL2ludG8gdHdvIGFsbW9zdCBlcXVhbCBsZW5ndGhcclxuICAgICAgICAgICAgZm9yIChsZXQgaSBpbiBjb21pbmdOb2RlLnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAobm9kZVswXS5zaXplIDwgbm9kZVsxXS5zaXplKSB7Ly9zcGxpdCBpbnRvIDIgYWxtb3N0IGVxdWFsIG5vZGVzXHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZVswXS52YWx1ZVtpXSA9IGNvbWluZ05vZGUudmFsdWVbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZVswXS5zaXplICs9IGNvbWluZ05vZGUudmFsdWVbaV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBub2RlWzFdLnZhbHVlW2ldID0gY29taW5nTm9kZS52YWx1ZVtpXTtcclxuICAgICAgICAgICAgICAgICAgICBub2RlWzFdLnNpemUgKz0gY29taW5nTm9kZS52YWx1ZVtpXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbm9kZSA9IHRyeVN3aXRjaGluZyhub2RlKTtcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgaW4gbm9kZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMobm9kZVtpXS52YWx1ZSkubGVuZ3RoID4gMSkgey8vaWYgaXQgaGFzIG1vcmUgdGhhbiAxIHN5bWJvbCBpdCdzIGEgbm9kZSB0aGVuIHNwbGl0IGl0IGFnYWluXHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZVtpXS52YWx1ZSA9IHNwbGl0RGF0YShub2RlW2ldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Ugey8vaXQgaXMgYSBsZWFmLCBhZGQgaXQgdG8gdGhlIHRhYmxlIGFuZCBnZXQgdGhlIHByb3BlcnRpZXNcclxuICAgICAgICAgICAgICAgICAgICBsZXQga2V5ID0gT2JqZWN0LmtleXMobm9kZVtpXS52YWx1ZSlbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgdGFibGVba2V5XS5jb2RlID0gbm9kZVtpXS5wYXRoO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlW2tleV0ubGVuZ3RoID0gbm9kZVtpXS5wYXRoLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICB0YWJsZVtrZXldLnByb2JhYmlsaXR5ID0gbm9kZVtpXS5zaXplIC8gZGF0YS5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFibGVba2V5XS5sb2cgPSBNYXRoLmxvZzIoMSAvIHRhYmxlW2tleV0ucHJvYmFiaWxpdHkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBub2RlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdHJlZSA9IHNwbGl0RGF0YSh0cmVlKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgZCBvZiBkYXRhKSB7XHJcbiAgICAgICAgICAgIGNvZGVXb3JkICs9IHRhYmxlW2RdLmNvZGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4geyBjb2RlV29yZCwgdGFibGUsIGRhdGEsIHRyZWUgfTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmh1ZmZtYW5Db2RpbmcgPSAoZGF0YSA9IFtdKSA9PiB7XHJcbiAgICAgICAgbGV0IGZyZXF1ZW5jeSA9IHNlbGYuZ2V0UHJvYmFiaWxpdGllcyhkYXRhKTsvL2dldCB0aGUgZnJlcXVlY2llcyBvZiB0aGUgc3ltYm9sc1xyXG4gICAgICAgIGxldCBzb3J0ZWQgPSBvYmplY3RMaWJyYXJ5LnNvcnQoZnJlcXVlbmN5LCB7IHZhbHVlOiB0cnVlIH0pOy8vc29ydCB0aGUgc3ltYm9scyBiYXNlZCBvbiBmcmVxdWVjeSBvZiBvY2N1cnJhbmNlXHJcblxyXG4gICAgICAgIGxldCB0cmVlID0gW107XHJcbiAgICAgICAgbGV0IHRhYmxlID0ge307XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgaW4gc29ydGVkKSB7Ly9pbml0IHRoZSB0YWJsZSBhbmQgdGhlIHRyZWVcclxuICAgICAgICAgICAgdGFibGVbaV0gPSB7IHByb2JhYmlsaXR5OiBzb3J0ZWRbaV0sIHBhdGg6ICcnLCBsZW5ndGg6IDAsIHByb2Q6IDAgfTtcclxuICAgICAgICAgICAgdHJlZS5wdXNoKHsgdmFsdWU6IHNvcnRlZFtpXSwgb3JpZ2luczogaSB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBkaWcgPSAoY29taW5nID0gW10pID0+IHsvL3J1biB0aGUgYWxnb3JpdGhtIGxvb3AgdW50aWwgb25lIG5vZGUgaXMgcmVtYWluaW5nIHdpdGggdmFsdWUgb2YgJzEnXHJcbiAgICAgICAgICAgIGxldCBsZW5ndGggPSBjb21pbmcubGVuZ3RoOy8vc2l6ZSBvZiBsaXN0IFxyXG4gICAgICAgICAgICBsZXQgbm9kZSA9IFtdOy8vaW5pdCBub2RlXHJcbiAgICAgICAgICAgIGlmIChsZW5ndGggPiAxKSB7Ly8gbGlzdCBoYXMgbW9yZSB0aGFuIG9uZSBub2RlP1xyXG4gICAgICAgICAgICAgICAgbGV0IGRvd24gPSBsZW5ndGggLSAxOy8vaW5kZXggb2YgbGFzdCB0d28gaXRlbXMgaW4gbGlzdFxyXG4gICAgICAgICAgICAgICAgbGV0IHVwID0gbGVuZ3RoIC0gMjtcclxuICAgICAgICAgICAgICAgIGxldCBzdW0gPSBjb21pbmdbdXBdLnZhbHVlICsgY29taW5nW2Rvd25dLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgbGV0IGFkZGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbWluZy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpID09IHVwIHx8IGkgPT0gZG93bikgey8vc3VtIGxhc3QgMiBpdGVtcyBhbmQgc2tpcCBhZGRpbmcgdGhlbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobGVuZ3RoID09IDIpIHsvL2lmIGxhc3QgMiBzdW0gdGhlbSBhbmQgZXhpc3QgZGlnZ2luZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0xlYWYgPSB7IHZhbHVlOiBzdW0sIG9yaWdpbnM6IFtjb21pbmdbdXBdLm9yaWdpbnMsIGNvbWluZ1tkb3duXS5vcmlnaW5zXSB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wdXNoKG5ld0xlYWYpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNvbWluZ1tpXS52YWx1ZSA8PSBzdW0gJiYgIWFkZGVkKSB7Ly9hZGQgc3VtIGlmIGl0IGhhcyBub3QgYmVlbiBhZGRlZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmV3TGVhZiA9IHsgdmFsdWU6IHN1bSwgb3JpZ2luczogW2NvbWluZ1t1cF0ub3JpZ2lucywgY29taW5nW2Rvd25dLm9yaWdpbnNdIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucHVzaChuZXdMZWFmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5wdXNoKGNvbWluZ1tpXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGxlbmd0aCA+IDIpIHtcclxuICAgICAgICAgICAgICAgICAgICBub2RlID0gZGlnKG5vZGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRyZWUgPSBkaWcodHJlZSk7XHJcblxyXG4gICAgICAgIC8vZ2V0IHRoZSBwYXRoL2NvZGV3b3JkIGZvcmVhY2ggc3ltYm9sXHJcbiAgICAgICAgbGV0IG5hbWVJdGVtcyA9IChvcmlnaW5zLCBwYXRoKSA9PiB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgaW4gb3JpZ2lucykge1xyXG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkob3JpZ2luc1tpXSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lSXRlbXMob3JpZ2luc1tpXSwgcGF0aCArIGkpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0YWJsZVtvcmlnaW5zW2ldXS5wYXRoID0gcGF0aCArIGk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFibGVbb3JpZ2luc1tpXV0ubGVuZ3RoID0gcGF0aC5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFibGVbb3JpZ2luc1tpXV0ucHJvZCA9IHBhdGgubGVuZ3RoICogdGFibGVbb3JpZ2luc1tpXV0ucHJvYmFiaWxpdHk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5hbWVJdGVtcyh0cmVlWzBdLm9yaWdpbnMsICcnKTtcclxuXHJcbiAgICAgICAgLy9jYWxjdWxhdGUgdGhlIGF2ZXZhZ2UgbGVuZ3RoIG9mIHRoZSBjb2Rlc1xyXG4gICAgICAgIGxldCBhdmdMZW5ndGggPSBtYXRoTGlicmFyeS5zdW0ob2JqZWN0TGlicmFyeS52YWx1ZU9mT2JqZWN0QXJyYXkodGFibGUsICdwcm9kJykpO1xyXG5cclxuICAgICAgICBmcmVxdWVuY3kgPSBzb3J0ZWQgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgcmV0dXJuIHsgdGFibGUsIGRhdGEsIGF2Z0xlbmd0aCwgdHJlZSB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHNlbGYuZW5jb2RlSHVmZm1hbiA9IChkYXRhLCBkaWN0aW9uYXJ5ID0gW10pID0+IHtcclxuICAgIC8vICAgICBsZXQgZGljdGlvbmFyeUxlbmd0aCA9IGRpY3Rpb25hcnkubGVuZ3RoO1xyXG4gICAgLy8gICAgIGxldCBjb2RlV29yZCA9ICcnLCBueXRDb2RlLCBjb2RlO1xyXG5cclxuICAgIC8vICAgICAvL2dldCB0aGUgZSBhbmQgciBwYXJhbWV0ZXJzXHJcbiAgICAvLyAgICAgbGV0IHsgZSwgciB9ID0gKCgpID0+IHtcclxuICAgIC8vICAgICAgICAgbGV0IG9rID0gZmFsc2U7XHJcbiAgICAvLyAgICAgICAgIGxldCBlID0gMCwgcjtcclxuICAgIC8vICAgICAgICAgd2hpbGUgKCFvaykge1xyXG4gICAgLy8gICAgICAgICAgICAgZSsrO1xyXG4gICAgLy8gICAgICAgICAgICAgciA9IGRpY3Rpb25hcnlMZW5ndGggLSAyICoqIGU7XHJcbiAgICAvLyAgICAgICAgICAgICBvayA9IHIgPCAyICoqIGU7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgcmV0dXJuIHsgZSwgciB9O1xyXG4gICAgLy8gICAgIH0pKCk7XHJcblxyXG4gICAgLy8gICAgIGxldCBmaXhlZENvZGUgPSAoc3ltYm9sKSA9PiB7Ly9nZXQgdGhlIGZpeGVkIGNvZGVcclxuICAgIC8vICAgICAgICAgbGV0IGsgPSBkaWN0aW9uYXJ5LmluZGV4T2Yoc3ltYm9sKSArIDE7XHJcbiAgICAvLyAgICAgICAgIGxldCBjb2RlO1xyXG4gICAgLy8gICAgICAgICBpZiAoayA8PSAyICogcikgeyAvLyAxIDw9IGsgPD0gMnJcclxuICAgIC8vICAgICAgICAgICAgIGNvZGUgPSAoayAtIDEpLnRvU3RyaW5nKDIpO1xyXG4gICAgLy8gICAgICAgICAgICAgY29kZSA9IEFycmF5KChlICsgMSkgLSBjb2RlLmxlbmd0aCkuZmlsbCgwKS5qb2luKCcnKSArIGNvZGU7IC8vIGUgKyAxIHJlcHJlc2VudGF0aW9uIG9mIGsgLSAxXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgZWxzZSBpZiAoayA+IDIgKiByKSB7Ly9rID4gMnJcclxuICAgIC8vICAgICAgICAgICAgIGNvZGUgPSAoayAtIHIgLSAxKS50b1N0cmluZygyKTtcclxuICAgIC8vICAgICAgICAgICAgIGNvZGUgPSBBcnJheSgoZSkgLSBjb2RlLmxlbmd0aCkuZmlsbCgwKS5qb2luKCcnKSArIGNvZGU7Ly8gZSByZXByZXNlbnRhdGlvbiBvZiBrIC0gciAtIDFcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICByZXR1cm4gY29kZTtcclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gICAgIGxldCB1cGRhdGVDb3VudCA9ICh0KSA9PiB7Ly9zZXQgdGhlIGNvdW50IG9mIGEgbm9kZSBhbmQgc3dpdGNoIGlmIGxlZnQgaXMgZ3JlYXRlciB0aGFuIHJpZ2h0XHJcbiAgICAvLyAgICAgICAgIGxldCBjb3VudCA9IHQuZ2V0QXR0cmlidXRlKCdjb3VudCcpO1xyXG4gICAgLy8gICAgICAgICBjb3VudCsrO1xyXG4gICAgLy8gICAgICAgICB0LnNldEF0dHJpYnV0ZXMoeyBjb3VudCB9KTtcclxuICAgIC8vICAgICAgICAgbGV0IHAgPSB0LnBhcmVudFRyZWU7XHJcbiAgICAvLyAgICAgICAgIGlmIChwICE9IG51bGwpIHtcclxuICAgIC8vICAgICAgICAgICAgIHRyeVN3aXRjaGluZyhwKTtcclxuICAgIC8vICAgICAgICAgICAgIHVwZGF0ZUNvdW50KHApO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgfVxyXG5cclxuICAgIC8vICAgICBsZXQgdHJ5U3dpdGNoaW5nID0gKG5vZGUpID0+IHsvL3N3aXRjaCBpZiBsZWZ0IGlzIGdyZWF0ZXIgdGhhbiByaWdodFxyXG4gICAgLy8gICAgICAgICBpZiAobm9kZS52YWx1ZXNbMF0uZ2V0QXR0cmlidXRlKCdjb3VudCcpID4gbm9kZS52YWx1ZXNbMV0uZ2V0QXR0cmlidXRlKCdjb3VudCcpKSB7XHJcbiAgICAvLyAgICAgICAgICAgICBub2RlLnJldmVyc2UoKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH07XHJcblxyXG4gICAgLy8gICAgIGxldCB0cmVlID0gbmV3IFRyZWUoKTtcclxuICAgIC8vICAgICB0cmVlLnNldEF0dHJpYnV0ZSgnY291bnQnLCAwKTtcclxuICAgIC8vICAgICBsZXQgTllUID0gdHJlZTtcclxuXHJcbiAgICAvLyAgICAgbGV0IHJlYWRTeW1ib2wgPSAoc3ltYm9sKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGxldCBzID0gdHJlZS5zZWFyY2goKHYsIGkpID0+IHsvL3NlYXJjaCBhbmQgZ2V0IHN5bWJvbCBub2RlIGlmIGFkZGVkIGFscmVhZHlcclxuICAgIC8vICAgICAgICAgICAgIHJldHVybiB2LmdldEF0dHJpYnV0ZSgnaWQnKSA9PSBzeW1ib2w7XHJcbiAgICAvLyAgICAgICAgIH0sIHRyZWUuaGVpZ2h0KTtcclxuXHJcbiAgICAvLyAgICAgICAgIGxldCB2ID0gcy52YWx1ZTtcclxuICAgIC8vICAgICAgICAgbnl0Q29kZSA9IHRyZWUuc2VhcmNoKCh2LCBpKSA9PiB7Ly9nZXQgdGhlIG55dCBub2RlXHJcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gdi5nZXRBdHRyaWJ1dGUoJ2lkJykgPT0gJ255dCc7XHJcbiAgICAvLyAgICAgICAgIH0sIHRyZWUuaGVpZ2h0KS5wYXRoLmpvaW4oJycpO1xyXG5cclxuICAgIC8vICAgICAgICAgaWYgKHYgPT0gdW5kZWZpbmVkKSB7Ly9oYXMgbm90IGJlZW4gYWRkZWRcclxuICAgIC8vICAgICAgICAgICAgIE5ZVC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7Ly9yZW1vdmUgdGhlIGN1cnJlbnQgTllUIHRhZ1xyXG4gICAgLy8gICAgICAgICAgICAgTllULnB1c2goW10sIFtdKTsvL2FkZCB0aGUgMiBub2Rlc1xyXG4gICAgLy8gICAgICAgICAgICAgbGV0IHRlbXAgPSBOWVQudmFsdWVzWzBdO1xyXG4gICAgLy8gICAgICAgICAgICAgdiA9IE5ZVC52YWx1ZXNbMV07XHJcblxyXG4gICAgLy8gICAgICAgICAgICAgdGVtcC5zZXRBdHRyaWJ1dGVzKHsgaWQ6ICdueXQnLCBjb3VudDogMCB9KTsvL3NldCBuZXcgbnl0XHJcbiAgICAvLyAgICAgICAgICAgICB2LnNldEF0dHJpYnV0ZXMoeyBpZDogc3ltYm9sLCBjb3VudDogMCB9KTtcclxuICAgIC8vICAgICAgICAgICAgIE5ZVCA9IHRlbXA7XHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gbnl0Q29kZSArIGZpeGVkQ29kZShzeW1ib2wpOy8vbnl0ICsgZml4ZWRDb2RlXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgZWxzZSB7XHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gcy5wYXRoLmpvaW4oJycpOy8vZ2V0IHBhdGhcclxuICAgIC8vICAgICAgICAgfVxyXG5cclxuICAgIC8vICAgICAgICAgY29kZVdvcmQgKz0gY29kZTsvL2NvbmNhdCB0aGUgY29kZVxyXG5cclxuICAgIC8vICAgICAgICAgdXBkYXRlQ291bnQodik7Ly91cGRhdGUgdGhlIGNvdW50IHN0YXJ0aW5nIGZyb20gdGhpcyBub2RlIHRvIHRoZSByb290XHJcbiAgICAvLyAgICAgfVxyXG5cclxuICAgIC8vICAgICBmb3IgKGxldCBzeW1ib2wgb2YgZGF0YSkge1xyXG4gICAgLy8gICAgICAgICByZWFkU3ltYm9sKHN5bWJvbCk7XHJcbiAgICAvLyAgICAgfVxyXG5cclxuICAgIC8vICAgICByZXR1cm4geyBjb2RlV29yZCwgdHJlZSwgZGF0YSB9O1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIHNlbGYuZGVjb2RlSHVmZm1hbiA9IChjb2RlV29yZCwgZGljdGlvbmFyeSA9IFtdKSA9PiB7XHJcbiAgICAvLyAgICAgbGV0IGRpY3Rpb25hcnlMZW5ndGggPSBkaWN0aW9uYXJ5Lmxlbmd0aDtcclxuICAgIC8vICAgICBsZXQgZGF0YSA9ICcnLCBueXRDb2RlLCBjb2RlLCBwYXRoID0gW107XHJcbiAgICAvLyAgICAgbGV0IHRyZWUgPSBuZXcgVHJlZSgpO1xyXG4gICAgLy8gICAgIHRyZWUuc2V0QXR0cmlidXRlcyh7IGNvdW50OiAwLCBpZDogJ255dCcgfSk7XHJcbiAgICAvLyAgICAgbGV0IE5ZVCA9IHRyZWU7XHJcbiAgICAvLyAgICAgbGV0IGk7XHJcbiAgICAvLyAgICAgbGV0IHsgZSwgciB9ID0gKCgpID0+IHtcclxuICAgIC8vICAgICAgICAgbGV0IG9rID0gZmFsc2U7XHJcbiAgICAvLyAgICAgICAgIGxldCBlID0gMCwgcjtcclxuICAgIC8vICAgICAgICAgd2hpbGUgKCFvaykge1xyXG4gICAgLy8gICAgICAgICAgICAgZSsrO1xyXG4gICAgLy8gICAgICAgICAgICAgciA9IGRpY3Rpb25hcnlMZW5ndGggLSAyICoqIGU7XHJcbiAgICAvLyAgICAgICAgICAgICBvayA9IHIgPCAyICoqIGU7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgcmV0dXJuIHsgZSwgciB9O1xyXG4gICAgLy8gICAgIH0pKCk7XHJcblxyXG4gICAgLy8gICAgIGxldCB0cnlTd2l0Y2hpbmcgPSAobm9kZSkgPT4gey8vc3dpdGNoIG5vZGVzIGlmIGxlZnQgc2lkZSBpcyBncmVhdGVyIHRoYW4gcmlnaHQgc2lkZVxyXG4gICAgLy8gICAgICAgICBpZiAobm9kZS52YWx1ZXNbMF0uZ2V0QXR0cmlidXRlKCdjb3VudCcpID4gbm9kZS52YWx1ZXNbMV0uZ2V0QXR0cmlidXRlKCdjb3VudCcpKSB7XHJcbiAgICAvLyAgICAgICAgICAgICBub2RlLnJldmVyc2UoKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH07XHJcblxyXG4gICAgLy8gICAgIGxldCB1cGRhdGVDb3VudCA9ICh0KSA9PiB7Ly91cGRhdGUgdGhlIHNpemUgb2YgdGhlIGN1cnJlbnQgbm9kZSBhbmQgaXQncyBuZXh0IHBhcmVudFxyXG4gICAgLy8gICAgICAgICBsZXQgY291bnQgPSB0LmdldEF0dHJpYnV0ZSgnY291bnQnKTtcclxuICAgIC8vICAgICAgICAgY291bnQrKztcclxuICAgIC8vICAgICAgICAgdC5zZXRBdHRyaWJ1dGVzKHsgY291bnQgfSk7XHJcbiAgICAvLyAgICAgICAgIGxldCBwID0gdC5wYXJlbnRUcmVlO1xyXG4gICAgLy8gICAgICAgICBpZiAocCAhPSBudWxsKSB7XHJcbiAgICAvLyAgICAgICAgICAgICB0cnlTd2l0Y2hpbmcocCk7XHJcbiAgICAvLyAgICAgICAgICAgICB1cGRhdGVDb3VudChwKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgbGV0IHJlYWRTeW1ib2wgPSAoc3ltYm9sKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGxldCBzID0gdHJlZS5zZWFyY2goKHYpID0+IHtcclxuICAgIC8vICAgICAgICAgICAgIHJldHVybiB2LmdldEF0dHJpYnV0ZSgnaWQnKSA9PSBzeW1ib2w7Ly9zZWFyY2ggYW5kIGdldCBzeW1ib2wgaWYgZXhpc3RzIGFscmVhZHlcclxuICAgIC8vICAgICAgICAgfSwgdHJlZS5oZWlnaHQpO1xyXG5cclxuICAgIC8vICAgICAgICAgbGV0IHYgPSBzLnZhbHVlO1xyXG4gICAgLy8gICAgICAgICBueXRDb2RlID0gdHJlZS5zZWFyY2goKHYsIGkpID0+IHtcclxuICAgIC8vICAgICAgICAgICAgIHJldHVybiB2LmdldEF0dHJpYnV0ZSgnaWQnKSA9PSAnbnl0JzsvL2dldCB0aGUgTllUIGNvZGVcclxuICAgIC8vICAgICAgICAgfSwgdHJlZS5oZWlnaHQpLnBhdGguam9pbignJyk7XHJcblxyXG4gICAgLy8gICAgICAgICBpZiAodiA9PSB1bmRlZmluZWQpIHsvL25ldyBzeW1ib2w/IGFkZCBpdCB0byB0aGUgdHJlZSB3aXRoIG5ldyBOWVRcclxuICAgIC8vICAgICAgICAgICAgIE5ZVC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XHJcbiAgICAvLyAgICAgICAgICAgICBOWVQucHVzaChbXSwgW10pO1xyXG4gICAgLy8gICAgICAgICAgICAgbGV0IHRlbXAgPSBOWVQudmFsdWVzWzBdO1xyXG4gICAgLy8gICAgICAgICAgICAgdiA9IE5ZVC52YWx1ZXNbMV07XHJcblxyXG4gICAgLy8gICAgICAgICAgICAgdGVtcC5zZXRBdHRyaWJ1dGVzKHsgaWQ6ICdueXQnLCBjb3VudDogMCB9KTtcclxuICAgIC8vICAgICAgICAgICAgIHYuc2V0QXR0cmlidXRlcyh7IGlkOiBzeW1ib2wsIGNvdW50OiAwIH0pO1xyXG4gICAgLy8gICAgICAgICAgICAgTllUID0gdGVtcDtcclxuICAgIC8vICAgICAgICAgfVxyXG5cclxuICAgIC8vICAgICAgICAgdXBkYXRlQ291bnQodik7XHJcbiAgICAvLyAgICAgfVxyXG5cclxuICAgIC8vICAgICBsZXQgaW50ZXJwcmV0ZSA9IChub2RlKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGxldCBjb2RlO1xyXG4gICAgLy8gICAgICAgICBpZiAobm9kZSA9PSBOWVQpIHsvL2lzIG5vZGUgTllUXHJcbiAgICAvLyAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGU7IGorKykgey8vcmVhZCBuZXh0IDQgY29kZXNcclxuICAgIC8vICAgICAgICAgICAgICAgICBwYXRoLnB1c2goY29kZVdvcmRbKytpXSk7XHJcbiAgICAvLyAgICAgICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgICAgICBsZXQgcCA9IHBhcnNlSW50KHBhdGguam9pbignJyksIDIpO1xyXG4gICAgLy8gICAgICAgICAgICAgaWYgKHAgPCByKSB7Ly9wIGlzIG1vcmUgdGhhbiByLCByZWFkIDEgbW9yZVxyXG4gICAgLy8gICAgICAgICAgICAgICAgIHBhdGgucHVzaChjb2RlV29yZFsrK2ldKTtcclxuICAgIC8vICAgICAgICAgICAgICAgICBwID0gcGFyc2VJbnQocGF0aC5qb2luKCcnKSwgMik7XHJcbiAgICAvLyAgICAgICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBwICs9IHI7Ly9hZGQgciB0byBwXHJcbiAgICAvLyAgICAgICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gZGljdGlvbmFyeVtwXTsvL2dldCBzeW1ib2wgZnJvbSBkaWN0aW9uYXJ5XHJcbiAgICAvLyAgICAgICAgICAgICByZWFkU3ltYm9sKGNvZGUpOy8vYWRkIHRoaXMgc3ltYm9sIHRvIHRyZWVcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgICAgIGNvZGUgPSBub2RlLmdldEF0dHJpYnV0ZSgnaWQnKTsvL2dldCB0aGUgc3ltYm9sIGZyb20gdGhlIHRyZWVcclxuICAgIC8vICAgICAgICAgICAgIHJlYWRTeW1ib2woY29kZSk7Ly91cGRhdGUgdGhlIHN5bWJvbFxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIHJldHVybiBjb2RlO1xyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgZm9yIChpID0gLTE7IGkgPCBjb2RlV29yZC5sZW5ndGg7IGkrKykgey8vc3RhcnQgd2l0aCBlbXB0eSBOWVRcclxuICAgIC8vICAgICAgICAgbGV0IGNvZGUgPSBjb2RlV29yZFtpXTtcclxuICAgIC8vICAgICAgICAgaWYgKGNvZGUgIT0gdW5kZWZpbmVkKSB7Ly93aGVuIG5vdCBlbXB0eVxyXG4gICAgLy8gICAgICAgICAgICAgcGF0aC5wdXNoKGNvZGUpO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIGxldCBub2RlID0gdHJlZS50cmFjZShwYXRoKS52YWx1ZTtcclxuICAgIC8vICAgICAgICAgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKCdpZCcpICE9IHVuZGVmaW5lZCkgey8vaXMgbm9kZSBsYWJlbGxlZFxyXG4gICAgLy8gICAgICAgICAgICAgcGF0aCA9IFtpdGVtXTtcclxuICAgIC8vICAgICAgICAgICAgIGRhdGEgKz0gaW50ZXJwcmV0ZShub2RlKTsvL3doYXQgaXMgdGhpcyBub2RlXHJcbiAgICAvLyAgICAgICAgICAgICBwYXRoID0gW107XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gICAgIHJldHVybiB7IGRhdGEsIHRyZWUsIGNvZGVXb3JkIH07XHJcbiAgICAvLyB9XHJcblxyXG4gICAgc2VsZi5nb2xvbWIgPSAobiwgbSkgPT4ge1xyXG4gICAgICAgIGxldCBxID0gTWF0aC5mbG9vcihuIC8gbSk7Ly9zdGVwIDFcclxuICAgICAgICBsZXQgdW5hcnkgPSBBcnJheShxKS5maWxsKDEpLmpvaW4oJycpICsgJzAnOy8vdW5hcnkgb2YgcVxyXG5cclxuICAgICAgICBsZXQgayA9IE1hdGguY2VpbChNYXRoLmxvZzIobSkpO1xyXG4gICAgICAgIGxldCBjID0gMiAqKiBrIC0gbTtcclxuICAgICAgICBsZXQgciA9IG4gJSBtO1xyXG4gICAgICAgIGxldCByQyA9ICgoKSA9PiB7Ly9yYFxyXG4gICAgICAgICAgICBsZXQgdmFsdWUgPSByLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgIGlmIChyIDwgYykge1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSByLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IEFycmF5KChrIC0gMSkgLSB2YWx1ZS5sZW5ndGgpLmZpbGwoMCkuam9pbignJykgKyB2YWx1ZTsvL2stMSBiaXRzIHJlcCBvZiByXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IChyICsgYykudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gQXJyYXkoayAtIHZhbHVlLmxlbmd0aCkuZmlsbCgwKS5qb2luKCcnKSArIHZhbHVlOy8vayBiaXRzIHJlcCBvZiByK2NcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfSkoKTtcclxuXHJcbiAgICAgICAgbGV0IGNvZGUgPSB1bmFyeSArIHJDOy8vY29uY2F0IHVuYXJ5IGFuZCByJ1xyXG4gICAgICAgIHJldHVybiBjb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZW5jb2RlQXJpdGhtZXRpYyA9IChkYXRhLCBwcm9iYWJpbGl0aWVzKSA9PiB7XHJcbiAgICAgICAgbGV0IGdldFggPSAobikgPT4gey8vZih4KG4pKT0gc3VtIG9mIHgoMSkgLi4uLiB4KG4pXHJcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IDA7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgaW4gcHJvYmFiaWxpdGllcykge1xyXG4gICAgICAgICAgICAgICAgaWYgKG4gPT0gaSkgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9ICh2YWx1ZSAvIDEwICsgcHJvYmFiaWxpdGllc1tpXSAvIDEwKSAqIDEwMCAvIDEwOy8vaGFuZGxlIHRoZSBKUyBkZWNpbWFsIHByb2JsZW1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBsKDApID0gMCwgdSgwKSA9IDAsIGZ4KDApID0gMFxyXG4gICAgICAgIGxldCBib3VuZHMgPSBbeyBsOiAwLCB1OiAxIH1dO1xyXG5cclxuICAgICAgICBsZXQgbG93ZXJOID0gKG4pID0+IHsvL2xvd2VyIGxpbWl0IG9mIG4gbChuKSA9IGwobi0xKSArICh1KG4tMSkgLSBsKG4tMSkpICogZih4KG4tMSkpXHJcbiAgICAgICAgICAgIGxldCBib3VuZCA9IGJvdW5kc1tuXTtcclxuICAgICAgICAgICAgbGV0IGwgPSBib3VuZC5sICsgKChib3VuZC51IC0gYm91bmQubCkgKiBnZXRYKGRhdGFbbl0gLSAxKSk7XHJcbiAgICAgICAgICAgIHJldHVybiBsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHVwcGVyTiA9IChuKSA9PiB7Ly9sb3dlciBsaW1pdCBvZiBuIHUobikgPSBsKG4tMSkgKyAodShuLTEpIC0gbChuLTEpKSAqIGYoeChuKSlcclxuICAgICAgICAgICAgbGV0IGJvdW5kID0gYm91bmRzW25dO1xyXG4gICAgICAgICAgICBsZXQgdSA9IGJvdW5kLmwgKyAoKGJvdW5kLnUgLSBib3VuZC5sKSAqIGdldFgoZGF0YVtuXSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gdTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBib3VuZHMucHVzaCh7IGw6IGxvd2VyTihpKSwgdTogdXBwZXJOKGkpIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IG4gPSBib3VuZHMucG9wKCk7XHJcbiAgICAgICAgcmV0dXJuIChuLmwgKyBuLnUpIC8gMjtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmRlY29kZUFyaXRobWV0aWMgPSAodGFnID0gMCwgcHJvYmFiaWxpdGllcykgPT4ge1xyXG4gICAgICAgIGxldCBkYXRhID0gJyc7XHJcbiAgICAgICAgbGV0IGdldFggPSAobikgPT4gey8vZih4KG4pKT0gc3VtIG9mIHgoMSkgLi4uLiB4KG4pXHJcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IDA7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgaW4gcHJvYmFiaWxpdGllcykge1xyXG4gICAgICAgICAgICAgICAgaWYgKG4gPT0gaSkgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9ICh2YWx1ZSAvIDEwICsgcHJvYmFiaWxpdGllc1tpXSAvIDEwKSAqIDEwMCAvIDEwOy8vaGFuZGxlIHRoZSBKUyBkZWNpbWFsIHByb2JsZW1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBsKDApID0gMCwgdSgwKSA9IDAsIGZ4KDApID0gMFxyXG4gICAgICAgIGxldCBib3VuZHMgPSBbeyBsOiAwLCB1OiAxIH1dO1xyXG5cclxuICAgICAgICBsZXQgbG93ZXJOID0gKG4pID0+IHsvL2xvd2VyIGxpbWl0IG9mIG4gbChuKSA9IGwobi0xKSArICh1KG4tMSkgLSBsKG4tMSkpICogZih4KG4tMSkpXHJcbiAgICAgICAgICAgIGxldCBib3VuZCA9IGJvdW5kc1tuXTtcclxuICAgICAgICAgICAgbGV0IGwgPSBib3VuZC5sICsgKChib3VuZC51IC0gYm91bmQubCkgKiBnZXRYKGRhdGFbbl0gLSAxKSk7XHJcbiAgICAgICAgICAgIHJldHVybiBsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHVwcGVyTiA9IChuKSA9PiB7Ly9sb3dlciBsaW1pdCBvZiBuIHUobikgPSBsKG4tMSkgKyAodShuLTEpIC0gbChuLTEpKSAqIGYoeChuKSlcclxuICAgICAgICAgICAgbGV0IGJvdW5kID0gYm91bmRzW25dO1xyXG4gICAgICAgICAgICBsZXQgdSA9IGJvdW5kLmwgKyAoKGJvdW5kLnUgLSBib3VuZC5sKSAqIGdldFgoZGF0YVtuXSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gdTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBjb3VudCA9IDAsIGNvbXBsZXRlID0gZmFsc2U7XHJcblxyXG4gICAgICAgIHdoaWxlICghY29tcGxldGUpIHsvL3J1biB1bnRpbCBhbGwgdGhlIGNvZGVzIGFyZSBmb3VuZFxyXG4gICAgICAgICAgICBsZXQgZm91bmQgPSBmYWxzZSwgeCA9IDEsIG4gPSB7fTtcclxuXHJcbiAgICAgICAgICAgIHdoaWxlICghZm91bmQpIHsvLyBmb3IgZWFjaCBuZXcgY29kZVxyXG4gICAgICAgICAgICAgICAgbGV0IGwgPSBsb3dlck4oY291bnQsIHgpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHUgPSB1cHBlck4oY291bnQsIHgpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlID0gKGwgPj0gdGFnICYmIHRhZyA8PSB1KTtcclxuICAgICAgICAgICAgICAgIGlmIChjb21wbGV0ZSkgYnJlYWs7Ly9pZiBhbGwgaXMgZm91bmQgc3RvcCBydW5uaW5nXHJcblxyXG4gICAgICAgICAgICAgICAgZm91bmQgPSAobCA8IHRhZyAmJiB0YWcgPCB1KTsvL2NoZWNrIGlmIGl0IHNhY3Rpc2ZpZXMgdGhlIGNvbmRpdGlvbnNcclxuICAgICAgICAgICAgICAgIG4gPSB7IGwsIHUsIHggfTtcclxuICAgICAgICAgICAgICAgIHgrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY29tcGxldGUpIGJyZWFrO1xyXG4gICAgICAgICAgICBjb3VudCsrO1xyXG5cclxuICAgICAgICAgICAgYm91bmRzLnB1c2gobik7Ly9hZGQgY29kZVxyXG4gICAgICAgICAgICBkYXRhICs9IG4ueDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5lbmNvZGVEaWFncmFtID0gKGRhdGEgPSAnJywgZGljdGlvbmFyeSA9IHt9KSA9PiB7Ly9kYWlncmFtIGNvZGluZ1xyXG4gICAgICAgIGxldCBpO1xyXG4gICAgICAgIGxldCBjb2RlV29yZCA9ICcnO1xyXG4gICAgICAgIGxldCBlbmNvZGUgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBmaXJzdCA9IGRhdGFbaV07Ly90YWtlIHR3byBhdCBhIHRpbWVcclxuICAgICAgICAgICAgbGV0IHNlY29uZCA9IGRhdGFbaSArIDFdO1xyXG4gICAgICAgICAgICBsZXQgc3ltYm9sID0gZmlyc3QgKyBzZWNvbmQ7XHJcblxyXG4gICAgICAgICAgICBsZXQgY29kZTtcclxuICAgICAgICAgICAgaWYgKGRpY3Rpb25hcnlbc3ltYm9sXSAhPSB1bmRlZmluZWQpIHsvL2lzIHN5bWJvbCBpbiBkaWN0aW9uYXJ5XHJcbiAgICAgICAgICAgICAgICBjb2RlID0gZGljdGlvbmFyeVtzeW1ib2xdO1xyXG4gICAgICAgICAgICAgICAgaSsrOy8vc2V0IGNvdW50IHRvIGtub3cgaXQgcmVhZCB0d29cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvZGUgPSBkaWN0aW9uYXJ5W2ZpcnN0XTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGNvZGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb2RlV29yZCArPSBlbmNvZGUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBjb2RlV29yZDtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmVuY29kZUxaMSA9IChkYXRhID0gJycsIHBhcmFtcyA9IHsgd2luZG93U2l6ZTogMCwgc2VhcmNoU2l6ZTogMCwgbG9va0FoZWFkU2l6ZTogMCB9KSA9PiB7Ly9MWjcvL0xaMS8vU2xpZGluZyB3aW5kb3dcclxuICAgICAgICBpZiAocGFyYW1zLndpbmRvd1NpemUgPT0gdW5kZWZpbmVkKSBwYXJhbXMud2luZG93U2l6ZSA9IHBhcmFtcy5zZWFyY2hTaXplICsgcGFyYW1zLmxvb2tBaGVhZFNpemU7Ly9pbml0IHRoZSB3aW5kb3csIHNlYXJjaCBhbmQgbG9va2FoZWFkIHNpemVzXHJcbiAgICAgICAgaWYgKHBhcmFtcy5zZWFyY2hTaXplID09IHVuZGVmaW5lZCkgcGFyYW1zLnNlYXJjaFNpemUgPSBwYXJhbXMud2luZG93U2l6ZSAtIHBhcmFtcy5sb29rQWhlYWRTaXplO1xyXG4gICAgICAgIGlmIChwYXJhbXMubG9va0FoZWFkU2l6ZSA9PSB1bmRlZmluZWQpIHBhcmFtcy5sb29rQWhlYWRTaXplID0gcGFyYW1zLndpbmRvd1NpemUgLSBwYXJhbXMuc2VhcmNoU2l6ZTtcclxuXHJcblxyXG4gICAgICAgIGxldCBpID0gMCwgbG9va0FoZWFkU3RvcCwgc2VhcmNoU3RvcCwgbG9va0FoZWFkQnVmZmVyLCBzZWFyY2hCdWZmZXI7Ly9pbml0IHRoZSBidWZmZXJzIGFuZCBsb2NhdGlvbnNcclxuXHJcbiAgICAgICAgbGV0IGdldFRyaXBsZXQgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCB4ID0gbG9va0FoZWFkQnVmZmVyWzBdO1xyXG4gICAgICAgICAgICBsZXQgcGlja2VkID0geyBvOiAwLCBsOiAwLCBjOiB4IH07Ly9zZXQgdGhlIHRyaXBsZXQgPG8sIGwsIGMobik+XHJcblxyXG4gICAgICAgICAgICBpZiAoc2VhcmNoQnVmZmVyLmluY2x1ZGVzKHgpKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZm91bmRNYXRjaGVzID0gW107Ly9zdG9yYWdlIGZvciB0aGUgbWF0Y2hlc1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSBpbiBzZWFyY2hCdWZmZXIpIHsvL2ZpbmQgYWxsIHRoZSBtYXRjaGVzIGluIHNlYXJjaCBidWZmZXJcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VhcmNoQnVmZmVyW2ldID09IHBpY2tlZC5jKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaW5kZXhJbkRhdGEgPSArc2VhcmNoU3RvcCArICtpLC8vdGhpcyBpcyB0aGUgam9pbnQgb2YgdGhlIHNlYXJjaCBhbmQgbG9va0FoZWFkIGJ1ZmZlcnNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4SW5Mb29rQWhlYWQgPSAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQgPSAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hpbmcgPSB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hlZCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAobWF0Y2hpbmcpIHsvL2tlZXAgZ2V0dGluZyB0aGUgbWF0Y2hlc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hlZC5wdXNoKGRhdGFbaW5kZXhJbkRhdGFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaGluZyA9IGxvb2tBaGVhZEJ1ZmZlcltpbmRleEluTG9va0FoZWFkICsgY291bnRdID09PSBkYXRhW2luZGV4SW5EYXRhICsgY291bnRdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kTWF0Y2hlcy5wdXNoKHsgbzogc2VhcmNoQnVmZmVyLmxlbmd0aCAtIGksIGw6IG1hdGNoZWQubGVuZ3RoLCBjOiBsb29rQWhlYWRCdWZmZXJbbWF0Y2hlZC5sZW5ndGhdIH0pOy8vc2F2ZSBtYXRjaGVzXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHBpY2tlZCA9IGZvdW5kTWF0Y2hlc1swXTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IHkgb2YgZm91bmRNYXRjaGVzKSB7Ly9nZXQgdGhlIG1hdGNoIHdpdGggbW9zdCBzaXplIGFuZCBjbG9zZXN0IHRvIHRoZSBsb29rQWhlYWQgYnVmZmVyXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBpY2tlZC5sIDwgeS5sKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBpY2tlZCA9IHk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBpY2tlZC5sID09IHkubCAmJiBwaWNrZWQubyA+IHkubykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwaWNrZWQgPSB5O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaSArPSBwaWNrZWQubDtcclxuICAgICAgICAgICAgcmV0dXJuIHBpY2tlZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBsaXN0ID0gW107XHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgc2VhcmNoU3RvcCA9IGkgLSBwYXJhbXMuc2VhcmNoU2l6ZTtcclxuICAgICAgICAgICAgaWYgKHNlYXJjaFN0b3AgPCAwKSBzZWFyY2hTdG9wID0gMDtcclxuICAgICAgICAgICAgbG9va0FoZWFkU3RvcCA9IGkgKyBwYXJhbXMubG9va0FoZWFkU2l6ZTtcclxuICAgICAgICAgICAgc2VhcmNoQnVmZmVyID0gZGF0YS5zbGljZShzZWFyY2hTdG9wLCBpKS5zcGxpdCgnJyk7XHJcbiAgICAgICAgICAgIGxvb2tBaGVhZEJ1ZmZlciA9IGRhdGEuc2xpY2UoaSwgbG9va0FoZWFkU3RvcCkuc3BsaXQoJycpO1xyXG4gICAgICAgICAgICBsaXN0LnB1c2goZ2V0VHJpcGxldCgpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBsaXN0O1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZGVjb2RlTFoxID0gKHRyaXBsZXRzID0gW3sgbzogMCwgbDogMCwgYzogJycgfV0sIHBhcmFtcyA9IHsgd2luZG93U2l6ZTogMCwgc2VhcmNoU2l6ZTogMCwgbG9va0FoZWFkU2l6ZTogMCB9KSA9PiB7XHJcbiAgICAgICAgbGV0IHdvcmQgPSAnJztcclxuXHJcbiAgICAgICAgaWYgKHBhcmFtcy53aW5kb3dTaXplID09IHVuZGVmaW5lZCkgcGFyYW1zLndpbmRvd1NpemUgPSBwYXJhbXMuc2VhcmNoU2l6ZSArIHBhcmFtcy5sb29rQWhlYWRTaXplOy8vaW5pdCB0aGUgd2luZG93LCBzZWFyY2ggYW5kIGxvb2thaGVhZCBzaXplc1xyXG4gICAgICAgIGlmIChwYXJhbXMuc2VhcmNoU2l6ZSA9PSB1bmRlZmluZWQpIHBhcmFtcy5zZWFyY2hTaXplID0gcGFyYW1zLndpbmRvd1NpemUgLSBwYXJhbXMubG9va0FoZWFkU2l6ZTtcclxuICAgICAgICBpZiAocGFyYW1zLmxvb2tBaGVhZFNpemUgPT0gdW5kZWZpbmVkKSBwYXJhbXMubG9va0FoZWFkU2l6ZSA9IHBhcmFtcy53aW5kb3dTaXplIC0gcGFyYW1zLnNlYXJjaFNpemU7XHJcblxyXG4gICAgICAgIGZvciAobGV0IHQgb2YgdHJpcGxldHMpIHsvL2RlY29kZSBlYWNoIHRyaXBsZXRcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0Lmw7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgd29yZCArPSAod29yZFt3b3JkLmxlbmd0aCAtIHQub10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHdvcmQgKz0gKHQuYyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gd29yZDtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmVuY29kZUxaMiA9IChkYXRhID0gJycpID0+IHsvL0xaOC8vTFoyXHJcbiAgICAgICAgbGV0IGR1cGxldHMgPSBbXTsvL2luaXQgZHVwbGV0IGxpc3RcclxuICAgICAgICBsZXQgZW50cmllcyA9IFtdOy8vaW5pdCBkaWN0aW9uYXJ5XHJcbiAgICAgICAgbGV0IGksIGxhc3RJbmRleDtcclxuXHJcbiAgICAgICAgbGV0IGdldFJhbmdlID0gKHJhbmdlKSA9PiB7Ly9nZXQgdGhlIHN5bWJvbHMgd2l0aGluIHRoZSByYW5nZVxyXG4gICAgICAgICAgICBsZXQgdmFsdWUgPSAnJztcclxuICAgICAgICAgICAgZm9yIChsZXQgciBvZiByYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgKz0gZGF0YVtyXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgZW5jb2RlID0gKHJhbmdlKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlID0gZ2V0UmFuZ2UocmFuZ2UpOy8vZ2V0IHRoZSB2YWx1ZSBvZiB0aGUgcmFuZ2VcclxuICAgICAgICAgICAgbGV0IGluZGV4ID0gZW50cmllcy5pbmRleE9mKGUpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGQgPSB7IGk6IGxhc3RJbmRleCwgYzogZVtlLmxlbmd0aCAtIDFdIH07Ly9jcmVhdGUgZHVwbGV0XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAtMSkgey8vY3VycmVudCBncm91cCBvZiBzeW1ib2xzIGlzIGluIG5vdCBpbiB0aGUgZGljdGlvbmFyeVxyXG4gICAgICAgICAgICAgICAgZW50cmllcy5wdXNoKGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmFuZ2UucHVzaCgrK2kpO1xyXG4gICAgICAgICAgICAgICAgbGFzdEluZGV4ID0gaW5kZXggKyAxO1xyXG4gICAgICAgICAgICAgICAgZCA9IGVuY29kZShyYW5nZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGFzdEluZGV4ID0gMDtcclxuICAgICAgICAgICAgZHVwbGV0cy5wdXNoKGVuY29kZShbaV0pKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBkdXBsZXRzO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZGVjb2RlTFoyID0gKGR1cGxldHMgPSBbeyBpOiAwLCBjOiAnJyB9XSkgPT4ge1xyXG4gICAgICAgIGxldCBlbnRyaWVzID0gW107Ly9pbml0IGRpY3Rpb25hcnlcclxuICAgICAgICBsZXQgYztcclxuXHJcbiAgICAgICAgZm9yIChsZXQgZCBvZiBkdXBsZXRzKSB7Ly9kZWNvZGUgZWFjaCBkdXBsZXRcclxuICAgICAgICAgICAgYyA9ICcnO1xyXG4gICAgICAgICAgICBpZiAoZC5pICE9IDApIHtcclxuICAgICAgICAgICAgICAgIGMgPSBlbnRyaWVzW2QuaSAtIDFdOy8vZ2V0IHRoZSBjb2RlIGZyb20gdGhlIGRpY3Rpb25hcnlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjICs9IGQuYztcclxuICAgICAgICAgICAgZW50cmllcy5wdXNoKGMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGVudHJpZXMuam9pbignJyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5lbmNvZGVMWlcgPSAoZGF0YSA9ICcnLCBpbml0RGljdGlvbmFyeSA9IFtdKSA9PiB7XHJcbiAgICAgICAgbGV0IGNvZGVXb3JkID0gW10sIGxhc3RJbmRleCwgaTtcclxuICAgICAgICBsZXQgZW50cmllcyA9IEFycmF5LmZyb20oaW5pdERpY3Rpb25hcnkpO1xyXG5cclxuICAgICAgICBsZXQgZ2V0UmFuZ2UgPSAocmFuZ2UpID0+IHsvLyBnZXQgdGhlIHZhbHVlcyB3aXRoaW4gdGhlIHJhbmdlXHJcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICBmb3IgKGxldCByIG9mIHJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSArPSBkYXRhW3JdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBlbmNvZGUgPSAocmFuZ2UpID0+IHtcclxuICAgICAgICAgICAgbGV0IGUgPSBnZXRSYW5nZShyYW5nZSk7XHJcbiAgICAgICAgICAgIGxldCBpbmRleCA9IGVudHJpZXMuaW5kZXhPZihlKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ID09IC0xKSB7Ly9pcyB2YWx1ZSBub3QgaW4gZGljdGlvbmFyeT9cclxuICAgICAgICAgICAgICAgIGVudHJpZXMucHVzaChlKTsvL2FkZCBpdCBhbmQgc2V0IHRoZSBjb3VudGVyIHRvIHRoZSBsYXN0IHJlYWQgc3ltYm9sXHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IDA7XHJcbiAgICAgICAgICAgICAgICBpLS07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpKys7Ly9zZXQgdGhlIGNvdW50ZXIgdG8gdGhlIG5leHQgc3ltYm9sIGFuZCB0cnkgZW5jb2RpbmcgdGhlIHJhbmdlXHJcbiAgICAgICAgICAgICAgICByYW5nZS5wdXNoKGkpO1xyXG4gICAgICAgICAgICAgICAgbGFzdEluZGV4ID0gaW5kZXggKz0gMTsvL3NldCB0aGUgbGFzdCByZWFkIGluZGV4LCB0aGlzIGlzIHRoZSBjb2RlXHJcbiAgICAgICAgICAgICAgICBlID0gZW5jb2RlKHJhbmdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gbGFzdEluZGV4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGFzdEluZGV4ID0gMDtcclxuICAgICAgICAgICAgbGV0IGNvZGUgPSBlbmNvZGUoW2ldKTtcclxuICAgICAgICAgICAgaWYgKGNvZGUgIT0gdW5kZWZpbmVkKSB7Ly9jb2RlIHdhcyBjcmVhdGVkXHJcbiAgICAgICAgICAgICAgICBjb2RlV29yZC5wdXNoKGNvZGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY29kZVdvcmQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5kZWNvZGVMWlcgPSAoc2luZ2xldG9uID0gW10sIGluaXREaWN0aW9uYXJ5ID0gW10pID0+IHtcclxuICAgICAgICBsZXQgd29yZCA9ICcnLCBjb2RlV29yZCA9IFtdLCBzdGF0ZSwgY291bnQgPSAwLCByZWJ1aWxkID0gZmFsc2UsIGJ1aWxkV2l0aCA9ICcnLCBpLCBzdGFydCA9IDA7XHJcbiAgICAgICAgbGV0IGVudHJpZXMgPSBBcnJheS5mcm9tKGluaXREaWN0aW9uYXJ5KTtcclxuXHJcbiAgICAgICAgbGV0IGdldENvZGUgPSAocmFuZ2UpID0+IHsvL2dldCB0aGUgY29kZSB3aXRoaW4gdGhlIHJhbmdlXHJcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICBjb3VudCA9IDA7XHJcbiAgICAgICAgICAgIGJ1aWxkV2l0aCA9ICcnO1xyXG4gICAgICAgICAgICBmb3IgKGxldCByIG9mIHJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAod29yZFtyXSA9PSB1bmRlZmluZWQpIHsvL2l0IGlzIG5vdCBjb21wbGV0ZVxyXG4gICAgICAgICAgICAgICAgICAgIGNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVidWlsZCA9IHRydWU7Ly9zZXQgdG8gcmVidWlsZFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnVpbGRXaXRoICs9IHdvcmRbcl07Ly9zZXQgdG8gcmVidWlsZCB3aXRoIGluY2FzZSBvZiBub3QgY29tcGxldGVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhbHVlICs9IHdvcmRbcl07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGRlY29kZSA9IChyYW5nZSA9IFtdKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlID0gZ2V0Q29kZShyYW5nZSk7XHJcbiAgICAgICAgICAgIGxldCBpbmRleCA9IGVudHJpZXMuaW5kZXhPZihlKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ID09IC0xKSB7Ly9pcyBub3QgaW4gZGljdGlvbmFyeT9cclxuICAgICAgICAgICAgICAgIGVudHJpZXMucHVzaChlKTtcclxuICAgICAgICAgICAgICAgIGktLTsvL3NldCB0aGUgY291bnRlciB0byB0aGUgbGFzdCBzeW1ib2wgcmVhZFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgKytpO1xyXG4gICAgICAgICAgICAgICAgcmFuZ2UucHVzaChpKTtcclxuICAgICAgICAgICAgICAgIGRlY29kZShyYW5nZSk7Ly9hZGQgbmV4dCBzeW1ib2wgYW5kIGRlY29kZSBhZ2FpblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGJ1aWxkID0gKHN0YXRlKSA9PiB7Ly9idWlsZCB1cCB0aGUgZGljdGlvbmFyeSBmcm9tIHRoZSBkZWNvZGVkIHZhbHVlc1xyXG4gICAgICAgICAgICBmb3IgKGkgPSBzdGFydDsgaSA8IHdvcmQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBlID0gZGVjb2RlKFtpXSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZW50cmllcy5sZW5ndGggPT0gc3RhdGUpIHsvL3N0b3AgYXQgdGhlIGN1cnJlbnQgZGVjb2RpbmcgcG9pbnRcclxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IGkgKyAxIC0gY291bnQ7Ly9zZXQgbmV4dCBzdGFydGluZyBwb2ludCBhdCB0aGUgY3VycmVudCBzdG9wXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAobGV0IHMgb2Ygc2luZ2xldG9uKSB7XHJcbiAgICAgICAgICAgIGxldCBlID0gZW50cmllc1tzIC0gMV07XHJcbiAgICAgICAgICAgIGlmIChlID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgYnVpbGQocyk7Ly9idWlsZCB0aGUgZGljdGlvbmFyeVxyXG4gICAgICAgICAgICAgICAgZSA9IGVudHJpZXNbcyAtIDFdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb2RlV29yZC5wdXNoKGUpO1xyXG4gICAgICAgICAgICB3b3JkID0gY29kZVdvcmQuam9pbignJyk7XHJcblxyXG4gICAgICAgICAgICBpZiAocmVidWlsZCkgey8vcmVidWlsZCB0aGUgbGFzdCBlbnRyeSBpbiB0aGUgZGljdGlvbmFyeSBcclxuICAgICAgICAgICAgICAgIHJlYnVpbGQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykgey8va2VlcCBhZGQgaXRlbXMgdG8gdGhlIGJ1aWxkd2l0aCB0byB0aGUgYnVpbGR3aXRoIHVudGlsIGl0IGlzIGNvbXBsZXRlXHJcbiAgICAgICAgICAgICAgICAgICAgYnVpbGRXaXRoICs9IGJ1aWxkV2l0aFtpXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvZGVXb3JkLnBvcCgpOy8vc2V0IGxhc3QgYnVpbHQgYW5kIGxhc3QgZGVjb2RlZCB0byB0aGUgbmV3IGJ1aWxkXHJcbiAgICAgICAgICAgICAgICBjb2RlV29yZC5wdXNoKGJ1aWxkV2l0aCk7XHJcbiAgICAgICAgICAgICAgICBlbnRyaWVzLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgZW50cmllcy5wdXNoKGJ1aWxkV2l0aCk7XHJcbiAgICAgICAgICAgICAgICBzdGFydCArPSBjb3VudDsvL3NldCB0aGUgbmV4dCBidWlsZCBzdGFydGluZyBwb2ludFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gd29yZDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc2VsZjtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb21wcmVzc2lvbjtcclxuIiwiLyogcmVtb3ZlZDogY29uc3QgXyRDb21wcmVzc2lvbl8xMj1yZXF1aXJlKFwiLi9mdW5jdGlvbnMvQ29tcHJlc3Npb25cIik7ICovO2NsYXNzIF9fRW1wdHlfMTZ7fXZhciBfJGJhc2VfMTY9e0Jhc2U6Y2xhc3MgZXh0ZW5kcyBfJENvbXBvbmVudHNfM3tjb25zdHJ1Y3Rvcih0aGVXaW5kb3c9X19FbXB0eV8xNil7c3VwZXIodGhlV2luZG93KSx0aGlzLmNvbG9ySGFuZGxlcj1uZXcgXyRDb2xvclBpY2tlcl8yLHRoaXMuYXJyYXk9XyRBcnJheUxpYnJhcnlfMTEoKSx0aGlzLm9iamVjdD1fJE9iamVjdHNMaWJyYXJ5XzE0KCksdGhpcy5tYXRoPV8kTWF0aHNMaWJyYXJ5XzEzKCksdGhpcy5hbmFseXRpY3M9XyRBbmFseXNpc0xpYnJhcnlfMTAoKSx0aGlzLmljb25zPV8kSWNvbnNfMSx0aGlzLnN0eWxlcz1bXCJodHRwczovL2thZGUtOTUuZ2l0aHViLmlvL2tlcmR4L2Nzcy90YWJsZS5jc3NcIixcImh0dHBzOi8va2FkZS05NS5naXRodWIuaW8va2VyZHgvY3NzL2NlbGwuY3NzXCIsXCJodHRwczovL2thZGUtOTUuZ2l0aHViLmlvL2tlcmR4L2Nzcy9mb3JtLmNzc1wiLFwiaHR0cHM6Ly9rYWRlLTk1LmdpdGh1Yi5pby9rZXJkeC9jc3MvcGlja2VyLmNzc1wiLFwiaHR0cHM6Ly9rYWRlLTk1LmdpdGh1Yi5pby9rZXJkeC9jc3Mvc2VsZWN0LmNzc1wiLFwiaHR0cHM6Ly9rYWRlLTk1LmdpdGh1Yi5pby9rZXJkeC9jc3MvanNvbi5jc3NcIixcImh0dHBzOi8va2FkZS05NS5naXRodWIuaW8va2VyZHgvY3NzL3BvcHVwLmNzc1wiXTtmb3IobGV0IHN0eWxlIG9mIHRoaXMuc3R5bGVzKXRoaXMubG9hZENzcyhzdHlsZSl9fSxDb2xvclBpY2tlcjpfJENvbG9yUGlja2VyXzIsUGVyaW9kOl8kUGVyaW9kXzgsTWF0cml4Ol8kTWF0cml4XzYsRnVuYzpfJEZ1bmNfNCxDb21wb25lbnRzOl8kQ29tcG9uZW50c18zLFRlbXBsYXRlOl8kVGVtcGxhdGVfOSxOZXVyYWxOZXR3b3JrOl8kTmV1cmFsTmV0d29ya183LEljb25zOl8kSWNvbnNfMSxTaGFkb3c6XyRTaGFkb3dfMTUsQXJyYXlMaWJyYXJ5Ol8kQXJyYXlMaWJyYXJ5XzExLE9iamVjdHNMaWJyYXJ5Ol8kT2JqZWN0c0xpYnJhcnlfMTQsTWF0aHNMaWJyYXJ5Ol8kTWF0aHNMaWJyYXJ5XzEzLEFuYWx5c2lzTGlicmFyeTpfJEFuYWx5c2lzTGlicmFyeV8xMCxDb21wcmVzc2lvbjpfJENvbXByZXNzaW9uXzEyfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdVpHVjRMbXB6SWwwc0ltNWhiV1Z6SWpwYklrVnRjSFI1SWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0lrSmhjMlVpTENKRGIyMXdiMjVsYm5Seklpd2lXMjlpYW1WamRDQlBZbXBsWTNSZElpd2lkR2hsVjJsdVpHOTNJaXdpYzNWd1pYSWlMQ0owYUdseklpd2lZMjlzYjNKSVlXNWtiR1Z5SWl3aVEyOXNiM0pRYVdOclpYSWlMQ0poY25KaGVTSXNJa0Z5Y21GNVRHbGljbUZ5ZVNJc0ltOWlhbVZqZENJc0lrOWlhbVZqZEhOTWFXSnlZWEo1SWl3aWJXRjBhQ0lzSWsxaGRHaHpUR2xpY21GeWVTSXNJbUZ1WVd4NWRHbGpjeUlzSWtGdVlXeDVjMmx6VEdsaWNtRnllU0lzSW1samIyNXpJaXdpU1dOdmJuTWlMQ0p6ZEhsc1pYTWlMQ0p6ZEhsc1pTSXNJbXh2WVdSRGMzTWlMQ0pRWlhKcGIyUWlMQ0pOWVhSeWFYZ2lMQ0pHZFc1aklpd2lWR1Z0Y0d4aGRHVWlMQ0pPWlhWeVlXeE9aWFIzYjNKcklpd2lVMmhoWkc5M0lpd2lRMjl0Y0hKbGMzTnBiMjRpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTERCRlFXVkJMRTFCUVUxQkxGVkJRVUZCTEVWQk5FSk9ReXhoUVVGUFF5eERRVUZWTEVOQlEySkRMRWxCUVVGQkxFTkJNVUpLTEdOQlFXMUNReXhqUVVGQlFTeERRVU5tUXl4WFFVRkJRU3hEUVVGWlF5eFRRVUZCUVN4RFFVRlpUaXhWUVVGQlFTeERRVUZCUVN4RFFVTndRazhzUzBGQlFVRXNRMEZCVFVRc1UwRkJRVUVzUTBGQlFVRXNRMEZEVGtVc1NVRkJRVUVzUTBGQlMwTXNXVUZCUVVFc1EwRkJaU3hKUVVGSlF5eGxRVUZCUVN4RFFVTjRRa1lzU1VGQlFVRXNRMEZCUzBjc1MwRkJRVUVzUTBGQlVVTXNhVUpCUVVGQkxFVkJRVUZCTEVOQlEySktMRWxCUVVGQkxFTkJRVXRMTEUxQlFVRkJMRU5CUVZORExHMUNRVUZCUVN4RlFVRkJRU3hEUVVOa1RpeEpRVUZCUVN4RFFVRkxUeXhKUVVGQlFTeERRVUZQUXl4cFFrRkJRVUVzUlVGQlFVRXNRMEZEV2xJc1NVRkJRVUVzUTBGQlMxTXNVMEZCUVVFc1EwRkJXVU1zYjBKQlFVRkJMRVZCUVVGQkxFTkJRMnBDVml4SlFVRkJRU3hEUVVGTFZ5eExRVUZCUVN4RFFVRlJReXhUUVVGQlFTeERRVVZpV2l4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRlRMRU5CUTFZc0swTkJRVUVzUTBGRFFTdzRRMEZCUVN4RFFVTkJMRGhEUVVGQkxFTkJRMEVzWjBSQlFVRXNRMEZEUVN4blJFRkJRU3hEUVVOQkxEaERRVUZCTEVOQlEwRXNLME5CUVVFc1EwRkJRU3hEUVVWS0xFbEJRVXNzU1VGQlNVTXNTMEZCUVVFc1NVRkJVMlFzU1VGQlFVRXNRMEZCUzJFc1RVRkJRVUVzUTBGRGJrSmlMRWxCUVVGQkxFTkJRVXRsTEU5QlFVRkJMRU5CUVZGRUxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlQzSkNXaXhYUVVGQlFTeERRVUZCUVN4bFFVRkJRU3hEUVVOQll5eE5RVUZCUVN4RFFVRkJRU3hWUVVGQlFTeERRVU5CUXl4TlFVRkJRU3hEUVVGQlFTeFZRVUZCUVN4RFFVTkJReXhKUVVGQlFTeERRVUZCUVN4UlFVRkJRU3hEUVVOQmRFSXNWVUZCUVVFc1EwRkJRVUVzWTBGQlFVRXNRMEZEUVhWQ0xGRkJRVUZCTEVOQlFVRkJMRmxCUVVGQkxFTkJRMEZETEdGQlFVRkJMRU5CUVVGQkxHbENRVUZCUVN4RFFVTkJVaXhMUVVGQlFTeERRVUZCUVN4VFFVRkJRU3hEUVVOQlV5eE5RVUZCUVN4RFFVRkJRU3hYUVVGQlFTeERRVU5CYWtJc1dVRkJRVUVzUTBGQlFVRXNhVUpCUVVGQkxFTkJRMEZGTEdOQlFVRkJMRU5CUVVGQkxHMUNRVUZCUVN4RFFVTkJSU3haUVVGQlFTeERRVUZCUVN4cFFrRkJRVUVzUTBGRFFVVXNaVUZCUVVFc1EwRkJRVUVzYjBKQlFVRkJMRU5CUTBGWkxGZEJRVUZCTEVOQlFVRkJMR2RDUVVGQlFTeERRVUZCUVN4RFFVRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJjb25zdHtGdW5jOl9fRnVuY18xOH09XyRiYXNlXzE2O2xldCBfX2Z1bmNfMTg9bmV3IF9fRnVuY18xODt2YXIgXyRBcHBMaWJyYXJ5XzE4PWZ1bmN0aW9uKCl7bGV0IHNlbGY9e21ha2VXZWJhcHA6KGNhbGxiYWNrPSgoKT0+e30pKT0+e2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bGV0IGFuY2hvcj1ldmVudC50YXJnZXQscGFyZW50QW5jaG9yPWV2ZW50LnRhcmdldC5nZXRQYXJlbnRzKFwiYVwiKSx1cmw9YW5jaG9yLmdldEF0dHJpYnV0ZShcImhyZWZcIik7XCJhXCI9PWFuY2hvci5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpfHxfX2Z1bmNfMTguaXNudWxsKHBhcmVudEFuY2hvcil8fChhbmNob3I9cGFyZW50QW5jaG9yKSxfX2Z1bmNfMTguaXNudWxsKHVybCkmJiFfX2Z1bmNfMTguaXNudWxsKHBhcmVudEFuY2hvcikmJihhbmNob3I9cGFyZW50QW5jaG9yKSx1cmw9YW5jaG9yLmdldEF0dHJpYnV0ZShcImhyZWZcIiksXCJfYmxhbmtcIj09YW5jaG9yLmdldEF0dHJpYnV0ZShcInRhcmdldFwiKT93aW5kb3cub3BlbihzZWxmLnByZXBhcmVVcmwodXJsKSk6X19mdW5jXzE4LmlzbnVsbCh1cmwpfHwoZXZlbnQucHJldmVudERlZmF1bHQoKSxzZWxmLnByZXBhcmVVcmwodXJsKSE9bG9jYXRpb24uaHJlZiYmd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKFwicGFnZVwiLFwidGl0bGVcIix1cmwpLGNhbGxiYWNrKCkpfSksd2luZG93Lm9ucG9wc3RhdGU9Y2FsbGJhY2t9LHByZXBhcmVVcmw6KHVybD1cIlwiKT0+KHVybC5pbmNsdWRlcyhsb2NhdGlvbi5vcmlnaW4pP3VybC5pbmNsdWRlcyhsb2NhdGlvbi5wcm90b2NvbCl8fCh1cmw9bG9jYXRpb24ucHJvdG9jb2wrXCIvL1wiK3VybCk6X19mdW5jXzE4LnVybFNwbGl0dGVyKHVybCkubG9jYXRpb249PWxvY2F0aW9uLm9yaWdpbiYmKHVybD1sb2NhdGlvbi5vcmlnaW4rXCIvXCIrdXJsKSx1cmwpfTtyZXR1cm4gc2VsZi5hamF4PSgocGFyYW1zPXthc3luYzohMCxkYXRhOnt9LHVybDpcIlwiLG1ldGhvZDpcIlwiLHNlY3VyZWQ6ITF9KT0+e3BhcmFtcy5hc3luYz1wYXJhbXMuYXN5bmN8fCEwLHBhcmFtcy5kYXRhPXBhcmFtcy5kYXRhfHx7fSxwYXJhbXMudXJsPXBhcmFtcy51cmx8fFwiLi9cIixwYXJhbXMubWV0aG9kPXBhcmFtcy5tZXRob2R8fFwiUE9TVFwiLHBhcmFtcy5zZWN1cmVkPXBhcmFtcy5zZWN1cmVkfHwhMSxwYXJhbXMuc2VjdXJlZCYmKHBhcmFtcy51cmw9XCJodHRwczovL2NvcnMtYW55d2hlcmUuaGVyb2t1YXBwLmNvbS9cIitwYXJhbXMudXJsKTtsZXQgZGF0YT1uZXcgRm9ybURhdGE7aWYocGFyYW1zLmRhdGEgaW5zdGFuY2VvZiBGb3JtRGF0YSlkYXRhPXBhcmFtcy5kYXRhO2Vsc2UgZm9yKGxldCBpIGluIHBhcmFtcy5kYXRhKWRhdGEuYXBwZW5kKGkscGFyYW1zLmRhdGFbaV0pO3JldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57dmFyIHJlcXVlc3Q9bmV3IFhNTEh0dHBSZXF1ZXN0O3JlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKGV2ZW50KXs0PT10aGlzLnJlYWR5U3RhdGUmJjIwMD09dGhpcy5zdGF0dXMmJnJlc29sdmUocmVxdWVzdC5yZXNwb25zZVRleHQpfSxfX2Z1bmNfMTguaXNzZXQocGFyYW1zLm9ucHJvZ3Jlc3MpJiYocmVxdWVzdC51cGxvYWQub25wcm9ncmVzcz0oZXZlbnQ9PntwYXJhbXMub25wcm9ncmVzcyhldmVudC5sb2FkZWQvZXZlbnQudG90YWwqNTApfSkscmVxdWVzdC5vbnByb2dyZXNzPShldmVudD0+e3BhcmFtcy5vbnByb2dyZXNzKGV2ZW50LmxvYWRlZC9ldmVudC50b3RhbCoxMDApfSkpLHJlcXVlc3Qub25lcnJvcj0oZXJyb3I9PntyZWplY3QoZXJyb3IpfSkscmVxdWVzdC5vcGVuKHBhcmFtcy5tZXRob2QscGFyYW1zLnVybCxwYXJhbXMuYXN5bmMpLHJlcXVlc3Quc2VuZChkYXRhKX0pfSksc2VsZn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrRndjRXhwWW5KaGNua3Vhbk1pWFN3aWJtRnRaWE1pT2xzaVJuVnVZeUlzSW5KbGNYVnBjbVVpTENKbWRXNWpJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW5ObGJHWWlMQ0p0WVd0bFYyVmlZWEJ3SWl3aVkyRnNiR0poWTJzaUxDSmtiMk4xYldWdWRDSXNJbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSWlMQ0psZG1WdWRDSXNJbUZ1WTJodmNpSXNJblJoY21kbGRDSXNJbkJoY21WdWRFRnVZMmh2Y2lJc0ltZGxkRkJoY21WdWRITWlMQ0oxY213aUxDSm5aWFJCZEhSeWFXSjFkR1VpTENKdWIyUmxUbUZ0WlNJc0luUnZURzkzWlhKRFlYTmxJaXdpYVhOdWRXeHNJaXdpZDJsdVpHOTNJaXdpYjNCbGJpSXNJbkJ5WlhCaGNtVlZjbXdpTENKd2NtVjJaVzUwUkdWbVlYVnNkQ0lzSW14dlkyRjBhVzl1SWl3aWFISmxaaUlzSW1ocGMzUnZjbmtpTENKd2RYTm9VM1JoZEdVaUxDSnZibkJ2Y0hOMFlYUmxJaXdpYVc1amJIVmtaWE1pTENKdmNtbG5hVzRpTENKd2NtOTBiMk52YkNJc0luVnliRk53YkdsMGRHVnlJaXdpWVdwaGVDSXNJbkJoY21GdGN5SXNJbUZ6ZVc1aklpd2laR0YwWVNJc0ltMWxkR2h2WkNJc0luTmxZM1Z5WldRaUxDSkdiM0p0UkdGMFlTSXNJbWtpTENKaGNIQmxibVFpTENKUWNtOXRhWE5sSWl3aWNtVnpiMngyWlNJc0luSmxhbVZqZENJc0luSmxjWFZsYzNRaUxDSllUVXhJZEhSd1VtVnhkV1Z6ZENJc0ltOXVjbVZoWkhsemRHRjBaV05vWVc1blpTSXNJblJvYVhNaUxDSnlaV0ZrZVZOMFlYUmxJaXdpYzNSaGRIVnpJaXdpY21WemNHOXVjMlZVWlhoMElpd2lhWE56WlhRaUxDSnZibkJ5YjJkeVpYTnpJaXdpZFhCc2IyRmtJaXdpYkc5aFpHVmtJaXdpZEc5MFlXd2lMQ0p2Ym1WeWNtOXlJaXdpWlhKeWIzSWlMQ0p6Wlc1a0lsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeExRVUZCTEVOQlFVMUJMRWxCUVVGQkxFTkJRVVZCTEZOQlFVRkJMRU5CUVVGQkxFTkJRVk5ETEZOQlFWRXNRMEZEZWtJc1NVRkJTVU1zVTBGQlFVRXNRMEZCVHl4SlFVRkpSaXhUUVVGQlFTeERRWEZIWmtjc2JVSkJRVTlETEVOQmJrZFFMRlZCUVVFc1EwRkRTU3hKUVVGSlF5eEpRVUZCUVN4RFFVRlBMRU5CUlZoRExGVkJRVUZCTEVOQlFXdENMRU5CUVVORExGRkJRVUZCTEVWQlFWY3NTVUZCUVN4RlFVRkJMRU5CUVVFc1IwRkJRU3hEUVVNeFFrTXNVVUZCUVVFc1EwRkJVME1zWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlUwTXNTMEZCUVVFc1JVRkJRVUVzUTBGREwwSXNTVUZCU1VNc1RVRkJRVUVzUTBGQlUwUXNTMEZCUVVFc1EwRkJUVVVzVFVGQlFVRXNRMEZEWmtNc1dVRkJRVUVzUTBGQlpVZ3NTMEZCUVVFc1EwRkJUVVVzVFVGQlFVRXNRMEZCVDBVc1ZVRkJRVUVzUTBGQlZ5eEhRVUZCTEVOQlFVRXNRMEZEZGtORExFZEJRVUZCTEVOQlFVMUtMRTFCUVVGQkxFTkJRVTlMTEZsQlFVRkJMRU5CUVdFc1RVRkJRU3hEUVVGQkxFTkJSVThzUjBGQlFTeEZRVUZxUTB3c1RVRkJRVUVzUTBGQlQwMHNVVUZCUVVFc1EwRkJVME1zVjBGQlFVRXNSVUZCUVVFc1JVRkJlVUpvUWl4VFFVRkJRU3hEUVVGTGFVSXNUVUZCUVVFc1EwRkJUMDRzV1VGQlFVRXNRMEZCUVVFc1IwRkRja1JHTEUxQlFVRkJMRU5CUVZORkxGbEJRVUZCTEVOQlFVRkJMRU5CUjFSWUxGTkJRVUZCTEVOQlFVdHBRaXhOUVVGQlFTeERRVUZQU2l4SFFVRkJRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRlRZaXhUUVVGQlFTeERRVUZMYVVJc1RVRkJRVUVzUTBGQlQwNHNXVUZCUVVFc1EwRkJRVUVzUjBGRGFrTkdMRTFCUVVGQkxFTkJRVk5GTEZsQlFVRkJMRU5CUVVGQkxFTkJSMkpGTEVkQlFVRkJMRU5CUVUxS0xFMUJRVUZCTEVOQlFVOUxMRmxCUVVGQkxFTkJRV0VzVFVGQlFTeERRVUZCTEVOQlIxb3NVVUZCUVN4RlFVWkVUQ3hOUVVGQlFTeERRVUZQU3l4WlFVRkJRU3hEUVVGaExGRkJRVUVzUTBGQlFTeERRVWMzUWtrc1RVRkJRVUVzUTBGQlQwTXNTVUZCUVVFc1EwRkJTMmhDTEVsQlFVRkJMRU5CUVV0cFFpeFZRVUZCUVN4RFFVRlhVQ3hIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWMFFtSXNVMEZCUVVFc1EwRkJTMmxDTEUxQlFVRkJMRU5CUVU5S0xFZEJRVUZCTEVOQlFVRkJMRWRCUTJ4Q1RDeExRVUZCUVN4RFFVRk5ZU3hqUVVGQlFTeEZRVUZCUVN4RFFVTkdiRUlzU1VGQlFVRXNRMEZCUzJsQ0xGVkJRVUZCTEVOQlFWZFFMRWRCUVVGQkxFTkJRVUZCTEVWQlFWRlRMRkZCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRVZCUVUxTUxFMUJRVUZCTEVOQlFVOU5MRTlCUVVGQkxFTkJRVkZETEZOQlFVRkJMRU5CUVZVc1RVRkJRU3hEUVVGUkxFOUJRVUVzUTBGQlUxb3NSMEZCUVVFc1EwRkJRVUVzUTBGRGNrWlNMRkZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNWSmhMRTFCUVVGQkxFTkJRVTlSTEZWQlFVRkJMRU5CUVdGeVFpeFJRVUZCUVN4RFFVRkJRU3hEUVVkNFFtVXNWVUZCUVVFc1EwRkJhMElzUTBGQlExQXNSMEZCUVVFc1EwRkJUU3hGUVVGQkxFbEJRMmhDUVN4SFFVRkJRU3hEUVVGSll5eFJRVUZCUVN4RFFVRlRUQ3hSUVVGQlFTeERRVUZUVFN4TlFVRkJRU3hEUVVGQlFTeERRVTFxUW1Zc1IwRkJRVUVzUTBGQlNXTXNVVUZCUVVFc1EwRkJVMHdzVVVGQlFVRXNRMEZCVTA4c1VVRkJRVUVzUTBGQlFVRXNSMEZETlVKb1FpeEhRVUZCUVN4RFFVRk5VeXhSUVVGQlFTeERRVUZUVHl4UlFVRkJRU3hEUVVGWExFbEJRVUVzUTBGQlQyaENMRWRCUVVGQkxFTkJRVUZCTEVOQlRteENZaXhUUVVGQlFTeERRVUZMT0VJc1YwRkJRVUVzUTBGQldXcENMRWRCUVVGQkxFTkJRVUZCTEVOQlEyNUNVeXhSUVVGQlFTeEZRVUZaUVN4UlFVRkJRU3hEUVVGVFRTeE5RVUZCUVN4SFFVTTVRbVlzUjBGQlFVRXNRMEZCVFZNc1VVRkJRVUVzUTBGQlUwMHNUVUZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVTFtTEVkQlFVRkJMRU5CUVVGQkxFTkJUeTlDUVN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFXOUVXQ3hQUVdwRVFWWXNTVUZCUVVFc1EwRkJTelJDTEVsQlFVRkJMRVZCUVU4c1EwRkJRME1zVFVGQlFVRXNRMEZCVXl4RFFVRkZReXhMUVVGQlFTeERRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVseVFpeEhRVUZCUVN4RFFVRkxMRVZCUVVFc1EwRkJTWE5DTEUxQlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGSlF5eFBRVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeEhRVUZCTEVOQlEzcEZTaXhOUVVGQlFTeERRVUZQUXl4TFFVRkJRU3hEUVVGUlJDeE5RVUZCUVN4RFFVRlBReXhMUVVGQlFTeEZRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRMMEpFTEUxQlFVRkJMRU5CUVU5RkxFbEJRVUZCTEVOQlFVOUdMRTFCUVVGQkxFTkJRVTlGTEVsQlFVRkJMRVZCUVZFc1JVRkJRU3hEUVVNM1FrWXNUVUZCUVVFc1EwRkJUMjVDTEVkQlFVRkJMRU5CUVUxdFFpeE5RVUZCUVN4RFFVRlBia0lzUjBGQlFVRXNSVUZCVHl4SlFVRkJMRU5CUXpOQ2JVSXNUVUZCUVVFc1EwRkJUMGNzVFVGQlFVRXNRMEZCVTBnc1RVRkJRVUVzUTBGQlQwY3NUVUZCUVVFc1JVRkJWU3hOUVVGQkxFTkJRMnBEU0N4TlFVRkJRU3hEUVVGUFNTeFBRVUZCUVN4RFFVRlZTaXhOUVVGQlFTeERRVUZQU1N4UFFVRkJRU3hGUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZGTDBKS0xFMUJRVUZCTEVOQlFVOUpMRTlCUVVGQkxFZEJRMUJLTEUxQlFVRkJMRU5CUVU5dVFpeEhRVUZCUVN4RFFVRk5MSE5EUVVGQkxFTkJRWGxEYlVJc1RVRkJRVUVzUTBGQlQyNUNMRWRCUVVGQkxFTkJRVUZCTEVOQlIycEZMRWxCUVVseFFpeEpRVUZCUVN4RFFVRlBMRWxCUVVsSExGRkJRVUZCTEVOQlEyWXNSMEZCU1V3c1RVRkJRVUVzUTBGQlQwVXNTVUZCUVVFc1dVRkJaMEpITEZGQlFVRkJMRU5CUTNaQ1NDeEpRVUZCUVN4RFFVRlBSaXhOUVVGQlFTeERRVUZQUlN4SlFVRkJRU3hEUVVGQlFTeExRVWRrTEVsQlFVc3NTVUZCU1Vrc1EwRkJRVUVzU1VGQlMwNHNUVUZCUVVFc1EwRkJUMFVzU1VGQlFVRXNRMEZEYWtKQkxFbEJRVUZCTEVOQlFVdExMRTFCUVVGQkxFTkJRVTlFTEVOQlFVRkJMRU5CUVVkT0xFMUJRVUZCTEVOQlFVOUZMRWxCUVVGQkxFTkJRVXRKTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXNURMRTlCUVU4c1NVRkJTVVVzVDBGQlFVRXNRMEZCVVN4RFFVRkRReXhQUVVGQlFTeERRVUZUUXl4TlFVRkJRU3hIUVVGQlFTeERRVU42UWl4SlFVRkpReXhQUVVGQlFTeERRVUZWTEVsQlFVbERMR05CUVVGQkxFTkJSV3hDUkN4UFFVRkJRU3hEUVVGUlJTeHJRa0ZCUVVFc1EwRkJjVUlzVTBGQlZYSkRMRXRCUVVGQkxFTkJRVUZCTEVOQlExb3NRMEZCUVN4RlFVRnVRbk5ETEVsQlFVRkJMRU5CUVV0RExGVkJRVUZCTEVWQlFXdERMRWRCUVVFc1JVRkJaa1FzU1VGQlFVRXNRMEZCUzBVc1RVRkJRVUVzUlVGRE4wSlFMRTlCUVVGQkxFTkJRVkZGTEU5QlFVRkJMRU5CUVZGTkxGbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTWEJDYWtRc1UwRkJRVUVzUTBGQlMydEVMRXRCUVVGQkxFTkJRVTFzUWl4TlFVRkJRU3hEUVVGUGJVSXNWVUZCUVVFc1EwRkJRVUVzUjBGRGJFSlNMRTlCUVVGQkxFTkJRVkZUTEUxQlFVRkJMRU5CUVU5RUxGVkJRVUZCTEVWQlFXTXpReXhMUVVGQlFTeEZRVUZCUVN4RFFVTjZRbmRDTEUxQlFVRkJMRU5CUVU5dFFpeFZRVUZCUVN4RFFVRlpNME1zUzBGQlFVRXNRMEZCVFRaRExFMUJRVUZCTEVOQlFWTTNReXhMUVVGQlFTeERRVUZOT0VNc1MwRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjNKRVdDeFBRVUZCUVN4RFFVRlJVU3hWUVVGQlFTeEZRVUZqTTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZEYkVKM1FpeE5RVUZCUVN4RFFVRlBiVUlzVlVGQlFVRXNRMEZCV1RORExFdEJRVUZCTEVOQlFVMDJReXhOUVVGQlFTeERRVUZUTjBNc1MwRkJRVUVzUTBGQlRUaERMRXRCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CU1hwRVdDeFBRVUZCUVN4RFFVRlJXU3hQUVVGQlFTeEZRVUZYUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5tWkN4TlFVRkJRU3hEUVVGUFl5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFlZaXhQUVVGQlFTeERRVUZSZUVJc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJUMGNzVFVGQlFVRXNRMEZCVVVnc1RVRkJRVUVzUTBGQlQyNUNMRWRCUVVGQkxFTkJRVXR0UWl4TlFVRkJRU3hEUVVGUFF5eExRVUZCUVN4RFFVRkJRU3hEUVVNdlExVXNUMEZCUVVFc1EwRkJVV01zU1VGQlFVRXNRMEZCUzNaQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV1F2UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiY29uc3R7T2JqZWN0c0xpYnJhcnk6X19PYmplY3RzTGlicmFyeV8xOX09XyRiYXNlXzE2O2xldCBfX29iamVjdExpYnJhcnlfMTk9X19PYmplY3RzTGlicmFyeV8xOSgpO3ZhciBfJEluZGV4ZWRMaWJyYXJ5XzE5PWZ1bmN0aW9uKG5hbWUsdmVyc2lvbil7bGV0IHNlbGY9e25hbWU6bmFtZSx2ZXJzaW9uOnZlcnNpb24saW5pdGlhbGl6ZWQ6ITF9O3JldHVybiBzZWxmLmluZGV4ZWREQj13aW5kb3cuaW5kZXhlZERCfHx3aW5kb3cubW96SW5kZXhlZERCfHx3aW5kb3cud2Via2l0SW5kZXhlZERCfHx3aW5kb3cubXNJbmRleGVkREIsc2VsZi5JREJUcmFuc2FjdGlvbj13aW5kb3cuSURCVHJhbnNhY3Rpb258fHdpbmRvdy53ZWJraXRJREJUcmFuc2FjdGlvbnx8d2luZG93Lm1zSURCVHJhbnNhY3Rpb24sc2VsZi5JREJLZXlSYW5nZT13aW5kb3cuSURCS2V5UmFuZ2V8fHdpbmRvdy53ZWJraXRJREJLZXlSYW5nZXx8d2luZG93Lm1zSURCS2V5UmFuZ2Usc2VsZi5pbml0PWZ1bmN0aW9uKGNhbGxiYWNrKXtjb25zdCByZXF1ZXN0PXNlbGYuaW5kZXhlZERCLm9wZW4oc2VsZi5uYW1lKTtyZXF1ZXN0Lm9udXBncmFkZW5lZWRlZD0oZXZlbnQ9PntudWxsIT1jYWxsYmFjayYmY2FsbGJhY2soZXZlbnQudGFyZ2V0LnJlc3VsdCl9KSxyZXF1ZXN0Lm9uc3VjY2Vzcz0oZXZlbnQ9PntzZWxmLnZlcnNpb249TWF0aC5mbG9vcihyZXF1ZXN0LnJlc3VsdC52ZXJzaW9uKXx8TWF0aC5mbG9vcihzZWxmLnZlcnNpb24pLHNlbGYuaW5pdGlhbGl6ZWQ9ITB9KSxyZXF1ZXN0Lm9uZXJyb3I9KGV2ZW50PT57Y29uc29sZS5sb2coZXZlbnQudGFyZ2V0LmVycm9yKX0pfSxzZWxmLmdldFZlcnNpb249ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e2NvbnN0IHJlcXVlc3Q9c2VsZi5pbmRleGVkREIub3BlbihzZWxmLm5hbWUpO3JlcXVlc3Qub25zdWNjZXNzPShldmVudD0+eyhudWxsPT1zZWxmLnZlcnNpb258fHNlbGYudmVyc2lvbjxyZXF1ZXN0LnJlc3VsdC52ZXJzaW9uKSYmKHNlbGYudmVyc2lvbj1yZXF1ZXN0LnJlc3VsdC52ZXJzaW9uKSxyZXNvbHZlKHNlbGYudmVyc2lvbil9KSxyZXF1ZXN0Lm9uZXJyb3I9KGV2ZW50PT57cmVqZWN0KGV2ZW50LnRhcmdldC5lcnJvcil9KX0pfSxzZWxmLm9wZW49YXN5bmMgZnVuY3Rpb24oY2FsbGJhY2spe3JldHVybiBudWxsPT1zZWxmLnZlcnNpb24mJmF3YWl0IHNlbGYuZ2V0VmVyc2lvbigpLG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9Pntjb25zdCByZXF1ZXN0PXNlbGYuaW5kZXhlZERCLm9wZW4oc2VsZi5uYW1lLHNlbGYudmVyc2lvbik7cmVxdWVzdC5vbnVwZ3JhZGVuZWVkZWQ9KGV2ZW50PT57c2VsZi52ZXJzaW9uPXJlcXVlc3QucmVzdWx0LnZlcnNpb24sbnVsbCE9Y2FsbGJhY2smJihjYWxsYmFjayhldmVudC50YXJnZXQucmVzdWx0KS5vbmVycm9yPSh3b3JrZWRFdmVudD0+e3JlamVjdCh3b3JrZWRFdmVudC50YXJnZXQuZXJyb3IpfSkpfSkscmVxdWVzdC5vbnN1Y2Nlc3M9KGV2ZW50PT57cmVzb2x2ZShldmVudC50YXJnZXQucmVzdWx0KX0pLHJlcXVlc3Qub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pfSl9LHNlbGYuY29sbGVjdGlvbkV4aXN0cz1mdW5jdGlvbihjb2xsZWN0aW9uKXtyZXR1cm4gc2VsZi5vcGVuKCkudGhlbihkYj0+ZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhjb2xsZWN0aW9uKSl9LHNlbGYuY3JlYXRlQ29sbGVjdGlvbj1hc3luYyBmdW5jdGlvbiguLi5jb2xsZWN0aW9ucyl7bGV0IHZlcnNpb249YXdhaXQgc2VsZi5nZXRWZXJzaW9uKCk7cmV0dXJuIHNlbGYudmVyc2lvbj12ZXJzaW9uKzEsc2VsZi5vcGVuKGRiPT57Zm9yKGxldCBjb2xsZWN0aW9uIG9mIGNvbGxlY3Rpb25zKWRiLm9iamVjdFN0b3JlTmFtZXMuY29udGFpbnMoY29sbGVjdGlvbil8fGRiLmNyZWF0ZU9iamVjdFN0b3JlKGNvbGxlY3Rpb24se2tleVBhdGg6XCJfaWRcIn0pO3JldHVybiBkYn0pfSxzZWxmLmVtcHR5Q29sbGVjdGlvbj1mdW5jdGlvbihjb2xsZWN0aW9uKXtsZXQgcmVtb3ZlZENvdW50PTAsZm91bmRDb3VudD0wO3JldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57c2VsZi5maW5kKHtjb2xsZWN0aW9uOmNvbGxlY3Rpb24scXVlcnk6e30sbWFueTohMH0pLnRoZW4oZm91bmQ9PntzZWxmLm9wZW4oKS50aGVuKGRiPT57aWYoZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhjb2xsZWN0aW9uKSl7bGV0IHRyYW5zYWN0aW9uPWRiLnRyYW5zYWN0aW9uKGNvbGxlY3Rpb24sXCJyZWFkd3JpdGVcIiksc3RvcmU9dHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUoY29sbGVjdGlvbik7dHJhbnNhY3Rpb24ub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHRyYW5zYWN0aW9uLm9uY29tcGxldGU9KGV2ZW50PT57cmVzb2x2ZSh7YWN0aW9uOlwiZW1wdHljb2xsZWN0aW9uXCIscmVtb3ZlZENvdW50OnJlbW92ZWRDb3VudCxvazpyZW1vdmVkQ291bnQ9PWZvdW5kQ291bnR9KX0pLGZvdW5kQ291bnQ9Zm91bmQubGVuZ3RoO2ZvcihsZXQgZGF0YSBvZiBmb3VuZCl7bGV0IHJlcXVlc3Q9c3RvcmUuZGVsZXRlKGRhdGEuX2lkKTtyZXF1ZXN0Lm9uZXJyb3I9KGV2ZW50PT57Y29uc29sZS5sb2coYEVycm9yIHdoaWxlIGRlbGV0aW5nIGRvY3VtZW50cyA9PiAke2V2ZW50LnRhcmdldC5lcnJvcn1gKX0pLHJlcXVlc3Qub25zdWNjZXNzPShldmVudD0+e3JlbW92ZWRDb3VudCsrfSl9fWVsc2UgcmVzb2x2ZSh7cmVtb3ZlZENvdW50OnJlbW92ZWRDb3VudCxvazpyZW1vdmVkQ291bnQ9PWZvdW5kQ291bnR9KX0pLmNhdGNoKGVycm9yPT57cmVqZWN0KGVycm9yKX0pfSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KX0sc2VsZi5maW5kPWZ1bmN0aW9uKHBhcmFtcyl7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntzZWxmLm9wZW4oKS50aGVuKGRiPT57bGV0IGRvY3VtZW50cz1bXTtpZihkYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKHBhcmFtcy5jb2xsZWN0aW9uKSl7bGV0IHRyYW5zYWN0aW9uPWRiLnRyYW5zYWN0aW9uKHBhcmFtcy5jb2xsZWN0aW9uLFwicmVhZG9ubHlcIik7dHJhbnNhY3Rpb24ub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHRyYW5zYWN0aW9uLm9uY29tcGxldGU9KGV2ZW50PT57MT09cGFyYW1zLm1hbnk/cmVzb2x2ZShkb2N1bWVudHMpOnJlc29sdmUoZG9jdW1lbnRzWzBdKX0pO2xldCBjdXJzb3IscmVxdWVzdD10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShwYXJhbXMuY29sbGVjdGlvbikub3BlbkN1cnNvcigpO3JlcXVlc3Qub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHJlcXVlc3Qub25zdWNjZXNzPShldmVudD0+eyhjdXJzb3I9ZXZlbnQudGFyZ2V0LnJlc3VsdCkmJihudWxsPT1wYXJhbXMucXVlcnk/ZG9jdW1lbnRzLnB1c2goY3Vyc29yLnZhbHVlKTpfX29iamVjdExpYnJhcnlfMTkuaXNTdWJPYmplY3QoY3Vyc29yLnZhbHVlLHBhcmFtcy5xdWVyeSkmJmRvY3VtZW50cy5wdXNoKGN1cnNvci52YWx1ZSksY3Vyc29yLmNvbnRpbnVlKCkpfSl9ZWxzZSAxPT1wYXJhbXMubWFueT9yZXNvbHZlKGRvY3VtZW50cyk6cmVzb2x2ZShkb2N1bWVudHNbMF0pfSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KX0sc2VsZi5kb2N1bWVudEV4aXN0cz1mdW5jdGlvbihwYXJhbXMpe3JldHVybiBkZWxldGUgcGFyYW1zLm1hbnksc2VsZi5maW5kKHBhcmFtcykudGhlbihyZXM9Pm51bGwhPXJlcyl9LHNlbGYuZ2VuZXJhdGVJZD1mdW5jdGlvbihyZXF1ZXN0KXtyZXR1cm4gRGF0ZS5ub3coKS50b1N0cmluZygzNikrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMikrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMil9LHNlbGYuY2hlY2tJZD1mdW5jdGlvbihyZXF1ZXN0LHF1ZXJ5LGNhbGxiYWNrKXtsZXQgaWQ9cXVlcnkuX2lkfHxzZWxmLmdlbmVyYXRlSWQoKSxnZXQ9cmVxdWVzdC5nZXQoaWQpO2dldC5vbnN1Y2Nlc3M9KGV2ZW50PT57bnVsbCE9ZXZlbnQudGFyZ2V0LnJlc3VsdD9zZWxmLmNoZWNrSWQocmVxdWVzdCxxdWVyeSxjYWxsYmFjayk6Y2FsbGJhY2soaWQpfSksZ2V0Lm9uZXJyb3I9KGV2ZW50PT57Y29uc29sZS5sb2coYEVycm9yIGNoZWNraW5nIElEID0+ICR7ZXZlbnQudGFyZ2V0LmVycm9yfWApfSl9LHNlbGYuYWRkPWZ1bmN0aW9uKHBhcmFtcyxkYil7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntsZXQgdHJhbnNhY3Rpb249ZGIudHJhbnNhY3Rpb24ocGFyYW1zLmNvbGxlY3Rpb24sXCJyZWFkd3JpdGVcIik7dHJhbnNhY3Rpb24ub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHRyYW5zYWN0aW9uLm9uY29tcGxldGU9KGV2ZW50PT57cmVzb2x2ZSh7YWN0aW9uOlwiaW5zZXJ0XCIsZG9jdW1lbnRzOnBhcmFtcy5xdWVyeX0pfSk7bGV0IHJlcXVlc3Q9dHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUocGFyYW1zLmNvbGxlY3Rpb24pO2lmKDE9PXBhcmFtcy5tYW55JiZBcnJheS5pc0FycmF5KHBhcmFtcy5xdWVyeSkpZm9yKGxldCBxdWVyeSBvZiBwYXJhbXMucXVlcnkpc2VsZi5jaGVja0lkKHJlcXVlc3QscXVlcnksX2lkPT57cXVlcnkuX2lkPV9pZCxyZXF1ZXN0LmFkZChxdWVyeSl9KTtlbHNlIHNlbGYuY2hlY2tJZChyZXF1ZXN0LHBhcmFtcy5xdWVyeSxfaWQ9PntwYXJhbXMucXVlcnkuX2lkPV9pZCxyZXF1ZXN0LmFkZChwYXJhbXMucXVlcnkpfSl9KX0sc2VsZi5pbnNlcnQ9YXN5bmMgZnVuY3Rpb24ocGFyYW1zKXtyZXR1cm4gYXdhaXQgc2VsZi5jb2xsZWN0aW9uRXhpc3RzKHBhcmFtcy5jb2xsZWN0aW9uKT9zZWxmLm9wZW4oKS50aGVuKGRiPT5zZWxmLmFkZChwYXJhbXMsZGIpKS5jYXRjaChlcnJvcj0+ZXJyb3IpOnNlbGYuY3JlYXRlQ29sbGVjdGlvbihwYXJhbXMuY29sbGVjdGlvbikudGhlbihkYj0+c2VsZi5hZGQocGFyYW1zLGRiKSkuY2F0Y2goZXJyb3I9PmVycm9yKX0sc2VsZi51cGRhdGU9ZnVuY3Rpb24ocGFyYW1zKXtyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e3NlbGYub3BlbigpLnRoZW4oZGI9PntkYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKHBhcmFtcy5jb2xsZWN0aW9uKXx8cmVqZWN0KFwiQ29sbGVjdGlvbiBub3QgZm91bmRcIik7bGV0IHRyYW5zYWN0aW9uPWRiLnRyYW5zYWN0aW9uKHBhcmFtcy5jb2xsZWN0aW9uLFwicmVhZHdyaXRlXCIpO3RyYW5zYWN0aW9uLm9uZXJyb3I9KGV2ZW50PT57cmVqZWN0KGV2ZW50LnRhcmdldC5lcnJvcil9KSx0cmFuc2FjdGlvbi5vbmNvbXBsZXRlPShldmVudD0+e3Jlc29sdmUoe2FjdGlvbjpcInVwZGF0ZVwiLGRvY3VtZW50czpkb2N1bWVudHN9KX0pO2xldCByZXF1ZXN0PXRyYW5zYWN0aW9uLm9iamVjdFN0b3JlKHBhcmFtcy5jb2xsZWN0aW9uKS5vcGVuQ3Vyc29yKCksZG9jdW1lbnRzPXt9O3JlcXVlc3Qub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHJlcXVlc3Qub25zdWNjZXNzPShldmVudD0+e2xldCBjdXJzb3I9ZXZlbnQudGFyZ2V0LnJlc3VsdCxmb3VuZD0hMTtpZihjdXJzb3Ipe2lmKF9fb2JqZWN0TGlicmFyeV8xOS5pc1N1Yk9iamVjdChjdXJzb3IudmFsdWUscGFyYW1zLmNoZWNrKSl7Zm91bmQ9ITA7Zm9yKGxldCBpIGluIHBhcmFtcy5xdWVyeSljdXJzb3IudmFsdWVbaV09cGFyYW1zLnF1ZXJ5W2ldO3RyeXtsZXQgcmVzPWN1cnNvci51cGRhdGUoY3Vyc29yLnZhbHVlKTtyZXMub25lcnJvcj0ockV2ZW50PT57ZG9jdW1lbnRzW3JFdmVudC50YXJnZXQucmVzdWx0XT17dmFsdWU6Y3Vyc29yLnZhbHVlLHN0YXR1czohMX19KSxyZXMub25zdWNjZXNzPShyRXZlbnQ9Pntkb2N1bWVudHNbckV2ZW50LnRhcmdldC5yZXN1bHRdPXt2YWx1ZTpjdXJzb3IudmFsdWUsc3RhdHVzOiEwfX0pfWNhdGNoKGVycm9yKXtyZWplY3QoZXJyb3IpfX0xIT1wYXJhbXMubWFueSYmMCE9Zm91bmR8fGN1cnNvci5jb250aW51ZSgpfX0pfSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KX0sc2VsZi5zYXZlPWZ1bmN0aW9uKHBhcmFtcz17Y29sbGVjdGlvbjpcIlwiLHF1ZXJ5Ont9LGNoZWNrOnt9fSl7cmV0dXJuIHNlbGYuZG9jdW1lbnRFeGlzdHMoe2NvbGxlY3Rpb246cGFyYW1zLmNvbGxlY3Rpb24scXVlcnk6cGFyYW1zLmNoZWNrfSkudGhlbihleGlzdHM9PjA9PWV4aXN0cz9zZWxmLmluc2VydChwYXJhbXMpOnNlbGYudXBkYXRlKHBhcmFtcykpfSxzZWxmLmRlbGV0ZT1mdW5jdGlvbihwYXJhbXMpe2xldCBmb3VuZENvdW50PTAscmVtb3ZlZENvdW50PTA7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntzZWxmLmZpbmQocGFyYW1zKS50aGVuKGZvdW5kPT57c2VsZi5vcGVuKCkudGhlbihkYj0+e2xldCB0cmFuc2FjdGlvbj1kYi50cmFuc2FjdGlvbihwYXJhbXMuY29sbGVjdGlvbixcInJlYWR3cml0ZVwiKSxzdG9yZT10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShwYXJhbXMuY29sbGVjdGlvbik7aWYodHJhbnNhY3Rpb24ub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHRyYW5zYWN0aW9uLm9uY29tcGxldGU9KGV2ZW50PT57cmVzb2x2ZSh7YWN0aW9uOlwiZGVsZXRlXCIscmVtb3ZlZENvdW50OnJlbW92ZWRDb3VudCxvazpyZW1vdmVkQ291bnQ9PWZvdW5kQ291bnR9KX0pLEFycmF5LmlzQXJyYXkoZm91bmQpKXtmb3VuZENvdW50PWZvdW5kLmxlbmd0aDtmb3IobGV0IGRhdGEgb2YgZm91bmQpe2xldCByZXF1ZXN0PXN0b3JlLmRlbGV0ZShkYXRhLl9pZCk7cmVxdWVzdC5vbmVycm9yPShldmVudD0+e2NvbnNvbGUubG9nKGBFcnJvciB3aGlsZSBkZWxldGluZyBkb2N1bWVudHMgPT4gJHtldmVudC50YXJnZXQuZXJyb3J9YCl9KSxyZXF1ZXN0Lm9uc3VjY2Vzcz0oZXZlbnQ9PntyZW1vdmVkQ291bnQrK30pfX1lbHNle2ZvdW5kQ291bnQ9MTtsZXQgcmVxdWVzdD1zdG9yZS5kZWxldGUoZm91bmQuX2lkKTtyZXF1ZXN0Lm9uZXJyb3I9KGV2ZW50PT57Y29uc29sZS5sb2coYEVycm9yIHdoaWxlIGRlbGV0aW5nIGRvY3VtZW50cyA9PiAke2V2ZW50LnRhcmdldC5lcnJvcn1gKX0pLHJlcXVlc3Qub25zdWNjZXNzPShldmVudD0+e3JlbW92ZWRDb3VudCsrfSl9fSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KS5jYXRjaChlcnJvcj0+e3JlamVjdChlcnJvcil9KX0pfSxzZWxmfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtsdVpHVjRaV1JNYVdKeVlYSjVMbXB6SWwwc0ltNWhiV1Z6SWpwYklrOWlhbVZqZEhOTWFXSnlZWEo1SWl3aWNtVnhkV2x5WlNJc0ltOWlhbVZqZEV4cFluSmhjbmtpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWJtRnRaU0lzSW5abGNuTnBiMjRpTENKelpXeG1JaXdpYVc1cGRHbGhiR2w2WldRaUxDSnBibVJsZUdWa1JFSWlMQ0ozYVc1a2IzY2lMQ0p0YjNwSmJtUmxlR1ZrUkVJaUxDSjNaV0pyYVhSSmJtUmxlR1ZrUkVJaUxDSnRjMGx1WkdWNFpXUkVRaUlzSWtsRVFsUnlZVzV6WVdOMGFXOXVJaXdpZDJWaWEybDBTVVJDVkhKaGJuTmhZM1JwYjI0aUxDSnRjMGxFUWxSeVlXNXpZV04wYVc5dUlpd2lTVVJDUzJWNVVtRnVaMlVpTENKM1pXSnJhWFJKUkVKTFpYbFNZVzVuWlNJc0ltMXpTVVJDUzJWNVVtRnVaMlVpTENKcGJtbDBJaXdpWTJGc2JHSmhZMnNpTENKeVpYRjFaWE4wSWl3aWIzQmxiaUlzSW05dWRYQm5jbUZrWlc1bFpXUmxaQ0lzSW1WMlpXNTBJaXdpZFc1a1pXWnBibVZrSWl3aWRHRnlaMlYwSWl3aWNtVnpkV3gwSWl3aWIyNXpkV05qWlhOeklpd2lUV0YwYUNJc0ltWnNiMjl5SWl3aWIyNWxjbkp2Y2lJc0ltTnZibk52YkdVaUxDSnNiMmNpTENKbGNuSnZjaUlzSW1kbGRGWmxjbk5wYjI0aUxDSlFjbTl0YVhObElpd2ljbVZ6YjJ4MlpTSXNJbkpsYW1WamRDSXNJbUZ6ZVc1aklpd2lkMjl5YTJWa1JYWmxiblFpTENKamIyeHNaV04wYVc5dVJYaHBjM1J6SWl3aVkyOXNiR1ZqZEdsdmJpSXNJblJvWlc0aUxDSmtZaUlzSW05aWFtVmpkRk4wYjNKbFRtRnRaWE1pTENKamIyNTBZV2x1Y3lJc0ltTnlaV0YwWlVOdmJHeGxZM1JwYjI0aUxDSmpiMnhzWldOMGFXOXVjeUlzSW1OeVpXRjBaVTlpYW1WamRGTjBiM0psSWl3aWEyVjVVR0YwYUNJc0ltVnRjSFI1UTI5c2JHVmpkR2x2YmlJc0luSmxiVzkyWldSRGIzVnVkQ0lzSW1admRXNWtRMjkxYm5RaUxDSm1hVzVrSWl3aWNYVmxjbmtpTENKdFlXNTVJaXdpWm05MWJtUWlMQ0owY21GdWMyRmpkR2x2YmlJc0luTjBiM0psSWl3aWIySnFaV04wVTNSdmNtVWlMQ0p2Ym1OdmJYQnNaWFJsSWl3aVlXTjBhVzl1SWl3aWIyc2lMQ0pzWlc1bmRHZ2lMQ0prWVhSaElpd2laR1ZzWlhSbElpd2lYMmxrSWl3aVkyRjBZMmdpTENKd1lYSmhiWE1pTENKa2IyTjFiV1Z1ZEhNaUxDSmpkWEp6YjNJaUxDSnZjR1Z1UTNWeWMyOXlJaXdpY0hWemFDSXNJblpoYkhWbElpd2lhWE5UZFdKUFltcGxZM1FpTENKamIyNTBhVzUxWlNJc0ltUnZZM1Z0Wlc1MFJYaHBjM1J6SWl3aWNtVnpJaXdpWjJWdVpYSmhkR1ZKWkNJc0lrUmhkR1VpTENKdWIzY2lMQ0owYjFOMGNtbHVaeUlzSW5KaGJtUnZiU0lzSW5Oc2FXTmxJaXdpWTJobFkydEpaQ0lzSW1sa0lpd2laMlYwSWl3aVlXUmtJaXdpUVhKeVlYa2lMQ0pwYzBGeWNtRjVJaXdpYVc1elpYSjBJaXdpZFhCa1lYUmxJaXdpWTJobFkyc2lMQ0pwSWl3aWNrVjJaVzUwSWl3aWMzUmhkSFZ6SWl3aWMyRjJaU0lzSW1WNGFYTjBjeUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzUzBGQlFTeERRVUZOUVN4alFVRkJRU3hEUVVGRlFTeHRRa0ZCUVVFc1EwRkJRVUVzUTBGQmJVSkRMRk5CUVZFc1EwRkRia01zU1VGQlNVTXNhMEpCUVVGQkxFTkJRV2RDUml4dFFrRkJRVUVzUlVGQlFVRXNRMEZ6V1hCQ1J5eDFRa0ZCVDBNc1EwRndXVkFzVTBGQmQwSkRMRWxCUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVVGQkxFTkJRekZDTEVsQlFVbERMRWxCUVVGQkxFTkJRVThzUTBGQlJVWXNTVUZCUVVFc1EwRkJRVUVzU1VGQlFVRXNRMEZCVFVNc1QwRkJRVUVzUTBGQlFVRXNUMEZCUVVFc1EwRkJVMFVzVjBGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVGQkxFTkJRVUVzUTBGbldYcERMRTlCTDFoQlJDeEpRVUZCUVN4RFFVRkxSU3hUUVVGQlFTeERRVUZaUXl4TlFVRkJRU3hEUVVGUFJDeFRRVUZCUVN4RlFVRmhReXhOUVVGQlFTeERRVUZQUXl4WlFVRkJRU3hGUVVGblFrUXNUVUZCUVVFc1EwRkJUMFVzWlVGQlFVRXNSVUZCYlVKR0xFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRemRHVGl4SlFVRkJRU3hEUVVGTFR5eGpRVUZCUVN4RFFVRnBRa29zVFVGQlFVRXNRMEZCVDBrc1kwRkJRVUVzUlVGQmEwSktMRTFCUVVGQkxFTkJRVTlMTEc5Q1FVRkJRU3hGUVVGM1Frd3NUVUZCUVVFc1EwRkJUMDBzWjBKQlFVRkJMRU5CUTNKR1ZDeEpRVUZCUVN4RFFVRkxWU3hYUVVGQlFTeERRVUZqVUN4TlFVRkJRU3hEUVVGUFR5eFhRVUZCUVN4RlFVRmxVQ3hOUVVGQlFTeERRVUZQVVN4cFFrRkJRVUVzUlVGQmNVSlNMRTFCUVVGQkxFTkJRVTlUTEdGQlFVRkJMRU5CUlRWRldpeEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZQTEZOQlFWVkRMRkZCUVVGQkxFTkJRVUZCTEVOQlEyeENMRTFCUVUxRExFOUJRVUZCTEVOQlFWVm1MRWxCUVVGQkxFTkJRVXRGTEZOQlFVRkJMRU5CUVZWakxFbEJRVUZCTEVOQlFVdG9RaXhKUVVGQlFTeERRVUZMUml4SlFVRkJRU3hEUVVGQlFTeERRVU42UTJsQ0xFOUJRVUZCTEVOQlFWRkZMR1ZCUVVGQkxFVkJRVzFDUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5RUXl4SlFVRkJRU3hGUVVGYVRDeFJRVUZCUVN4RlFVTkRRU3hSUVVGQlFTeERRVUZUU1N4TFFVRkJRU3hEUVVGTlJTeE5RVUZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWt2UWs0c1QwRkJRVUVzUTBGQlVVOHNVMEZCUVVFc1JVRkJZVW9zUzBGQlFVRXNSVUZCUVVFc1EwRkRha0pzUWl4SlFVRkJRU3hEUVVGTFJDeFBRVUZCUVN4RFFVRlZkMElzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRWUXNUMEZCUVVFc1EwRkJVVTBzVFVGQlFVRXNRMEZCVDNSQ0xFOUJRVUZCTEVOQlFVRkJMRVZCUVZsM1FpeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZOZUVJc1NVRkJRVUVzUTBGQlMwUXNUMEZCUVVFc1EwRkJRVUVzUTBGRGNrVkRMRWxCUVVGQkxFTkJRVXRETEZkQlFVRkJMRU5CUVVGQkxFTkJRV01zUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZIZGtKakxFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVmRRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlpSTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVbFVMRXRCUVVGQkxFTkJRVTFGTEUxQlFVRkJMRU5CUVU5UkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1dwRE5VSXNTVUZCUVVFc1EwRkJTelpDTEZWQlFVRkJMRU5CUVdFc1ZVRkJRU3hEUVVOa0xFOUJRVThzU1VGQlNVTXNUMEZCUVVFc1EwRkJVU3hEUVVGRFF5eFBRVUZCUVN4RFFVRlRReXhOUVVGQlFTeEhRVUZCUVN4RFFVTjZRaXhOUVVGTmFrSXNUMEZCUVVFc1EwRkJWV1lzU1VGQlFVRXNRMEZCUzBVc1UwRkJRVUVzUTBGQlZXTXNTVUZCUVVFc1EwRkJTMmhDTEVsQlFVRkJMRU5CUVV0R0xFbEJRVUZCTEVOQlFVRkJMRU5CUTNwRGFVSXNUMEZCUVVFc1EwRkJVVThzVTBGQlFVRXNSVUZCWVVvc1MwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkRSME1zU1VGQlFVRXNSVUZCYUVKdVFpeEpRVUZCUVN4RFFVRkxSQ3hQUVVGQlFTeEZRVUYzUWtNc1NVRkJRVUVzUTBGQlMwUXNUMEZCUVVFc1EwRkJWV2RDTEU5QlFVRkJMRU5CUVZGTkxFMUJRVUZCTEVOQlFVOTBRaXhQUVVGQlFTeEpRVU16UkVNc1NVRkJRVUVzUTBGQlMwUXNUMEZCUVVFc1EwRkJWV2RDTEU5QlFVRkJMRU5CUVZGTkxFMUJRVUZCTEVOQlFVOTBRaXhQUVVGQlFTeERRVUZCUVN4RFFVVnNRMmRETEU5QlFVRkJMRU5CUVZFdlFpeEpRVUZCUVN4RFFVRkxSQ3hQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRxUW1kQ0xFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVmRRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlpqTEUxQlFVRkJMRU5CUVU5a0xFdEJRVUZCTEVOQlFVMUZMRTFCUVVGQkxFTkJRVTlSTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzJoRE5VSXNTVUZCUVVFc1EwRkJTMmRDTEVsQlFVRkJMRU5CUVU5cFFpeGxRVUZuUW01Q0xGRkJRVUZCTEVOQlFVRkJMRU5CU1hoQ0xFOUJTRzlDU3l4SlFVRkJRU3hGUVVGb1FtNUNMRWxCUVVGQkxFTkJRVXRFTEU5QlFVRkJMRVZCUVVGQkxFMUJRME5ETEVsQlFVRkJMRU5CUVVzMlFpeFZRVUZCUVN4RlFVRkJRU3hEUVVWU0xFbEJRVWxETEU5QlFVRkJMRU5CUVZFc1EwRkJRME1zVDBGQlFVRXNRMEZCVTBNc1RVRkJRVUVzUjBGQlFVRXNRMEZEZWtJc1RVRkJUV3BDTEU5QlFVRkJMRU5CUVZWbUxFbEJRVUZCTEVOQlFVdEZMRk5CUVVGQkxFTkJRVlZqTEVsQlFVRkJMRU5CUVV0b1FpeEpRVUZCUVN4RFFVRkxSaXhKUVVGQlFTeERRVUZOUlN4SlFVRkJRU3hEUVVGTFJDeFBRVUZCUVN4RFFVRkJRU3hEUVVOd1JHZENMRTlCUVVGQkxFTkJRVkZGTEdWQlFVRkJMRVZCUVcxQ1F5eExRVUZCUVN4RlFVRkJRU3hEUVVOMlFteENMRWxCUVVGQkxFTkJRVXRFTEU5QlFVRkJMRU5CUVZWblFpeFBRVUZCUVN4RFFVRlJUU3hOUVVGQlFTeERRVUZQZEVJc1QwRkJRVUVzUTBGRlpHOUNMRWxCUVVGQkxFVkJRVnBNTEZGQlFVRkJMRWRCUTJWQkxGRkJRVUZCTEVOQlFWTkpMRXRCUVVGQkxFTkJRVTFGTEUxQlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFVRkJMRU5CUXpWQ1NTeFBRVUZCUVN4RlFVRlZVeXhYUVVGQlFTeEZRVUZCUVN4RFFVTm1SaXhOUVVGQlFTeERRVUZQUlN4WFFVRkJRU3hEUVVGWlpDeE5RVUZCUVN4RFFVRlBVU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXQwUTJJc1QwRkJRVUVzUTBGQlVVOHNVMEZCUVVFc1JVRkJZVW9zUzBGQlFVRXNSVUZCUVVFc1EwRkRha0poTEU5QlFVRkJMRU5CUVZGaUxFdEJRVUZCTEVOQlFVMUZMRTFCUVVGQkxFTkJRVTlETEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNwQ1RpeFBRVUZCUVN4RFFVRlJWU3hQUVVGQlFTeEZRVUZYVUN4TFFVRkJRU3hGUVVGQlFTeERRVU5tWXl4TlFVRkJRU3hEUVVGUFpDeExRVUZCUVN4RFFVRk5SU3hOUVVGQlFTeERRVUZQVVN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0b1F6VkNMRWxCUVVGQkxFTkJRVXR0UXl4blFrRkJRVUVzUTBGQmJVSXNVMEZCVlVNc1ZVRkJRVUVzUTBGQlFVRXNRMEZET1VJc1QwRkJUM0JETEVsQlFVRkJMRU5CUVV0blFpeEpRVUZCUVN4RlFVRkJRU3hEUVVGUGNVSXNTVUZCUVVFc1EwRkJTME1zUlVGQlFVRXNSVUZEWWtFc1JVRkJRVUVzUTBGQlIwTXNaMEpCUVVGQkxFTkJRV2xDUXl4UlFVRkJRU3hEUVVGVFNpeFZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVazFRM0JETEVsQlFVRkJMRU5CUVV0NVF5eG5Ra0ZCUVVFc1EwRkJiVUpTTEdWQlFVRkJMRWRCUVcxQ1V5eFhRVUZCUVN4RFFVRkJRU3hEUVVOMlF5eEpRVUZKTTBNc1QwRkJRVUVzUTBGQlFVRXNUVUZCWjBKRExFbEJRVUZCTEVOQlFVczJRaXhWUVVGQlFTeEZRVUZCUVN4RFFVVjZRaXhQUVVSQk4wSXNTVUZCUVVFc1EwRkJTMFFzVDBGQlFVRXNRMEZCVlVFc1QwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlEyeENReXhKUVVGQlFTeERRVUZMWjBJc1NVRkJRVUVzUTBGQlMzTkNMRVZCUVVGQkxFVkJRVUZCTEVOQlEySXNTVUZCU3l4SlFVRkpSaXhWUVVGQlFTeEpRVUZqVFN4WFFVRkJRU3hEUVVOa1NpeEZRVUZCUVN4RFFVRkhReXhuUWtGQlFVRXNRMEZCYVVKRExGRkJRVUZCTEVOQlFWTktMRlZCUVVGQkxFTkJRVUZCTEVWQlF6bENSU3hGUVVGQlFTeERRVUZIU3l4cFFrRkJRVUVzUTBGQmEwSlFMRlZCUVVGQkxFTkJRVmtzUTBGQlJWRXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVUVzUTBGQlFTeERRVWR3UkN4UFFVRlBUaXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxtZEVNc1NVRkJRVUVzUTBGQlN6WkRMR1ZCUVVGQkxFTkJRV3RDTEZOQlFWVlVMRlZCUVVGQkxFTkJRVUZCTEVOQlF6ZENMRWxCUVVsVkxGbEJRVUZCTEVOQlFXVXNRMEZCUVN4RFFVRkhReXhWUVVGQlFTeERRVUZoTEVOQlFVRXNRMEZEYmtNc1QwRkJUeXhKUVVGSmFrSXNUMEZCUVVFc1EwRkJVU3hEUVVGRFF5eFBRVUZCUVN4RFFVRlRReXhOUVVGQlFTeEhRVUZCUVN4RFFVTjZRbWhETEVsQlFVRkJMRU5CUVV0blJDeEpRVUZCUVN4RFFVRkxMRU5CUVVWYUxGVkJRVUZCTEVOQlFVRkJMRlZCUVVGQkxFTkJRVmxoTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFWRmlMRWxCUVVGQkxFTkJRVXRqTEV0QlFVRkJMRVZCUVVGQkxFTkJRMnhFYmtRc1NVRkJRVUVzUTBGQlMyZENMRWxCUVVGQkxFVkJRVUZCTEVOQlFVOXhRaXhKUVVGQlFTeERRVUZMUXl4RlFVRkJRU3hGUVVGQlFTeERRVU5pTEVkQlFVbEJMRVZCUVVGQkxFTkJRVWRETEdkQ1FVRkJRU3hEUVVGcFFrTXNVVUZCUVVFc1EwRkJVMG9zVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVNeFF5eEpRVUZKWjBJc1YwRkJRVUVzUTBGQlkyUXNSVUZCUVVFc1EwRkJSMk1zVjBGQlFVRXNRMEZCV1doQ0xGVkJRVUZCTEVOQlFWa3NWMEZCUVN4RFFVRkJMRU5CUTNwRGFVSXNTMEZCUVVFc1EwRkJVVVFzVjBGQlFVRXNRMEZCV1VVc1YwRkJRVUVzUTBGQldXeENMRlZCUVVGQkxFTkJRVUZCTEVOQlJYQkRaMElzVjBGQlFVRXNRMEZCV1ROQ0xFOUJRVUZCTEVWQlFWVlFMRXRCUVVGQkxFVkJRVUZCTEVOQlEyeENZeXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVGTlJTeE5RVUZCUVN4RFFVRlBVU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQ0UW5kQ0xGZEJRVUZCTEVOQlFWbEhMRlZCUVVGQkxFVkJRV0Z5UXl4TFFVRkJRU3hGUVVGQlFTeERRVU55UW1Fc1QwRkJRVUVzUTBGQlVTeERRVUZGZVVJc1RVRkJRVUVzUTBGQlVTeHBRa0ZCUVN4RFFVRnRRbFlzV1VGQlFVRXNRMEZCUVVFc1dVRkJRVUVzUTBGQlkxY3NSVUZCUVVFc1EwRkJTVmdzV1VGQlFVRXNSVUZCWjBKRExGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlRORlFTeFZRVUZCUVN4RFFVRmhTU3hMUVVGQlFTeERRVUZOVHl4TlFVRkJRU3hEUVVOdVFpeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFbEJRVkZTTEV0QlFVRkJMRU5CUVU4c1EwRkRjRUlzU1VGQlNYQkRMRTlCUVVGQkxFTkJRVlZ6UXl4TFFVRkJRU3hEUVVGTlR5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMUlN4SFFVRkJRU3hEUVVGQlFTeERRVU5vUXpsRExFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVlZRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlJSTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxHdERRVUZCUVN4RlFVRjVRMVFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQxRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVWaUxFOUJRVUZCTEVOQlFWRlBMRk5CUVVGQkxFVkJRVmxLTEV0QlFVRkJMRVZCUVVGQkxFTkJRMmhDTkVJc1dVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1MwRkxVbVlzVDBGQlFVRXNRMEZCVVN4RFFVRkZaU3haUVVGQlFTeERRVUZCUVN4WlFVRkJRU3hEUVVGalZ5eEZRVUZCUVN4RFFVRkpXQ3haUVVGQlFTeEZRVUZuUWtNc1ZVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYWtSbExFdEJRVUZCTEVOQlFVMXNReXhMUVVGQlFTeEZRVUZCUVN4RFFVTk1TU3hOUVVGQlFTeERRVUZQU2l4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVmFhME1zUzBGQlFVRXNRMEZCVFd4RExFdEJRVUZCTEVWQlFVRkJMRU5CUTB4SkxFMUJRVUZCTEVOQlFVOUtMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTMjVDTlVJc1NVRkJRVUVzUTBGQlMyZEVMRWxCUVVGQkxFTkJRVThzVTBGQlZXVXNUVUZCUVVFc1EwRkJRVUVzUTBGRGJFSXNUMEZCVHl4SlFVRkpha01zVDBGQlFVRXNRMEZCVVN4RFFVRkRReXhQUVVGQlFTeERRVUZUUXl4TlFVRkJRU3hIUVVGQlFTeERRVU42UW1oRExFbEJRVUZCTEVOQlFVdG5RaXhKUVVGQlFTeEZRVUZCUVN4RFFVRlBjVUlzU1VGQlFVRXNRMEZCUzBNc1JVRkJRVUVzUlVGQlFVRXNRMEZEWWl4SlFVRkpNRUlzVTBGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUldoQ0xFZEJRVWt4UWl4RlFVRkJRU3hEUVVGSFF5eG5Ra0ZCUVVFc1EwRkJhVUpETEZGQlFVRkJMRU5CUVZOMVFpeE5RVUZCUVN4RFFVRlBNMElzVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVOcVJDeEpRVUZKWjBJc1YwRkJRVUVzUTBGQlkyUXNSVUZCUVVFc1EwRkJSMk1zVjBGQlFVRXNRMEZCV1Zjc1RVRkJRVUVzUTBGQlR6TkNMRlZCUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZCTEVOQlJYQkVaMElzVjBGQlFVRXNRMEZCV1ROQ0xFOUJRVUZCTEVWQlFWVlFMRXRCUVVGQkxFVkJRVUZCTEVOQlEyeENZeXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVGTlJTeE5RVUZCUVN4RFFVRlBVU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQ0UW5kQ0xGZEJRVUZCTEVOQlFWbEhMRlZCUVVGQkxFVkJRV0Z5UXl4TFFVRkJRU3hGUVVGQlFTeERRVU5HTEVOQlFVRXNSVUZCWmpaRExFMUJRVUZCTEVOQlFVOWlMRWxCUVVGQkxFTkJRMUJ1UWl4UFFVRkJRU3hEUVVGUmFVTXNVMEZCUVVFc1EwRkJRVUVzUTBGSFVtcERMRTlCUVVGQkxFTkJRVkZwUXl4VFFVRkJRU3hEUVVGVkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVa3hRaXhKUVVWSlF5eE5RVUZCUVN4RFFVUkJiRVFzVDBGQlFVRXNRMEZFVVhGRExGZEJRVUZCTEVOQlFWbEZMRmRCUVVGQkxFTkJRVmxUTEUxQlFVRkJMRU5CUVU4elFpeFZRVUZCUVN4RFFVRkJRU3hEUVVOMlFqaENMRlZCUVVGQkxFVkJRVUZCTEVOQlIzQkNia1FzVDBGQlFVRXNRMEZCVVZVc1QwRkJRVUVzUlVGQlYxQXNTMEZCUVVFc1JVRkJRVUVzUTBGRFptTXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQxRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhlRUppTEU5QlFVRkJMRU5CUVZGUExGTkJRVUZCTEVWQlFXRktMRXRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUTJwQ0swTXNUVUZCUVVFc1EwRkJVeTlETEV0QlFVRkJMRU5CUVUxRkxFMUJRVUZCTEVOQlFVOURMRTFCUVVGQkxFbEJSVVZHTEVsQlFVRkJMRVZCUVdoQ05FTXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZEVUdVc1UwRkJRVUVzUTBGQlZVY3NTVUZCUVVFc1EwRkJTMFlzVFVGQlFVRXNRMEZCVDBjc1MwRkJRVUVzUTBGQlFVRXNRMEZGYWtKNlJTeHJRa0ZCUVVFc1EwRkJZekJGTEZkQlFVRkJMRU5CUVZsS0xFMUJRVUZCTEVOQlFVOUhMRXRCUVVGQkxFTkJRVTlNTEUxQlFVRkJMRU5CUVU5a0xFdEJRVUZCTEVOQlFVRkJMRVZCUTNCRVpTeFRRVUZCUVN4RFFVRlZSeXhKUVVGQlFTeERRVUZMUml4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRkJRU3hEUVVVeFFrZ3NUVUZCUVVFc1EwRkJUMHNzVVVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGTFNTeERRVUZCTEVWQlFXWlFMRTFCUVVGQkxFTkJRVTlpTEVsQlFVRkJMRU5CUTFCdVFpeFBRVUZCUVN4RFFVRlJhVU1zVTBGQlFVRXNRMEZCUVVFc1EwRkhVbXBETEU5QlFVRkJMRU5CUVZGcFF5eFRRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWN6UWtZc1MwRkJRVUVzUTBGQlRXeERMRXRCUVVGQkxFVkJRVUZCTEVOQlEweEpMRTFCUVVGQkxFTkJRVTlLTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzI1Q05VSXNTVUZCUVVFc1EwRkJTM1ZGTEdOQlFVRkJMRU5CUVdsQ0xGTkJRVlZTTEUxQlFVRkJMRU5CUVVGQkxFTkJSVFZDTEU5QlFVRXNUMEZFVDBFc1RVRkJRVUVzUTBGQlQySXNTVUZCUVVFc1EwRkRVR3hFTEVsQlFVRkJMRU5CUVV0blJDeEpRVUZCUVN4RFFVRkxaU3hOUVVGQlFTeERRVUZCUVN4RFFVRlJNVUlzU1VGQlFVRXNRMEZCUzIxRExFZEJRVUZCTEVWQlExcHlSQ3hKUVVGQlFTeEZRVUZRY1VRc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpabmhGTEVsQlFVRkJMRU5CUVV0NVJTeFZRVUZCUVN4RFFVRmhMRk5CUVZVeFJDeFBRVUZCUVN4RFFVRkJRU3hEUVVWNFFpeFBRVVJUTWtRc1NVRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1JVRkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUTBGQlRYSkVMRWxCUVVGQkxFTkJRVXR6UkN4TlFVRkJRU3hGUVVGQlFTeERRVUZUUkN4UlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVUZKUlN4TFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZMZGtRc1NVRkJRVUVzUTBGQlMzTkVMRTFCUVVGQkxFVkJRVUZCTEVOQlFWTkVMRkZCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlFVbEZMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZKT1VjNVJTeEpRVUZCUVN4RFFVRkxLMFVzVDBGQlFVRXNRMEZCVlN4VFFVRlZhRVVzVDBGQlFVRXNRMEZCVTJ0RExFdEJRVUZCTEVOQlFVOXVReXhSUVVGQlFTeERRVUZCUVN4RFFVTnlReXhKUVVGSmEwVXNSVUZCUVVFc1EwRkJTeTlDTEV0QlFVRkJMRU5CUVUxWkxFZEJRVUZCTEVWQlFVODNSQ3hKUVVGQlFTeERRVUZMZVVVc1ZVRkJRVUVzUlVGQlFVRXNRMEZEZGtKUkxFZEJRVUZCTEVOQlFVMXNSU3hQUVVGQlFTeERRVUZSYTBVc1IwRkJRVUVzUTBGQlNVUXNSVUZCUVVFc1EwRkJRVUVzUTBGRGRFSkRMRWRCUVVGQkxFTkJRVWt6UkN4VFFVRkJRU3hGUVVGWlNpeExRVUZCUVN4RlFVRkJRU3hEUVVObFF5eEpRVUZCUVN4RlFVRjJRa1FzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkRZbkpDTEVsQlFVRkJMRU5CUVVzclJTeFBRVUZCUVN4RFFVRlJhRVVzVDBGQlFVRXNRMEZCVTJ0RExFdEJRVUZCTEVOQlFVOXVReXhSUVVGQlFTeERRVUZCUVN4RFFVYzNRa0VzVVVGQlFVRXNRMEZCVTJ0RkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXcENReXhIUVVGQlFTeERRVUZKZUVRc1QwRkJRVUVzUlVGQlZWQXNTMEZCUVVFc1JVRkJRVUVzUTBGRFZsRXNUMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzY1VKQlFVRkJMRVZCUVRSQ1ZDeExRVUZCUVN4RFFVRk5SU3hOUVVGQlFTeERRVUZQVVN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsNlJEVkNMRWxCUVVGQkxFTkJRVXRyUml4SFFVRkJRU3hEUVVGTkxGTkJRVlZ1UWl4TlFVRkJRU3hEUVVGUmVrSXNSVUZCUVVFc1EwRkJRVUVzUTBGRGVrSXNUMEZCVHl4SlFVRkpVaXhQUVVGQlFTeERRVUZSTEVOQlFVTkRMRTlCUVVGQkxFTkJRVk5ETEUxQlFVRkJMRWRCUVVGQkxFTkJRM3BDTEVsQlFVbHZRaXhYUVVGQlFTeERRVUZqWkN4RlFVRkJRU3hEUVVGSFl5eFhRVUZCUVN4RFFVRlpWeXhOUVVGQlFTeERRVUZQTTBJc1ZVRkJRVUVzUTBGQldTeFhRVUZCTEVOQlFVRXNRMEZEY0VSblFpeFhRVUZCUVN4RFFVRlpNMElzVDBGQlFVRXNSVUZCVjFBc1MwRkJRVUVzUlVGQlFVRXNRMEZEYmtKakxFMUJRVUZCTEVOQlFVOWtMRXRCUVVGQkxFTkJRVTFGTEUxQlFVRkJMRU5CUVU5UkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzaENkMElzVjBGQlFVRXNRMEZCV1Vjc1ZVRkJRVUVzUlVGQlkzSkRMRXRCUVVGQkxFVkJRVUZCTEVOQlEzUkNZU3hQUVVGQlFTeERRVUZSTEVOQlFVVjVRaXhOUVVGQlFTeERRVUZSTEZGQlFVRXNRMEZCVlZFc1UwRkJRVUVzUTBGQlYwUXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhiRVFzU1VGQlNXeERMRTlCUVVGQkxFTkJRVlZ4UXl4WFFVRkJRU3hEUVVGWlJTeFhRVUZCUVN4RFFVRlpVeXhOUVVGQlFTeERRVUZQTTBJc1ZVRkJRVUVzUTBGQlFVRXNRMEZGTjBNc1IwRkJiVUlzUTBGQlFTeEZRVUZtTWtJc1RVRkJRVUVzUTBGQlQySXNTVUZCUVVFc1JVRkJaMEpwUXl4TFFVRkJRU3hEUVVGTlF5eFBRVUZCUVN4RFFVRlJja0lzVFVGQlFVRXNRMEZCVDJRc1MwRkJRVUVzUTBGQlFVRXNRMEZETlVNc1NVRkJTeXhKUVVGSlFTeExRVUZCUVN4SlFVRlRZeXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVOeVFtcEVMRWxCUVVGQkxFTkJRVXNyUlN4UFFVRkJRU3hEUVVGUmFFVXNUMEZCUVVFc1EwRkJVMnRETEV0QlFVRkJMRU5CUVU5WkxFZEJRVUZCTEVWQlFVRkJMRU5CUTNwQ1dpeExRVUZCUVN4RFFVRk5XU3hIUVVGQlFTeERRVUZOUVN4SFFVRkJRU3hEUVVOYU9VTXNUMEZCUVVFc1EwRkJVVzFGTEVkQlFVRkJMRU5CUVVscVF5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVV0d1FtcEVMRWxCUVVGQkxFTkJRVXNyUlN4UFFVRkJRU3hEUVVGUmFFVXNUMEZCUVVFc1EwRkJVMmRFTEUxQlFVRkJMRU5CUVU5a0xFdEJRVUZCTEVOQlFVOVpMRWRCUVVGQkxFVkJRVUZCTEVOQlEyaERSU3hOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVGTldTeEhRVUZCUVN4RFFVRk5RU3hIUVVGQlFTeERRVU51UWpsRExFOUJRVUZCTEVOQlFWRnRSU3hIUVVGQlFTeERRVUZKYmtJc1RVRkJRVUVzUTBGQlQyUXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5ia05xUkN4SlFVRkJRU3hEUVVGTGNVWXNUVUZCUVVFc1EwRkJVM0JFTEdWQlFXZENPRUlzVFVGQlFVRXNRMEZCUVVFc1EwRkZNVUlzVDBGQlFTeE5RVVI1UWk5RUxFbEJRVUZCTEVOQlFVdHRReXhuUWtGQlFVRXNRMEZCYVVJMFFpeE5RVUZCUVN4RFFVRlBNMElzVlVGQlFVRXNRMEZCUVVFc1EwRkZNME53UXl4SlFVRkJRU3hEUVVGTFowSXNTVUZCUVVFc1JVRkJRVUVzUTBGRFVIRkNMRWxCUVVGQkxFTkJRVXRETEVWQlFVRkJMRVZCUTB0MFF5eEpRVUZCUVN4RFFVRkxhMFlzUjBGQlFVRXNRMEZCU1c1Q0xFMUJRVUZCTEVOQlFWRjZRaXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVelFuZENMRXRCUVVGQkxFTkJRVTFzUXl4TFFVRkJRU3hGUVVOSlFTeExRVUZCUVN4RFFVRkJRU3hEUVVsU05VSXNTVUZCUVVFc1EwRkJTM2xETEdkQ1FVRkJRU3hEUVVGcFFuTkNMRTFCUVVGQkxFTkJRVTh6UWl4VlFVRkJRU3hEUVVGQlFTeERRVU12UWtNc1NVRkJRVUVzUTBGQlMwTXNSVUZCUVVFc1JVRkRTM1JETEVsQlFVRkJMRU5CUVV0clJpeEhRVUZCUVN4RFFVRkpia0lzVFVGQlFVRXNRMEZCVVhwQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVE5DZDBJc1MwRkJRVUVzUTBGQlRXeERMRXRCUVVGQkxFVkJRMGxCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzWkNOVUlzU1VGQlFVRXNRMEZCUzNOR0xFMUJRVUZCTEVOQlFWTXNVMEZCVlhaQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUTNCQ0xFOUJRVThzU1VGQlNXcERMRTlCUVVGQkxFTkJRVkVzUTBGQlEwTXNUMEZCUVVFc1EwRkJVME1zVFVGQlFVRXNSMEZCUVVFc1EwRkRla0pvUXl4SlFVRkJRU3hEUVVGTFowSXNTVUZCUVVFc1JVRkJRVUVzUTBGQlQzRkNMRWxCUVVGQkxFTkJRVXRETEVWQlFVRkJMRVZCUVVGQkxFTkJRMUpCTEVWQlFVRkJMRU5CUVVkRExHZENRVUZCUVN4RFFVRnBRa01zVVVGQlFVRXNRMEZCVTNWQ0xFMUJRVUZCTEVOQlFVOHpRaXhWUVVGQlFTeERRVUZCUVN4RlFVTnlRMG9zVFVGQlFVRXNRMEZCVHl4elFrRkJRU3hEUVVGQkxFTkJSMWdzU1VGQlNXOUNMRmRCUVVGQkxFTkJRV05rTEVWQlFVRkJMRU5CUVVkakxGZEJRVUZCTEVOQlFWbFhMRTFCUVVGQkxFTkJRVTh6UWl4VlFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlFTeERRVVZ3UkdkQ0xGZEJRVUZCTEVOQlFWa3pRaXhQUVVGQlFTeEZRVUZWVUN4TFFVRkJRU3hGUVVGQlFTeERRVU5zUW1Nc1RVRkJRVUVzUTBGQlQyUXNTMEZCUVVFc1EwRkJUVVVzVFVGQlFVRXNRMEZCVDFFc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGVFSjNRaXhYUVVGQlFTeERRVUZaUnl4VlFVRkJRU3hGUVVGaGNrTXNTMEZCUVVFc1JVRkJRVUVzUTBGRGNrSmhMRTlCUVVGQkxFTkJRVkVzUTBGQlJYbENMRTFCUVVGQkxFTkJRVkVzVVVGQlFTeERRVUZWVVN4VFFVRkJRU3hEUVVGQlFTeFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkb1F5eEpRVU5KYWtRc1QwRkJRVUVzUTBGRVVYRkRMRmRCUVVGQkxFTkJRVmxGTEZkQlFVRkJMRU5CUVZsVExFMUJRVUZCTEVOQlFVOHpRaXhWUVVGQlFTeERRVUZCUVN4RFFVTjJRamhDTEZWQlFVRkJMRVZCUVVGQkxFTkJRMmhDUml4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGRmFFSnFSQ3hQUVVGQlFTeERRVUZSVlN4UFFVRkJRU3hGUVVGWFVDeExRVUZCUVN4RlFVRkJRU3hEUVVObVl5eE5RVUZCUVN4RFFVRlBaQ3hMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDRRbUlzVDBGQlFVRXNRMEZCVVU4c1UwRkJRVUVzUlVGQllVb3NTMEZCUVVFc1JVRkJRVUVzUTBGRGFrSXNTVUZCU1N0RExFMUJRVUZCTEVOQlFWTXZReXhMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVTjBRamhDTEV0QlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5hTEVkQlFVbGpMRTFCUVVGQkxFTkJRVkVzUTBGRFVpeEhRVUZKZEVVc2EwSkJRVUZCTEVOQlFXTXdSU3hYUVVGQlFTeERRVUZaU2l4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRlBUQ3hOUVVGQlFTeERRVUZQZDBJc1MwRkJRVUVzUTBGQlFVRXNRMEZCVVN4RFFVTjJSSEJETEV0QlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5TTEVsQlFVc3NTVUZCU1hGRExFTkJRVUZCTEVsQlFVdDZRaXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVOcVFtZENMRTFCUVVGQkxFTkJRVTlITEV0QlFVRkJMRU5CUVUxdlFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTGVrSXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCVFhWRExFTkJRVUZCTEVOQlFVRkJMRU5CUjI1RExFZEJRVUVzUTBGRFNTeEpRVUZKYUVJc1IwRkJRVUVzUTBGQlRWQXNUVUZCUVVFc1EwRkJUM0ZDTEUxQlFVRkJMRU5CUVU5eVFpeE5RVUZCUVN4RFFVRlBSeXhMUVVGQlFTeERRVUZCUVN4RFFVVXZRa2tzUjBGQlFVRXNRMEZCU1M5RExFOUJRVUZCTEVWQlFWZG5SU3hOUVVGQlFTeEZRVUZCUVN4RFFVTllla0lzVTBGQlFVRXNRMEZCVlhsQ0xFMUJRVUZCTEVOQlFVOXlSU3hOUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVVXJReXhMUVVGQlFTeERRVUZQU0N4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRlBjMElzVFVGQlFVRXNRMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlIzSkZiRUlzUjBGQlFVRXNRMEZCU1d4RUxGTkJRVUZCTEVWQlFXRnRSU3hOUVVGQlFTeEZRVUZCUVN4RFFVTmlla0lzVTBGQlFVRXNRMEZCVlhsQ0xFMUJRVUZCTEVOQlFVOXlSU3hOUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVVXJReXhMUVVGQlFTeERRVUZQU0N4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRlBjMElzVFVGQlFVRXNRMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJYWkZMRTFCUVU4NVJDeExRVUZCUVN4RFFVRkJRU3hEUVVOTVNTeE5RVUZCUVN4RFFVRlBTaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsSkxFTkJRVUVzUlVGQlptMURMRTFCUVVGQkxFTkJRVTlpTEVsQlFVRkJMRVZCUVhsQ0xFTkJRVUVzUlVGQlZFTXNTMEZCUVVFc1JVRkRka0pqTEUxQlFVRkJMRU5CUVU5TExGRkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYQkNVaXhMUVVGQlFTeERRVUZOYkVNc1MwRkJRVUVzUlVGQlFVRXNRMEZEVEVrc1RVRkJRVUVzUTBGQlQwb3NTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxia0kxUWl4SlFVRkJRU3hEUVVGTE1rWXNTVUZCUVVFc1EwRkJUeXhUUVVGVk5VSXNUVUZCUVVFc1EwRkJVeXhEUVVGRk0wSXNWVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVWxoTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSmMwTXNTMEZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVUVzUTBGQlFTeERRVVV2UkN4UFFVRlBka1lzU1VGQlFVRXNRMEZCUzNWRkxHTkJRVUZCTEVOQlFXVXNRMEZCUlc1RExGVkJRVUZCTEVOQlFWa3lRaXhOUVVGQlFTeERRVUZQTTBJc1ZVRkJRVUVzUTBGQldXRXNTMEZCUVVFc1EwRkJUMk1zVFVGQlFVRXNRMEZCVDNkQ0xFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVk5zUkN4SlFVRkJRU3hEUVVGTGRVUXNUVUZCUVVFc1JVRkRkRVVzUTBGQlFTeEZRVUZXUVN4TlFVRkJRU3hEUVVOUE5VWXNTVUZCUVVFc1EwRkJTM0ZHTEUxQlFVRkJMRU5CUVU5MFFpeE5RVUZCUVN4RFFVRkJRU3hEUVVkYUwwUXNTVUZCUVVFc1EwRkJTM05HTEUxQlFVRkJMRU5CUVU5MlFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVc3ZRaTlFTEVsQlFVRkJMRU5CUVVzMFJDeE5RVUZCUVN4RFFVRlRMRk5CUVZWSExFMUJRVUZCTEVOQlFVRkJMRU5CUTNCQ0xFbEJRVWxvUWl4VlFVRkJRU3hEUVVGaExFTkJRVUVzUTBGQlIwUXNXVUZCUVVFc1EwRkJaU3hEUVVGQkxFTkJRMjVETEU5QlFVOHNTVUZCU1doQ0xFOUJRVUZCTEVOQlFWRXNRMEZCUTBNc1QwRkJRVUVzUTBGQlUwTXNUVUZCUVVFc1IwRkJRVUVzUTBGRGVrSm9ReXhKUVVGQlFTeERRVUZMWjBRc1NVRkJRVUVzUTBGQlMyVXNUVUZCUVVFc1EwRkJRVUVzUTBGQlVURkNMRWxCUVVGQkxFTkJRVXRqTEV0QlFVRkJMRVZCUVVGQkxFTkJRMjVDYmtRc1NVRkJRVUVzUTBGQlMyZENMRWxCUVVGQkxFVkJRVUZCTEVOQlFVOXhRaXhKUVVGQlFTeERRVUZMUXl4RlFVRkJRU3hGUVVGQlFTeERRVU5pTEVsQlFVbGpMRmRCUVVGQkxFTkJRV05rTEVWQlFVRkJMRU5CUVVkakxGZEJRVUZCTEVOQlFWbFhMRTFCUVVGQkxFTkJRVTh6UWl4VlFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlFTeERRVU5vUkdsQ0xFdEJRVUZCTEVOQlFWRkVMRmRCUVVGQkxFTkJRVmxGTEZkQlFVRkJMRU5CUVZsVExFMUJRVUZCTEVOQlFVOHpRaXhWUVVGQlFTeERRVUZCUVN4RFFWVXpReXhIUVZKQlowSXNWMEZCUVVFc1EwRkJXVE5DTEU5QlFVRkJMRVZCUVZWUUxFdEJRVUZCTEVWQlFVRkJMRU5CUTJ4Q1l5eE5RVUZCUVN4RFFVRlBaQ3hMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDRRbmRDTEZkQlFVRkJMRU5CUVZsSExGVkJRVUZCTEVWQlFXRnlReXhMUVVGQlFTeEZRVUZCUVN4RFFVTnlRbUVzVDBGQlFVRXNRMEZCVVN4RFFVRkZlVUlzVFVGQlFVRXNRMEZCVVN4UlFVRkJMRU5CUVZWV0xGbEJRVUZCTEVOQlFVRkJMRmxCUVVGQkxFTkJRV05YTEVWQlFVRkJMRU5CUVVsWUxGbEJRVUZCTEVWQlFXZENReXhWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVYzVSRzlETEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRnFReXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUTNSQ1NpeFZRVUZCUVN4RFFVRmhTU3hMUVVGQlFTeERRVUZOVHl4TlFVRkJRU3hEUVVOdVFpeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFbEJRVkZTTEV0QlFVRkJMRU5CUVU4c1EwRkRjRUlzU1VGQlNYQkRMRTlCUVVGQkxFTkJRVlZ6UXl4TFFVRkJRU3hEUVVGTlR5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMUlN4SFFVRkJRU3hEUVVGQlFTeERRVU5vUXpsRExFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVlZRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlJSTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxHdERRVUZCUVN4RlFVRjVRMVFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQxRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVWaUxFOUJRVUZCTEVOQlFWRlBMRk5CUVVGQkxFVkJRVmxLTEV0QlFVRkJMRVZCUVVGQkxFTkJRMmhDTkVJc1dVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1NVRkpVQ3hEUVVORVF5eFZRVUZCUVN4RFFVRmhMRU5CUVVFc1EwRkRZaXhKUVVGSmFFTXNUMEZCUVVFc1EwRkJWWE5ETEV0QlFVRkJMRU5CUVUxUExFMUJRVUZCTEVOQlFVOVVMRXRCUVVGQkxFTkJRVTFWTEVkQlFVRkJMRU5CUVVGQkxFTkJRMnBET1VNc1QwRkJRVUVzUTBGQlVWVXNUMEZCUVVFc1JVRkJWVkFzUzBGQlFVRXNSVUZCUVVFc1EwRkRaRkVzVDBGQlFVRXNRMEZCVVVNc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc2EwTkJRVUZCTEVWQlFYbERWQ3hMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRzUldJc1QwRkJRVUVzUTBGQlVVOHNVMEZCUVVFc1JVRkJXVW9zUzBGQlFVRXNSVUZCUVVFc1EwRkRhRUkwUWl4WlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkVVowSXNTMEZCUVVFc1EwRkJUV3hETEV0QlFVRkJMRVZCUVVGQkxFTkJRMHhKTEUxQlFVRkJMRU5CUVU5S0xFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVnByUXl4TFFVRkJRU3hEUVVGTmJFTXNTMEZCUVVFc1JVRkJRVUVzUTBGRFRFa3NUVUZCUVVFc1EwRkJUMG9zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMV2pWQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsImNvbnN0e0Jhc2U6QmFzZSxGdW5jOl9fRnVuY18xNyxOZXVyYWxOZXR3b3JrOl9fTmV1cmFsTmV0d29ya18xNyxNYXRyaXg6X19NYXRyaXhfMTcsVGVtcGxhdGU6X19UZW1wbGF0ZV8xNyxDb21wb25lbnRzOl9fQ29tcG9uZW50c18xNyxDb21wcmVzc2lvbjpfX0NvbXByZXNzaW9uXzE3LENvbG9yUGlja2VyOl9fQ29sb3JQaWNrZXJfMTcsQXJyYXlMaWJyYXJ5Ol9fQXJyYXlMaWJyYXJ5XzE3LEFuYWx5c2lzTGlicmFyeTpfX0FuYWx5c2lzTGlicmFyeV8xNyxPYmplY3RzTGlicmFyeTpfX09iamVjdHNMaWJyYXJ5XzE3LE1hdGhzTGlicmFyeTpfX01hdGhzTGlicmFyeV8xN309XyRiYXNlXzE2O3ZhciBfJGJyb3dzZXJfMTc9e0Jhc2U6QmFzZSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogRnVuYzpGdW5jICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IE5ldXJhbE5ldHdvcms6TmV1cmFsTmV0d29yayAqLy8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBNYXRyaXg6TWF0cml4ICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IFRlbXBsYXRlOlRlbXBsYXRlICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IENvbXBvbmVudHM6Q29tcG9uZW50cyAqLy8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBDb21wcmVzc2lvbjpDb21wcmVzc2lvbiAqLy8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBDb2xvclBpY2tlcjpDb2xvclBpY2tlciAqL0luZGV4ZWRMaWJyYXJ5Ol8kSW5kZXhlZExpYnJhcnlfMTksQXBwTGlicmFyeTpfJEFwcExpYnJhcnlfMTgsQXJyYXlMaWJyYXJ5Ol9fQXJyYXlMaWJyYXJ5XzE3LC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBBbmFseXNpc0xpYnJhcnk6QW5hbHlzaXNMaWJyYXJ5ICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IE9iamVjdHNMaWJyYXJ5Ok9iamVjdHNMaWJyYXJ5ICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IE1hdGhzTGlicmFyeTpNYXRoc0xpYnJhcnkgKi99O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUp5YjNkelpYSXVhbk1pWFN3aWJtRnRaWE1pT2xzaVFtRnpaU0lzSWtaMWJtTWlMQ0pPWlhWeVlXeE9aWFIzYjNKcklpd2lUV0YwY21sNElpd2lWR1Z0Y0d4aGRHVWlMQ0pEYjIxd2IyNWxiblJ6SWl3aVEyOXRjSEpsYzNOcGIyNGlMQ0pEYjJ4dmNsQnBZMnRsY2lJc0lrRnljbUY1VEdsaWNtRnllU0lzSWtGdVlXeDVjMmx6VEdsaWNtRnllU0lzSWs5aWFtVmpkSE5NYVdKeVlYSjVJaXdpVFdGMGFITk1hV0p5WVhKNUlpd2ljbVZ4ZFdseVpTSXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0pKYm1SbGVHVmtUR2xpY21GeWVTSXNJa0Z3Y0V4cFluSmhjbmtpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEV0QlFVRXNRMEZCVFVFc1NVRkJRVUVzUTBGRFJrRXNTVUZCUVVFc1EwRkJTVU1zU1VGQlFVRXNRMEZEU2tFc1UwRkJRVUVzUTBGQlNVTXNZVUZCUVVFc1EwRkRTa0VzYTBKQlFVRkJMRU5CUVdGRExFMUJRVUZCTEVOQlEySkJMRmRCUVVGQkxFTkJRVTFETEZGQlFVRkJMRU5CUTA1QkxHRkJRVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRMUpCTEdWQlFVRkJMRU5CUVZWRExGZEJRVUZCTEVOQlExWkJMR2RDUVVGQlFTeERRVUZYUXl4WFFVRkJRU3hEUVVOWVFTeG5Ra0ZCUVVFc1EwRkJWME1zV1VGQlFVRXNRMEZEV0VFc2FVSkJRVUZCTEVOQlFWbERMR1ZCUVVGQkxFTkJRMXBCTEc5Q1FVRkJRU3hEUVVGbFF5eGpRVUZCUVN4RFFVTm1RU3h0UWtGQlFVRXNRMEZCWTBNc1dVRkJRVUVzUTBGRFpFRXNhVUpCUVVGQkxFTkJRVUZCTEVOQlEwRkRMRk5CUnpKQ0xFTkJSUzlDUXl4blFrRkJUME1zUTBGQlZTeERRVU5pWkN4SlFVRkJRU3hEUVVGQlFTeEpRVUZCUVN3d1ZVRlJRV1VzWTBGQlFVRXNRMEZCUVVFc2JVSkJRVUZCTEVOQlEwRkRMRlZCUVVGQkxFTkJRVUZCTEdWQlFVRkJMRU5CUTBGU0xGbEJRVUZCTEVOQlFVRkJMR2xDUVVGQlFTd3lTMEZIUVVjc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwidmFyIF8kZGF0YV8yNT1be25hbWU6XCJNYW1hJ1MgUHJpZGUgUHJlbWl1bSBQYXJib2lsZWQgUmljZSA1MCBLZ1wiLHByaWNlOjVlNCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJSaWNlXCIsXCJHcmFpbnNcIixcIk1hbWEncyBQcmlkZVwiXSx0YWdzOltcIlJpY2VcIixcIkdyYWluc1wiLFwiTWFtYSdzIFByaWRlXCJdLGltYWdlOlwiaHR0cHM6Ly9uZy5qdW1pYS5pcy91bnNhZmUvZml0LWluLzUwMHg1MDAvZmlsdGVyczpmaWxsKHdoaXRlKS9wcm9kdWN0Lzc5LzYxNTQ4NC8xLmpwZz82MjExXCIsZGVzY3JpcHRpb246W1wiIFNLVTogTUEwODNGRjFCRUZQOE5BRkFNWlwiLFwiQ29sb3I6IFdoaXRlXCIsXCJNYWluIE1hdGVyaWFsOiBQYXJib2lsZWQgUmljZVwiLFwiTW9kZWw6IFJpY2VcIixcIlByb2R1Y3Rpb24gQ291bnRyeTogTmlnZXJpYVwiLFwiUHJvZHVjdCBMaW5lOiBCbGVrbiBTdG9yZXNcIixcIldlaWdodCAoa2cpOiA1MFwiXX0se25hbWU6XCJCaWcgUGFyYm9pbGVkIFJpY2UgMTBrZ1wiLHByaWNlOjJlNCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJSaWNlXCIsXCJHcmFpbnNcIl0sdGFnczpbXCJSaWNlXCIsXCJHcmFpbnNcIixcIlBhcmJvaWxlZFwiXSxpbWFnZTpcImh0dHBzOi8vbmcuanVtaWEuaXMvdW5zYWZlL2ZpdC1pbi81MDB4NTAwL2ZpbHRlcnM6ZmlsbCh3aGl0ZSkvcHJvZHVjdC8xNy84ODUzMTUvMS5qcGc/Nzk0OVwiLGRlc2NyaXB0aW9uOltcIlNLVTogQkk0NDRGRjBBTkNFQk5BRkFNWlwiLFwiQ29sb3I6IEJyb3duXCIsXCJQcm9kdWN0aW9uIENvdW50cnk6IE5pZ2VyaWFcIixcIldlaWdodCAoa2cpOiAxMFwiXX0se25hbWU6XCI1MCA1MCBTb3lhIEN1c3RhcmQgUG93ZGVyIDJrZ1wiLHByaWNlOjFlNCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJDdXN0YXJkXCIsXCJQb3dkZXJcIl0sdGFnczpbXCJTb3lhXCIsXCJDdXN0YXJkXCIsXCJQb3dkZXJcIl0saW1hZ2U6XCJodHRwczovL25nLmp1bWlhLmlzL3Vuc2FmZS9maXQtaW4vNTAweDUwMC9maWx0ZXJzOmZpbGwod2hpdGUpL3Byb2R1Y3QvMzgvMzc1MTI0LzEuanBnPzMwMjNcIixkZXNjcmlwdGlvbjpbXCJTS1U6IDUwNzYwR1IwTVVJRk9OQUZBTVpcIixcIk5BRkRBQyBOby46IDA4LTU5ODdMXCIsXCJDb2xvcjogQnJvd25cIixcIk1haW4gTWF0ZXJpYWw6IFNveWEgTWlsa1wiLFwiTW9kZWw6IEN1c3RhcmRcIixcIlByb2R1Y3Rpb24gQ291bnRyeTogTmlnZXJpYVwiLFwiUHJvZHVjdCBMaW5lOiBEYWJhbWF0XCIsXCJXZWlnaHQgKGtnKTogMlwiXX0se25hbWU6XCJJbmRvbWllIENoaWNrZW4gRmxhdm91ciBJbnN0YW50IE5vb2RsZXMgLTQwIFBhY2tzIFggNzBnXCIscHJpY2U6MjMwMCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJJbmRvbWllXCIsXCJOb2RkbGVzXCJdLHRhZ3M6W1wiSW5kb21pZVwiLFwiTm9kZGxlc1wiLFwiQ2hpY2tlbiBGbGF2b3VyXCJdLGltYWdlOlwiaHR0cHM6Ly9uZy5qdW1pYS5pcy91bnNhZmUvZml0LWluLzUwMHg1MDAvZmlsdGVyczpmaWxsKHdoaXRlKS9wcm9kdWN0LzE5LzEyNDg1NC8xLmpwZz8zNTA2XCIsZGVzY3JpcHRpb246W1wiU0tVOiBJTjE0N0dSMEJEV1RZTkFGQU1aXCIsXCJOQUZEQUMgTm8uOiBOL0FcIixcIlByb2R1Y3Rpb24gQ291bnRyeTogTmlnZXJpYVwiLFwiUHJvZHVjdCBMaW5lOiB0ZWNobHVtXCIsXCJXZWlnaHQgKGtnKTogMC41XCJdfSx7bmFtZTpcIkxhaGRhIEdvbGRlbiBTb3lhIE9pbCAzIExpdHJlXCIscHJpY2U6MjMwMCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJTb3lhIE9pbFwiXSx0YWdzOltcIk9pbFwiLFwiU295YVwiLFwiTGFoZGFcIixcIkdvbGRlblwiXSxpbWFnZTpcImh0dHBzOi8vbmcuanVtaWEuaXMvdW5zYWZlL2ZpdC1pbi81MDB4NTAwL2ZpbHRlcnM6ZmlsbCh3aGl0ZSkvcHJvZHVjdC82OS80NDg0NDQvMS5qcGc/ODAxOVwiLGRlc2NyaXB0aW9uOltcIlNLVTogS0E5NDVHUjE1Q0lSR05BRkFNWlwiLFwiTkFGREFDIE5vLjogbmlsbFwiLFwiUHJvZHVjdGlvbiBDb3VudHJ5OiBOaWdlcmlhXCIsXCJXZWlnaHQgKGtnKTogM1wiXX0se25hbWU6XCJOb3NhayBGYW1pbGkgUXVhbGl0eSBQYWxtIE9pbFwiLHByaWNlOjIzMDAscXVhbnRpdHk6NTAsY2F0ZWdvcnk6W1wiT2lsXCIsXCJQYWxtIE9pbFwiXSx0YWdzOltcIk9pbFwiLFwiUGFsbVwiLFwiTm9zYWtcIixcIkZhbWlsaVwiXSxpbWFnZTpcImh0dHBzOi8vbmcuanVtaWEuaXMvdW5zYWZlL2ZpdC1pbi81MDB4NTAwL2ZpbHRlcnM6ZmlsbCh3aGl0ZSkvcHJvZHVjdC8xNy8zNTUwMjYvMS5qcGc/Njg0NVwiLGRlc2NyaXB0aW9uOltcIlNLVTogTk81MjJHUjBBQlo4Mk5BRkFNWlwiLFwiTkFGREFDIE5vLjogTi9BXCIsXCJNYWluIE1hdGVyaWFsOiBQQUxNIEtFUk5FTFwiLFwiUHJvZHVjdGlvbiBDb3VudHJ5OiBOaWdlcmlhXCIsXCJXZWlnaHQgKGtnKTogMlwiXX0se25hbWU6XCJHb2xkZW4gUGVubnkgU3BhZ2V0dGkgWDIwICgxIENhcnRvbilcIixwcmljZToyMzAwLHF1YW50aXR5OjUwLGNhdGVnb3J5OltcIlNwYWdldHRpXCIsXCJHb2xkZW4gUGVubnlcIl0sdGFnczpbXCJTcGFnZXR0aVwiLFwiR29sZGVuIFBlbm55XCJdLGltYWdlOlwiaHR0cHM6Ly9uZy5qdW1pYS5pcy91bnNhZmUvZml0LWluLzUwMHg1MDAvZmlsdGVyczpmaWxsKHdoaXRlKS9wcm9kdWN0LzkxLzExODA2NS8xLmpwZz81NzgzXCIsZGVzY3JpcHRpb246W1wiU0tVOiBHTzEwNkdSMUk4WjVETkFGQU1aXCIsXCJOQUZEQUMgTm8uOiBBMS0wMjkxXCIsXCJQcm9kdWN0aW9uIENvdW50cnk6IE5pZ2VyaWFcIixcIlByb2R1Y3QgTGluZTogQXppNmZhcm1cIixcIldlaWdodCAoa2cpOiAyLjVcIl19LHtuYW1lOlwiQmFtYSBNYXlvbm5haXNlIC00NzNtbFwiLHByaWNlOjIzMDAscXVhbnRpdHk6NTAsY2F0ZWdvcnk6W1wiQmFtYVwiLFwiTWF5b25uYWlzZVwiXSx0YWdzOltcIkJhbWFcIixcIk1heW9ubmFpc2VcIl0saW1hZ2U6XCJodHRwczovL25nLmp1bWlhLmlzL3Vuc2FmZS9maXQtaW4vNTAweDUwMC9maWx0ZXJzOmZpbGwod2hpdGUpL3Byb2R1Y3QvODgvMDQ2NzM1LzEuanBnPzAzOTNcIixkZXNjcmlwdGlvbjpbXCJTS1U6IEJBMDk5R1IxR0Y1QU5OQUZBTVpcIixcIk5BRkRBQyBOby46IDAxIC0gMDQ3NlwiLFwiUHJvZHVjdCBMaW5lOiBDSFlDTEFTSUMgTUFMTFwiLFwiV2VpZ2h0IChrZyk6IDk0NlwiXX0se25hbWU6XCJQZWFrIEluc3RhbmQgRnVsbCBDcmVhbSBNaWxrIFBvd2RlciBUaW4tIDQwMGcgWCA2XCIscHJpY2U6MjMwMCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJQZWFrXCIsXCJNaWxrXCJdLHRhZ3M6W1wiUG93ZGVyXCIsXCJNaWxrXCIsXCJQZWFrXCJdLGltYWdlOlwiaHR0cHM6Ly9uZy5qdW1pYS5pcy91bnNhZmUvZml0LWluLzUwMHg1MDAvZmlsdGVyczpmaWxsKHdoaXRlKS9wcm9kdWN0LzUxLzUwNzU5My8xLmpwZz80ODU0XCIsZGVzY3JpcHRpb246W1wiU0tVOiBQRTI5NEdSMFVOWklITkFGQU1aXCIsXCJOQUZEQUMgTm8uOiAwMS02MjE1XCIsXCJQcm9kdWN0IExpbmU6IE5vYmxlJ3MgYW5nZWwgTWFydFwiLFwiV2VpZ2h0IChrZyk6IDAuNFwiXX0se25hbWU6XCJPdmFsdGluZSBDaG9jb2xhdGUgVGVhIFRpbiA0MDBHIFg2XCIscHJpY2U6MjMwMCxxdWFudGl0eTo1MCxjYXRlZ29yeTpbXCJPdmFsdGluZVwiLFwiQ2hvY29sYXRlXCIsXCJUZWFcIl0sdGFnczpbXCJUaW5cIixcIlRlYVwiLFwiQ2hvY29sYXRlXCIsXCJPdmFsdGluZVwiXSxpbWFnZTpcImh0dHBzOi8vbmcuanVtaWEuaXMvdW5zYWZlL2ZpdC1pbi81MDB4NTAwL2ZpbHRlcnM6ZmlsbCh3aGl0ZSkvcHJvZHVjdC8xNy8yMDc1OTMvMS5qcGc/NTcwMVwiLGRlc2NyaXB0aW9uOltcIlNLVTogT1YzNjFHUjBBOFRHUE5BRkFNWlwiLFwiTkFGREFDIE5vLjogMDEtMTQzNFwiLFwiUHJvZHVjdCBMaW5lOiBOb2JsZSdzIGFuZ2VsIE1hcnRcIixcIldlaWdodCAoa2cpOiAwLjVcIl19XTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1SaGRHRXVhbk1pWFN3aWJtRnRaWE1pT2xzaWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0ltNWhiV1VpTENKd2NtbGpaU0lzSW5GMVlXNTBhWFI1SWl3aVkyRjBaV2R2Y25raUxDSjBZV2R6SWl3aWFXMWhaMlVpTENKa1pYTmpjbWx3ZEdsdmJpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQmFVOUJRU3hoUVVGUFF5eERRV3BQVFN4RFFVTlVMRU5CUTBsRExFbEJRVUZCTEVOQlFVMHNNa05CUVVFc1EwRkRUa01zUzBGQlFVRXNRMEZCVHl4SFFVRkJMRU5CUTFCRExGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTldReXhSUVVGQlFTeERRVUZWTEVOQlEwNHNUVUZCUVN4RFFVTkJMRkZCUVVFc1EwRkRRU3hqUVVGQkxFTkJRVUVzUTBGRlNrTXNTVUZCUVVFc1EwRkJUU3hEUVVOR0xFMUJRVUVzUTBGRFFTeFJRVUZCTEVOQlEwRXNZMEZCUVN4RFFVRkJMRU5CUlVwRExFdEJRVUZCTEVOQlFVOHNORVpCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWVN4RFFVTlVMREpDUVVGQkxFTkJRMEVzWTBGQlFTeERRVU5CTEN0Q1FVRkJMRU5CUTBFc1lVRkJRU3hEUVVOQkxEWkNRVUZCTEVOQlEwRXNORUpCUVVFc1EwRkRRU3hwUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZIVWl4RFFVTkpUaXhKUVVGQlFTeERRVUZOTEhsQ1FVRkJMRU5CUTA1RExFdEJRVUZCTEVOQlFVOHNSMEZCUVN4RFFVTlFReXhSUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZEVmtNc1VVRkJRVUVzUTBGQlZTeERRVU5PTEUxQlFVRXNRMEZEUVN4UlFVRkJMRU5CUVVFc1EwRkZTa01zU1VGQlFVRXNRMEZCVFN4RFFVTkdMRTFCUVVFc1EwRkRRU3hSUVVGQkxFTkJRMEVzVjBGQlFTeERRVUZCTEVOQlJVcERMRXRCUVVGQkxFTkJRVThzTkVaQlFVRXNRMEZEVUVNc1YwRkJRVUVzUTBGQllTeERRVU5VTERCQ1FVRkJMRU5CUTBFc1kwRkJRU3hEUVVOQkxEWkNRVUZCTEVOQlEwRXNhVUpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSMUlzUTBGRFNVNHNTVUZCUVVFc1EwRkJUU3dyUWtGQlFTeERRVU5PUXl4TFFVRkJRU3hEUVVGUExFZEJRVUVzUTBGRFVFTXNVVUZCUVVFc1EwRkJWU3hGUVVGQkxFTkJRMVpETEZGQlFVRkJMRU5CUVZVc1EwRkRUaXhUUVVGQkxFTkJRMEVzVVVGQlFTeERRVUZCTEVOQlJVcERMRWxCUVVGQkxFTkJRVTBzUTBGRFJpeE5RVUZCTEVOQlEwRXNVMEZCUVN4RFFVTkJMRkZCUVVFc1EwRkJRU3hEUVVWS1F5eExRVUZCUVN4RFFVRlBMRFJHUVVGQkxFTkJRMUJETEZkQlFVRkJMRU5CUVdFc1EwRkRWQ3d3UWtGQlFTeERRVU5CTEhOQ1FVRkJMRU5CUTBFc1kwRkJRU3hEUVVOQkxEQkNRVUZCTEVOQlEwRXNaMEpCUVVFc1EwRkRRU3cyUWtGQlFTeERRVU5CTEhWQ1FVRkJMRU5CUTBFc1owSkJRVUVzUTBGQlFTeERRVUZCTEVOQlIxSXNRMEZEU1U0c1NVRkJRVUVzUTBGQlRTeDVSRUZCUVN4RFFVTk9ReXhMUVVGQlFTeERRVUZQTEVsQlFVRXNRMEZEVUVNc1VVRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlExWkRMRkZCUVVGQkxFTkJRVlVzUTBGRFRpeFRRVUZCTEVOQlEwRXNVMEZCUVN4RFFVRkJMRU5CUlVwRExFbEJRVUZCTEVOQlFVMHNRMEZEUml4VFFVRkJMRU5CUTBFc1UwRkJRU3hEUVVOQkxHbENRVUZCTEVOQlFVRXNRMEZGU2tNc1MwRkJRVUVzUTBGQlR5dzBSa0ZCUVN4RFFVTlFReXhYUVVGQlFTeERRVUZoTEVOQlExUXNNRUpCUVVFc1EwRkRRU3hwUWtGQlFTeERRVU5CTERaQ1FVRkJMRU5CUTBFc2RVSkJRVUVzUTBGRFFTeHJRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkhVaXhEUVVOSlRpeEpRVUZCUVN4RFFVRk5MQ3RDUVVGQkxFTkJRMDVETEV0QlFVRkJMRU5CUVU4c1NVRkJRU3hEUVVOUVF5eFJRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkRWa01zVVVGQlFVRXNRMEZCVlN4RFFVTk9MRlZCUVVFc1EwRkJRU3hEUVVWS1F5eEpRVUZCUVN4RFFVRk5MRU5CUTBZc1MwRkJRU3hEUVVOQkxFMUJRVUVzUTBGRFFTeFBRVUZCTEVOQlEwRXNVVUZCUVN4RFFVRkJMRU5CUlVwRExFdEJRVUZCTEVOQlFVOHNORVpCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWVN4RFFVTlVMREJDUVVGQkxFTkJRMEVzYTBKQlFVRXNRMEZEUVN3MlFrRkJRU3hEUVVOQkxHZENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVZFNMRU5CUTBsT0xFbEJRVUZCTEVOQlFVMHNLMEpCUVVFc1EwRkRUa01zUzBGQlFVRXNRMEZCVHl4SlFVRkJMRU5CUTFCRExGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTldReXhSUVVGQlFTeERRVUZWTEVOQlEwNHNTMEZCUVN4RFFVTkJMRlZCUVVFc1EwRkJRU3hEUVVWS1F5eEpRVUZCUVN4RFFVRk5MRU5CUTBZc1MwRkJRU3hEUVVOQkxFMUJRVUVzUTBGRFFTeFBRVUZCTEVOQlEwRXNVVUZCUVN4RFFVRkJMRU5CUlVwRExFdEJRVUZCTEVOQlFVOHNORVpCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWVN4RFFVTlVMREJDUVVGQkxFTkJRMEVzYVVKQlFVRXNRMEZEUVN3MFFrRkJRU3hEUVVOQkxEWkNRVUZCTEVOQlEwRXNaMEpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSMUlzUTBGRFNVNHNTVUZCUVVFc1EwRkJUU3h6UTBGQlFTeERRVU5PUXl4TFFVRkJRU3hEUVVGUExFbEJRVUVzUTBGRFVFTXNVVUZCUVVFc1EwRkJWU3hGUVVGQkxFTkJRMVpETEZGQlFVRkJMRU5CUVZVc1EwRkRUaXhWUVVGQkxFTkJRMEVzWTBGQlFTeERRVUZCTEVOQlJVcERMRWxCUVVGQkxFTkJRVTBzUTBGRFJpeFZRVUZCTEVOQlEwRXNZMEZCUVN4RFFVRkJMRU5CUlVwRExFdEJRVUZCTEVOQlFVOHNORVpCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWVN4RFFVTlVMREJDUVVGQkxFTkJRMEVzY1VKQlFVRXNRMEZEUVN3MlFrRkJRU3hEUVVOQkxIZENRVUZCTEVOQlEwRXNhMEpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSMUlzUTBGRFNVNHNTVUZCUVVFc1EwRkJUU3gzUWtGQlFTeERRVU5PUXl4TFFVRkJRU3hEUVVGUExFbEJRVUVzUTBGRFVFTXNVVUZCUVVFc1EwRkJWU3hGUVVGQkxFTkJRMVpETEZGQlFVRkJMRU5CUVZVc1EwRkRUaXhOUVVGQkxFTkJRMEVzV1VGQlFTeERRVUZCTEVOQlJVcERMRWxCUVVGQkxFTkJRVTBzUTBGRFJpeE5RVUZCTEVOQlEwRXNXVUZCUVN4RFFVRkJMRU5CUlVwRExFdEJRVUZCTEVOQlFVOHNORVpCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWVN4RFFVTlVMREJDUVVGQkxFTkJRMEVzZFVKQlFVRXNRMEZEUVN3NFFrRkJRU3hEUVVOQkxHdENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVZFNMRU5CUTBsT0xFbEJRVUZCTEVOQlFVMHNiVVJCUVVFc1EwRkRUa01zUzBGQlFVRXNRMEZCVHl4SlFVRkJMRU5CUTFCRExGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTldReXhSUVVGQlFTeERRVUZWTEVOQlEwNHNUVUZCUVN4RFFVTkJMRTFCUVVFc1EwRkJRU3hEUVVWS1F5eEpRVUZCUVN4RFFVRk5MRU5CUTBZc1VVRkJRU3hEUVVOQkxFMUJRVUVzUTBGRFFTeE5RVUZCTEVOQlFVRXNRMEZGU2tNc1MwRkJRVUVzUTBGQlR5dzBSa0ZCUVN4RFFVTlFReXhYUVVGQlFTeERRVUZoTEVOQlExUXNNRUpCUVVFc1EwRkRRU3h4UWtGQlFTeERRVU5CTEd0RFFVRkJMRU5CUTBFc2EwSkJRVUVzUTBGQlFTeERRVUZCTEVOQlIxSXNRMEZEU1U0c1NVRkJRVUVzUTBGQlRTeHZRMEZCUVN4RFFVTk9ReXhMUVVGQlFTeERRVUZQTEVsQlFVRXNRMEZEVUVNc1VVRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlExWkRMRkZCUVVGQkxFTkJRVlVzUTBGRFRpeFZRVUZCTEVOQlEwRXNWMEZCUVN4RFFVTkJMRXRCUVVFc1EwRkJRU3hEUVVWS1F5eEpRVUZCUVN4RFFVRk5MRU5CUTBZc1MwRkJRU3hEUVVOQkxFdEJRVUVzUTBGRFFTeFhRVUZCTEVOQlEwRXNWVUZCUVN4RFFVRkJMRU5CUlVwRExFdEJRVUZCTEVOQlFVOHNORVpCUVVFc1EwRkRVRU1zVjBGQlFVRXNRMEZCWVN4RFFVTlVMREJDUVVGQkxFTkJRMEVzY1VKQlFVRXNRMEZEUVN4clEwRkJRU3hEUVVOQkxHdENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsInZhciBfJGxvY2F0aW9uc18yNj17TGFnb3M6e3N0YXRpb25zOltcIklrb3JvZHVcIixcIlN1cnVsZXJlXCJdLHByaWNlOjJlM30sQWJ1amE6e3N0YXRpb25zOltcIld1c2VcIixcIkd3YWd3YWxhZGFcIl0scHJpY2U6NWUzfSxFbnVndTp7c3RhdGlvbnM6W1wiQWJha3BhXCIsXCJOZXcgSGVhdmVuXCJdLHByaWNlOjVlM319O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbXh2WTJGMGFXOXVjeTVxY3lKZExDSnVZVzFsY3lJNld5SnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lUR0ZuYjNNaUxDSnpkR0YwYVc5dWN5SXNJbkJ5YVdObElpd2lRV0oxYW1FaUxDSkZiblZuZFNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCVFVGQkxHdENRVUZQUXl4RFFVNVhMRU5CUTJSRExFdEJRVUZCTEVOQlFVOHNRMEZCUlVNc1VVRkJRVUVzUTBGQlZTeERRVUZETEZOQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVVFc1EwRkJZVU1zUzBGQlFVRXNRMEZCVHl4SFFVRkJMRU5CUVVFc1EwRkRia1JETEV0QlFVRkJMRU5CUVU4c1EwRkJSVVlzVVVGQlFVRXNRMEZCVlN4RFFVRkRMRTFCUVVFc1EwRkJVU3haUVVGQkxFTkJRVUVzUTBGQlpVTXNTMEZCUVVFc1EwRkJUeXhIUVVGQkxFTkJRVUVzUTBGRGJFUkZMRXRCUVVGQkxFTkJRVThzUTBGQlJVZ3NVVUZCUVVFc1EwRkJWU3hEUVVGRExGRkJRVUVzUTBGQlZTeFpRVUZCTEVOQlFVRXNRMEZCWlVNc1MwRkJRVUVzUTBGQlR5eEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCIvKiByZW1vdmVkOiBjb25zdCBfJGNvdXBvbnNfMjQ9cmVxdWlyZShcIi4uL3N0b3JhZ2UvY291cG9uc1wiKTsgKi87dmFyIF8kY2hlY2tvdXRfMjE9ZnVuY3Rpb24oKXtjb25zdCBzZWxmPXt9O3JldHVybiBzZWxmLmJ1eWVyPXtzdGF0ZTpPYmplY3Qua2V5cyhfJGxvY2F0aW9uc18yNilbMF0sZGVsaXZlcnlUeXBlOlwiRG9vciBkZWxpdmVyeVwifSxzZWxmLmRpc3BsYXk9KGl0ZW1zPT57aWYoMD09T2JqZWN0LmtleXMoaXRlbXMpLmxlbmd0aClyZXR1cm4gdm9pZCBhbGVydChcIllvdSBoYXZlIG5vIGl0ZW0gaW4gQ2FydC4gS2VlcCBzaG9wcGluZ1wiKTtzZWxmLml0ZW1zPWl0ZW1zLHNlbGYucGFnZT1iYXNlLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LXBhZ2VcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1hZGRyZXNzXCIsY2xhc3M6XCJjaGVja291dC1zZWN0aW9uXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LWFkZHJlc3MtdGl0bGVcIixjbGFzczpcImNoZWNrb3V0LXNlY3Rpb24tdGl0bGVcIn0sdGV4dDpcIkVudGVyIHlvdXIgYWRkcmVzc1wifSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNoZWNrb3V0LXNlY3Rpb24tYmxvY2tcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwibGFiZWxcIix0ZXh0OlwiRnVsbCBOYW1lXCJ9LHtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOntuYW1lOlwibmFtZVwiLGNsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1kYXRhXCJ9fV19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1ibG9ja1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJsYWJlbFwiLHRleHQ6XCJTdGF0ZVwifSx7ZWxlbWVudDpcInNlbGVjdFwiLGF0dHJpYnV0ZXM6e25hbWU6XCJzdGF0ZVwiLGNsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1kYXRhXCJ9LG9wdGlvbnM6T2JqZWN0LmtleXMoXyRsb2NhdGlvbnNfMjYpfV19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1ibG9ja1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJsYWJlbFwiLHRleHQ6XCJBZGRyZXNzXCJ9LHtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOntuYW1lOlwiYWRkcmVzc1wiLGNsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1kYXRhXCJ9fV19XX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjaGVja291dC1zZWN0aW9uXCIsaWQ6XCJjaGVja291dC1kZWxpdmVyeVwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjaGVja291dC1zZWN0aW9uLXRpdGxlXCJ9LHRleHQ6XCJEZWxpdmVyeSBUeXBlXCJ9LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1ibG9ja1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJsYWJlbFwiLHRleHQ6XCJUeXBlXCJ9LHtlbGVtZW50Olwic2VsZWN0XCIsYXR0cmlidXRlczp7bmFtZTpcImRlbGl2ZXJ5VHlwZVwiLGNsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1kYXRhXCJ9LG9wdGlvbnM6W1wiRG9vciBkZWxpdmVyeVwiLFwiUGlja3VwIFN0YXRpb25cIl19XX1dfSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNoZWNrb3V0LXNlY3Rpb25cIixpZDpcImNoZWNrb3V0LXBpY2t1cFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjaGVja291dC1zZWN0aW9uLXRpdGxlXCJ9LHRleHQ6XCJQaWNrdXAgU3RhdGlvbnNcIn0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjaGVja291dC1zZWN0aW9uLWJsb2NrXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImxhYmVsXCIsdGV4dDpcIlN0YXRpb25cIn0se2VsZW1lbnQ6XCJzZWxlY3RcIixhdHRyaWJ1dGVzOntuYW1lOlwicGlja3VwU3RhdGlvblwiLGNsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi1kYXRhXCJ9LG9wdGlvbnM6XyRsb2NhdGlvbnNfMjYuTGFnb3Muc3RhdGlvbnN9XX1dfSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNoZWNrb3V0LXNlY3Rpb25cIixpZDpcImNoZWNrb3V0LXNlY3Rpb24tcHJpY2VcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2hlY2tvdXQtc2VjdGlvbi10aXRsZVwifSx0ZXh0OlwiSXRlbXMgaW4gY2FydFwifSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LWl0ZW1zLWNvbnRhaW5lclwifSxjaGlsZHJlbjooKCk9PntsZXQgaXRlbUxpc3Q9W10sY291bnQ9MDtmb3IobGV0IG5hbWUgaW4gaXRlbXMpY291bnQrKyxpdGVtTGlzdC5wdXNoKGJhc2UuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNoZWNrb3V0LWl0ZW1cIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2FydC1pdGVtLWRhdGFcIn0sdGV4dDpjb3VudH0se2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjYXJ0LWl0ZW0tZGF0YVwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJpbWdcIixhdHRyaWJ1dGVzOntjbGFzczpcImNhcnQtaXRlbS1pbWFnZVwiLHNyYzppdGVtc1tuYW1lXS5pbWFnZX19XX0se2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjYXJ0LWl0ZW0tZGF0YVwifSx0ZXh0Oml0ZW1zW25hbWVdLm5hbWV9LHtlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2FydC1pdGVtLWRhdGFcIn0sdGV4dDppdGVtc1tuYW1lXS5jb3VudH0se2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJjYXJ0LWl0ZW0tZGF0YVwifSx0ZXh0Oml0ZW1zW25hbWVdLmNvc3R9XX0pKTtyZXR1cm4gaXRlbUxpc3QudW5zaGlmdChiYXNlLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1oZWFkZXJcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2FydC1oZWFkZXItdGl0bGVcIn0sdGV4dDpcIlMvTlwifSx7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntjbGFzczpcImNhcnQtaGVhZGVyLXRpdGxlXCJ9LHRleHQ6XCJJbWFnZVwifSx7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntjbGFzczpcImNhcnQtaGVhZGVyLXRpdGxlXCJ9LHRleHQ6XCJOYW1lXCJ9LHtlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2FydC1oZWFkZXItdGl0bGVcIn0sdGV4dDpcIkNvdW50XCJ9LHtlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2FydC1oZWFkZXItdGl0bGVcIn0sdGV4dDpcIkNvc3RcIn1dfSkpLGl0ZW1MaXN0fSkoKX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1jb3Vwb24tY29udGFpbmVyXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1jb3Vwb24tYm94XCIscGxhY2VIb2xkZXI6XCJDb3Vwb24gY29kZVwifX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LWNvdXBvbi1idXR0b25cIn0sdGV4dDpcIlVzZSBDb3Vwb25cIn1dfSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LWZlZXMtY29udGFpbmVyXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNoZWNrb3V0LWZlZXNcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwibGFiZWxcIix0ZXh0OlwiSXRlbXMgdG90YWwgRmVlXCJ9LHtlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2lkOlwiY2hlY2tvdXQtaXRlbXMtZmVlXCJ9LHRleHQ6YCR7YmFzZS5hZGRDb21tYVRvTW9uZXkoc2VsZi5nZXRJdGVtc1RvdGFsKCkudG9TdHJpbmcoKSl9KE5HTilgfV19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2hlY2tvdXQtZmVlc1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJsYWJlbFwiLHRleHQ6XCJEZWxpdmVyeSBGZWVcIn0se2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1kZWxpdmVyeS1mZWVcIn0sdGV4dDpgJHtiYXNlLmFkZENvbW1hVG9Nb25leShzZWxmLmdldERlbGl2ZXJ5RmVlKCkudG9TdHJpbmcoKSl9KE5HTilgfV19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2hlY2tvdXQtZmVlc1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJsYWJlbFwiLHRleHQ6XCJUb3RhbFwifSx7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LXRvdGFsXCJ9LHRleHQ6YCR7YmFzZS5hZGRDb21tYVRvTW9uZXkoc2VsZi5nZXRUb3RhbCgpLnRvU3RyaW5nKCkpfShOR04pYH1dfV19XX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1idXR0b25zXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiY2hlY2tvdXQtYmFja1wiLGNsYXNzOlwiY2hlY2tvdXQtc2luZ2xlLWJ1dHRvblwifSx0ZXh0OlwiQmFja1wifSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiY2hlY2tvdXQtZmluaXNoXCIsY2xhc3M6XCJjaGVja291dC1zaW5nbGUtYnV0dG9uXCJ9LHRleHQ6XCJGaW5pc2hcIn0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LW5leHRcIixjbGFzczpcImNoZWNrb3V0LXNpbmdsZS1idXR0b25cIn0sdGV4dDpcIk5leHRcIn1dfV19KTtsZXQgcG9wVXA9YmFzZS5wb3BVcChzZWxmLnBhZ2Use2F0dHJpYnV0ZXM6e3N0eWxlOnt3aWR0aDpzeXN0ZW0uc21hbGxTY3JlZW4ubWF0Y2hlcz9cIjcwJVwiOlwiMTAwJVwiLGhlaWdodDpcIjEwMCVcIixqdXN0aWZ5U2VsZjpcImZsZXgtZW5kXCJ9fSx0aXRsZTpcIkNoZWNraW5nIE91dFwifSksc2VjdGlvbnM9c2VsZi5wYWdlLmZpbmRBbGwoXCIuY2hlY2tvdXQtc2VjdGlvblwiKSxiYWNrQnV0dG9uPXNlbGYucGFnZS5maW5kKFwiI2NoZWNrb3V0LWJhY2tcIiksbmV4dEJ1dHRvbj1zZWxmLnBhZ2UuZmluZChcIiNjaGVja291dC1uZXh0XCIpLGZpbmlzaEJ1dHRvbj1zZWxmLnBhZ2UuZmluZChcIiNjaGVja291dC1maW5pc2hcIiksdXNlQ291cG9uPXNlbGYucGFnZS5maW5kKFwiI2NoZWNrb3V0LWNvdXBvbi1idXR0b25cIik7YmFja0J1dHRvbi5jc3Moe3Zpc2liaWxpdHk6XCJoaWRkZW5cIn0pLGZpbmlzaEJ1dHRvbi5jc3Moe3Zpc2liaWxpdHk6XCJoaWRkZW5cIn0pO2xldCBwYWdlQ2xpY2tlZCxzZWN0aW9uTm89MDtzZWN0aW9uc1tzZWN0aW9uTm9dLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIiksc2VsZi5wYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57aWYoKHBhZ2VDbGlja2VkPWV2ZW50LnRhcmdldCk9PWJhY2tCdXR0b24pc2VjdGlvbnNbc2VjdGlvbk5vXS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpLC0tc2VjdGlvbk5vPDAmJihzZWN0aW9uTm89MCksc2VjdGlvbnNbc2VjdGlvbk5vXS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO2Vsc2UgaWYocGFnZUNsaWNrZWQ9PW5leHRCdXR0b24pe2lmKGJhc2Uub2JqZWN0LmNvcHkoYmFzZS5qc29uRm9ybShzZWN0aW9uc1tzZWN0aW9uTm9dKSxzZWxmLmJ1eWVyKSwwPT1zZWN0aW9uTm8pe2lmKFwiXCI9PXNlbGYuYnV5ZXIuYWRkcmVzcylyZXR1cm4gdm9pZCBhbGVydChcIllvdSBuZWVkIHRvIHNldCB5b3VyIGFkZHJlc3NcIil9ZWxzZSAxPT1zZWN0aW9uTm8/XCJEb29yIGRlbGl2ZXJ5XCI9PXNlbGYuYnV5ZXIuZGVsaXZlcnlUeXBlJiYoc2VjdGlvbnNbc2VjdGlvbk5vXS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpLHNlY3Rpb25ObysrKToyPT1zZWN0aW9uTm8mJnNlbGYudXBkYXRlRmVlcygpO3NlY3Rpb25zW3NlY3Rpb25Ob10uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKSwrK3NlY3Rpb25Obz5zZWN0aW9ucy5sZW5ndGgtMSYmKHNlY3Rpb25Obz1zZWN0aW9ucy5sZW5ndGgtMSksc2VjdGlvbnNbc2VjdGlvbk5vXS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpfWVsc2UgcGFnZUNsaWNrZWQ9PWZpbmlzaEJ1dHRvbj8ocG9wVXAucmVtb3ZlKCksc2VsZi5wcmludFJlY2VpcHQoKSk6cGFnZUNsaWNrZWQ9PXVzZUNvdXBvbiYmc2VsZi5hcHBseUNvdXBvbihzZWxmLnBhZ2UuZmluZChcIiNjaGVja291dC1jb3Vwb24tYm94XCIpLnZhbHVlKTtzZWN0aW9uTm89PXNlY3Rpb25zLmxlbmd0aC0xPyhuZXh0QnV0dG9uLmNzcyh7dmlzaWJpbGl0eTpcImhpZGRlblwifSksZmluaXNoQnV0dG9uLmNzc1JlbW92ZShbXCJ2aXNpYmlsaXR5XCJdKSk6MD09c2VjdGlvbk5vPyhiYWNrQnV0dG9uLmNzcyh7dmlzaWJpbGl0eTpcImhpZGRlblwifSksZmluaXNoQnV0dG9uLmNzcyh7dmlzaWJpbGl0eTpcImhpZGRlblwifSkpOihiYWNrQnV0dG9uLmNzc1JlbW92ZShbXCJ2aXNpYmlsaXR5XCJdKSxuZXh0QnV0dG9uLmNzc1JlbW92ZShbXCJ2aXNpYmlsaXR5XCJdKSxmaW5pc2hCdXR0b24uY3NzKHt2aXNpYmlsaXR5OlwiaGlkZGVuXCJ9KSl9KX0pLHNlbGYuZ2V0SXRlbXNUb3RhbD0oKCk9PntsZXQgdG90YWw9MDtmb3IobGV0IG5hbWUgaW4gc2VsZi5pdGVtcyl0b3RhbCs9c2VsZi5pdGVtc1tuYW1lXS5wcmljZSpzZWxmLml0ZW1zW25hbWVdLmNvdW50KjE7cmV0dXJuIHRvdGFsfSksc2VsZi5nZXRUb3RhbD0oKCk9PntsZXQgZGVsaXZlcnlGZWU9c2VsZi5nZXREZWxpdmVyeUZlZSgpLGl0ZW1zVG90YWw9c2VsZi5nZXRJdGVtc1RvdGFsKCk7cmV0dXJuIHNlbGYudG90YWw9ZGVsaXZlcnlGZWUraXRlbXNUb3RhbCxzZWxmLnRvdGFsfSksc2VsZi5nZXREZWxpdmVyeUZlZT0oKCk9PntsZXQgZmVlPTA7cmV0dXJuXCJEb29yIGRlbGl2ZXJ5XCI9PXNlbGYuYnV5ZXIuZGVsaXZlcnlUeXBlJiYoZmVlPV8kbG9jYXRpb25zXzI2W3NlbGYuYnV5ZXIuc3RhdGVdLnByaWNlKSxmZWV9KSxzZWxmLmFwcGx5Q291cG9uPShuYW1lPT57bnVsbCE9XyRjb3Vwb25zXzI0W25hbWVdJiYoc2VsZi50b3RhbD1zZWxmLmdldFRvdGFsKCkqXyRjb3Vwb25zXzI0W25hbWVdLmN1dCxzZWxmLnBhZ2UuZmluZChcIiNjaGVja291dC10b3RhbFwiKS50ZXh0Q29udGVudD1gJHtiYXNlLmFkZENvbW1hVG9Nb25leShzZWxmLnRvdGFsLnRvU3RyaW5nKCkpfShOR04pYCl9KSxzZWxmLnVwZGF0ZUZlZXM9KCgpPT57dGhpcy5wYWdlLmZpbmQoXCIjY2hlY2tvdXQtaXRlbXMtZmVlXCIpLnRleHRDb250ZW50PWAke2Jhc2UuYWRkQ29tbWFUb01vbmV5KHNlbGYuZ2V0SXRlbXNUb3RhbCgpLnRvU3RyaW5nKCkpfShOR04pYCx0aGlzLnBhZ2UuZmluZChcIiNjaGVja291dC1kZWxpdmVyeS1mZWVcIikudGV4dENvbnRlbnQ9YCR7YmFzZS5hZGRDb21tYVRvTW9uZXkoc2VsZi5nZXREZWxpdmVyeUZlZSgpLnRvU3RyaW5nKCkpfShOR04pYCx0aGlzLnBhZ2UuZmluZChcIiNjaGVja291dC10b3RhbFwiKS50ZXh0Q29udGVudD1gJHtiYXNlLmFkZENvbW1hVG9Nb25leShzZWxmLmdldFRvdGFsKCkudG9TdHJpbmcoKSl9KE5HTilgfSksc2VsZi5wcmludFJlY2VpcHQ9KCgpPT57bGV0IHJlY2llcHQ9YmFzZS5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2lkOlwiY2hlY2tvdXQtcmVjZWlwdFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7aWQ6XCJjaGVja291dC1yZWNlaXB0LXNhbHV0ZVwifSx0ZXh0OmBIZWxsbyAke3NlbGYuYnV5ZXIubmFtZXx8XCJVc2VyXCJ9LGB9LHtlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2lkOlwiY2hlY2tvdXQtcmVjZWlwdC1tZXNzYWdlXCJ9LHRleHQ6XCJZb3VyIG9yZGVyIGlzIGJlaW5nIHByb2Nlc3NlZCBhbmQgd2lsbCBiZSBkZWxpdmVyZWQgc2hvcnRseVwifSx7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LXJlY2VpcHQtYnllXCJ9LHRleHQ6XCJUaGFua3Mgc28gbXVjaCBmb3Igc2hvcHBpbmcgd2l0aCB1cy5cIn0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImNoZWNrb3V0LXJlY2VpcHQtY29udGludWVcIn0sdGV4dDpcIkNvbnRpbnVlXCJ9XX0pLHBvcFVwPWJhc2UucG9wVXAocmVjaWVwdCx7YXR0cmlidXRlczp7c3R5bGU6e3dpZHRoOnN5c3RlbS5zbWFsbFNjcmVlbi5tYXRjaGVzP1wiNzAlXCI6XCIxMDAlXCIsaGVpZ2h0OlwiMTAwJVwiLGp1c3RpZnlTZWxmOlwiZmxleC1lbmRcIn19LHRpdGxlOlwiQ2hlY2tpbmcgT3V0XCJ9KTtyZWNpZXB0LmZpbmQoXCIjY2hlY2tvdXQtcmVjZWlwdC1jb250aW51ZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e3BvcFVwLnJlbW92ZSgpfSksY2FydC5jbGVhcigpfSksc2VsZn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTm9aV05yYjNWMExtcHpJbDBzSW01aGJXVnpJanBiSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKelpXeG1JaXdpWW5WNVpYSWlMQ0p6ZEdGMFpTSXNJazlpYW1WamRDSXNJbXRsZVhNaUxDSnNiMk5oZEdsdmJuTWlMQ0prWld4cGRtVnllVlI1Y0dVaUxDSmthWE53YkdGNUlpd2lhWFJsYlhNaUxDSnNaVzVuZEdnaUxDSmhiR1Z5ZENJc0luQmhaMlVpTENKaVlYTmxJaXdpWTNKbFlYUmxSV3hsYldWdWRDSXNJbVZzWlcxbGJuUWlMQ0poZEhSeWFXSjFkR1Z6SWl3aWFXUWlMQ0pqYUdsc1pISmxiaUlzSW1Oc1lYTnpJaXdpZEdWNGRDSXNJbTVoYldVaUxDSnZjSFJwYjI1eklpd2lUR0ZuYjNNaUxDSnpkR0YwYVc5dWN5SXNJbWwwWlcxTWFYTjBJaXdpWTI5MWJuUWlMQ0p3ZFhOb0lpd2ljM0pqSWl3aWFXMWhaMlVpTENKamIzTjBJaXdpZFc1emFHbG1kQ0lzSW5Cc1lXTmxTRzlzWkdWeUlpd2lZV1JrUTI5dGJXRlViMDF2Ym1WNUlpd2laMlYwU1hSbGJYTlViM1JoYkNJc0luUnZVM1J5YVc1bklpd2laMlYwUkdWc2FYWmxjbmxHWldVaUxDSm5aWFJVYjNSaGJDSXNJbkJ2Y0ZWd0lpd2ljM1I1YkdVaUxDSjNhV1IwYUNJc0luTjVjM1JsYlNJc0luTnRZV3hzVTJOeVpXVnVJaXdpYldGMFkyaGxjeUlzSW1obGFXZG9kQ0lzSW1wMWMzUnBabmxUWld4bUlpd2lkR2wwYkdVaUxDSnpaV04wYVc5dWN5SXNJbVpwYm1SQmJHd2lMQ0ppWVdOclFuVjBkRzl1SWl3aVptbHVaQ0lzSW01bGVIUkNkWFIwYjI0aUxDSm1hVzVwYzJoQ2RYUjBiMjRpTENKMWMyVkRiM1Z3YjI0aUxDSmpjM01pTENKMmFYTnBZbWxzYVhSNUlpd2ljR0ZuWlVOc2FXTnJaV1FpTENKelpXTjBhVzl1VG04aUxDSmpiR0Z6YzB4cGMzUWlMQ0poWkdRaUxDSmhaR1JGZG1WdWRFeHBjM1JsYm1WeUlpd2laWFpsYm5RaUxDSjBZWEpuWlhRaUxDSnlaVzF2ZG1VaUxDSnZZbXBsWTNRaUxDSmpiM0I1SWl3aWFuTnZia1p2Y20waUxDSmhaR1J5WlhOeklpd2lkWEJrWVhSbFJtVmxjeUlzSW5CeWFXNTBVbVZqWldsd2RDSXNJbUZ3Y0d4NVEyOTFjRzl1SWl3aWRtRnNkV1VpTENKamMzTlNaVzF2ZG1VaUxDSjBiM1JoYkNJc0luQnlhV05sSWl3aVpHVnNhWFpsY25sR1pXVWlMQ0pwZEdWdGMxUnZkR0ZzSWl3aVptVmxJaXdpZFc1a1pXWnBibVZrSWl3aVkyOTFjRzl1Y3lJc0ltTjFkQ0lzSW5SbGVIUkRiMjUwWlc1MElpd2lkR2hwY3lJc0luSmxZMmxsY0hRaUxDSmpZWEowSWl3aVkyeGxZWElpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEdsRlFXbFNRVUVzYVVKQlFVOURMRU5CT1ZGUUxGVkJRVUVzUTBGRFNTeE5RVUZOUXl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBFd1VXSXNUMEY2VVVGQkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVkVzUTBGQlJVTXNTMEZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZCVDBNc1NVRkJRVUVzUTBGQlMwTXNZMEZCUVVFc1EwRkJRVUVzUTBGQlZ5eERRVUZCTEVOQlFVRXNRMEZCU1VNc1dVRkJRVUVzUTBGQll5eGxRVUZCTEVOQlFVRXNRMEZGTDBST0xFbEJRVUZCTEVOQlFVdFBMRTlCUVVGQkxFVkJRVmRETEV0QlFVRkJMRVZCUVVGQkxFTkJRMW9zUjBGQlowTXNRMEZCUVN4RlFVRTNRa3dzVFVGQlFVRXNRMEZCVDBNc1NVRkJRVUVzUTBGQlMwa3NTMEZCUVVFc1EwRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkZiRUlzVDBGQlFTeExRVVJCUXl4TFFVRkJRU3hEUVVGTkxIbERRVUZCTEVOQlFVRXNRMEZKVmxZc1NVRkJRVUVzUTBGQlMxRXNTMEZCUVVFc1EwRkJVVUVzUzBGQlFVRXNRMEZEWWxJc1NVRkJRVUVzUTBGQlMxY3NTVUZCUVVFc1EwRkJUME1zU1VGQlFVRXNRMEZCUzBNc1lVRkJRVUVzUTBGQll5eERRVU16UWtNc1QwRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOURMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNSVUZCUVVFc1EwRkJTU3hsUVVGQkxFTkJRVUVzUTBGQmJVSkRMRkZCUVVGQkxFTkJRVlVzUTBGRE0wUXNRMEZEU1Vnc1QwRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOURMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNSVUZCUVVFc1EwRkJTU3hyUWtGQlFTeERRVUZ2UWtVc1MwRkJRVUVzUTBGQlR5eHJRa0ZCUVN4RFFVRkJMRU5CUVhOQ1JDeFJRVUZCUVN4RFFVRlZMRU5CUTNwR0xFTkJRVVZJTEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFVkJRVUZCTEVOQlFVa3NkMEpCUVVFc1EwRkJNRUpGTEV0QlFVRkJMRU5CUVU4c2QwSkJRVUVzUTBGQlFTeERRVUUwUWtNc1NVRkJRVUVzUTBGQlRTeHZRa0ZCUVN4RFFVRkJMRU5CUTNKSExFTkJRMGxNTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFdEJRVUZCTEVOQlFVOHNkMEpCUVVFc1EwRkJRU3hEUVVFMFFrUXNVVUZCUVVFc1EwRkJWU3hEUVVONFJTeERRVUZGU0N4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwc3NTVUZCUVVFc1EwRkJUU3hYUVVGQkxFTkJRVUVzUTBGRE1VSXNRMEZCUlV3c1QwRkJRVUVzUTBGQlV5eFBRVUZCTEVOQlFWTkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVc3NTVUZCUVVFc1EwRkJUU3hOUVVGQkxFTkJRVkZHTEV0QlFVRkJMRU5CUVU4c2RVSkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVY3ZSQ3hEUVVOSlNpeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhMUVVGQlFTeERRVUZQTEhkQ1FVRkJMRU5CUVVFc1EwRkJORUpFTEZGQlFVRkJMRU5CUVZVc1EwRkRlRVVzUTBGQlJVZ3NUMEZCUVVFc1EwRkJVeXhQUVVGQkxFTkJRVk5MTEVsQlFVRkJMRU5CUVUwc1QwRkJRU3hEUVVGQkxFTkJRekZDTEVOQlFVVk1MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZMTEVsQlFVRkJMRU5CUVUwc1QwRkJRU3hEUVVGVFJpeExRVUZCUVN4RFFVRlBMSFZDUVVGQkxFTkJRVUVzUTBGQk1rSkhMRTlCUVVGQkxFTkJRVk5zUWl4TlFVRkJRU3hEUVVGUFF5eEpRVUZCUVN4RFFVRkxReXhqUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHFTQ3hEUVVOSlV5eFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhMUVVGQlFTeERRVUZQTEhkQ1FVRkJMRU5CUVVFc1EwRkJORUpFTEZGQlFVRkJMRU5CUVZVc1EwRkRlRVVzUTBGQlJVZ3NUMEZCUVVFc1EwRkJVeXhQUVVGQkxFTkJRVk5MTEVsQlFVRkJMRU5CUVUwc1UwRkJRU3hEUVVGQkxFTkJRekZDTEVOQlFVVk1MRTlCUVVGQkxFTkJRVk1zVDBGQlFTeERRVUZUUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZMTEVsQlFVRkJMRU5CUVUwc1UwRkJRU3hEUVVGWFJpeExRVUZCUVN4RFFVRlBMSFZDUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CU3pGRkxFTkJRMGxLTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFdEJRVUZCTEVOQlFVOHNhMEpCUVVFc1EwRkJiMEpHTEVWQlFVRkJMRU5CUVVrc2JVSkJRVUVzUTBGQlFTeERRVUYxUWtNc1VVRkJRVUVzUTBGQlZTeERRVU16Uml4RFFVTkpTQ3hQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4TFFVRkJRU3hEUVVGUExIZENRVUZCTEVOQlFVRXNRMEZCTkVKRExFbEJRVUZCTEVOQlFVMHNaVUZCUVN4RFFVRkJMRU5CUlhwRkxFTkJRMGxNTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFdEJRVUZCTEVOQlFVOHNkMEpCUVVFc1EwRkJRU3hEUVVFMFFrUXNVVUZCUVVFc1EwRkJWU3hEUVVONFJTeERRVUZGU0N4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwc3NTVUZCUVVFc1EwRkJUU3hOUVVGQkxFTkJRVUVzUTBGRE1VSXNRMEZCUlV3c1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVc3NTVUZCUVVFc1EwRkJUU3hqUVVGQkxFTkJRV2RDUml4TFFVRkJRU3hEUVVGUExIVkNRVUZCTEVOQlFVRXNRMEZCTWtKSExFOUJRVUZCTEVOQlFWTXNRMEZCUXl4bFFVRkJMRU5CUVdsQ0xHZENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJTM1JKTEVOQlEwbFFMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEV0QlFVRkJMRU5CUVU4c2EwSkJRVUVzUTBGQmIwSkdMRVZCUVVGQkxFTkJRVWtzYVVKQlFVRXNRMEZCUVN4RFFVRnhRa01zVVVGQlFVRXNRMEZCVlN4RFFVTjZSaXhEUVVOSlNDeFBRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhMUVVGQlFTeERRVUZQTEhkQ1FVRkJMRU5CUVVFc1EwRkJORUpETEVsQlFVRkJMRU5CUVUwc2FVSkJRVUVzUTBGQlFTeERRVVY2UlN4RFFVTkpUQ3hQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4TFFVRkJRU3hEUVVGUExIZENRVUZCTEVOQlFVRXNRMEZCTkVKRUxGRkJRVUZCTEVOQlFWVXNRMEZEZUVVc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4UFFVRkJMRU5CUVZOTExFbEJRVUZCTEVOQlFVMHNVMEZCUVN4RFFVRkJMRU5CUXpGQ0xFTkJRVVZNTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWTExFbEJRVUZCTEVOQlFVMHNaVUZCUVN4RFFVRnBRa1lzUzBGQlFVRXNRMEZCVHl4MVFrRkJRU3hEUVVGQkxFTkJRVEpDUnl4UFFVRkJRU3hEUVVGVGFFSXNZMEZCUVVFc1EwRkJWV2xDTEV0QlFVRkJMRU5CUVUxRExGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTM0pKTEVOQlEwbFVMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEV0QlFVRkJMRU5CUVU4c2EwSkJRVUVzUTBGQmIwSkdMRVZCUVVGQkxFTkJRVWtzZDBKQlFVRXNRMEZCUVN4RFFVRTBRa01zVVVGQlFVRXNRMEZCVlN4RFFVTm9SeXhEUVVGRlNDeFBRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhMUVVGQlFTeERRVUZQTEhkQ1FVRkJMRU5CUVVFc1EwRkJORUpETEVsQlFVRkJMRU5CUVUwc1pVRkJRU3hEUVVGQkxFTkJRM1pGTEVOQlEwbE1MRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEVWQlFVRkJMRU5CUVVrc01FSkJRVUVzUTBGQlFTeERRVUU0UWtNc1VVRkJRVUVzUTBGQlZTeERRVUZCTEVsQlFVRXNRMEZEZGtVc1NVRkJTVThzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTFoRExFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVTmFMRWxCUVVzc1NVRkJTVXdzU1VGQlFVRXNTVUZCVVZvc1MwRkJRVUVzUTBGRFltbENMRXRCUVVGQkxFVkJRVUZCTEVOQlEwRkVMRkZCUVVGQkxFTkJRVk5GTEVsQlFVRkJMRU5CUVV0a0xFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRV01zUTBGRE4wSkRMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEV0QlFVRkJMRU5CUVU4c1pVRkJRU3hEUVVGQkxFTkJRVzFDUkN4UlFVRkJRU3hEUVVGVkxFTkJReTlFTEVOQlFVVklMRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEV0QlFVRkJMRU5CUVU4c1owSkJRVUVzUTBGQlFTeERRVUZ2UWtNc1NVRkJRVUVzUTBGQlRVMHNTMEZCUVVFc1EwRkJRVUVzUTBGREwwUXNRMEZEU1Znc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdERMRlZCUVVGQkxFTkJRVmtzUTBGQlJVY3NTMEZCUVVFc1EwRkJUeXhuUWtGQlFTeERRVUZCTEVOQlFXOUNSQ3hSUVVGQlFTeERRVUZWTEVOQlF6ZEVMRU5CUVVWSUxFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRXRCUVVGQkxFTkJRVThzYVVKQlFVRXNRMEZCYlVKVExFZEJRVUZCTEVOQlFVdHVRaXhMUVVGQlFTeERRVUZOV1N4SlFVRkJRU3hEUVVGQlFTeERRVUZOVVN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWx1Uml4RFFVRkZaQ3hQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4TFFVRkJRU3hEUVVGUExHZENRVUZCTEVOQlFVRXNRMEZCYjBKRExFbEJRVUZCTEVOQlFVMVlMRXRCUVVGQkxFTkJRVTFaTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTFCTEVsQlFVRkJMRU5CUVVGQkxFTkJRek5GTEVOQlFVVk9MRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEV0QlFVRkJMRU5CUVU4c1owSkJRVUVzUTBGQlFTeERRVUZ2UWtNc1NVRkJRVUVzUTBGQlRWZ3NTMEZCUVVFc1EwRkJUVmtzU1VGQlFVRXNRMEZCUVVFc1EwRkJUVXNzUzBGQlFVRXNRMEZCUVVFc1EwRkRNMFVzUTBGQlJWZ3NUMEZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVXRETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUzBGQlFVRXNRMEZCVHl4blFrRkJRU3hEUVVGQkxFTkJRVzlDUXl4SlFVRkJRU3hEUVVGTldDeExRVUZCUVN4RFFVRk5XU3hKUVVGQlFTeERRVUZCUVN4RFFVRk5VeXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVdGMlJpeFBRVlJCVEN4UlFVRkJRU3hEUVVGVFRTeFBRVUZCUVN4RFFVRlJiRUlzU1VGQlFVRXNRMEZCUzBNc1lVRkJRVUVzUTBGQll5eERRVU5vUTBNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNSVUZCUVVFc1EwRkJTU3hwUWtGQlFTeERRVUZCTEVOQlFYRkNReXhSUVVGQlFTeERRVUZWTEVOQlF6bEVMRU5CUVVWSUxFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRXRCUVVGQkxFTkJRVThzYlVKQlFVRXNRMEZCUVN4RFFVRjFRa01zU1VGQlFVRXNRMEZCVFN4TFFVRkJMRU5CUVVFc1EwRkRiRVVzUTBGQlJVd3NUMEZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVXRETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUzBGQlFVRXNRMEZCVHl4dFFrRkJRU3hEUVVGQkxFTkJRWFZDUXl4SlFVRkJRU3hEUVVGTkxFOUJRVUVzUTBGQlFTeERRVU5zUlN4RFFVRkZUQ3hQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4TFFVRkJRU3hEUVVGUExHMUNRVUZCTEVOQlFVRXNRMEZCZFVKRExFbEJRVUZCTEVOQlFVMHNUVUZCUVN4RFFVRkJMRU5CUTJ4RkxFTkJRVVZNTEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFdEJRVUZCTEVOQlFVOHNiVUpCUVVFc1EwRkJRU3hEUVVGMVFrTXNTVUZCUVVFc1EwRkJUU3hQUVVGQkxFTkJRVUVzUTBGRGJFVXNRMEZCUlV3c1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdERMRlZCUVVGQkxFTkJRVmtzUTBGQlJVY3NTMEZCUVVFc1EwRkJUeXh0UWtGQlFTeERRVUZCTEVOQlFYVkNReXhKUVVGQlFTeERRVUZOTEUxQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSMjVGU3l4UlFVRkJRU3hEUVVGQlFTeEhRVGRDWjBVc1EwRkJRU3hEUVdkREwwVXNRMEZEU1ZZc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNSVUZCUVVFc1EwRkJTU3d5UWtGQlFTeERRVUZCTEVOQlFTdENReXhSUVVGQlFTeERRVUZWTEVOQlEzaEZMRU5CUVVWSUxFOUJRVUZCTEVOQlFWTXNUMEZCUVN4RFFVRlRReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRVZCUVVGQkxFTkJRVWtzY1VKQlFVRXNRMEZCZFVKbExGZEJRVUZCTEVOQlFXRXNZVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkRNVVVzUTBGQlJXcENMRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEVWQlFVRkJMRU5CUVVrc2QwSkJRVUVzUTBGQlFTeERRVUUwUWtjc1NVRkJRVUVzUTBGQlRTeFpRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjJwR0xFTkJRMGxNTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFVkJRVUZCTEVOQlFVa3NlVUpCUVVFc1EwRkJRU3hEUVVFMlFrTXNVVUZCUVVFc1EwRkJWU3hEUVVOMFJTeERRVU5KU0N4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlJ5eExRVUZCUVN4RFFVRlBMR1ZCUVVFc1EwRkJRU3hEUVVGdFFrUXNVVUZCUVVFc1EwRkJWU3hEUVVNdlJDeERRVUZGU0N4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwc3NTVUZCUVVFc1EwRkJUU3hwUWtGQlFTeERRVUZCTEVOQlF6RkNMRU5CUVVWTUxFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRVZCUVVGQkxFTkJRVWtzYjBKQlFVRXNRMEZCUVN4RFFVRjNRa2NzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlUxQXNTVUZCUVVFc1EwRkJTMjlDTEdWQlFVRkJMRU5CUVdkQ2FFTXNTVUZCUVVFc1EwRkJTMmxETEdGQlFVRkJMRVZCUVVGQkxFTkJRV2RDUXl4UlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHlTQ3hEUVVOSmNFSXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUzBGQlFVRXNRMEZCVHl4bFFVRkJMRU5CUVVFc1EwRkJiVUpFTEZGQlFVRkJMRU5CUVZVc1EwRkRMMFFzUTBGQlJVZ3NUMEZCUVVFc1EwRkJVeXhQUVVGQkxFTkJRVk5MTEVsQlFVRkJMRU5CUVUwc1kwRkJRU3hEUVVGQkxFTkJRekZDTEVOQlFVVk1MRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEVWQlFVRkJMRU5CUVVrc2RVSkJRVUVzUTBGQlFTeERRVUV5UWtjc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJVMUFzU1VGQlFVRXNRMEZCUzI5Q0xHVkJRVUZCTEVOQlFXZENhRU1zU1VGQlFVRXNRMEZCUzIxRExHTkJRVUZCTEVWQlFVRkJMRU5CUVdsQ1JDeFJRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQ2U0N4RFFVTkpjRUlzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVjc1MwRkJRVUVzUTBGQlR5eGxRVUZCTEVOQlFVRXNRMEZCYlVKRUxGRkJRVUZCTEVOQlFWVXNRMEZETDBRc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4UFFVRkJMRU5CUVZOTExFbEJRVUZCTEVOQlFVMHNUMEZCUVN4RFFVRkJMRU5CUXpGQ0xFTkJRVVZNTEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFVkJRVUZCTEVOQlFVa3NaMEpCUVVFc1EwRkJRU3hEUVVGdlFrY3NTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVTFBc1NVRkJRVUVzUTBGQlMyOUNMR1ZCUVVGQkxFTkJRV2RDYUVNc1NVRkJRVUVzUTBGQlMyOURMRkZCUVVGQkxFVkJRVUZCTEVOQlFWZEdMRkZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUelZJTEVOQlEwbHdRaXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4RlFVRkJRU3hEUVVGSkxHdENRVUZCTEVOQlFVRXNRMEZCYzBKRExGRkJRVUZCTEVOQlFWVXNRMEZETDBRc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1JVRkJRVUVzUTBGQlNTeGxRVUZCTEVOQlFXbENSU3hMUVVGQlFTeERRVUZQTEhkQ1FVRkJMRU5CUVVFc1EwRkJORUpETEVsQlFVRkJMRU5CUVUwc1RVRkJRU3hEUVVGQkxFTkJRMnBITEVOQlFVVk1MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEVWQlFVRkJMRU5CUVVrc2FVSkJRVUVzUTBGQmJVSkZMRXRCUVVGQkxFTkJRVThzZDBKQlFVRXNRMEZCUVN4RFFVRTBRa01zU1VGQlFVRXNRMEZCVFN4UlFVRkJMRU5CUVVFc1EwRkRia2NzUTBGQlJVd3NUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUlVGQlFVRXNRMEZCU1N4bFFVRkJMRU5CUVdsQ1JTeExRVUZCUVN4RFFVRlBMSGRDUVVGQkxFTkJRVUVzUTBGQk5FSkRMRWxCUVVGQkxFTkJRVTBzVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVUxcVNDeEpRVUZKYTBJc1MwRkJRVUVzUTBGQlVYcENMRWxCUVVGQkxFTkJRVXQ1UWl4TFFVRkJRU3hEUVVGTmNrTXNTVUZCUVVFc1EwRkJTMWNzU1VGQlFVRXNRMEZCVFN4RFFVRkZTU3hWUVVGQlFTeERRVUZaTEVOQlFVVjFRaXhMUVVGQlFTeERRVUZQTEVOQlFVVkRMRXRCUVVGQkxFTkJRVTlETEUxQlFVRkJMRU5CUVU5RExGZEJRVUZCTEVOQlFWbERMRTlCUVVGQkxFTkJRVlVzUzBGQlFTeERRVUZSTEUxQlFVRXNRMEZCVVVNc1RVRkJRVUVzUTBGQlVTeE5RVUZCTEVOQlFWRkRMRmRCUVVGQkxFTkJRV0VzVlVGQlFTeERRVUZCTEVOQlFVRXNRMEZCWjBKRExFdEJRVUZCTEVOQlFVOHNZMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZMMHBETEZGQlFVRkJMRU5CUVZjNVF5eEpRVUZCUVN4RFFVRkxWeXhKUVVGQlFTeERRVUZMYjBNc1QwRkJRVUVzUTBGQlVTeHRRa0ZCUVN4RFFVRkJMRU5CUXpkQ1F5eFZRVUZCUVN4RFFVRmhhRVFzU1VGQlFVRXNRMEZCUzFjc1NVRkJRVUVzUTBGQlMzTkRMRWxCUVVGQkxFTkJRVXNzWjBKQlFVRXNRMEZCUVN4RFFVTTFRa01zVlVGQlFVRXNRMEZCWVd4RUxFbEJRVUZCTEVOQlFVdFhMRWxCUVVGQkxFTkJRVXR6UXl4SlFVRkJRU3hEUVVGTExHZENRVUZCTEVOQlFVRXNRMEZETlVKRkxGbEJRVUZCTEVOQlFXVnVSQ3hKUVVGQlFTeERRVUZMVnl4SlFVRkJRU3hEUVVGTGMwTXNTVUZCUVVFc1EwRkJTeXhyUWtGQlFTeERRVUZCTEVOQlF6bENSeXhUUVVGQlFTeERRVUZaY0VRc1NVRkJRVUVzUTBGQlMxY3NTVUZCUVVFc1EwRkJTM05ETEVsQlFVRkJMRU5CUVVzc2VVSkJRVUVzUTBGQlFTeERRVVV2UWtRc1ZVRkJRVUVzUTBGQlYwc3NSMEZCUVVFc1EwRkJTU3hEUVVGRlF5eFZRVUZCUVN4RFFVRlpMRkZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRemRDU0N4WlFVRkJRU3hEUVVGaFJTeEhRVUZCUVN4RFFVRkpMRU5CUVVWRExGVkJRVUZCTEVOQlFWa3NVVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkZMMElzU1VGSFNVTXNWMEZCUVVFc1EwRklRVU1zVTBGQlFVRXNRMEZCV1N4RFFVRkJMRU5CUTJoQ1ZpeFJRVUZCUVN4RFFVRlRWU3hUUVVGQlFTeERRVUZCUVN4RFFVRlhReXhUUVVGQlFTeERRVUZWUXl4SFFVRkJRU3hEUVVGSkxGRkJRVUVzUTBGQlFTeERRVWxzUXpGRUxFbEJRVUZCTEVOQlFVdFhMRWxCUVVGQkxFTkJRVXRuUkN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRReXhMUVVGQlFTeEZRVUZCUVN4RFFVVm9ReXhIUVVGQkxFTkJSRUZNTEZkQlFVRkJMRU5CUVdOTExFdEJRVUZCTEVOQlFVMURMRTFCUVVGQkxFZEJRMFJpTEZWQlFVRkJMRU5CUTJaR0xGRkJRVUZCTEVOQlFWTlZMRk5CUVVGQkxFTkJRVUZCTEVOQlFWZERMRk5CUVVGQkxFTkJRVlZMTEUxQlFVRkJMRU5CUVU4c1VVRkJRU3hEUVVGQkxFTkJRVUVzUlVGRGNrTk9MRk5CUVVGQkxFTkJRMmRDTEVOQlFVRXNSMEZCUjBFc1UwRkJRVUVzUTBGQldTeERRVUZCTEVOQlFVRXNRMEZETDBKV0xGRkJRVUZCTEVOQlFWTlZMRk5CUVVGQkxFTkJRVUZCTEVOQlFWZERMRk5CUVVGQkxFTkJRVlZETEVkQlFVRkJMRU5CUVVrc1VVRkJRU3hEUVVGQkxFTkJRVUVzUzBGRmFrTXNSMEZCU1Vnc1YwRkJRVUVzUlVGQlpVd3NWVUZCUVVFc1EwRkJXU3hEUVVkb1F5eEhRVVpCZEVNc1NVRkJRVUVzUTBGQlMyMUVMRTFCUVVGQkxFTkJRVTlETEVsQlFVRkJMRU5CUVV0d1JDeEpRVUZCUVN4RFFVRkxjVVFzVVVGQlFVRXNRMEZCVTI1Q0xGRkJRVUZCTEVOQlFWTlZMRk5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVdGNFJDeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZCUVN4RFFVVjZReXhEUVVGQkxFVkJRV0oxUkN4VFFVRkJRU3hEUVVGQlFTeERRVU5CTEVkQlFUQkNMRVZCUVVFc1JVRkJkRUo0UkN4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5hVVVzVDBGQlFVRXNRMEZGV0N4UFFVRkJMRXRCUkVGNFJDeExRVUZCUVN4RFFVRk5MRGhDUVVGQkxFTkJRVUVzUTBGQlFTeExRVWxSTEVOQlFVRXNSVUZCWWpoRExGTkJRVUZCTEVOQlF6QkNMR1ZCUVVFc1JVRkJNMEo0UkN4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5TeXhaUVVGQlFTeEhRVU5ZZDBNc1VVRkJRVUVzUTBGQlUxVXNVMEZCUVVFc1EwRkJRVUVzUTBGQlYwTXNVMEZCUVVFc1EwRkJWVXNzVFVGQlFVRXNRMEZCVHl4UlFVRkJMRU5CUVVFc1EwRkRja05PTEZOQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlIyTXNRMEZCUVN4RlFVRmlRU3hUUVVGQlFTeEZRVU5NZUVRc1NVRkJRVUVzUTBGQlMyMUZMRlZCUVVGQkxFVkJRVUZCTEVOQlJWUnlRaXhSUVVGQlFTeERRVUZUVlN4VFFVRkJRU3hEUVVGQlFTeERRVUZYUXl4VFFVRkJRU3hEUVVGVlN5eE5RVUZCUVN4RFFVRlBMRkZCUVVFc1EwRkJRU3hEUVVGQkxFVkJRM0pEVGl4VFFVRkJRU3hEUVVOblFsWXNVVUZCUVVFc1EwRkJVM0pETEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hIUVVGSEswTXNVMEZCUVVFc1EwRkJXVllzVVVGQlFVRXNRMEZCVTNKRExFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUTI1RmNVTXNVVUZCUVVFc1EwRkJVMVVzVTBGQlFVRXNRMEZCUVVFc1EwRkJWME1zVTBGQlFVRXNRMEZCVlVNc1IwRkJRVUVzUTBGQlNTeFJRVUZCTEVOQlFVRXNRMEZCUVN4TFFVVTNRa2dzVjBGQlFVRXNSVUZCWlVvc1dVRkJRVUVzUlVGRGNFSmtMRXRCUVVGQkxFTkJRVTE1UWl4TlFVRkJRU3hGUVVGQlFTeERRVU5PT1VRc1NVRkJRVUVzUTBGQlMyOUZMRmxCUVVGQkxFVkJRVUZCTEVWQlJVRmlMRmRCUVVGQkxFVkJRV1ZJTEZOQlFVRkJMRVZCUTNCQ2NFUXNTVUZCUVVFc1EwRkJTM0ZGTEZkQlFVRkJMRU5CUVZseVJTeEpRVUZCUVN4RFFVRkxWeXhKUVVGQlFTeERRVUZMYzBNc1NVRkJRVUVzUTBGQlN5eHpRa0ZCUVN4RFFVRkJMRU5CUVhkQ2NVSXNTMEZCUVVFc1EwRkJRVUVzUTBGSGVFUmtMRk5CUVVGQkxFVkJRV0ZXTEZGQlFVRkJMRU5CUVZOeVF5eE5RVUZCUVN4RFFVRlRMRU5CUVVFc1JVRkRMMEo1UXl4VlFVRkJRU3hEUVVGWFJ5eEhRVUZCUVN4RFFVRkpMRU5CUVVWRExGVkJRVUZCTEVOQlFWa3NVVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkROMEpJTEZsQlFVRkJMRU5CUVdGdlFpeFRRVUZCUVN4RFFVRlZMRU5CUVVNc1dVRkJRU3hEUVVGQkxFTkJRVUVzUlVGRlRpeERRVUZCTEVWQlFXSm1MRk5CUVVGQkxFVkJRMHhTTEZWQlFVRkJMRU5CUVZkTExFZEJRVUZCTEVOQlFVa3NRMEZCUlVNc1ZVRkJRVUVzUTBGQldTeFJRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTNRa2dzV1VGQlFVRXNRMEZCWVVVc1IwRkJRVUVzUTBGQlNTeERRVUZGUXl4VlFVRkJRU3hEUVVGWkxGRkJRVUVzUTBGQlFTeERRVUZCTEVkQlJ5OUNUaXhWUVVGQlFTeERRVUZYZFVJc1UwRkJRVUVzUTBGQlZTeERRVUZETEZsQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNSQ2NrSXNWVUZCUVVFc1EwRkJWM0ZDTEZOQlFVRkJMRU5CUVZVc1EwRkJReXhaUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4wUW5CQ0xGbEJRVUZCTEVOQlFXRkZMRWRCUVVGQkxFTkJRVWtzUTBGQlJVTXNWVUZCUVVFc1EwRkJXU3hSUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkxNME4wUkN4SlFVRkJRU3hEUVVGTGFVTXNZVUZCUVVFc1JVRkJaMElzU1VGQlFTeERRVU5xUWl4SlFVRkpkVU1zUzBGQlFVRXNRMEZCVVN4RFFVRkJMRU5CUTFvc1NVRkJTeXhKUVVGSmNFUXNTVUZCUVVFc1NVRkJVWEJDTEVsQlFVRkJMRU5CUVV0UkxFdEJRVUZCTEVOQlEyeENaMFVzUzBGQlFVRXNSVUZCVlhoRkxFbEJRVUZCTEVOQlFVdFJMRXRCUVVGQkxFTkJRVTFaTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTF4UkN4TFFVRkJRU3hEUVVGUmVrVXNTVUZCUVVFc1EwRkJTMUVzUzBGQlFVRXNRMEZCVFZrc1NVRkJRVUVzUTBGQlFVRXNRMEZCVFVzc1MwRkJRVUVzUTBGQlV5eERRVUZCTEVOQlJXcEZMRTlCUVU4clF5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRZZUVVc1NVRkJRVUVzUTBGQlMyOURMRkZCUVVGQkxFVkJRVmNzU1VGQlFTeERRVU5hTEVsQlFVbHpReXhYUVVGQlFTeERRVUZqTVVVc1NVRkJRVUVzUTBGQlMyMURMR05CUVVGQkxFVkJRVUZCTEVOQlEyNUNkME1zVlVGQlFVRXNRMEZCWVRORkxFbEJRVUZCTEVOQlFVdHBReXhoUVVGQlFTeEZRVUZCUVN4RFFVZDBRaXhQUVVSQmFrTXNTVUZCUVVFc1EwRkJTM2RGTEV0QlFVRkJMRU5CUVZGRkxGZEJRVUZCTEVOQlFXTkRMRlZCUVVGQkxFTkJRM0JDTTBVc1NVRkJRVUVzUTBGQlMzZEZMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjJoQ2VFVXNTVUZCUVVFc1EwRkJTMjFETEdOQlFVRkJMRVZCUVdsQ0xFbEJRVUVzUTBGRGJFSXNTVUZCU1hsRExFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVMVdMRTFCU2l0Q0xHVkJRVUVzUlVGQk0wSTFSU3hKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTlN5eFpRVUZCUVN4SFFVTlljMFVzUjBGQlFVRXNRMEZCVFhaRkxHTkJRVUZCTEVOQlFWVk1MRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxRExFdEJRVUZCTEVOQlFVRkJMRU5CUVU5MVJTeExRVUZCUVN4RFFVRkJRU3hEUVVjdlFrY3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIV0RWRkxFbEJRVUZCTEVOQlFVdHhSU3hYUVVGQlFTeEZRVUZsYWtRc1NVRkJRVUVzUlVGQlFVRXNRMEZEUzNsRUxFbEJRVUZCTEVWQlFXcENReXhaUVVGQlFTeERRVUZSTVVRc1NVRkJRVUVzUTBGQlFVRXNSMEZEV25CQ0xFbEJRVUZCTEVOQlFVdDNSU3hMUVVGQlFTeERRVUZSZUVVc1NVRkJRVUVzUTBGQlMyOURMRkZCUVVGQkxFVkJRVUZCTEVOQlFXRXdReXhaUVVGQlFTeERRVUZSTVVRc1NVRkJRVUVzUTBGQlFVRXNRMEZCVFRKRUxFZEJRVUZCTEVOQlF6ZERMMFVzU1VGQlFVRXNRMEZCUzFjc1NVRkJRVUVzUTBGQlMzTkRMRWxCUVVGQkxFTkJRVXNzYVVKQlFVRXNRMEZCUVN4RFFVRnRRaXRDTEZkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXbENjRVVzU1VGQlFVRXNRMEZCUzI5Q0xHVkJRVUZCTEVOQlFXZENhRU1zU1VGQlFVRXNRMEZCUzNkRkxFdEJRVUZCTEVOQlFVMTBReXhSUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkMlJteERMRWxCUVVGQkxFTkJRVXR0UlN4VlFVRkJRU3hGUVVGaExFbEJRVUVzUTBGRFpHTXNTVUZCUVVFc1EwRkJTM1JGTEVsQlFVRkJMRU5CUVV0elF5eEpRVUZCUVN4RFFVRkxMSEZDUVVGQkxFTkJRVUVzUTBGQmRVSXJRaXhYUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGcFFuQkZMRWxCUVVGQkxFTkJRVXR2UWl4bFFVRkJRU3hEUVVGblFtaERMRWxCUVVGQkxFTkJRVXRwUXl4aFFVRkJRU3hGUVVGQlFTeERRVUZuUWtNc1VVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGQlFVRXNRMEZCUVVFc1EwRkZha2NyUXl4SlFVRkJRU3hEUVVGTGRFVXNTVUZCUVVFc1EwRkJTM05ETEVsQlFVRkJMRU5CUVVzc2QwSkJRVUVzUTBGQlFTeERRVUV3UWl0Q0xGZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRV2xDY0VVc1NVRkJRVUVzUTBGQlMyOUNMR1ZCUVVGQkxFTkJRV2RDYUVNc1NVRkJRVUVzUTBGQlMyMURMR05CUVVGQkxFVkJRVUZCTEVOQlFXbENSQ3hSUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeExRVUZCUVN4RFFVRkJRU3hEUVVWeVJ5dERMRWxCUVVGQkxFTkJRVXQwUlN4SlFVRkJRU3hEUVVGTGMwTXNTVUZCUVVFc1EwRkJTeXhwUWtGQlFTeERRVUZCTEVOQlFXMUNLMElzVjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQmFVSndSU3hKUVVGQlFTeERRVUZMYjBJc1pVRkJRVUVzUTBGQlowSm9ReXhKUVVGQlFTeERRVUZMYjBNc1VVRkJRVUVzUlVGQlFVRXNRMEZCVjBZc1VVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITlVac1F5eEpRVUZCUVN4RFFVRkxiMFVzV1VGQlFVRXNSVUZCWlN4SlFVRkJMRU5CUTJoQ0xFbEJRVWxqTEU5QlFVRkJMRU5CUVZWMFJTeEpRVUZCUVN4RFFVRkxReXhoUVVGQlFTeERRVUZqTEVOQlF6ZENReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4RlFVRkJRU3hEUVVGSkxHdENRVUZCTEVOQlFVRXNRMEZCYzBKRExGRkJRVUZCTEVOQlFWVXNRMEZETDBRc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1JVRkJRVUVzUTBGQlNTeDVRa0ZCUVN4RFFVRkJMRU5CUVRaQ1J5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeE5RVUZCUVN4RlFVRmxia0lzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRXMUNMRWxCUVVGQkxFVkJRVkVzVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTJwSExFTkJRVVZPTEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFVkJRVUZCTEVOQlFVa3NNRUpCUVVFc1EwRkJRU3hEUVVFNFFrY3NTVUZCUVVFc1EwRkJUU3cyUkVGQlFTeERRVUZCTEVOQlEzUkZMRU5CUVVWTUxFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRVZCUVVGQkxFTkJRVWtzYzBKQlFVRXNRMEZCUVN4RFFVRXdRa2NzU1VGQlFVRXNRMEZCVFN4elEwRkJRU3hEUVVGQkxFTkJRMnhGTEVOQlFVVk1MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEVWQlFVRkJMRU5CUVVrc01rSkJRVUVzUTBGQlFTeERRVUVyUWtjc1NVRkJRVUVzUTBGQlRTeFZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkphRVpyUWl4TFFVRkJRU3hEUVVGUmVrSXNTVUZCUVVFc1EwRkJTM2xDTEV0QlFVRkJMRU5CUVUwMlF5eFBRVUZCUVN4RFFVRlRMRU5CUVVWdVJTeFZRVUZCUVN4RFFVRlpMRU5CUVVWMVFpeExRVUZCUVN4RFFVRlBMRU5CUVVWRExFdEJRVUZCTEVOQlFVOURMRTFCUVVGQkxFTkJRVTlETEZkQlFVRkJMRU5CUVZsRExFOUJRVUZCTEVOQlFWVXNTMEZCUVN4RFFVRlJMRTFCUVVFc1EwRkJVVU1zVFVGQlFVRXNRMEZCVVN4TlFVRkJMRU5CUVZGRExGZEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJaMEpETEV0QlFVRkJMRU5CUVU4c1kwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRmFrdHhReXhQUVVGQlFTeERRVUZSYWtNc1NVRkJRVUVzUTBGQlN5dzBRa0ZCUVN4RFFVRkJMRU5CUVRoQ1ZTeG5Ra0ZCUVVFc1EwRkJhVUlzVDBGQlFTeERRVUZUUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5xUlhaQ0xFdEJRVUZCTEVOQlFVMTVRaXhOUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRXY1VJc1NVRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZSbkJHTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwidmFyIF8kY291cG9uc18yND17aGVsbG93OntjdXQ6Ljl9LHJlbW92ZTp7Y3V0Oi44fSxzbGFzaDp7Y3V0Oi41fX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZkWEJ2Ym5NdWFuTWlYU3dpYm1GdFpYTWlPbHNpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1obGJHeHZkeUlzSW1OMWRDSXNJbkpsYlc5MlpTSXNJbk5zWVhOb0lsMHNJbTFoY0hCcGJtZHpJam9pUVVGTlFVRXNaMEpCUVU5RExFTkJUbE1zUTBGRFdrTXNUVUZCUVVFc1EwRkJVU3hEUVVGRFF5eEhRVUZCUVN4RFFVRkxMRVZCUVVFc1EwRkJRU3hEUVVOa1F5eE5RVUZCUVN4RFFVRlJMRU5CUVVORUxFZEJRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRkJMRU5CUTJSRkxFdEJRVUZCTEVOQlFVOHNRMEZCUTBZc1IwRkJRVUVzUTBGQlN5eEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJ2YXIgXyRtYWluXzIzID0ge307XG53aW5kb3cuc3lzdGVtPXt9O2NvbnN0e0Jhc2U6X19CYXNlXzIzLEluZGV4ZWRMaWJyYXJ5Ol9fSW5kZXhlZExpYnJhcnlfMjMsQXJyYXlMaWJyYXJ5Ol9fQXJyYXlMaWJyYXJ5XzIzLEFwcExpYnJhcnk6X19BcHBMaWJyYXJ5XzIzfT1fJGJyb3dzZXJfMTc7d2luZG93LmJhc2U9bmV3IF9fQmFzZV8yMyh3aW5kb3cpLF8kYmFzZV8xNi5hcnJheT1fX0FycmF5TGlicmFyeV8yMygpO2NvbnN0IGFwcExpYnJhcnk9X19BcHBMaWJyYXJ5XzIzKCk7d2luZG93LnN0b3JhZ2U9bmV3IF9fSW5kZXhlZExpYnJhcnlfMjMoXCJNYXJrZXRcIiksd2luZG93LmRhdGFiYXNlPV8kZGF0YV8yNSx3aW5kb3cuY2FydD1uZXcgXyRjYXJ0XzIwO2NvbnN0IF9fc2VsZl8yMz17fTtzeXN0ZW0uc21hbGxTY3JlZW49d2luZG93Lm1hdGNoTWVkaWEoXCIobWluLXdpZHRoOiA3MDBweClcIiksX19zZWxmXzIzLmhvbWU9KCgpPT57c3RvcmFnZS5maW5kKHtjb2xsZWN0aW9uOlwiaXRlbXNcIixtYW55OiEwfSkudGhlbihzdG9yZWRJdGVtcz0+e2NhcnQuaW5pdChzdG9yZWRJdGVtcyk7ZG9jdW1lbnQuYm9keS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcIm1haW5cIixhdHRyaWJ1dGVzOntpZDpcImJvZHktbWFpblwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpcImJvZHktaXRlbXNcIn0sY2hpbGRyZW46KCgpPT57bGV0IGl0ZW1zTGlzdD1bXTtmb3IobGV0IGl0ZW0gb2YgZGF0YWJhc2Upe2xldCBmb3VuZD1fJGJhc2VfMTYuYXJyYXkuZmluZChzdG9yZWRJdGVtcyxzPT5zLm5hbWU9PWl0ZW0ubmFtZSk7bnVsbCE9Zm91bmQmJihpdGVtLmNvdW50PWZvdW5kLmNvdW50KSxpdGVtc0xpc3QucHVzaChuZXcgXyRpdGVtXzIyKGl0ZW0pLmNyZWF0ZSgpKX1yZXR1cm4gaXRlbXNMaXN0fSkoKX1dfSl9KX0pLF9fc2VsZl8yMy5yZW5kZXI9KCgpPT57bGV0IGhlYWRlcj1kb2N1bWVudC5ib2R5Lm1ha2VFbGVtZW50KHtlbGVtZW50OlwiaGVhZGVyXCIsYXR0cmlidXRlczp7aWQ6XCJib2R5LWhlYWRlclwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJhcHAtbmFtZVwifSx0ZXh0OlwiTWFya2V0XCJ9LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2lkOlwiYm9keS1oZWFkZXItY29udHJvbHNcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOntwbGFjZUhvbGRlcjpcIlNlYXJjaC4uLlwiLGlkOlwic2VhcmNoLWJveFwifX0se2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJmYXMgZmEtc2hvcHBpbmctY2FydFwiLGlkOlwiYm9keS1oZWFkZXItY2FydFwifX0se2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJmYXMgZmEtY29nXCIsaWQ6XCJib2R5LWhlYWRlci1zZXR0aW5nc1wifX1dfV19KTtoZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZXZlbnQ9PntcImJvZHktaGVhZGVyLWNhcnRcIj09ZXZlbnQudGFyZ2V0LmlkJiZjYXJ0LmRpc3BsYXkoKX0pLGhlYWRlci5maW5kKFwiI3NlYXJjaC1ib3hcIikub25DaGFuZ2VkKHZhbHVlPT57bGV0IGl0ZW1zTGlzdD1kb2N1bWVudC5ib2R5LmZpbmRBbGwoXCIuc2luZ2xlLWl0ZW1cIik7Zm9yKGxldCBpdGVtIG9mIGl0ZW1zTGlzdClpdGVtLmRhdGFzZXQubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHZhbHVlLnRvTG93ZXJDYXNlKCkpP2l0ZW0uY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pOml0ZW0uY3NzKHtkaXNwbGF5Olwibm9uZVwifSl9KSxfX3NlbGZfMjMucm91dGUoKX0pLF9fc2VsZl8yMy5yb3V0ZT0oKCk9Pntkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkcmVuKHtleGNlcHQ6W1wiI2JvZHktaGVhZGVyXCJdfSksX19zZWxmXzIzLmhvbWUoKX0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsZXZlbnQ9PntfX3NlbGZfMjMucmVuZGVyKCksYXBwTGlicmFyeS5tYWtlV2ViYXBwKGV2ZW50PT57X19zZWxmXzIzLnJvdXRlKCl9KX0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWFuTWlYU3dpYm1GdFpYTWlPbHNpZDJsdVpHOTNJaXdpYzNsemRHVnRJaXdpUW1GelpTSXNJa2x1WkdWNFpXUk1hV0p5WVhKNUlpd2lRWEp5WVhsTWFXSnlZWEo1SWl3aVFYQndUR2xpY21GeWVTSXNJbkpsY1hWcGNtVWlMQ0ppWVhObElpd2lZWEp5WVhraUxDSmhjSEJNYVdKeVlYSjVJaXdpYzNSdmNtRm5aU0lzSW1SaGRHRmlZWE5sSWl3aVpHRjBZU0lzSW1OaGNuUWlMQ0pEWVhKMElpd2ljMlZzWmlJc0luTnRZV3hzVTJOeVpXVnVJaXdpYldGMFkyaE5aV1JwWVNJc0ltaHZiV1VpTENKbWFXNWtJaXdpWTI5c2JHVmpkR2x2YmlJc0ltMWhibmtpTENKMGFHVnVJaXdpYzNSdmNtVmtTWFJsYlhNaUxDSnBibWwwSWl3aVpHOWpkVzFsYm5RaUxDSmliMlI1SWl3aWJXRnJaVVZzWlcxbGJuUWlMQ0psYkdWdFpXNTBJaXdpWVhSMGNtbGlkWFJsY3lJc0ltbGtJaXdpWTJocGJHUnlaVzRpTENKcGRHVnRjMHhwYzNRaUxDSnBkR1Z0SWl3aVptOTFibVFpTENKeklpd2libUZ0WlNJc0luVnVaR1ZtYVc1bFpDSXNJbU52ZFc1MElpd2ljSFZ6YUNJc0lrbDBaVzBpTENKamNtVmhkR1VpTENKeVpXNWtaWElpTENKb1pXRmtaWElpTENKMFpYaDBJaXdpY0d4aFkyVkliMnhrWlhJaUxDSmpiR0Z6Y3lJc0ltRmtaRVYyWlc1MFRHbHpkR1Z1WlhJaUxDSmxkbVZ1ZENJc0luUmhjbWRsZENJc0ltUnBjM0JzWVhraUxDSnZia05vWVc1blpXUWlMQ0oyWVd4MVpTSXNJbVpwYm1SQmJHd2lMQ0prWVhSaGMyVjBJaXdpZEc5TWIzZGxja05oYzJVaUxDSnBibU5zZFdSbGN5SXNJbU56YzFKbGJXOTJaU0lzSW1OemN5SXNJbkp2ZFhSbElpd2ljbVZ0YjNabFEyaHBiR1J5Wlc0aUxDSmxlR05sY0hRaUxDSnRZV3RsVjJWaVlYQndJbDBzSW0xaGNIQnBibWR6SWpvaU8wRkJRVUZCTEUxQlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVTm9RaXhMUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVVWQkxGTkJRVUZCTEVOQlFVbERMR05CUVVGQkxFTkJRVVZCTEcxQ1FVRkJRU3hEUVVGalF5eFpRVUZCUVN4RFFVRkZRU3hwUWtGQlFVRXNRMEZCV1VNc1ZVRkJRVUVzUTBGQlJVRXNaVUZCUVVFc1EwRkJRVUVzUTBGQlpVTXNXVUZKZEVNc1EwRkZja0pPTEUxQlFVRkJMRU5CUVU5UExFbEJRVUZCTEVOQlFVOHNTVUZCU1V3c1UwRkJRVUVzUTBGQlMwWXNUVUZCUVVFc1EwRkJRVUVzUTBGRGRrSlBMRk5CUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVZGS0xHbENRVUZCUVN4RlFVRkJRU3hEUVVOaUxFMUJRVTFMTEZWQlFVRkJMRU5CUVdGS0xHVkJRVUZCTEVWQlFVRkJMRU5CUlc1Q1RDeE5RVUZCUVN4RFFVRlBWU3hQUVVGQlFTeERRVUZWTEVsQlFVbFFMRzFDUVVGQlFTeERRVUZsTEZGQlFVRXNRMEZCUVN4RFFVTndRMGdzVFVGQlFVRXNRMEZCVDFjc1VVRkJRVUVzUTBGQlYwTXNVMEZCUVVFc1EwRkRiRUphTEUxQlFVRkJMRU5CUVU5aExFbEJRVUZCTEVOQlFVOHNTVUZCU1VNc1UwRkJRVUVzUTBGRmJFSXNUVUZCVFVNc1UwRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlJXSmtMRTFCUVVGQkxFTkJRVTlsTEZkQlFVRkJMRU5CUVdOb1FpeE5RVUZCUVN4RFFVRlBhVUlzVlVGQlFVRXNRMEZCVnl4dlFrRkJRU3hEUVVGQkxFTkJSWFpEUml4VFFVRkJRU3hEUVVGTFJ5eEpRVUZCUVN4RlFVRlBMRWxCUVVFc1EwRkRVbElzVDBGQlFVRXNRMEZCVVZNc1NVRkJRVUVzUTBGQlN5eERRVUZGUXl4VlFVRkJRU3hEUVVGWkxFOUJRVUVzUTBGQlUwTXNTVUZCUVVFc1EwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRlJReXhKUVVGQlFTeERRVUZMUXl4WFFVRkJRU3hGUVVGQlFTeERRVU51UkZZc1NVRkJRVUVzUTBGQlMxY3NTVUZCUVVFc1EwRkJTMFFzVjBGQlFVRXNRMEZCUVVFc1EwRkRRMFVzVVVGQlFVRXNRMEZCVTBNc1NVRkJRVUVzUTBGQlMwTXNWMEZCUVVFc1EwRkJXU3hEUVVOcVEwTXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUlVGQlFVRXNRMEZCU1N4WFFVRkJMRU5CUVVFc1EwRkJaVU1zVVVGQlFVRXNRMEZCVlN4RFFVTjRSQ3hEUVVOSlNDeFBRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJUME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhGUVVGQlFTeERRVUZKTEZsQlFVRXNRMEZCUVN4RFFVRm5Ra01zVVVGQlFVRXNRMEZCVlN4RFFVRkJMRWxCUVVFc1EwRkRlRVFzU1VGQlNVTXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRMmhDTEVsQlFVc3NTVUZCU1VNc1NVRkJRVUVzU1VGQlVYUkNMRkZCUVVGQkxFTkJRVlVzUTBGRGRrSXNTVUZCU1hWQ0xFdEJRVUZCTEVOQlFWRXpRaXhUUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTlZ5eEpRVUZCUVN4RFFVRkxTU3hYUVVGQlFTeERRVUZoV1N4RFFVRkJRU3hGUVVNNVFrRXNRMEZCUVVFc1EwRkJSVU1zU1VGQlFVRXNSVUZCVVVnc1NVRkJRVUVzUTBGQlMwY3NTVUZCUVVFc1EwRkJRVUVzUTBGSFlrTXNTVUZCUVVFc1JVRkJWRWdzUzBGQlFVRXNSMEZCYjBKRUxFbEJRVUZCTEVOQlFVdExMRXRCUVVGQkxFTkJRVkZLTEV0QlFVRkJMRU5CUVUxSkxFdEJRVUZCTEVOQlFVRkJMRU5CUXpORFRpeFRRVUZCUVN4RFFVRlZUeXhKUVVGQlFTeERRVUZMTEVsQlFVbERMRk5CUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTFSTEUxQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlJXeERMRTlCUVU5VUxGTkJRVUZCTEVOQlFVRkJMRWRCVm1sRUxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVd0Q2FFWnFRaXhUUVVGQlFTeERRVUZMTWtJc1RVRkJRVUVzUlVGQlV5eEpRVUZCTEVOQlExWXNTVUZCU1VNc1RVRkJRVUVzUTBGQlUyeENMRkZCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRU5CUVV0RExGZEJRVUZCTEVOQlFWa3NRMEZEYmtORExFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRVZCUVVGQkxFTkJRVWtzWVVGQlFTeERRVUZCTEVOQlFXbENReXhSUVVGQlFTeERRVUZWTEVOQlF6VkVMRU5CUVVWSUxFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRVZCUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFXTmpMRWxCUVVGQkxFTkJRVTBzVVVGQlFTeERRVUZCTEVOQlEzcEVMRU5CUTBsb1FpeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhGUVVGQlFTeERRVUZKTEhOQ1FVRkJMRU5CUVVFc1EwRkJNRUpETEZGQlFVRkJMRU5CUVZVc1EwRkRia1VzUTBGQlJVZ3NUMEZCUVVFc1EwRkJVeXhQUVVGQkxFTkJRVk5ETEZWQlFVRkJMRU5CUVZrc1EwRkJSV2RDTEZkQlFVRkJMRU5CUVdFc1YwRkJRU3hEUVVGaFppeEZRVUZCUVN4RFFVRkpMRmxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRMmhGTEVOQlFVVkdMRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZwUWl4TFFVRkJRU3hEUVVGUExITkNRVUZCTEVOQlFYZENhRUlzUlVGQlFVRXNRMEZCU1N4clFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGFrVXNRMEZCUlVZc1QwRkJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVdERMRlZCUVVGQkxFTkJRVmtzUTBGQlJXbENMRXRCUVVGQkxFTkJRVThzV1VGQlFTeERRVUZqYUVJc1JVRkJRVUVzUTBGQlNTeHpRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlRYWkZZU3hOUVVGQlFTeERRVUZQU1N4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRReXhMUVVGQlFTeEZRVUZCUVN4RFFVTk9MR3RDUVVGQkxFVkJRVzVDUVN4TFFVRkJRU3hEUVVGTlF5eE5RVUZCUVN4RFFVRlBia0lzUlVGQlFVRXNSVUZEWW1wQ0xFbEJRVUZCTEVOQlFVdHhReXhQUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxpVUN4TlFVRkJRU3hEUVVGUGVFSXNTVUZCUVVFc1EwRkJTeXhoUVVGQkxFTkJRVUVzUTBGQlpXZERMRk5CUVVGQkxFTkJRVlZETEV0QlFVRkJMRVZCUVVGQkxFTkJRMnBETEVsQlFVbHdRaXhUUVVGQlFTeERRVUZaVUN4UlFVRkJRU3hEUVVGVFF5eEpRVUZCUVN4RFFVRkxNa0lzVDBGQlFVRXNRMEZCVVN4alFVRkJMRU5CUVVFc1EwRkRkRU1zU1VGQlN5eEpRVUZKY0VJc1NVRkJRVUVzU1VGQlVVUXNVMEZCUVVFc1EwRkRWRU1zU1VGQlFVRXNRMEZCUzNGQ0xFOUJRVUZCTEVOQlFWRnNRaXhKUVVGQlFTeERRVUZMYlVJc1YwRkJRVUVzUlVGQlFVRXNRMEZCWTBNc1VVRkJRVUVzUTBGQlUwb3NTMEZCUVVFc1EwRkJUVWNzVjBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGREwwTjBRaXhKUVVGQlFTeERRVUZMZDBJc1UwRkJRVUVzUTBGQlZTeERRVUZETEZOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjJoQ2VFSXNTVUZCUVVFc1EwRkJTM2xDTEVkQlFVRkJMRU5CUVVrc1EwRkJSVklzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGTGFFTnVReXhUUVVGQlFTeERRVUZMTkVNc1MwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSFZEVkRMRk5CUVVGQkxFTkJRVXMwUXl4TFFVRkJRU3hGUVVGUkxFbEJRVUVzUTBGRFZHeERMRkZCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRU5CUVV0clF5eGpRVUZCUVN4RFFVRmxMRU5CUVVWRExFMUJRVUZCTEVOQlFWRXNRMEZCUXl4alFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRM2hET1VNc1UwRkJRVUVzUTBGQlMwY3NTVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhWRThzVVVGQlFVRXNRMEZCVTNOQ0xHZENRVUZCUVN4RFFVRnBRaXhyUWtGQlFTeERRVUZ2UWtNc1MwRkJRVUVzUlVGQlFVRXNRMEZETVVOcVF5eFRRVUZCUVN4RFFVRkxNa0lzVFVGQlFVRXNSVUZCUVVFc1EwRkZUR3BETEZWQlFVRkJMRU5CUVZkeFJDeFZRVUZCUVN4RFFVRlhaQ3hMUVVGQlFTeEZRVUZCUVN4RFFVTnNRbXBETEZOQlFVRkJMRU5CUVVzMFF5eExRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwidmFyIF8kaXRlbV8yMj1mdW5jdGlvbihkZXRhaWxzKXtjb25zdCBzZWxmPWRldGFpbHN8fHt9O3JldHVybiBzZWxmLmNyZWF0ZT0oKCk9PihzZWxmLmVsZW1lbnQ9YmFzZS5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW1cIixcImRhdGEtbmFtZVwiOnNlbGYubmFtZX0sY2hpbGRyZW46W3tlbGVtZW50OlwiaW1nXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJzaW5nbGUtaXRlbS1pbWFnZVwiLHNyYzpzZWxmLmltYWdlfX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJzaW5nbGUtaXRlbS1kZXRhaWxzXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcInNpbmdsZS1pdGVtLW5hbWVcIn0sdGV4dDpzZWxmLm5hbWV9LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW0tb3RoZXItZGV0YWlsc1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJzaW5nbGUtaXRlbS1wcmljZVwifSx0ZXh0OmAjJHtzZWxmLnByaWNlfWB9LHtlbGVtZW50OlwiYVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW0tcXVhbnRpdHlcIn0sdGV4dDpgJHtzZWxmLnF1YW50aXR5fShxdHkpYH1dfV19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW0tY29udHJvbHNcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiZmFzIGZhLW1pbnVzIHNpbmdsZS1pdGVtLXJlbW92ZVwifX0se2VsZW1lbnQ6XCJhXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJzaW5nbGUtaXRlbS1jb3VudFwifSx0ZXh0OnNlbGYuY291bnR8fDB9LHtlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiZmFzIGZhLXBsdXMgc2luZ2xlLWl0ZW0tYWRkXCJ9fV19XX0pLHNlbGYuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e2V2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJzaW5nbGUtaXRlbS1hZGRcIik/c2VsZi5hZGRUb0NhcnQoKTpldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwic2luZ2xlLWl0ZW0tcmVtb3ZlXCIpP3NlbGYucmVtb3ZlRnJvbUNhcnQoKTpzZWxmLmRpc3BsYXkoKX0pLHNlbGYuZWxlbWVudCkpLHNlbGYuYWRkVG9DYXJ0PSgoY291bnQ9MSk9PntsZXQgY3VycmVudFF1YW50aXR5PU1hdGguZmxvb3Ioc2VsZi5lbGVtZW50LmZpbmQoXCIuc2luZ2xlLWl0ZW0tY291bnRcIikudGV4dENvbnRlbnQpO3JldHVybiBzZWxmLnF1YW50aXR5PmN1cnJlbnRRdWFudGl0eSYmKGN1cnJlbnRRdWFudGl0eSs9Y291bnQsc2VsZi5lbGVtZW50LmZpbmQoXCIuc2luZ2xlLWl0ZW0tY291bnRcIikudGV4dENvbnRlbnQ9Y3VycmVudFF1YW50aXR5LGNhcnQuYWRkKHNlbGYubmFtZSxjb3VudCkpLGN1cnJlbnRRdWFudGl0eX0pLHNlbGYucmVtb3ZlRnJvbUNhcnQ9KChjb3VudD0xKT0+e2xldCBjdXJyZW50UXVhbnRpdHk9TWF0aC5mbG9vcihzZWxmLmVsZW1lbnQuZmluZChcIi5zaW5nbGUtaXRlbS1jb3VudFwiKS50ZXh0Q29udGVudCk7cmV0dXJuIDA8Y3VycmVudFF1YW50aXR5JiYoY3VycmVudFF1YW50aXR5LT1jb3VudCxzZWxmLmVsZW1lbnQuZmluZChcIi5zaW5nbGUtaXRlbS1jb3VudFwiKS50ZXh0Q29udGVudD1jdXJyZW50UXVhbnRpdHksY2FydC5yZWR1Y2Uoc2VsZi5uYW1lLGNvdW50KSksY3VycmVudFF1YW50aXR5fSksc2VsZi5kaXNwbGF5PSgoKT0+e3NlbGYucGFnZT1iYXNlLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcInNpbmdsZS1pdGVtLXBhZ2VcIn0sY2hpbGRyZW46W3NlbGYuZWxlbWVudC5jbG9uZU5vZGUoITApLHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW0tZGVzY3JpcHRpb24tY29udGFpbmVyXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntjbGFzczpcInNpbmdsZS1pdGVtLW5hbWVcIn0sdGV4dDpcIkRlc2NyaXB0aW9uXCJ9LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW0tZGVzY3JpcHRpb25cIn0sY2hpbGRyZW46KCgpPT57bGV0IGRlc2NyaXB0aW9uTGlzdD1bXTtmb3IobGV0IGRlc2Mgb2Ygc2VsZi5kZXNjcmlwdGlvbnx8W10pZGVzY3JpcHRpb25MaXN0LnB1c2goYmFzZS5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwic2luZ2xlLWl0ZW0tZGVzY3JpcHRpb24tYmxvY2tcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiZmFzIGZhLWFycm93LXJpZ2h0XCJ9fSx7ZWxlbWVudDpcImFcIixhdHRyaWJ1dGVzOntjbGFzczpcInNpbmdsZS1pdGVtLWRlc2NyaXB0aW9uLXZhbHVlXCJ9LHRleHQ6ZGVzY31dfSkpO3JldHVybiBkZXNjcmlwdGlvbkxpc3R9KSgpfV19XX0pLGJhc2UucG9wVXAoc2VsZi5wYWdlLHthdHRyaWJ1dGVzOntzdHlsZTp7d2lkdGg6c3lzdGVtLnNtYWxsU2NyZWVuLm1hdGNoZXM/XCI3MCVcIjpcIjEwMCVcIixoZWlnaHQ6XCIxMDAlXCIsanVzdGlmeVNlbGY6XCJmbGV4LWVuZFwifX0sdGl0bGU6YEl0ZW06ICR7c2VsZi5uYW1lfWB9KSxzZWxmLnBhZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZXZlbnQ9PntldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwic2luZ2xlLWl0ZW0tYWRkXCIpP3NlbGYucGFnZS5maW5kKFwiLnNpbmdsZS1pdGVtLWNvdW50XCIpLnRleHRDb250ZW50PXNlbGYuYWRkVG9DYXJ0KCk6ZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInNpbmdsZS1pdGVtLXJlbW92ZVwiKSYmKHNlbGYucGFnZS5maW5kKFwiLnNpbmdsZS1pdGVtLWNvdW50XCIpLnRleHRDb250ZW50PXNlbGYucmVtb3ZlRnJvbUNhcnQoKSl9KX0pLHNlbGZ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWwwWlcwdWFuTWlYU3dpYm1GdFpYTWlPbHNpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1SbGRHRnBiSE1pTENKelpXeG1JaXdpWTNKbFlYUmxJaXdpWld4bGJXVnVkQ0lzSW1KaGMyVWlMQ0pqY21WaGRHVkZiR1Z0Wlc1MElpd2lZWFIwY21saWRYUmxjeUlzSW1Oc1lYTnpJaXdpWkdGMFlTMXVZVzFsSWl3aWJtRnRaU0lzSW1Ob2FXeGtjbVZ1SWl3aWMzSmpJaXdpYVcxaFoyVWlMQ0owWlhoMElpd2ljSEpwWTJVaUxDSnhkV0Z1ZEdsMGVTSXNJbU52ZFc1MElpd2lZV1JrUlhabGJuUk1hWE4wWlc1bGNpSXNJbVYyWlc1MElpd2lkR0Z5WjJWMElpd2lZMnhoYzNOTWFYTjBJaXdpWTI5dWRHRnBibk1pTENKaFpHUlViME5oY25RaUxDSnlaVzF2ZG1WR2NtOXRRMkZ5ZENJc0ltUnBjM0JzWVhraUxDSmpkWEp5Wlc1MFVYVmhiblJwZEhraUxDSk5ZWFJvSWl3aVpteHZiM0lpTENKbWFXNWtJaXdpZEdWNGRFTnZiblJsYm5RaUxDSmpZWEowSWl3aVlXUmtJaXdpY21Wa2RXTmxJaXdpY0dGblpTSXNJbU5zYjI1bFRtOWtaU0lzSW1SbGMyTnlhWEIwYVc5dVRHbHpkQ0lzSW1SbGMyTWlMQ0prWlhOamNtbHdkR2x2YmlJc0luQjFjMmdpTENKd2IzQlZjQ0lzSW5OMGVXeGxJaXdpZDJsa2RHZ2lMQ0p6ZVhOMFpXMGlMQ0p6YldGc2JGTmpjbVZsYmlJc0ltMWhkR05vWlhNaUxDSm9aV2xuYUhRaUxDSnFkWE4wYVdaNVUyVnNaaUlzSW5ScGRHeGxJbDBzSW0xaGNIQnBibWR6SWpvaVFVRTBSMEZCTEdGQlFVOURMRU5CTlVkUUxGTkJRV05ETEU5QlFVRkJMRU5CUVVGQkxFTkJRMVlzVFVGQlRVTXNTVUZCUVVFc1EwRkJUMFFzVDBGQlFVRXNSVUZCVnl4RlFVRkJMRU5CZDBkNFFpeFBRWFJIUVVNc1NVRkJRVUVzUTBGQlMwTXNUVUZCUVVFc1JVRkJVeXhMUVVOV1JDeEpRVUZCUVN4RFFVRkxSU3hQUVVGQlFTeERRVUZWUXl4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUXpsQ1JpeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVWNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEdGQlFVRXNRMEZCWlVNc1YwRkJRVUVzUTBGQllWQXNTVUZCUVVFc1EwRkJTMUVzU1VGQlFVRXNRMEZCUVVFc1EwRkJVVU1zVVVGQlFVRXNRMEZCVlN4RFFVTnlSaXhEUVVGRlVDeFBRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJUMGNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEcxQ1FVRkJMRU5CUVhGQ1NTeEhRVUZCUVN4RFFVRkxWaXhKUVVGQlFTeERRVUZMVnl4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjBSU3hEUVVOSlZDeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVWNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEhGQ1FVRkJMRU5CUVVFc1EwRkJlVUpITEZGQlFVRkJMRU5CUVZVc1EwRkRja1VzUTBGQlJWQXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZITEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4clFrRkJRU3hEUVVGQkxFTkJRWE5DVFN4SlFVRkJRU3hEUVVGTldpeEpRVUZCUVN4RFFVRkxVU3hKUVVGQlFTeERRVUZCUVN4RFFVTjZSU3hEUVVOSlRpeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVWNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTERKQ1FVRkJMRU5CUVVFc1EwRkJLMEpITEZGQlFVRkJMRU5CUVZVc1EwRkRNMFVzUTBGQlJWQXNUMEZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVXRITEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4dFFrRkJRU3hEUVVGQkxFTkJRWFZDVFN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGVldpeEpRVUZCUVN4RFFVRkxZU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU16UlN4RFFVRkZXQ3hQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBjc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExITkNRVUZCTEVOQlFVRXNRMEZCTUVKTkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVk5hTEVsQlFVRkJMRU5CUVV0akxGRkJRVUZCTEVOQlFVRkJMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTemRHTEVOQlEwbGFMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUnl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c2MwSkJRVUVzUTBGQlFTeERRVUV3UWtjc1VVRkJRVUVzUTBGQlZTeERRVU4wUlN4RFFVTkpVQ3hQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBjc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHbERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVjJReXhEUVVGRlNpeFBRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTMGNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEcxQ1FVRkJMRU5CUVVFc1EwRkJkVUpOTEVsQlFVRkJMRU5CUVUxYUxFbEJRVUZCTEVOQlFVdGxMRXRCUVVGQkxFVkJRVk1zUTBGQlFTeERRVUZCTEVOQlEyaEdMRU5CUTBsaUxFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxSeXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzTmtKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVTkyUkU0c1NVRkJRVUVzUTBGQlMwVXNUMEZCUVVFc1EwRkJVV01zWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlUwTXNTMEZCUVVFc1JVRkJRVUVzUTBGREwwSkJMRXRCUVVGQkxFTkJRVTFETEUxQlFVRkJMRU5CUVU5RExGTkJRVUZCTEVOQlFWVkRMRkZCUVVGQkxFTkJRVk1zYVVKQlFVRXNRMEZCUVN4RFFVTm9RM0JDTEVsQlFVRkJMRU5CUVV0eFFpeFRRVUZCUVN4RlFVRkJRU3hEUVVWQlNpeExRVUZCUVN4RFFVRk5ReXhOUVVGQlFTeERRVUZQUXl4VFFVRkJRU3hEUVVGVlF5eFJRVUZCUVN4RFFVRlRMRzlDUVVGQkxFTkJRVUVzUTBGRGNrTndRaXhKUVVGQlFTeERRVUZMYzBJc1kwRkJRVUVzUlVGQlFVRXNRMEZIVEhSQ0xFbEJRVUZCTEVOQlFVdDFRaXhQUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxPZGtJc1NVRkJRVUVzUTBGQlMwVXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYUVKR0xFbEJRVUZCTEVOQlFVdHhRaXhUUVVGQlFTeEZRVUZaTEVOQlFVTk9MRXRCUVVGQkxFTkJRVkVzUTBGQlFTeEhRVUZCTEVOQlEzUkNMRWxCUVVsVExHVkJRVUZCTEVOQlFXdENReXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTk1VSXNTVUZCUVVFc1EwRkJTMFVzVDBGQlFVRXNRMEZCVVhsQ0xFbEJRVUZCTEVOQlFVc3NiMEpCUVVFc1EwRkJRU3hEUVVGelFrTXNWMEZCUVVFc1EwRkJRVUVzUTBGTmVrVXNUMEZNU1RWQ0xFbEJRVUZCTEVOQlFVdGpMRkZCUVVGQkxFTkJRVmRWTEdWQlFVRkJMRWRCUTJoQ1FTeGxRVUZCUVN4RlFVRnZRMVFzUzBGQlFVRXNRMEZEY0VObUxFbEJRVUZCTEVOQlFVdEZMRTlCUVVGQkxFTkJRVkY1UWl4SlFVRkJRU3hEUVVGTExHOUNRVUZCTEVOQlFVRXNRMEZCYzBKRExGZEJRVUZCTEVOQlFXTktMR1ZCUVVGQkxFTkJRM1JFU3l4SlFVRkJRU3hEUVVGTFF5eEhRVUZCUVN4RFFVRkpPVUlzU1VGQlFVRXNRMEZCUzFFc1NVRkJRVUVzUTBGQlRVOHNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYWtKVExHVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMWg0UWl4SlFVRkJRU3hEUVVGTGMwSXNZMEZCUVVFc1JVRkJhVUlzUTBGQlExQXNTMEZCUVVFc1EwRkJVU3hEUVVGQkxFZEJRVUVzUTBGRE0wSXNTVUZCU1ZNc1pVRkJRVUVzUTBGQmEwSkRMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUweFFpeEpRVUZCUVN4RFFVRkxSU3hQUVVGQlFTeERRVUZSZVVJc1NVRkJRVUVzUTBGQlN5eHZRa0ZCUVN4RFFVRkJMRU5CUVhOQ1F5eFhRVUZCUVN4RFFVRkJRU3hEUVUxNlJTeFBRVXhKTEVOQlFVRXNRMEZCU1Vvc1pVRkJRVUVzUjBGRFNrRXNaVUZCUVVFc1JVRkJiME5VTEV0QlFVRkJMRU5CUTNCRFppeEpRVUZCUVN4RFFVRkxSU3hQUVVGQlFTeERRVUZSZVVJc1NVRkJRVUVzUTBGQlN5eHZRa0ZCUVN4RFFVRkJMRU5CUVhOQ1F5eFhRVUZCUVN4RFFVRmpTaXhsUVVGQlFTeERRVU4wUkVzc1NVRkJRVUVzUTBGQlMwVXNUVUZCUVVFc1EwRkJUeTlDTEVsQlFVRkJMRU5CUVV0UkxFbEJRVUZCTEVOQlFVMVBMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhCQ1V5eGxRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRZZUVJc1NVRkJRVUVzUTBGQlMzVkNMRTlCUVVGQkxFVkJRVlVzU1VGQlFTeERRVU5ZZGtJc1NVRkJRVUVzUTBGQlMyZERMRWxCUVVGQkxFTkJRVTgzUWl4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUXpOQ1JpeFBRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJUMGNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEd0Q1FVRkJMRU5CUVVFc1EwRkJjMEpITEZGQlFVRkJMRU5CUVZVc1EwRkRha1ZVTEVsQlFVRkJMRU5CUVV0RkxFOUJRVUZCTEVOQlFWRXJRaXhUUVVGQlFTeERRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJRU3hEUVVOMlFpeERRVU5KTDBJc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkhMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXh0UTBGQlFTeERRVUZCTEVOQlFYVkRSeXhSUVVGQlFTeERRVUZWTEVOQlEyNUdMRU5CUVVWUUxFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxSeXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzYTBKQlFVRXNRMEZCUVN4RFFVRnpRazBzU1VGQlFVRXNRMEZCVFN4aFFVRkJMRU5CUVVFc1EwRkRha1VzUTBGRFNWWXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZITEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4NVFrRkJRU3hEUVVGQkxFTkJRVFpDUnl4UlFVRkJRU3hEUVVGVkxFTkJRVUVzU1VGQlFTeERRVU42UlN4SlFVRkplVUlzWlVGQlFVRXNRMEZCYTBJc1JVRkJRU3hEUVVOMFFpeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFbEJRVkZ1UXl4SlFVRkJRU3hEUVVGTGIwTXNWMEZCUVVFc1JVRkJaU3hGUVVGQkxFTkJRMnBEUml4bFFVRkJRU3hEUVVGblFrY3NTVUZCUVVFc1EwRkJTMnhETEVsQlFVRkJMRU5CUVV0RExHRkJRVUZCTEVOQlFXTXNRMEZEY0VOR0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJSeXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzSzBKQlFVRXNRMEZCUVN4RFFVRnRRMGNzVVVGQlFVRXNRMEZCVlN4RFFVTXZSU3hEUVVGRlVDeFBRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTMGNzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEc5Q1FVRkJMRU5CUVVFc1EwRkJRU3hEUVVOeVF5eERRVUZGU2l4UFFVRkJRU3hEUVVGVExFZEJRVUVzUTBGQlMwY3NWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMQ3RDUVVGQkxFTkJRVUVzUTBGQmJVTk5MRWxCUVVGQkxFTkJRVTExUWl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVa3hSaXhQUVVGUFJDeGxRVUZCUVN4RFFVRkJRU3hIUVZaclJTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVd0Q2NrWXZRaXhKUVVGQlFTeERRVUZMYlVNc1MwRkJRVUVzUTBGQlRYUkRMRWxCUVVGQkxFTkJRVXRuUXl4SlFVRkJRU3hEUVVGTkxFTkJRVVV6UWl4VlFVRkJRU3hEUVVGWkxFTkJRVVZyUXl4TFFVRkJRU3hEUVVGUExFTkJRVVZETEV0QlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFVOURMRmRCUVVGQkxFTkJRVmxETEU5QlFVRkJMRU5CUVZVc1MwRkJRU3hEUVVGUkxFMUJRVUVzUTBGQlVVTXNUVUZCUVVFc1EwRkJVU3hOUVVGQkxFTkJRVkZETEZkQlFVRkJMRU5CUVdFc1ZVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlowSkRMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRTFCUVVGQkxFVkJRV2RDT1VNc1NVRkJRVUVzUTBGQlMxRXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmFreFNMRWxCUVVGQkxFTkJRVXRuUXl4SlFVRkJRU3hEUVVGTGFFSXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZETlVKQkxFdEJRVUZCTEVOQlFVMURMRTFCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVZWRExGRkJRVUZCTEVOQlFWTXNhVUpCUVVFc1EwRkJRU3hEUVVOb1EzQkNMRWxCUVVGQkxFTkJRVXRuUXl4SlFVRkJRU3hEUVVGTFRDeEpRVUZCUVN4RFFVRkxMRzlDUVVGQkxFTkJRVUVzUTBGQmMwSkRMRmRCUVVGQkxFTkJRV00xUWl4SlFVRkJRU3hEUVVGTGNVSXNVMEZCUVVFc1JVRkJRVUVzUTBGRmJrUktMRXRCUVVGQkxFTkJRVTFETEUxQlFVRkJMRU5CUVU5RExGTkJRVUZCTEVOQlFWVkRMRkZCUVVGQkxFTkJRVk1zYjBKQlFVRXNRMEZCUVN4SFFVTnlRM0JDTEVsQlFVRkJMRU5CUVV0blF5eEpRVUZCUVN4RFFVRkxUQ3hKUVVGQlFTeERRVUZMTEc5Q1FVRkJMRU5CUVVFc1EwRkJjMEpETEZkQlFVRkJMRU5CUVdNMVFpeEpRVUZCUVN4RFFVRkxjMElzWTBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMTjBSMFFpeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSJdfQ==